{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0","program":"/home/alansky/.rustup/toolchains/nightly-2020-07-02-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","wast","--edition=2018","/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"wasm-module\"","-C","metadata=dff78223ee861e55","-C","extra-filename=-dff78223ee861e55","--out-dir","/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps","-L","dependency=/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps","--extern","leb128=/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps/libleb128-52ea32c8976f2385.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/alansky/.rustup/toolchains/nightly-2020-07-02-x86_64-unknown-linux-gnu"],"output":"/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps/libwast-dff78223ee861e55.rmeta"},"prelude":{"crate_id":{"name":"wast","disambiguator":[8339160914068221565,12566010518193043299]},"crate_root":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src","external_crates":[{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15171822389981698586,9596930288317159773]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[309489290393175025,9116230521283433112]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4391997853131671271,2752570053062459009]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[680011651820151502,5018330578075825921]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4249137077638888796,17834651879708154657]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[13082819734751436340,16140962863799451331]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8371738565553744270,17943531712744420027]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17468180561489458258,7285327718060701271]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[14551538593801126895,13478667531910088620]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[16022708609364593127,529027819734980321]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[18024135037275500963,3187671833432925572]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5194268306266264186,14551347693776345482]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[18097577876301876973,855323625195415836]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[5106557709654100294,13294098602154984522]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","num":15,"id":{"name":"leb128","disambiguator":[10017613334214790592,16922352193612872244]}}],"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":0,"byte_end":7075,"line_start":1,"line_end":222,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":2501,"byte_end":2502,"line_start":59,"line_end":59,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"AssertExpression, V128Pattern, NanPattern, Span","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":0,"byte_end":7075,"line_start":1,"line_end":222,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":188},{"krate":0,"index":554},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":639},{"krate":0,"index":7163},{"krate":0,"index":7165},{"krate":0,"index":7167},{"krate":0,"index":7172},{"krate":0,"index":7174},{"krate":0,"index":7178},{"krate":0,"index":7180},{"krate":0,"index":7187},{"krate":0,"index":758},{"krate":0,"index":765},{"krate":0,"index":768},{"krate":0,"index":769}],"decl_id":null,"docs":" A crate for low-level parsing of the WebAssembly text formats: WAT and WAST.","sig":null,"attributes":[{"value":"! A crate for low-level parsing of the WebAssembly text formats: WAT and WAST.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":0,"byte_end":80,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":81,"byte_end":84,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This crate is intended to be a low-level detail of the `wat` crate,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":85,"byte_end":156,"line_start":3,"line_end":3,"column_start":1,"column_end":72}},{"value":"! providing a low-level parsing API for parsing WebAssembly text format","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":157,"byte_end":230,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"! structures. The API provided by this crate is very similar to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":231,"byte_end":296,"line_start":5,"line_end":5,"column_start":1,"column_end":66}},{"value":"! [`syn`](https://docs.rs/syn) and provides the ability to write customized","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":297,"byte_end":374,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"! parsers which may be an extension to the core WebAssembly text format. For","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":375,"byte_end":453,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"! more documentation see the [`parser`] module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":454,"byte_end":503,"line_start":8,"line_end":8,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":504,"byte_end":507,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! # High-level Overview","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":508,"byte_end":533,"line_start":10,"line_end":10,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":534,"byte_end":537,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! This crate provides a few major pieces of functionality","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":538,"byte_end":597,"line_start":12,"line_end":12,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":598,"byte_end":601,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! * [`lexer`] - this is a raw lexer for the wasm text format. This is not","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":602,"byte_end":677,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"!   customizable, but if you'd like to iterate over raw tokens this is the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":678,"byte_end":754,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"!   module for you. You likely won't use this much.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":755,"byte_end":808,"line_start":16,"line_end":16,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":809,"byte_end":812,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! * [`parser`] - this is the workhorse of this crate. The [`parser`] module","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":813,"byte_end":890,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"!   provides the [`Parse`][] trait primarily and utilities","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":891,"byte_end":951,"line_start":19,"line_end":19,"column_start":1,"column_end":61}},{"value":"!   around working with a [`Parser`](`parser::Parser`) to parse streams of","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":952,"byte_end":1028,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"!   tokens.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":1029,"byte_end":1042,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":1043,"byte_end":1046,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! * [`Module`] - this contains an Abstract Syntax Tree (AST) of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":1047,"byte_end":1116,"line_start":23,"line_end":23,"column_start":1,"column_end":70}},{"value":"!   WebAssembly Text format (WAT) as well as the unofficial WAST format. This","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":1117,"byte_end":1196,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"!   also has a [`Module::encode`] method to emit a module in its binary form.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":1197,"byte_end":1276,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":1277,"byte_end":1280,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! # Stability and WebAssembly Features","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":1281,"byte_end":1321,"line_start":27,"line_end":27,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":1322,"byte_end":1325,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! This crate provides support for many in-progress WebAssembly features such","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":1326,"byte_end":1404,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"! as reference types, multi-value, etc. Be sure to check out the documentation","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":1405,"byte_end":1485,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"! of the [`wast` crate](https://docs.rs/wast) for policy information on crate","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":1486,"byte_end":1565,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"! stability vs WebAssembly Features. The tl;dr; version is that this crate","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":1566,"byte_end":1642,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"! will issue semver-non-breaking releases which will break the parsing of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":1643,"byte_end":1722,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"! text format. This crate, unlike `wast`, is expected to have numerous Rust","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":1723,"byte_end":1800,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"! public API changes, all of which will be accompanied with a semver-breaking","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":1801,"byte_end":1880,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"! release.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":1881,"byte_end":1893,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":1894,"byte_end":1897,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! # Compile-time Cargo features","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":1898,"byte_end":1931,"line_start":38,"line_end":38,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":1932,"byte_end":1935,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! This crate has a `wasm-module` feature which is turned on by default which","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":1936,"byte_end":2014,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"! includes all necessary support to parse full WebAssembly modules. If you","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":2015,"byte_end":2091,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"! don't need this (for example you're parsing your own s-expression format)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":2092,"byte_end":2169,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"! then this feature can be disabled.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":2170,"byte_end":2208,"line_start":43,"line_end":43,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":2209,"byte_end":2212,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! [`Parse`]: parser::Parse","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":2213,"byte_end":2241,"line_start":45,"line_end":45,"column_start":1,"column_end":29}},{"value":"! [`LexError`]: lexer::LexError","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":2242,"byte_end":2275,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"deny(missing_docs, intra_doc_link_resolution_failure)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":2277,"byte_end":2334,"line_start":48,"line_end":48,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":457},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/names.rs","byte_start":159474,"byte_end":159477,"line_start":1909,"line_end":1909,"column_start":10,"column_end":13},"name":"Key","qualname":"::resolve::names::TypeReference::Key","value":"type Key: TypeKey<'a>;","parent":{"krate":0,"index":455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":908},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/mod.rs","byte_start":41919,"byte_end":41924,"line_start":138,"line_end":138,"column_start":12,"column_end":17},"name":"Names","qualname":"::resolve::Names","value":"Names {  }","parent":null,"children":[{"krate":0,"index":910}],"decl_id":null,"docs":" Representation of the results of name resolution for a module.","sig":null,"attributes":[{"value":"/ Representation of the results of name resolution for a module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/mod.rs","byte_start":41649,"byte_end":41715,"line_start":132,"line_end":132,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/mod.rs","byte_start":41716,"byte_end":41719,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ This structure is returned from the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/mod.rs","byte_start":41720,"byte_end":41759,"line_start":134,"line_end":134,"column_start":1,"column_end":40}},{"value":"/ [`Module::resolve`](crate::Module::resolve) function and can be used to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/mod.rs","byte_start":41760,"byte_end":41835,"line_start":135,"line_end":135,"column_start":1,"column_end":76}},{"value":"/ resolve your own name arguments if you have any.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/mod.rs","byte_start":41836,"byte_end":41888,"line_start":136,"line_end":136,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/mod.rs","byte_start":42280,"byte_end":42292,"line_start":148,"line_end":148,"column_start":12,"column_end":24},"name":"resolve_func","qualname":"<Names>::resolve_func","value":"pub fn resolve_func(&Self, &mut Index) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Resolves `idx` within the function namespace.","sig":null,"attributes":[{"value":"/ Resolves `idx` within the function namespace.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/mod.rs","byte_start":41994,"byte_end":42043,"line_start":143,"line_end":143,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/mod.rs","byte_start":42048,"byte_end":42051,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ If `idx` is a `Num`, it is ignored, but if it's an `Id` then it will be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/mod.rs","byte_start":42056,"byte_end":42131,"line_start":145,"line_end":145,"column_start":5,"column_end":80}},{"value":"/ looked up in the function namespace and converted to a `Num`. If the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/mod.rs","byte_start":42136,"byte_end":42208,"line_start":146,"line_end":146,"column_start":5,"column_end":77}},{"value":"/ `Id` is not defined then an error will be returned.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/mod.rs","byte_start":42213,"byte_end":42268,"line_start":147,"line_end":147,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/mod.rs","byte_start":42708,"byte_end":42722,"line_start":158,"line_end":158,"column_start":12,"column_end":26},"name":"resolve_memory","qualname":"<Names>::resolve_memory","value":"pub fn resolve_memory(&Self, &mut Index) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Resolves `idx` within the memory namespace.","sig":null,"attributes":[{"value":"/ Resolves `idx` within the memory namespace.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/mod.rs","byte_start":42426,"byte_end":42473,"line_start":153,"line_end":153,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/mod.rs","byte_start":42478,"byte_end":42481,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ If `idx` is a `Num`, it is ignored, but if it's an `Id` then it will be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/mod.rs","byte_start":42486,"byte_end":42561,"line_start":155,"line_end":155,"column_start":5,"column_end":80}},{"value":"/ looked up in the memory namespace and converted to a `Num`. If the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/mod.rs","byte_start":42566,"byte_end":42636,"line_start":156,"line_end":156,"column_start":5,"column_end":75}},{"value":"/ `Id` is not defined then an error will be returned.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/mod.rs","byte_start":42641,"byte_end":42696,"line_start":157,"line_end":157,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/mod.rs","byte_start":43138,"byte_end":43151,"line_start":168,"line_end":168,"column_start":12,"column_end":25},"name":"resolve_table","qualname":"<Names>::resolve_table","value":"pub fn resolve_table(&Self, &mut Index) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Resolves `idx` within the table namespace.","sig":null,"attributes":[{"value":"/ Resolves `idx` within the table namespace.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/mod.rs","byte_start":42858,"byte_end":42904,"line_start":163,"line_end":163,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/mod.rs","byte_start":42909,"byte_end":42912,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ If `idx` is a `Num`, it is ignored, but if it's an `Id` then it will be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/mod.rs","byte_start":42917,"byte_end":42992,"line_start":165,"line_end":165,"column_start":5,"column_end":80}},{"value":"/ looked up in the table namespace and converted to a `Num`. If the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/mod.rs","byte_start":42997,"byte_end":43066,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Id` is not defined then an error will be returned.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/mod.rs","byte_start":43071,"byte_end":43126,"line_start":167,"line_end":167,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/mod.rs","byte_start":43568,"byte_end":43582,"line_start":178,"line_end":178,"column_start":12,"column_end":26},"name":"resolve_global","qualname":"<Names>::resolve_global","value":"pub fn resolve_global(&Self, &mut Index) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Resolves `idx` within the global namespace.","sig":null,"attributes":[{"value":"/ Resolves `idx` within the global namespace.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/mod.rs","byte_start":43286,"byte_end":43333,"line_start":173,"line_end":173,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/mod.rs","byte_start":43338,"byte_end":43341,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ If `idx` is a `Num`, it is ignored, but if it's an `Id` then it will be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/mod.rs","byte_start":43346,"byte_end":43421,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ looked up in the global namespace and converted to a `Num`. If the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/mod.rs","byte_start":43426,"byte_end":43496,"line_start":176,"line_end":176,"column_start":5,"column_end":75}},{"value":"/ `Id` is not defined then an error will be returned.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/mod.rs","byte_start":43501,"byte_end":43556,"line_start":177,"line_end":177,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":7189},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7653101,"byte_end":7653105,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Span","qualname":"::ast::token::Span","value":"Span {  }","parent":null,"children":[{"krate":0,"index":7190}],"decl_id":null,"docs":" A position in the original source stream, used to render errors.\n","sig":null,"attributes":[{"value":"/ A position in the original source stream, used to render errors.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7652953,"byte_end":7653021,"line_start":8,"line_end":8,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7653230,"byte_end":7653241,"line_start":16,"line_end":16,"column_start":12,"column_end":23},"name":"from_offset","qualname":"<Span>::from_offset","value":"pub fn from_offset(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a `Span` from a byte offset in the source file.\n","sig":null,"attributes":[{"value":"/ Construct a `Span` from a byte offset in the source file.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7653157,"byte_end":7653218,"line_start":15,"line_end":15,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7653560,"byte_end":7653570,"line_start":24,"line_end":24,"column_start":12,"column_end":22},"name":"linecol_in","qualname":"<Span>::linecol_in","value":"pub fn linecol_in(&Self, &str) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Returns the line/column information of this span within `text`.\n Line and column numbers are 0-indexed. User presentation is typically\n 1-indexed, but 0-indexing is appropriate for internal use with\n iterators and slices.\n","sig":null,"attributes":[{"value":"/ Returns the line/column information of this span within `text`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7653302,"byte_end":7653369,"line_start":20,"line_end":20,"column_start":5,"column_end":72}},{"value":"/ Line and column numbers are 0-indexed. User presentation is typically","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7653374,"byte_end":7653447,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ 1-indexed, but 0-indexing is appropriate for internal use with","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7653452,"byte_end":7653518,"line_start":22,"line_end":22,"column_start":5,"column_end":71}},{"value":"/ iterators and slices.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7653523,"byte_end":7653548,"line_start":23,"line_end":23,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":1002},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7654327,"byte_end":7654329,"line_start":45,"line_end":45,"column_start":12,"column_end":14},"name":"Id","qualname":"::ast::token::Id","value":"Id {  }","parent":null,"children":[{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006}],"decl_id":null,"docs":" An identifier in a WebAssembly module, prefixed by `$` in the textual\n format.","sig":null,"attributes":[{"value":"/ An identifier in a WebAssembly module, prefixed by `$` in the textual","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7654088,"byte_end":7654161,"line_start":39,"line_end":39,"column_start":1,"column_end":74}},{"value":"/ format.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7654162,"byte_end":7654173,"line_start":40,"line_end":40,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7654174,"byte_end":7654177,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ An identifier is used to symbolically refer to items in a a wasm module,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7654178,"byte_end":7654254,"line_start":42,"line_end":42,"column_start":1,"column_end":77}},{"value":"/ typically via the [`Index`] type.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7654255,"byte_end":7654292,"line_start":43,"line_end":43,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7654784,"byte_end":7654788,"line_start":67,"line_end":67,"column_start":12,"column_end":16},"name":"name","qualname":"<Id>::name","value":"pub fn name(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying name of this identifier.","sig":null,"attributes":[{"value":"/ Returns the underlying name of this identifier.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7654653,"byte_end":7654704,"line_start":64,"line_end":64,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7654709,"byte_end":7654712,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ The name returned does not contain the leading `$`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7654717,"byte_end":7654772,"line_start":66,"line_end":66,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7654908,"byte_end":7654912,"line_start":72,"line_end":72,"column_start":12,"column_end":16},"name":"span","qualname":"<Id>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns span of this identifier in the original source\n","sig":null,"attributes":[{"value":"/ Returns span of this identifier in the original source","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7654838,"byte_end":7654896,"line_start":71,"line_end":71,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1014},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7656518,"byte_end":7656521,"line_start":135,"line_end":135,"column_start":5,"column_end":8},"name":"Num","qualname":"::ast::token::Index::Num","value":"Index::Num(u32, Span)","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":" A numerical index that this references. The index space this is\n referencing is implicit based on where this [`Index`] is stored.\n","sig":null,"attributes":[{"value":"/ A numerical index that this references. The index space this is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7656373,"byte_end":7656440,"line_start":133,"line_end":133,"column_start":5,"column_end":72}},{"value":"/ referencing is implicit based on where this [`Index`] is stored.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7656445,"byte_end":7656513,"line_start":134,"line_end":134,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1018},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7656675,"byte_end":7656677,"line_start":138,"line_end":138,"column_start":5,"column_end":7},"name":"Id","qualname":"::ast::token::Index::Id","value":"Index::Id(Id)","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":" A human-readable identifier this references. Like `Num`, the namespace\n this references is based on where this is stored.\n","sig":null,"attributes":[{"value":"/ A human-readable identifier this references. Like `Num`, the namespace","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7656538,"byte_end":7656612,"line_start":136,"line_end":136,"column_start":5,"column_end":79}},{"value":"/ this references is based on where this is stored.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7656617,"byte_end":7656670,"line_start":137,"line_end":137,"column_start":5,"column_end":58}}]},{"kind":"Enum","id":{"krate":0,"index":1012},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7656357,"byte_end":7656362,"line_start":132,"line_end":132,"column_start":10,"column_end":15},"name":"Index","qualname":"::ast::token::Index","value":"pub enum Index<'a> {\n\n    /// A numerical index that this references. The index space this is\n    /// referencing is implicit based on where this [`Index`] is stored.\n    Num(u32, Span),\n\n    /// A human-readable identifier this references. Like `Num`, the namespace\n    /// this references is based on where this is stored.\n    Id(Id),\n}","parent":null,"children":[{"krate":0,"index":1014},{"krate":0,"index":1018}],"decl_id":null,"docs":" A reference to another item in a wasm module.","sig":null,"attributes":[{"value":"/ A reference to another item in a wasm module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7655949,"byte_end":7655998,"line_start":123,"line_end":123,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7655999,"byte_end":7656002,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ This type is used for items referring to other items (such as `call $foo`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7656003,"byte_end":7656080,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ referencing function `$foo`). References can be either an index (u32) or an","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7656081,"byte_end":7656160,"line_start":126,"line_end":126,"column_start":1,"column_end":80}},{"value":"/ [`Id`] in the textual format.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7656161,"byte_end":7656194,"line_start":127,"line_end":127,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7656195,"byte_end":7656198,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The emission phase of a module will ensure that `Index::Id` is never used","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7656199,"byte_end":7656276,"line_start":129,"line_end":129,"column_start":1,"column_end":78}},{"value":"/ and switch them all to `Index::Num`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7656277,"byte_end":7656317,"line_start":130,"line_end":130,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":957},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7656786,"byte_end":7656790,"line_start":143,"line_end":143,"column_start":12,"column_end":16},"name":"span","qualname":"<Index>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the source location where this `Index` was defined.\n","sig":null,"attributes":[{"value":"/ Returns the source location where this `Index` was defined.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7656711,"byte_end":7656774,"line_start":142,"line_end":142,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":1029},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7658247,"byte_end":7658261,"line_start":204,"line_end":204,"column_start":12,"column_end":26},"name":"NameAnnotation","qualname":"::ast::token::NameAnnotation","value":"NameAnnotation { name }","parent":null,"children":[{"krate":0,"index":1031}],"decl_id":null,"docs":" An `@name` annotation in source, currently of the form `@name \"foo\"`\n","sig":null,"attributes":[{"value":"/ An `@name` annotation in source, currently of the form `@name \"foo\"`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7658122,"byte_end":7658194,"line_start":202,"line_end":202,"column_start":1,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":1031},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7658316,"byte_end":7658320,"line_start":206,"line_end":206,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::token::NameAnnotation::name","value":"&'a str","parent":{"krate":0,"index":1029},"children":[],"decl_id":null,"docs":" The name specified for the item\n","sig":null,"attributes":[{"value":"/ The name specified for the item","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7658272,"byte_end":7658307,"line_start":205,"line_end":205,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1158},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7671628,"byte_end":7671635,"line_start":564,"line_end":564,"column_start":5,"column_end":12},"name":"Float32","qualname":"::ast::token::Float32","value":"Float32 { bits }","parent":null,"children":[{"krate":0,"index":1159}],"decl_id":null,"docs":" A parsed floating-point type\n","sig":null,"attributes":[{"value":"/ A parsed floating-point type","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7661550,"byte_end":7661582,"line_start":326,"line_end":326,"column_start":9,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1162},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7671738,"byte_end":7671745,"line_start":570,"line_end":570,"column_start":5,"column_end":12},"name":"Float64","qualname":"::ast::token::Float64","value":"Float64 { bits }","parent":null,"children":[{"krate":0,"index":1163}],"decl_id":null,"docs":" A parsed floating-point type\n","sig":null,"attributes":[{"value":"/ A parsed floating-point type","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7661550,"byte_end":7661582,"line_start":326,"line_end":326,"column_start":9,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":996},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7672152,"byte_end":7672158,"line_start":588,"line_end":588,"column_start":12,"column_end":18},"name":"LParen","qualname":"::ast::token::LParen","value":"LParen {  }","parent":null,"children":[{"krate":0,"index":997}],"decl_id":null,"docs":" A convenience type to use with [`Parser::peek`](crate::parser::Parser::peek)\n to see if the next token is an s-expression.\n","sig":null,"attributes":[{"value":"/ A convenience type to use with [`Parser::peek`](crate::parser::Parser::peek)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7672011,"byte_end":7672091,"line_start":586,"line_end":586,"column_start":1,"column_end":81}},{"value":"/ to see if the next token is an s-expression.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7672092,"byte_end":7672140,"line_start":587,"line_end":587,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1772},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/alias.rs","byte_start":7674078,"byte_end":7674083,"line_start":6,"line_end":6,"column_start":12,"column_end":17},"name":"Alias","qualname":"::ast::alias::Alias","value":"Alias { span, id, name, instance, kind }","parent":null,"children":[{"krate":0,"index":1774},{"krate":0,"index":1775},{"krate":0,"index":1776},{"krate":0,"index":1777},{"krate":0,"index":1778}],"decl_id":null,"docs":" An `alias` statement used to juggle indices with nested modules.\n","sig":null,"attributes":[{"value":"/ An `alias` statement used to juggle indices with nested modules.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/alias.rs","byte_start":7673981,"byte_end":7674049,"line_start":4,"line_end":4,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1774},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/alias.rs","byte_start":7674138,"byte_end":7674142,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::alias::Alias::span","value":"ast::token::Span","parent":{"krate":0,"index":1772},"children":[],"decl_id":null,"docs":" Where this `alias` was defined.\n","sig":null,"attributes":[{"value":"/ Where this `alias` was defined.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/alias.rs","byte_start":7674094,"byte_end":7674129,"line_start":7,"line_end":7,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1775},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/alias.rs","byte_start":7674260,"byte_end":7674262,"line_start":11,"line_end":11,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::alias::Alias::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":1772},"children":[],"decl_id":null,"docs":" An identifier that this alias is resolved with (optionally) for name\n resolution.\n","sig":null,"attributes":[{"value":"/ An identifier that this alias is resolved with (optionally) for name","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/alias.rs","byte_start":7674159,"byte_end":7674231,"line_start":9,"line_end":9,"column_start":5,"column_end":77}},{"value":"/ resolution.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/alias.rs","byte_start":7674236,"byte_end":7674251,"line_start":10,"line_end":10,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":1776},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/alias.rs","byte_start":7674370,"byte_end":7674374,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::alias::Alias::name","value":"std::option::Option<ast::token::NameAnnotation<'a>>","parent":{"krate":0,"index":1772},"children":[],"decl_id":null,"docs":" An optional name for this alias stored in the custom `name` section.\n","sig":null,"attributes":[{"value":"/ An optional name for this alias stored in the custom `name` section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/alias.rs","byte_start":7674289,"byte_end":7674361,"line_start":12,"line_end":12,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":1777},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/alias.rs","byte_start":7674518,"byte_end":7674526,"line_start":16,"line_end":16,"column_start":9,"column_end":17},"name":"instance","qualname":"::ast::alias::Alias::instance","value":"std::option::Option<ast::token::Index<'a>>","parent":{"krate":0,"index":1772},"children":[],"decl_id":null,"docs":" The instance that we're aliasing. If `None` then we're aliasing the\n parent instance.\n","sig":null,"attributes":[{"value":"/ The instance that we're aliasing. If `None` then we're aliasing the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/alias.rs","byte_start":7674413,"byte_end":7674484,"line_start":14,"line_end":14,"column_start":5,"column_end":76}},{"value":"/ parent instance.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/alias.rs","byte_start":7674489,"byte_end":7674509,"line_start":15,"line_end":15,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":1778},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/alias.rs","byte_start":7674621,"byte_end":7674625,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::alias::Alias::kind","value":"ast::export::ExportKind<'a>","parent":{"krate":0,"index":1772},"children":[],"decl_id":null,"docs":" The item in the parent instance that we're aliasing.\n","sig":null,"attributes":[{"value":"/ The item in the parent instance that we're aliasing.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/alias.rs","byte_start":7674556,"byte_end":7674612,"line_start":17,"line_end":17,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1784},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7675913,"byte_end":7675916,"line_start":14,"line_end":14,"column_start":5,"column_end":8},"name":"I32","qualname":"::ast::assert_expr::AssertExpression::I32","value":"AssertExpression::I32(i32)","parent":{"krate":0,"index":1782},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1787},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7675927,"byte_end":7675930,"line_start":15,"line_end":15,"column_start":5,"column_end":8},"name":"I64","qualname":"::ast::assert_expr::AssertExpression::I64","value":"AssertExpression::I64(i64)","parent":{"krate":0,"index":1782},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1790},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7675941,"byte_end":7675944,"line_start":16,"line_end":16,"column_start":5,"column_end":8},"name":"F32","qualname":"::ast::assert_expr::AssertExpression::F32","value":"AssertExpression::F32(NanPattern<Float32>)","parent":{"krate":0,"index":1782},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1793},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7675971,"byte_end":7675974,"line_start":17,"line_end":17,"column_start":5,"column_end":8},"name":"F64","qualname":"::ast::assert_expr::AssertExpression::F64","value":"AssertExpression::F64(NanPattern<Float64>)","parent":{"krate":0,"index":1782},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1796},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7676001,"byte_end":7676005,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"V128","qualname":"::ast::assert_expr::AssertExpression::V128","value":"AssertExpression::V128(V128Pattern)","parent":{"krate":0,"index":1782},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1799},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7676025,"byte_end":7676032,"line_start":20,"line_end":20,"column_start":5,"column_end":12},"name":"RefNull","qualname":"::ast::assert_expr::AssertExpression::RefNull","value":"AssertExpression::RefNull(HeapType)","parent":{"krate":0,"index":1782},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1802},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7676052,"byte_end":7676061,"line_start":21,"line_end":21,"column_start":5,"column_end":14},"name":"RefExtern","qualname":"::ast::assert_expr::AssertExpression::RefExtern","value":"AssertExpression::RefExtern(u32)","parent":{"krate":0,"index":1782},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1805},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7676072,"byte_end":7676079,"line_start":22,"line_end":22,"column_start":5,"column_end":12},"name":"RefFunc","qualname":"::ast::assert_expr::AssertExpression::RefFunc","value":"AssertExpression::RefFunc(Option<Index>)","parent":{"krate":0,"index":1782},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1808},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7676171,"byte_end":7676190,"line_start":25,"line_end":25,"column_start":5,"column_end":24},"name":"LegacyArithmeticNaN","qualname":"::ast::assert_expr::AssertExpression::LegacyArithmeticNaN","value":"AssertExpression::LegacyArithmeticNaN","parent":{"krate":0,"index":1782},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1810},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7676260,"byte_end":7676278,"line_start":27,"line_end":27,"column_start":5,"column_end":23},"name":"LegacyCanonicalNaN","qualname":"::ast::assert_expr::AssertExpression::LegacyCanonicalNaN","value":"AssertExpression::LegacyCanonicalNaN","parent":{"krate":0,"index":1782},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1782},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7675886,"byte_end":7675902,"line_start":13,"line_end":13,"column_start":10,"column_end":26},"name":"AssertExpression","qualname":"::ast::assert_expr::AssertExpression","value":"pub enum AssertExpression<'a> {\n    I32(i32),\n    I64(i64),\n    F32(NanPattern<Float32>),\n    F64(NanPattern<Float64>),\n    V128(V128Pattern),\n    RefNull(HeapType),\n    RefExtern(u32),\n    RefFunc(Option<Index>),\n    LegacyArithmeticNaN,\n    LegacyCanonicalNaN,\n}","parent":null,"children":[{"krate":0,"index":1784},{"krate":0,"index":1787},{"krate":0,"index":1790},{"krate":0,"index":1793},{"krate":0,"index":1796},{"krate":0,"index":1799},{"krate":0,"index":1802},{"krate":0,"index":1805},{"krate":0,"index":1808},{"krate":0,"index":1810}],"decl_id":null,"docs":" An expression that is valid inside an `assert_return` directive.","sig":null,"attributes":[{"value":"/ An expression that is valid inside an `assert_return` directive.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7675368,"byte_end":7675436,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7675437,"byte_end":7675440,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ As of https://github.com/WebAssembly/spec/pull/1104, spec tests may include `assert_return`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7675441,"byte_end":7675536,"line_start":6,"line_end":6,"column_start":1,"column_end":96}},{"value":"/ directives that allow NaN patterns (`\"nan:canonical\"`, `\"nan:arithmetic\"`). Parsing an","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7675537,"byte_end":7675627,"line_start":7,"line_end":7,"column_start":1,"column_end":91}},{"value":"/ `AssertExpression` means that:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7675628,"byte_end":7675662,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/ - only constant values (e.g. `i32.const 4`) are used in the `assert_return` directive","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7675663,"byte_end":7675752,"line_start":9,"line_end":9,"column_start":1,"column_end":90}},{"value":"/ - the NaN patterns are allowed (they are not allowed in regular `Expression`s).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7675753,"byte_end":7675836,"line_start":10,"line_end":10,"column_start":1,"column_end":84}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7675854,"byte_end":7675876,"line_start":12,"line_end":12,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1817},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7677409,"byte_end":7677421,"line_start":55,"line_end":55,"column_start":5,"column_end":17},"name":"CanonicalNan","qualname":"::ast::assert_expr::NanPattern::CanonicalNan","value":"NanPattern::CanonicalNan","parent":{"krate":0,"index":1815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1819},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7677427,"byte_end":7677440,"line_start":56,"line_end":56,"column_start":5,"column_end":18},"name":"ArithmeticNan","qualname":"::ast::assert_expr::NanPattern::ArithmeticNan","value":"NanPattern::ArithmeticNan","parent":{"krate":0,"index":1815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1821},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7677446,"byte_end":7677451,"line_start":57,"line_end":57,"column_start":5,"column_end":10},"name":"Value","qualname":"::ast::assert_expr::NanPattern::Value","value":"NanPattern::Value(T)","parent":{"krate":0,"index":1815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1815},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7677389,"byte_end":7677399,"line_start":54,"line_end":54,"column_start":10,"column_end":20},"name":"NanPattern","qualname":"::ast::assert_expr::NanPattern","value":"pub enum NanPattern<T> { CanonicalNan, ArithmeticNan, Value(T), }","parent":null,"children":[{"krate":0,"index":1817},{"krate":0,"index":1819},{"krate":0,"index":1821}],"decl_id":null,"docs":" Either a NaN pattern (`nan:canonical`, `nan:arithmetic`) or a value of type `T`.\n","sig":null,"attributes":[{"value":"/ Either a NaN pattern (`nan:canonical`, `nan:arithmetic`) or a value of type `T`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7677244,"byte_end":7677328,"line_start":51,"line_end":51,"column_start":1,"column_end":85}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7677357,"byte_end":7677379,"line_start":53,"line_end":53,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1834},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7678267,"byte_end":7678272,"line_start":85,"line_end":85,"column_start":5,"column_end":10},"name":"I8x16","qualname":"::ast::assert_expr::V128Pattern::I8x16","value":"V128Pattern::I8x16([i8; ])","parent":{"krate":0,"index":1833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1838},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7678288,"byte_end":7678293,"line_start":86,"line_end":86,"column_start":5,"column_end":10},"name":"I16x8","qualname":"::ast::assert_expr::V128Pattern::I16x8","value":"V128Pattern::I16x8([i16; ])","parent":{"krate":0,"index":1833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1842},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7678309,"byte_end":7678314,"line_start":87,"line_end":87,"column_start":5,"column_end":10},"name":"I32x4","qualname":"::ast::assert_expr::V128Pattern::I32x4","value":"V128Pattern::I32x4([i32; ])","parent":{"krate":0,"index":1833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1846},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7678330,"byte_end":7678335,"line_start":88,"line_end":88,"column_start":5,"column_end":10},"name":"I64x2","qualname":"::ast::assert_expr::V128Pattern::I64x2","value":"V128Pattern::I64x2([i64; ])","parent":{"krate":0,"index":1833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1850},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7678351,"byte_end":7678356,"line_start":89,"line_end":89,"column_start":5,"column_end":10},"name":"F32x4","qualname":"::ast::assert_expr::V128Pattern::F32x4","value":"V128Pattern::F32x4([NanPattern<Float32>; ])","parent":{"krate":0,"index":1833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1854},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7678388,"byte_end":7678393,"line_start":90,"line_end":90,"column_start":5,"column_end":10},"name":"F64x2","qualname":"::ast::assert_expr::V128Pattern::F64x2","value":"V128Pattern::F64x2([NanPattern<Float64>; ])","parent":{"krate":0,"index":1833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1833},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7678249,"byte_end":7678260,"line_start":84,"line_end":84,"column_start":10,"column_end":21},"name":"V128Pattern","qualname":"::ast::assert_expr::V128Pattern","value":"pub enum V128Pattern {\n    I8x16([i8; ]),\n    I16x8([i16; ]),\n    I32x4([i32; ]),\n    I64x2([i64; ]),\n    F32x4([NanPattern<Float32>; ]),\n    F64x2([NanPattern<Float64>; ]),\n}","parent":null,"children":[{"krate":0,"index":1834},{"krate":0,"index":1838},{"krate":0,"index":1842},{"krate":0,"index":1846},{"krate":0,"index":1850},{"krate":0,"index":1854}],"decl_id":null,"docs":" A version of `V128Const` that allows `NanPattern`s.","sig":null,"attributes":[{"value":"/ A version of `V128Const` that allows `NanPattern`s.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7677978,"byte_end":7678033,"line_start":78,"line_end":78,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7678034,"byte_end":7678037,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ This implementation is necessary because only float types can include NaN patterns; otherwise","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7678038,"byte_end":7678135,"line_start":80,"line_end":80,"column_start":1,"column_end":98}},{"value":"/ it is largely similar to the implementation of `V128Const`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7678136,"byte_end":7678199,"line_start":81,"line_end":81,"column_start":1,"column_end":64}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7678217,"byte_end":7678239,"line_start":83,"line_end":83,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1860},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7680675,"byte_end":7680681,"line_start":6,"line_end":6,"column_start":12,"column_end":18},"name":"Custom","qualname":"::ast::custom::Custom","value":"Custom { span, name, place, data }","parent":null,"children":[{"krate":0,"index":1862},{"krate":0,"index":1863},{"krate":0,"index":1864},{"krate":0,"index":1865}],"decl_id":null,"docs":" A wasm custom section within a module.\n","sig":null,"attributes":[{"value":"/ A wasm custom section within a module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7680604,"byte_end":7680646,"line_start":4,"line_end":4,"column_start":1,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1862},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7680738,"byte_end":7680742,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::custom::Custom::span","value":"ast::token::Span","parent":{"krate":0,"index":1860},"children":[],"decl_id":null,"docs":" Where this `@custom` was defined.\n","sig":null,"attributes":[{"value":"/ Where this `@custom` was defined.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7680692,"byte_end":7680729,"line_start":7,"line_end":7,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1863},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7680800,"byte_end":7680804,"line_start":11,"line_end":11,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::custom::Custom::name","value":"&'a str","parent":{"krate":0,"index":1860},"children":[],"decl_id":null,"docs":" Name of the custom section.\n","sig":null,"attributes":[{"value":"/ Name of the custom section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7680760,"byte_end":7680791,"line_start":10,"line_end":10,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":1864},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7680874,"byte_end":7680879,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"place","qualname":"::ast::custom::Custom::place","value":"ast::custom::CustomPlace","parent":{"krate":0,"index":1860},"children":[],"decl_id":null,"docs":" Where the custom section is being placed,\n","sig":null,"attributes":[{"value":"/ Where the custom section is being placed,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7680820,"byte_end":7680865,"line_start":13,"line_end":13,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":1865},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7680943,"byte_end":7680947,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"name":"data","qualname":"::ast::custom::Custom::data","value":"std::vec::Vec<&'a [u8]>","parent":{"krate":0,"index":1860},"children":[],"decl_id":null,"docs":" Payload of this custom section.\n","sig":null,"attributes":[{"value":"/ Payload of this custom section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7680899,"byte_end":7680934,"line_start":16,"line_end":16,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1870},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7681181,"byte_end":7681192,"line_start":24,"line_end":24,"column_start":5,"column_end":16},"name":"BeforeFirst","qualname":"::ast::custom::CustomPlace::BeforeFirst","value":"CustomPlace::BeforeFirst","parent":{"krate":0,"index":1869},"children":[],"decl_id":null,"docs":" This custom section will appear before the first section in the module.\n","sig":null,"attributes":[{"value":"/ This custom section will appear before the first section in the module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7681101,"byte_end":7681176,"line_start":23,"line_end":23,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1872},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7681270,"byte_end":7681276,"line_start":26,"line_end":26,"column_start":5,"column_end":11},"name":"Before","qualname":"::ast::custom::CustomPlace::Before","value":"CustomPlace::Before(CustomPlaceAnchor)","parent":{"krate":0,"index":1869},"children":[],"decl_id":null,"docs":" This custom section will be placed just before a known section.\n","sig":null,"attributes":[{"value":"/ This custom section will be placed just before a known section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7681198,"byte_end":7681265,"line_start":25,"line_end":25,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1875},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7681372,"byte_end":7681377,"line_start":28,"line_end":28,"column_start":5,"column_end":10},"name":"After","qualname":"::ast::custom::CustomPlace::After","value":"CustomPlace::After(CustomPlaceAnchor)","parent":{"krate":0,"index":1869},"children":[],"decl_id":null,"docs":" This custom section will be placed just after a known section.\n","sig":null,"attributes":[{"value":"/ This custom section will be placed just after a known section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7681301,"byte_end":7681367,"line_start":27,"line_end":27,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1878},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7681480,"byte_end":7681489,"line_start":30,"line_end":30,"column_start":5,"column_end":14},"name":"AfterLast","qualname":"::ast::custom::CustomPlace::AfterLast","value":"CustomPlace::AfterLast","parent":{"krate":0,"index":1869},"children":[],"decl_id":null,"docs":" This custom section will appear after the last section in the module.\n","sig":null,"attributes":[{"value":"/ This custom section will appear after the last section in the module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7681402,"byte_end":7681475,"line_start":29,"line_end":29,"column_start":5,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":1869},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7681083,"byte_end":7681094,"line_start":22,"line_end":22,"column_start":10,"column_end":21},"name":"CustomPlace","qualname":"::ast::custom::CustomPlace","value":"pub enum CustomPlace {\n\n    /// This custom section will appear before the first section in the module.\n    BeforeFirst,\n\n    /// This custom section will be placed just before a known section.\n    Before(CustomPlaceAnchor),\n\n    /// This custom section will be placed just after a known section.\n    After(CustomPlaceAnchor),\n\n    /// This custom section will appear after the last section in the module.\n    AfterLast,\n}","parent":null,"children":[{"krate":0,"index":1870},{"krate":0,"index":1872},{"krate":0,"index":1875},{"krate":0,"index":1878}],"decl_id":null,"docs":" Possible locations to place a custom section within a module.\n","sig":null,"attributes":[{"value":"/ Possible locations to place a custom section within a module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7680967,"byte_end":7681032,"line_start":20,"line_end":20,"column_start":1,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1890},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7681658,"byte_end":7681662,"line_start":37,"line_end":37,"column_start":5,"column_end":9},"name":"Type","qualname":"::ast::custom::CustomPlaceAnchor::Type","value":"CustomPlaceAnchor::Type","parent":{"krate":0,"index":1889},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1892},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7681668,"byte_end":7681674,"line_start":38,"line_end":38,"column_start":5,"column_end":11},"name":"Import","qualname":"::ast::custom::CustomPlaceAnchor::Import","value":"CustomPlaceAnchor::Import","parent":{"krate":0,"index":1889},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1894},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7681680,"byte_end":7681686,"line_start":39,"line_end":39,"column_start":5,"column_end":11},"name":"Module","qualname":"::ast::custom::CustomPlaceAnchor::Module","value":"CustomPlaceAnchor::Module","parent":{"krate":0,"index":1889},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1896},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7681692,"byte_end":7681700,"line_start":40,"line_end":40,"column_start":5,"column_end":13},"name":"Instance","qualname":"::ast::custom::CustomPlaceAnchor::Instance","value":"CustomPlaceAnchor::Instance","parent":{"krate":0,"index":1889},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1898},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7681706,"byte_end":7681711,"line_start":41,"line_end":41,"column_start":5,"column_end":10},"name":"Alias","qualname":"::ast::custom::CustomPlaceAnchor::Alias","value":"CustomPlaceAnchor::Alias","parent":{"krate":0,"index":1889},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1900},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7681717,"byte_end":7681721,"line_start":42,"line_end":42,"column_start":5,"column_end":9},"name":"Func","qualname":"::ast::custom::CustomPlaceAnchor::Func","value":"CustomPlaceAnchor::Func","parent":{"krate":0,"index":1889},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1902},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7681727,"byte_end":7681732,"line_start":43,"line_end":43,"column_start":5,"column_end":10},"name":"Table","qualname":"::ast::custom::CustomPlaceAnchor::Table","value":"CustomPlaceAnchor::Table","parent":{"krate":0,"index":1889},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1904},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7681738,"byte_end":7681744,"line_start":44,"line_end":44,"column_start":5,"column_end":11},"name":"Memory","qualname":"::ast::custom::CustomPlaceAnchor::Memory","value":"CustomPlaceAnchor::Memory","parent":{"krate":0,"index":1889},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1906},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7681750,"byte_end":7681756,"line_start":45,"line_end":45,"column_start":5,"column_end":11},"name":"Global","qualname":"::ast::custom::CustomPlaceAnchor::Global","value":"CustomPlaceAnchor::Global","parent":{"krate":0,"index":1889},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1908},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7681762,"byte_end":7681768,"line_start":46,"line_end":46,"column_start":5,"column_end":11},"name":"Export","qualname":"::ast::custom::CustomPlaceAnchor::Export","value":"CustomPlaceAnchor::Export","parent":{"krate":0,"index":1889},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1910},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7681774,"byte_end":7681779,"line_start":47,"line_end":47,"column_start":5,"column_end":10},"name":"Start","qualname":"::ast::custom::CustomPlaceAnchor::Start","value":"CustomPlaceAnchor::Start","parent":{"krate":0,"index":1889},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1912},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7681785,"byte_end":7681789,"line_start":48,"line_end":48,"column_start":5,"column_end":9},"name":"Elem","qualname":"::ast::custom::CustomPlaceAnchor::Elem","value":"CustomPlaceAnchor::Elem","parent":{"krate":0,"index":1889},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1914},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7681795,"byte_end":7681805,"line_start":49,"line_end":49,"column_start":5,"column_end":15},"name":"ModuleCode","qualname":"::ast::custom::CustomPlaceAnchor::ModuleCode","value":"CustomPlaceAnchor::ModuleCode","parent":{"krate":0,"index":1889},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1916},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7681811,"byte_end":7681815,"line_start":50,"line_end":50,"column_start":5,"column_end":9},"name":"Code","qualname":"::ast::custom::CustomPlaceAnchor::Code","value":"CustomPlaceAnchor::Code","parent":{"krate":0,"index":1889},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1918},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7681821,"byte_end":7681825,"line_start":51,"line_end":51,"column_start":5,"column_end":9},"name":"Data","qualname":"::ast::custom::CustomPlaceAnchor::Data","value":"CustomPlaceAnchor::Data","parent":{"krate":0,"index":1889},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1920},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7681831,"byte_end":7681836,"line_start":52,"line_end":52,"column_start":5,"column_end":10},"name":"Event","qualname":"::ast::custom::CustomPlaceAnchor::Event","value":"CustomPlaceAnchor::Event","parent":{"krate":0,"index":1889},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1889},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7681634,"byte_end":7681651,"line_start":36,"line_end":36,"column_start":10,"column_end":27},"name":"CustomPlaceAnchor","qualname":"::ast::custom::CustomPlaceAnchor","value":"pub enum CustomPlaceAnchor {\n    Type,\n    Import,\n    Module,\n    Instance,\n    Alias,\n    Func,\n    Table,\n    Memory,\n    Global,\n    Export,\n    Start,\n    Elem,\n    ModuleCode,\n    Code,\n    Data,\n    Event,\n}","parent":null,"children":[{"krate":0,"index":1890},{"krate":0,"index":1892},{"krate":0,"index":1894},{"krate":0,"index":1896},{"krate":0,"index":1898},{"krate":0,"index":1900},{"krate":0,"index":1902},{"krate":0,"index":1904},{"krate":0,"index":1906},{"krate":0,"index":1908},{"krate":0,"index":1910},{"krate":0,"index":1912},{"krate":0,"index":1914},{"krate":0,"index":1916},{"krate":0,"index":1918},{"krate":0,"index":1920}],"decl_id":null,"docs":" Known sections that custom sections can be placed relative to.\n","sig":null,"attributes":[{"value":"/ Known sections that custom sections can be placed relative to.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7681494,"byte_end":7681560,"line_start":33,"line_end":33,"column_start":1,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7681602,"byte_end":7681624,"line_start":35,"line_end":35,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1930},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/event.rs","byte_start":7685842,"byte_end":7685847,"line_start":6,"line_end":6,"column_start":12,"column_end":17},"name":"Event","qualname":"::ast::event::Event","value":"Event { span, id, exports, ty }","parent":null,"children":[{"krate":0,"index":1932},{"krate":0,"index":1933},{"krate":0,"index":1934},{"krate":0,"index":1935}],"decl_id":null,"docs":" A WebAssembly event directive, part of the exception handling proposal.\n","sig":null,"attributes":[{"value":"/ A WebAssembly event directive, part of the exception handling proposal.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/event.rs","byte_start":7685738,"byte_end":7685813,"line_start":4,"line_end":4,"column_start":1,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":1932},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/event.rs","byte_start":7685899,"byte_end":7685903,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::event::Event::span","value":"ast::token::Span","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" Where this event was defined\n","sig":null,"attributes":[{"value":"/ Where this event was defined","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/event.rs","byte_start":7685858,"byte_end":7685890,"line_start":7,"line_end":7,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":1933},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/event.rs","byte_start":7686001,"byte_end":7686003,"line_start":10,"line_end":10,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::event::Event::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" An optional name by which to refer to this event in name resolution.\n","sig":null,"attributes":[{"value":"/ An optional name by which to refer to this event in name resolution.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/event.rs","byte_start":7685920,"byte_end":7685992,"line_start":9,"line_end":9,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":1934},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/event.rs","byte_start":7686085,"byte_end":7686092,"line_start":12,"line_end":12,"column_start":9,"column_end":16},"name":"exports","qualname":"::ast::event::Event::exports","value":"ast::export::InlineExport<'a>","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" Optional export directives for this event.\n","sig":null,"attributes":[{"value":"/ Optional export directives for this event.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/event.rs","byte_start":7686030,"byte_end":7686076,"line_start":11,"line_end":11,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1935},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/event.rs","byte_start":7686168,"byte_end":7686170,"line_start":14,"line_end":14,"column_start":9,"column_end":11},"name":"ty","qualname":"::ast::event::Event::ty","value":"ast::event::EventType<'a>","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" The type of event that is defined.\n","sig":null,"attributes":[{"value":"/ The type of event that is defined.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/event.rs","byte_start":7686121,"byte_end":7686159,"line_start":13,"line_end":13,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1941},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/event.rs","byte_start":7686440,"byte_end":7686449,"line_start":22,"line_end":22,"column_start":5,"column_end":14},"name":"Exception","qualname":"::ast::event::EventType::Exception","value":"EventType::Exception(ast::TypeUse)","parent":{"krate":0,"index":1939},"children":[],"decl_id":null,"docs":" An exception event, where the payload is the type signature of the event\n (constructor parameters, etc).\n","sig":null,"attributes":[{"value":"/ An exception event, where the payload is the type signature of the event","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/event.rs","byte_start":7686320,"byte_end":7686396,"line_start":20,"line_end":20,"column_start":5,"column_end":81}},{"value":"/ (constructor parameters, etc).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/event.rs","byte_start":7686401,"byte_end":7686435,"line_start":21,"line_end":21,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":1939},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/event.rs","byte_start":7686300,"byte_end":7686309,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"name":"EventType","qualname":"::ast::event::EventType","value":"pub enum EventType<'a> {\n\n    /// An exception event, where the payload is the type signature of the event\n    /// (constructor parameters, etc).\n    Exception(ast::TypeUse),\n}","parent":null,"children":[{"krate":0,"index":1941}],"decl_id":null,"docs":" Listing of various types of events that can be defined in a wasm module.\n","sig":null,"attributes":[{"value":"/ Listing of various types of events that can be defined in a wasm module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/event.rs","byte_start":7686190,"byte_end":7686266,"line_start":17,"line_end":17,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":1950},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/export.rs","byte_start":7687167,"byte_end":7687173,"line_start":6,"line_end":6,"column_start":12,"column_end":18},"name":"Export","qualname":"::ast::export::Export","value":"Export { span, name, kind }","parent":null,"children":[{"krate":0,"index":1952},{"krate":0,"index":1953},{"krate":0,"index":1954}],"decl_id":null,"docs":" A entry in a WebAssembly module's export section.\n","sig":null,"attributes":[{"value":"/ A entry in a WebAssembly module's export section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/export.rs","byte_start":7687085,"byte_end":7687138,"line_start":4,"line_end":4,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1952},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/export.rs","byte_start":7687227,"byte_end":7687231,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::export::Export::span","value":"ast::token::Span","parent":{"krate":0,"index":1950},"children":[],"decl_id":null,"docs":" Where this export was defined.\n","sig":null,"attributes":[{"value":"/ Where this export was defined.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/export.rs","byte_start":7687184,"byte_end":7687218,"line_start":7,"line_end":7,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1953},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/export.rs","byte_start":7687301,"byte_end":7687305,"line_start":10,"line_end":10,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::export::Export::name","value":"&'a str","parent":{"krate":0,"index":1950},"children":[],"decl_id":null,"docs":" The name of this export from the module.\n","sig":null,"attributes":[{"value":"/ The name of this export from the module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/export.rs","byte_start":7687248,"byte_end":7687292,"line_start":9,"line_end":9,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":1954},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/export.rs","byte_start":7687371,"byte_end":7687375,"line_start":12,"line_end":12,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::export::Export::kind","value":"ast::export::ExportKind<'a>","parent":{"krate":0,"index":1950},"children":[],"decl_id":null,"docs":" What's being exported from the module.\n","sig":null,"attributes":[{"value":"/ What's being exported from the module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/export.rs","byte_start":7687320,"byte_end":7687362,"line_start":11,"line_end":11,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1960},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/export.rs","byte_start":7687585,"byte_end":7687589,"line_start":20,"line_end":20,"column_start":5,"column_end":9},"name":"Func","qualname":"::ast::export::ExportKind::Func","value":"ExportKind::Func(ast::Index)","parent":{"krate":0,"index":1958},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1963},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/export.rs","byte_start":7687611,"byte_end":7687616,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"name":"Table","qualname":"::ast::export::ExportKind::Table","value":"ExportKind::Table(ast::Index)","parent":{"krate":0,"index":1958},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1966},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/export.rs","byte_start":7687638,"byte_end":7687644,"line_start":22,"line_end":22,"column_start":5,"column_end":11},"name":"Memory","qualname":"::ast::export::ExportKind::Memory","value":"ExportKind::Memory(ast::Index)","parent":{"krate":0,"index":1958},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1969},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/export.rs","byte_start":7687666,"byte_end":7687672,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"Global","qualname":"::ast::export::ExportKind::Global","value":"ExportKind::Global(ast::Index)","parent":{"krate":0,"index":1958},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1972},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/export.rs","byte_start":7687694,"byte_end":7687699,"line_start":24,"line_end":24,"column_start":5,"column_end":10},"name":"Event","qualname":"::ast::export::ExportKind::Event","value":"ExportKind::Event(ast::Index)","parent":{"krate":0,"index":1958},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1975},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/export.rs","byte_start":7687721,"byte_end":7687727,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Module","qualname":"::ast::export::ExportKind::Module","value":"ExportKind::Module(ast::Index)","parent":{"krate":0,"index":1958},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1978},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/export.rs","byte_start":7687749,"byte_end":7687757,"line_start":26,"line_end":26,"column_start":5,"column_end":13},"name":"Instance","qualname":"::ast::export::ExportKind::Instance","value":"ExportKind::Instance(ast::Index)","parent":{"krate":0,"index":1958},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1981},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/export.rs","byte_start":7687779,"byte_end":7687783,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"Type","qualname":"::ast::export::ExportKind::Type","value":"ExportKind::Type(ast::Index)","parent":{"krate":0,"index":1958},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1958},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/export.rs","byte_start":7687564,"byte_end":7687574,"line_start":19,"line_end":19,"column_start":10,"column_end":20},"name":"ExportKind","qualname":"::ast::export::ExportKind","value":"pub enum ExportKind<'a> {\n    Func(ast::Index),\n    Table(ast::Index),\n    Memory(ast::Index),\n    Global(ast::Index),\n    Event(ast::Index),\n    Module(ast::Index),\n    Instance(ast::Index),\n    Type(ast::Index),\n}","parent":null,"children":[{"krate":0,"index":1960},{"krate":0,"index":1963},{"krate":0,"index":1966},{"krate":0,"index":1969},{"krate":0,"index":1972},{"krate":0,"index":1975},{"krate":0,"index":1978},{"krate":0,"index":1981}],"decl_id":null,"docs":" Different kinds of elements that can be exported from a WebAssembly module,\n contained in an [`Export`].\n","sig":null,"attributes":[{"value":"/ Different kinds of elements that can be exported from a WebAssembly module,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/export.rs","byte_start":7687396,"byte_end":7687475,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ contained in an [`Export`].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/export.rs","byte_start":7687476,"byte_end":7687507,"line_start":16,"line_end":16,"column_start":1,"column_end":32}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/export.rs","byte_start":7687532,"byte_end":7687554,"line_start":18,"line_end":18,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1990},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/export.rs","byte_start":7689491,"byte_end":7689503,"line_start":75,"line_end":75,"column_start":12,"column_end":24},"name":"InlineExport","qualname":"::ast::export::InlineExport","value":"InlineExport { names }","parent":null,"children":[{"krate":0,"index":1992}],"decl_id":null,"docs":" A listing of inline `(export \"foo\")` statements on a WebAssembly item in\n its textual format.\n","sig":null,"attributes":[{"value":"/ A listing of inline `(export \"foo\")` statements on a WebAssembly item in","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/export.rs","byte_start":7689362,"byte_end":7689438,"line_start":72,"line_end":72,"column_start":1,"column_end":77}},{"value":"/ its textual format.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/export.rs","byte_start":7689439,"byte_end":7689462,"line_start":73,"line_end":73,"column_start":1,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":1992},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/export.rs","byte_start":7689572,"byte_end":7689577,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"name":"names","qualname":"::ast::export::InlineExport::names","value":"std::vec::Vec<&'a str>","parent":{"krate":0,"index":1990},"children":[],"decl_id":null,"docs":" The extra names to export an item as, if any.\n","sig":null,"attributes":[{"value":"/ The extra names to export an item as, if any.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/export.rs","byte_start":7689514,"byte_end":7689563,"line_start":76,"line_end":76,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1996},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7690992,"byte_end":7691002,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"Expression","qualname":"::ast::expr::Expression","value":"Expression { instrs }","parent":null,"children":[{"krate":0,"index":1998}],"decl_id":null,"docs":" An expression, or a list of instructions, in the WebAssembly text format.","sig":null,"attributes":[{"value":"/ An expression, or a list of instructions, in the WebAssembly text format.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7690628,"byte_end":7690705,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7690706,"byte_end":7690709,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This expression type will parse s-expression-folded instructions into a flat","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7690710,"byte_end":7690790,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ list of instructions for emission later on. The implicit `end` instruction","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7690791,"byte_end":7690869,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ at the end of an expression is not included in the `instrs` field.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7690870,"byte_end":7690940,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7690958,"byte_end":7690980,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1998},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7691017,"byte_end":7691023,"line_start":13,"line_end":13,"column_start":9,"column_end":15},"name":"instrs","qualname":"::ast::expr::Expression::instrs","value":"std::vec::Vec<ast::expr::Instruction<'a>>","parent":{"krate":0,"index":1996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5100},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7732515,"byte_end":7732524,"line_start":898,"line_end":898,"column_start":12,"column_end":21},"name":"BlockType","qualname":"::ast::expr::BlockType","value":"BlockType { label, ty }","parent":null,"children":[{"krate":0,"index":5102},{"krate":0,"index":5103}],"decl_id":null,"docs":" Extra information associated with block-related instructions.","sig":null,"attributes":[{"value":"/ Extra information associated with block-related instructions.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7732300,"byte_end":7732365,"line_start":892,"line_end":892,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7732366,"byte_end":7732369,"line_start":893,"line_end":893,"column_start":1,"column_end":4}},{"value":"/ This is used to label blocks and also annotate what types are expected for","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7732370,"byte_end":7732448,"line_start":894,"line_end":894,"column_start":1,"column_end":79}},{"value":"/ the block.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7732449,"byte_end":7732463,"line_start":895,"line_end":895,"column_start":1,"column_end":15}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7732481,"byte_end":7732503,"line_start":897,"line_end":897,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":5102},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7732539,"byte_end":7732544,"line_start":899,"line_end":899,"column_start":9,"column_end":14},"name":"label","qualname":"::ast::expr::BlockType::label","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":5100},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5103},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7732575,"byte_end":7732577,"line_start":900,"line_end":900,"column_start":9,"column_end":11},"name":"ty","qualname":"::ast::expr::BlockType::ty","value":"ast::types::TypeUse<'a, ast::types::FunctionType<'a>>","parent":{"krate":0,"index":5100},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5107},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7733033,"byte_end":7733047,"line_start":917,"line_end":917,"column_start":12,"column_end":26},"name":"BrTableIndices","qualname":"::ast::expr::BrTableIndices","value":"BrTableIndices { labels, default }","parent":null,"children":[{"krate":0,"index":5109},{"krate":0,"index":5110}],"decl_id":null,"docs":" Extra information associated with the `br_table` instruction.\n","sig":null,"attributes":[{"value":"/ Extra information associated with the `br_table` instruction.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7732916,"byte_end":7732981,"line_start":914,"line_end":914,"column_start":1,"column_end":66}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7732982,"byte_end":7733004,"line_start":915,"line_end":915,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":5109},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7733062,"byte_end":7733068,"line_start":918,"line_end":918,"column_start":9,"column_end":15},"name":"labels","qualname":"::ast::expr::BrTableIndices::labels","value":"std::vec::Vec<ast::token::Index<'a>>","parent":{"krate":0,"index":5107},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5110},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7733099,"byte_end":7733106,"line_start":919,"line_end":919,"column_start":9,"column_end":16},"name":"default","qualname":"::ast::expr::BrTableIndices::default","value":"ast::token::Index<'a>","parent":{"krate":0,"index":5107},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5114},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7733618,"byte_end":7733624,"line_start":937,"line_end":937,"column_start":12,"column_end":18},"name":"MemArg","qualname":"::ast::expr::MemArg","value":"MemArg { align, offset }","parent":null,"children":[{"krate":0,"index":5115},{"krate":0,"index":5116}],"decl_id":null,"docs":" Payload for memory-related instructions indicating offset/alignment of\n memory accesses.\n","sig":null,"attributes":[{"value":"/ Payload for memory-related instructions indicating offset/alignment of","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7733494,"byte_end":7733568,"line_start":934,"line_end":934,"column_start":1,"column_end":75}},{"value":"/ memory accesses.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7733569,"byte_end":7733589,"line_start":935,"line_end":935,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":5115},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7733779,"byte_end":7733784,"line_start":942,"line_end":942,"column_start":9,"column_end":14},"name":"align","qualname":"::ast::expr::MemArg::align","value":"u32","parent":{"krate":0,"index":5114},"children":[],"decl_id":null,"docs":" The alignment of this access.","sig":null,"attributes":[{"value":"/ The alignment of this access.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7733631,"byte_end":7733664,"line_start":938,"line_end":938,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7733669,"byte_end":7733672,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ This is not stored as a log, this is the actual alignment (e.g. 1, 2, 4,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7733677,"byte_end":7733753,"line_start":940,"line_end":940,"column_start":5,"column_end":81}},{"value":"/ 8, etc).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7733758,"byte_end":7733770,"line_start":941,"line_end":941,"column_start":5,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":5116},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7733844,"byte_end":7733850,"line_start":944,"line_end":944,"column_start":9,"column_end":15},"name":"offset","qualname":"::ast::expr::MemArg::offset","value":"u32","parent":{"krate":0,"index":5114},"children":[],"decl_id":null,"docs":" The offset, in bytes of this access.\n","sig":null,"attributes":[{"value":"/ The offset, in bytes of this access.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7733795,"byte_end":7733835,"line_start":943,"line_end":943,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":5119},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7735503,"byte_end":7735515,"line_start":992,"line_end":992,"column_start":12,"column_end":24},"name":"CallIndirect","qualname":"::ast::expr::CallIndirect","value":"CallIndirect { table, ty }","parent":null,"children":[{"krate":0,"index":5121},{"krate":0,"index":5122}],"decl_id":null,"docs":" Extra data associated with the `call_indirect` instruction.\n","sig":null,"attributes":[{"value":"/ Extra data associated with the `call_indirect` instruction.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7735411,"byte_end":7735474,"line_start":990,"line_end":990,"column_start":1,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":5121},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7735588,"byte_end":7735593,"line_start":994,"line_end":994,"column_start":9,"column_end":14},"name":"table","qualname":"::ast::expr::CallIndirect::table","value":"ast::token::Index<'a>","parent":{"krate":0,"index":5119},"children":[],"decl_id":null,"docs":" The table that this call is going to be indexing.\n","sig":null,"attributes":[{"value":"/ The table that this call is going to be indexing.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7735526,"byte_end":7735579,"line_start":993,"line_end":993,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":5122},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7735695,"byte_end":7735697,"line_start":996,"line_end":996,"column_start":9,"column_end":11},"name":"ty","qualname":"::ast::expr::CallIndirect::ty","value":"ast::types::TypeUse<'a, ast::types::FunctionType<'a>>","parent":{"krate":0,"index":5119},"children":[],"decl_id":null,"docs":" Type type signature that this `call_indirect` instruction is using.\n","sig":null,"attributes":[{"value":"/ Type type signature that this `call_indirect` instruction is using.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7735615,"byte_end":7735686,"line_start":995,"line_end":995,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5126},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7736525,"byte_end":7736534,"line_start":1019,"line_end":1019,"column_start":12,"column_end":21},"name":"TableInit","qualname":"::ast::expr::TableInit","value":"TableInit { table, elem }","parent":null,"children":[{"krate":0,"index":5128},{"krate":0,"index":5129}],"decl_id":null,"docs":" Extra data associated with the `table.init` instruction\n","sig":null,"attributes":[{"value":"/ Extra data associated with the `table.init` instruction","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7736437,"byte_end":7736496,"line_start":1017,"line_end":1017,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":5128},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7736600,"byte_end":7736605,"line_start":1021,"line_end":1021,"column_start":9,"column_end":14},"name":"table","qualname":"::ast::expr::TableInit::table","value":"ast::token::Index<'a>","parent":{"krate":0,"index":5126},"children":[],"decl_id":null,"docs":" The index of the table we're copying into.\n","sig":null,"attributes":[{"value":"/ The index of the table we're copying into.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7736545,"byte_end":7736591,"line_start":1020,"line_end":1020,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":5129},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7736700,"byte_end":7736704,"line_start":1023,"line_end":1023,"column_start":9,"column_end":13},"name":"elem","qualname":"::ast::expr::TableInit::elem","value":"ast::token::Index<'a>","parent":{"krate":0,"index":5126},"children":[],"decl_id":null,"docs":" The index of the element segment we're copying into a table.\n","sig":null,"attributes":[{"value":"/ The index of the element segment we're copying into a table.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7736627,"byte_end":7736691,"line_start":1022,"line_end":1022,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":5133},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7737220,"byte_end":7737229,"line_start":1040,"line_end":1040,"column_start":12,"column_end":21},"name":"TableCopy","qualname":"::ast::expr::TableCopy","value":"TableCopy { dst, src }","parent":null,"children":[{"krate":0,"index":5135},{"krate":0,"index":5136}],"decl_id":null,"docs":" Extra data associated with the `table.copy` instruction.\n","sig":null,"attributes":[{"value":"/ Extra data associated with the `table.copy` instruction.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7737131,"byte_end":7737191,"line_start":1038,"line_end":1038,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":5135},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7737301,"byte_end":7737304,"line_start":1042,"line_end":1042,"column_start":9,"column_end":12},"name":"dst","qualname":"::ast::expr::TableCopy::dst","value":"ast::token::Index<'a>","parent":{"krate":0,"index":5133},"children":[],"decl_id":null,"docs":" The index of the destination table to copy into.\n","sig":null,"attributes":[{"value":"/ The index of the destination table to copy into.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7737240,"byte_end":7737292,"line_start":1041,"line_end":1041,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":5136},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7737382,"byte_end":7737385,"line_start":1044,"line_end":1044,"column_start":9,"column_end":12},"name":"src","qualname":"::ast::expr::TableCopy::src","value":"ast::token::Index<'a>","parent":{"krate":0,"index":5133},"children":[],"decl_id":null,"docs":" The index of the source table to copy from.\n","sig":null,"attributes":[{"value":"/ The index of the source table to copy from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7737326,"byte_end":7737373,"line_start":1043,"line_end":1043,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":5140},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7737858,"byte_end":7737866,"line_start":1061,"line_end":1061,"column_start":12,"column_end":20},"name":"TableArg","qualname":"::ast::expr::TableArg","value":"TableArg { dst }","parent":null,"children":[{"krate":0,"index":5142}],"decl_id":null,"docs":" Extra data associated with unary table instructions.\n","sig":null,"attributes":[{"value":"/ Extra data associated with unary table instructions.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7737773,"byte_end":7737829,"line_start":1059,"line_end":1059,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":5142},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7737922,"byte_end":7737925,"line_start":1063,"line_end":1063,"column_start":9,"column_end":12},"name":"dst","qualname":"::ast::expr::TableArg::dst","value":"ast::token::Index<'a>","parent":{"krate":0,"index":5140},"children":[],"decl_id":null,"docs":" The index of the table argument.\n","sig":null,"attributes":[{"value":"/ The index of the table argument.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7737877,"byte_end":7737913,"line_start":1062,"line_end":1062,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":5146},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7738312,"byte_end":7738322,"line_start":1079,"line_end":1079,"column_start":12,"column_end":22},"name":"MemoryInit","qualname":"::ast::expr::MemoryInit","value":"MemoryInit { data }","parent":null,"children":[{"krate":0,"index":5148}],"decl_id":null,"docs":" Extra data associated with the `memory.init` instruction\n","sig":null,"attributes":[{"value":"/ Extra data associated with the `memory.init` instruction","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7738223,"byte_end":7738283,"line_start":1077,"line_end":1077,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":5148},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7738402,"byte_end":7738406,"line_start":1081,"line_end":1081,"column_start":9,"column_end":13},"name":"data","qualname":"::ast::expr::MemoryInit::data","value":"ast::token::Index<'a>","parent":{"krate":0,"index":5146},"children":[],"decl_id":null,"docs":" The index of the data segment we're copying into memory.\n","sig":null,"attributes":[{"value":"/ The index of the data segment we're copying into memory.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7738333,"byte_end":7738393,"line_start":1080,"line_end":1080,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":5152},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7738690,"byte_end":7738702,"line_start":1094,"line_end":1094,"column_start":12,"column_end":24},"name":"StructAccess","qualname":"::ast::expr::StructAccess","value":"StructAccess { r#struct, field }","parent":null,"children":[{"krate":0,"index":5154},{"krate":0,"index":5155}],"decl_id":null,"docs":" Extra data associated with the `struct.get/set` instructions\n","sig":null,"attributes":[{"value":"/ Extra data associated with the `struct.get/set` instructions","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7738597,"byte_end":7738661,"line_start":1092,"line_end":1092,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":5154},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7738771,"byte_end":7738779,"line_start":1096,"line_end":1096,"column_start":9,"column_end":17},"name":"r#struct","qualname":"::ast::expr::StructAccess::r#struct","value":"ast::token::Index<'a>","parent":{"krate":0,"index":5152},"children":[],"decl_id":null,"docs":" The index of the struct type we're accessing.\n","sig":null,"attributes":[{"value":"/ The index of the struct type we're accessing.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7738713,"byte_end":7738762,"line_start":1095,"line_end":1095,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":5155},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7738866,"byte_end":7738871,"line_start":1098,"line_end":1098,"column_start":9,"column_end":14},"name":"field","qualname":"::ast::expr::StructAccess::field","value":"ast::token::Index<'a>","parent":{"krate":0,"index":5152},"children":[],"decl_id":null,"docs":" The index of the field of the struct we're accessing\n","sig":null,"attributes":[{"value":"/ The index of the field of the struct we're accessing","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7738801,"byte_end":7738857,"line_start":1097,"line_end":1097,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":5159},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7739197,"byte_end":7739209,"line_start":1112,"line_end":1112,"column_start":12,"column_end":24},"name":"StructNarrow","qualname":"::ast::expr::StructNarrow","value":"StructNarrow { from, to }","parent":null,"children":[{"krate":0,"index":5161},{"krate":0,"index":5162}],"decl_id":null,"docs":" Extra data associated with the `struct.narrow` instruction\n","sig":null,"attributes":[{"value":"/ Extra data associated with the `struct.narrow` instruction","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7739106,"byte_end":7739168,"line_start":1110,"line_end":1110,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":5161},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7739274,"byte_end":7739278,"line_start":1114,"line_end":1114,"column_start":9,"column_end":13},"name":"from","qualname":"::ast::expr::StructNarrow::from","value":"ast::types::ValType<'a>","parent":{"krate":0,"index":5159},"children":[],"decl_id":null,"docs":" The type of the struct we're casting from\n","sig":null,"attributes":[{"value":"/ The type of the struct we're casting from","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7739220,"byte_end":7739265,"line_start":1113,"line_end":1113,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":5162},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7739354,"byte_end":7739356,"line_start":1116,"line_end":1116,"column_start":9,"column_end":11},"name":"to","qualname":"::ast::expr::StructNarrow::to","value":"ast::types::ValType<'a>","parent":{"krate":0,"index":5159},"children":[],"decl_id":null,"docs":" The type of the struct we're casting to\n","sig":null,"attributes":[{"value":"/ The type of the struct we're casting to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7739302,"byte_end":7739345,"line_start":1115,"line_end":1115,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5167},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7739725,"byte_end":7739730,"line_start":1133,"line_end":1133,"column_start":5,"column_end":10},"name":"I8x16","qualname":"::ast::expr::V128Const::I8x16","value":"V128Const::I8x16([i8; ])","parent":{"krate":0,"index":5166},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5171},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7739746,"byte_end":7739751,"line_start":1134,"line_end":1134,"column_start":5,"column_end":10},"name":"I16x8","qualname":"::ast::expr::V128Const::I16x8","value":"V128Const::I16x8([i16; ])","parent":{"krate":0,"index":5166},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5175},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7739767,"byte_end":7739772,"line_start":1135,"line_end":1135,"column_start":5,"column_end":10},"name":"I32x4","qualname":"::ast::expr::V128Const::I32x4","value":"V128Const::I32x4([i32; ])","parent":{"krate":0,"index":5166},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5179},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7739788,"byte_end":7739793,"line_start":1136,"line_end":1136,"column_start":5,"column_end":10},"name":"I64x2","qualname":"::ast::expr::V128Const::I64x2","value":"V128Const::I64x2([i64; ])","parent":{"krate":0,"index":5166},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5183},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7739809,"byte_end":7739814,"line_start":1137,"line_end":1137,"column_start":5,"column_end":10},"name":"F32x4","qualname":"::ast::expr::V128Const::F32x4","value":"V128Const::F32x4([ast::Float32; ])","parent":{"krate":0,"index":5166},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5187},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7739839,"byte_end":7739844,"line_start":1138,"line_end":1138,"column_start":5,"column_end":10},"name":"F64x2","qualname":"::ast::expr::V128Const::F64x2","value":"V128Const::F64x2([ast::Float64; ])","parent":{"krate":0,"index":5166},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5166},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7739709,"byte_end":7739718,"line_start":1132,"line_end":1132,"column_start":10,"column_end":19},"name":"V128Const","qualname":"::ast::expr::V128Const","value":"pub enum V128Const {\n    I8x16([i8; ]),\n    I16x8([i16; ]),\n    I32x4([i32; ]),\n    I64x2([i64; ]),\n    F32x4([ast::Float32; ]),\n    F64x2([ast::Float64; ]),\n}","parent":null,"children":[{"krate":0,"index":5167},{"krate":0,"index":5171},{"krate":0,"index":5175},{"krate":0,"index":5179},{"krate":0,"index":5183},{"krate":0,"index":5187}],"decl_id":null,"docs":" Different ways to specify a `v128.const` instruction\n","sig":null,"attributes":[{"value":"/ Different ways to specify a `v128.const` instruction","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7739586,"byte_end":7739642,"line_start":1128,"line_end":1128,"column_start":1,"column_end":57}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7739677,"byte_end":7739699,"line_start":1131,"line_end":1131,"column_start":1,"column_end":23}},{"value":"rustfmt::skip","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7739660,"byte_end":7739676,"line_start":1130,"line_end":1130,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":5193},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7740128,"byte_end":7740139,"line_start":1148,"line_end":1148,"column_start":12,"column_end":23},"name":"to_le_bytes","qualname":"<V128Const>::to_le_bytes","value":"pub fn to_le_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns the raw little-ended byte sequence used to represent this\n `v128` constant`","sig":null,"attributes":[{"value":"/ Returns the raw little-ended byte sequence used to represent this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7739889,"byte_end":7739958,"line_start":1142,"line_end":1142,"column_start":5,"column_end":74}},{"value":"/ `v128` constant`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7739963,"byte_end":7739983,"line_start":1143,"line_end":1143,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7739988,"byte_end":7739991,"line_start":1144,"line_end":1144,"column_start":5,"column_end":8}},{"value":"/ This is typically suitable for encoding as the payload of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7739996,"byte_end":7740061,"line_start":1145,"line_end":1145,"column_start":5,"column_end":70}},{"value":"/ `v128.const` instruction.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7740066,"byte_end":7740095,"line_start":1146,"line_end":1146,"column_start":5,"column_end":34}},{"value":"rustfmt::skip","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7740100,"byte_end":7740116,"line_start":1147,"line_end":1147,"column_start":5,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":5195},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7745285,"byte_end":7745297,"line_start":1297,"line_end":1297,"column_start":12,"column_end":24},"name":"V8x16Shuffle","qualname":"::ast::expr::V8x16Shuffle","value":"V8x16Shuffle { lanes }","parent":null,"children":[{"krate":0,"index":5196}],"decl_id":null,"docs":" Lanes being shuffled in the `v8x16.shuffle` instruction\n","sig":null,"attributes":[{"value":"/ Lanes being shuffled in the `v8x16.shuffle` instruction","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7745197,"byte_end":7745256,"line_start":1295,"line_end":1295,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":5196},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7745335,"byte_end":7745340,"line_start":1299,"line_end":1299,"column_start":9,"column_end":14},"name":"lanes","qualname":"::ast::expr::V8x16Shuffle::lanes","value":"[u8; 16]","parent":{"krate":0,"index":5195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7745304,"byte_end":7745326,"line_start":1298,"line_end":1298,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":5200},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7746123,"byte_end":7746134,"line_start":1329,"line_end":1329,"column_start":12,"column_end":23},"name":"SelectTypes","qualname":"::ast::expr::SelectTypes","value":"SelectTypes { tys }","parent":null,"children":[{"krate":0,"index":5202}],"decl_id":null,"docs":" Payload of the `select` instructions\n","sig":null,"attributes":[{"value":"/ Payload of the `select` instructions","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7746054,"byte_end":7746094,"line_start":1327,"line_end":1327,"column_start":1,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":5202},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7746176,"byte_end":7746179,"line_start":1331,"line_end":1331,"column_start":9,"column_end":12},"name":"tys","qualname":"::ast::expr::SelectTypes::tys","value":"std::option::Option<std::vec::Vec<ast::types::ValType<'a>>>","parent":{"krate":0,"index":5200},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7746145,"byte_end":7746167,"line_start":1330,"line_end":1330,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":5206},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7746807,"byte_end":7746814,"line_start":1355,"line_end":1355,"column_start":12,"column_end":19},"name":"BrOnExn","qualname":"::ast::expr::BrOnExn","value":"BrOnExn { label, exn }","parent":null,"children":[{"krate":0,"index":5208},{"krate":0,"index":5209}],"decl_id":null,"docs":" Payload of the `br_on_exn` instruction\n","sig":null,"attributes":[{"value":"/ Payload of the `br_on_exn` instruction","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7746713,"byte_end":7746755,"line_start":1352,"line_end":1352,"column_start":1,"column_end":43}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7746773,"byte_end":7746795,"line_start":1354,"line_end":1354,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":5208},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7746829,"byte_end":7746834,"line_start":1356,"line_end":1356,"column_start":9,"column_end":14},"name":"label","qualname":"::ast::expr::BrOnExn::label","value":"ast::token::Index<'a>","parent":{"krate":0,"index":5206},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5209},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7746860,"byte_end":7746863,"line_start":1357,"line_end":1357,"column_start":9,"column_end":12},"name":"exn","qualname":"::ast::expr::BrOnExn::exn","value":"ast::token::Index<'a>","parent":{"krate":0,"index":5206},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5213},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/func.rs","byte_start":7747311,"byte_end":7747315,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Func","qualname":"::ast::func::Func","value":"Func { span, id, name, exports, kind, ty }","parent":null,"children":[{"krate":0,"index":5215},{"krate":0,"index":5216},{"krate":0,"index":5217},{"krate":0,"index":5218},{"krate":0,"index":5219},{"krate":0,"index":5220}],"decl_id":null,"docs":" A WebAssembly function to be inserted into a module.","sig":null,"attributes":[{"value":"/ A WebAssembly function to be inserted into a module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/func.rs","byte_start":7747161,"byte_end":7747217,"line_start":4,"line_end":4,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/func.rs","byte_start":7747218,"byte_end":7747221,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This is a member of both the function and code sections.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/func.rs","byte_start":7747222,"byte_end":7747282,"line_start":6,"line_end":6,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":5215},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/func.rs","byte_start":7747369,"byte_end":7747373,"line_start":10,"line_end":10,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::func::Func::span","value":"ast::token::Span","parent":{"krate":0,"index":5213},"children":[],"decl_id":null,"docs":" Where this `func` was defined.\n","sig":null,"attributes":[{"value":"/ Where this `func` was defined.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/func.rs","byte_start":7747326,"byte_end":7747360,"line_start":9,"line_end":9,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":5216},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/func.rs","byte_start":7747494,"byte_end":7747496,"line_start":13,"line_end":13,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::func::Func::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":5213},"children":[],"decl_id":null,"docs":" An identifier that this function is resolved with (optionally) for name\n resolution.\n","sig":null,"attributes":[{"value":"/ An identifier that this function is resolved with (optionally) for name","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/func.rs","byte_start":7747390,"byte_end":7747465,"line_start":11,"line_end":11,"column_start":5,"column_end":80}},{"value":"/ resolution.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/func.rs","byte_start":7747470,"byte_end":7747485,"line_start":12,"line_end":12,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":5217},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/func.rs","byte_start":7747607,"byte_end":7747611,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::func::Func::name","value":"std::option::Option<ast::token::NameAnnotation<'a>>","parent":{"krate":0,"index":5213},"children":[],"decl_id":null,"docs":" An optional name for this function stored in the custom `name` section.\n","sig":null,"attributes":[{"value":"/ An optional name for this function stored in the custom `name` section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/func.rs","byte_start":7747523,"byte_end":7747598,"line_start":14,"line_end":14,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":5218},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/func.rs","byte_start":7747771,"byte_end":7747778,"line_start":18,"line_end":18,"column_start":9,"column_end":16},"name":"exports","qualname":"::ast::func::Func::exports","value":"ast::export::InlineExport<'a>","parent":{"krate":0,"index":5213},"children":[],"decl_id":null,"docs":" If present, inline export annotations which indicate names this\n definition should be exported under.\n","sig":null,"attributes":[{"value":"/ If present, inline export annotations which indicate names this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/func.rs","byte_start":7747650,"byte_end":7747717,"line_start":16,"line_end":16,"column_start":5,"column_end":72}},{"value":"/ definition should be exported under.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/func.rs","byte_start":7747722,"byte_end":7747762,"line_start":17,"line_end":17,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":5219},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/func.rs","byte_start":7747904,"byte_end":7747908,"line_start":21,"line_end":21,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::func::Func::kind","value":"ast::func::FuncKind<'a>","parent":{"krate":0,"index":5213},"children":[],"decl_id":null,"docs":" What kind of function this is, be it an inline-defined or imported\n function.\n","sig":null,"attributes":[{"value":"/ What kind of function this is, be it an inline-defined or imported","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/func.rs","byte_start":7747807,"byte_end":7747877,"line_start":19,"line_end":19,"column_start":5,"column_end":75}},{"value":"/ function.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/func.rs","byte_start":7747882,"byte_end":7747895,"line_start":20,"line_end":20,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":5220},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/func.rs","byte_start":7747979,"byte_end":7747981,"line_start":23,"line_end":23,"column_start":9,"column_end":11},"name":"ty","qualname":"::ast::func::Func::ty","value":"ast::types::TypeUse<'a, ast::types::FunctionType<'a>>","parent":{"krate":0,"index":5213},"children":[],"decl_id":null,"docs":" The type that this function will have.\n","sig":null,"attributes":[{"value":"/ The type that this function will have.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/func.rs","byte_start":7747928,"byte_end":7747970,"line_start":22,"line_end":22,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5226},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/func.rs","byte_start":7748280,"byte_end":7748286,"line_start":34,"line_end":34,"column_start":5,"column_end":11},"name":"Import","qualname":"::ast::func::FuncKind::Import","value":"FuncKind::Import(ast::InlineImport)","parent":{"krate":0,"index":5224},"children":[],"decl_id":null,"docs":" A function which is actually defined as an import, such as:","sig":null,"attributes":[{"value":"/ A function which is actually defined as an import, such as:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/func.rs","byte_start":7748131,"byte_end":7748194,"line_start":29,"line_end":29,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/func.rs","byte_start":7748199,"byte_end":7748202,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/func.rs","byte_start":7748207,"byte_end":7748218,"line_start":31,"line_end":31,"column_start":5,"column_end":16}},{"value":"/ (func (type 3) (import \"foo\" \"bar\"))","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/func.rs","byte_start":7748223,"byte_end":7748263,"line_start":32,"line_end":32,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/func.rs","byte_start":7748268,"byte_end":7748275,"line_start":33,"line_end":33,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":5229},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/func.rs","byte_start":7748385,"byte_end":7748391,"line_start":37,"line_end":37,"column_start":5,"column_end":11},"name":"Inline","qualname":"::ast::func::FuncKind::Inline","value":"FuncKind::Inline { locals, expression }","parent":{"krate":0,"index":5224},"children":[],"decl_id":null,"docs":" Almost all functions, those defined inline in a wasm module.\n","sig":null,"attributes":[{"value":"/ Almost all functions, those defined inline in a wasm module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/func.rs","byte_start":7748316,"byte_end":7748380,"line_start":36,"line_end":36,"column_start":5,"column_end":69}}]},{"kind":"Enum","id":{"krate":0,"index":5224},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/func.rs","byte_start":7748112,"byte_end":7748120,"line_start":28,"line_end":28,"column_start":10,"column_end":18},"name":"FuncKind","qualname":"::ast::func::FuncKind","value":"pub enum FuncKind<'a> {\n\n    /// A function which is actually defined as an import, such as:\n    ///\n    /// ```text\n    /// (func (type 3) (import \"foo\" \"bar\"))\n    /// ```\n    Import(ast::InlineImport),\n\n    /// Almost all functions, those defined inline in a wasm module.\n    Inline {\n        /// The list of locals, if any, for this function. Each local has an\n        /// optional identifier for name resolution and name for the custom\n        /// `name` section associated with it.\n        locals: Vec<(Option<ast::Id>, Option<ast::NameAnnotation>,\n                     ast::ValType)>,\n        /// The instructions of the function.\n        expression: ast::Expression,\n    },\n}","parent":null,"children":[{"krate":0,"index":5226},{"krate":0,"index":5229}],"decl_id":null,"docs":" Possible ways to define a function in the text format.\n","sig":null,"attributes":[{"value":"/ Possible ways to define a function in the text format.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/func.rs","byte_start":7748027,"byte_end":7748085,"line_start":26,"line_end":26,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":5235},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/global.rs","byte_start":7750466,"byte_end":7750472,"line_start":6,"line_end":6,"column_start":12,"column_end":18},"name":"Global","qualname":"::ast::global::Global","value":"Global { span, id, exports, ty, kind }","parent":null,"children":[{"krate":0,"index":5237},{"krate":0,"index":5238},{"krate":0,"index":5239},{"krate":0,"index":5240},{"krate":0,"index":5241}],"decl_id":null,"docs":" A WebAssembly global in a module\n","sig":null,"attributes":[{"value":"/ A WebAssembly global in a module","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/global.rs","byte_start":7750401,"byte_end":7750437,"line_start":4,"line_end":4,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":5237},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/global.rs","byte_start":7750528,"byte_end":7750532,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::global::Global::span","value":"ast::token::Span","parent":{"krate":0,"index":5235},"children":[],"decl_id":null,"docs":" Where this `global` was defined.\n","sig":null,"attributes":[{"value":"/ Where this `global` was defined.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/global.rs","byte_start":7750483,"byte_end":7750519,"line_start":7,"line_end":7,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":5238},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/global.rs","byte_start":7750606,"byte_end":7750608,"line_start":10,"line_end":10,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::global::Global::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":5235},"children":[],"decl_id":null,"docs":" An optional name to reference this global by\n","sig":null,"attributes":[{"value":"/ An optional name to reference this global by","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/global.rs","byte_start":7750549,"byte_end":7750597,"line_start":9,"line_end":9,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":5239},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/global.rs","byte_start":7750756,"byte_end":7750763,"line_start":13,"line_end":13,"column_start":9,"column_end":16},"name":"exports","qualname":"::ast::global::Global::exports","value":"ast::export::InlineExport<'a>","parent":{"krate":0,"index":5235},"children":[],"decl_id":null,"docs":" If present, inline export annotations which indicate names this\n definition should be exported under.\n","sig":null,"attributes":[{"value":"/ If present, inline export annotations which indicate names this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/global.rs","byte_start":7750635,"byte_end":7750702,"line_start":11,"line_end":11,"column_start":5,"column_end":72}},{"value":"/ definition should be exported under.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/global.rs","byte_start":7750707,"byte_end":7750747,"line_start":12,"line_end":12,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":5240},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/global.rs","byte_start":7750875,"byte_end":7750877,"line_start":15,"line_end":15,"column_start":9,"column_end":11},"name":"ty","qualname":"::ast::global::Global::ty","value":"ast::types::GlobalType<'a>","parent":{"krate":0,"index":5235},"children":[],"decl_id":null,"docs":" The type of this global, both its value type and whether it's mutable.\n","sig":null,"attributes":[{"value":"/ The type of this global, both its value type and whether it's mutable.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/global.rs","byte_start":7750792,"byte_end":7750866,"line_start":14,"line_end":14,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":5241},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/global.rs","byte_start":7750953,"byte_end":7750957,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::global::Global::kind","value":"ast::global::GlobalKind<'a>","parent":{"krate":0,"index":5235},"children":[],"decl_id":null,"docs":" What kind of global this defined as.\n","sig":null,"attributes":[{"value":"/ What kind of global this defined as.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/global.rs","byte_start":7750904,"byte_end":7750944,"line_start":16,"line_end":16,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5247},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/global.rs","byte_start":7751233,"byte_end":7751239,"line_start":28,"line_end":28,"column_start":5,"column_end":11},"name":"Import","qualname":"::ast::global::GlobalKind::Import","value":"GlobalKind::Import(ast::InlineImport)","parent":{"krate":0,"index":5245},"children":[],"decl_id":null,"docs":" A global which is actually defined as an import, such as:","sig":null,"attributes":[{"value":"/ A global which is actually defined as an import, such as:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/global.rs","byte_start":7751089,"byte_end":7751150,"line_start":23,"line_end":23,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/global.rs","byte_start":7751155,"byte_end":7751158,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/global.rs","byte_start":7751163,"byte_end":7751174,"line_start":25,"line_end":25,"column_start":5,"column_end":16}},{"value":"/ (global i32 (import \"foo\" \"bar\"))","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/global.rs","byte_start":7751179,"byte_end":7751216,"line_start":26,"line_end":26,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/global.rs","byte_start":7751221,"byte_end":7751228,"line_start":27,"line_end":27,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5250},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/global.rs","byte_start":7751322,"byte_end":7751328,"line_start":31,"line_end":31,"column_start":5,"column_end":11},"name":"Inline","qualname":"::ast::global::GlobalKind::Inline","value":"GlobalKind::Inline(ast::Expression)","parent":{"krate":0,"index":5245},"children":[],"decl_id":null,"docs":" A global defined inline in the module itself\n","sig":null,"attributes":[{"value":"/ A global defined inline in the module itself","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/global.rs","byte_start":7751269,"byte_end":7751317,"line_start":30,"line_end":30,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":5245},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/global.rs","byte_start":7751068,"byte_end":7751078,"line_start":22,"line_end":22,"column_start":10,"column_end":20},"name":"GlobalKind","qualname":"::ast::global::GlobalKind","value":"pub enum GlobalKind<'a> {\n\n    /// A global which is actually defined as an import, such as:\n    ///\n    /// ```text\n    /// (global i32 (import \"foo\" \"bar\"))\n    /// ```\n    Import(ast::InlineImport),\n\n    /// A global defined inline in the module itself\n    Inline(ast::Expression),\n}","parent":null,"children":[{"krate":0,"index":5247},{"krate":0,"index":5250}],"decl_id":null,"docs":" Different kinds of globals that can be defined in a module.\n","sig":null,"attributes":[{"value":"/ Different kinds of globals that can be defined in a module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/global.rs","byte_start":7750978,"byte_end":7751041,"line_start":20,"line_end":20,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":5256},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7752097,"byte_end":7752103,"line_start":6,"line_end":6,"column_start":12,"column_end":18},"name":"Import","qualname":"::ast::import::Import","value":"Import { span, module, field, item }","parent":null,"children":[{"krate":0,"index":5258},{"krate":0,"index":5259},{"krate":0,"index":5260},{"krate":0,"index":5261}],"decl_id":null,"docs":" An `import` statement and entry in a WebAssembly module.\n","sig":null,"attributes":[{"value":"/ An `import` statement and entry in a WebAssembly module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7752001,"byte_end":7752061,"line_start":4,"line_end":4,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":5258},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7752158,"byte_end":7752162,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::import::Import::span","value":"ast::token::Span","parent":{"krate":0,"index":5256},"children":[],"decl_id":null,"docs":" Where this `import` was defined\n","sig":null,"attributes":[{"value":"/ Where this `import` was defined","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7752114,"byte_end":7752149,"line_start":7,"line_end":7,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":5259},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7752240,"byte_end":7752246,"line_start":10,"line_end":10,"column_start":9,"column_end":15},"name":"module","qualname":"::ast::import::Import::module","value":"&'a str","parent":{"krate":0,"index":5256},"children":[],"decl_id":null,"docs":" The module that this statement is importing from\n","sig":null,"attributes":[{"value":"/ The module that this statement is importing from","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7752179,"byte_end":7752231,"line_start":9,"line_end":9,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":5260},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7752338,"byte_end":7752343,"line_start":12,"line_end":12,"column_start":9,"column_end":14},"name":"field","qualname":"::ast::import::Import::field","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":5256},"children":[],"decl_id":null,"docs":" The name of the field in the module this statement imports from.\n","sig":null,"attributes":[{"value":"/ The name of the field in the module this statement imports from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7752261,"byte_end":7752329,"line_start":11,"line_end":11,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":5261},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7752410,"byte_end":7752414,"line_start":14,"line_end":14,"column_start":9,"column_end":13},"name":"item","qualname":"::ast::import::Import::item","value":"ast::import::ItemSig<'a>","parent":{"krate":0,"index":5256},"children":[],"decl_id":null,"docs":" The item that's being imported.\n","sig":null,"attributes":[{"value":"/ The item that's being imported.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7752366,"byte_end":7752401,"line_start":13,"line_end":13,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":5268},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7752869,"byte_end":7752876,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"ItemSig","qualname":"::ast::import::ItemSig","value":"ItemSig { span, id, name, kind }","parent":null,"children":[{"krate":0,"index":5270},{"krate":0,"index":5271},{"krate":0,"index":5272},{"krate":0,"index":5273}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7752835,"byte_end":7752857,"line_start":33,"line_end":33,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":5270},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7752941,"byte_end":7752945,"line_start":36,"line_end":36,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::import::ItemSig::span","value":"ast::token::Span","parent":{"krate":0,"index":5268},"children":[],"decl_id":null,"docs":" Where this item is defined in the source.\n","sig":null,"attributes":[{"value":"/ Where this item is defined in the source.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7752887,"byte_end":7752932,"line_start":35,"line_end":35,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":5271},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7753084,"byte_end":7753086,"line_start":39,"line_end":39,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::import::ItemSig::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":5268},"children":[],"decl_id":null,"docs":" An optional identifier used during name resolution to refer to this item\n from the rest of the module.\n","sig":null,"attributes":[{"value":"/ An optional identifier used during name resolution to refer to this item","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7752962,"byte_end":7753038,"line_start":37,"line_end":37,"column_start":5,"column_end":81}},{"value":"/ from the rest of the module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7753043,"byte_end":7753075,"line_start":38,"line_end":38,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":5272},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7753217,"byte_end":7753221,"line_start":42,"line_end":42,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::import::ItemSig::name","value":"std::option::Option<ast::token::NameAnnotation<'a>>","parent":{"krate":0,"index":5268},"children":[],"decl_id":null,"docs":" An optional name which, for functions, will be stored in the\n custom `name` section.\n","sig":null,"attributes":[{"value":"/ An optional name which, for functions, will be stored in the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7753113,"byte_end":7753177,"line_start":40,"line_end":40,"column_start":5,"column_end":69}},{"value":"/ custom `name` section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7753182,"byte_end":7753208,"line_start":41,"line_end":41,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":5273},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7753299,"byte_end":7753303,"line_start":44,"line_end":44,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::import::ItemSig::kind","value":"ast::import::ItemKind<'a>","parent":{"krate":0,"index":5268},"children":[],"decl_id":null,"docs":" What kind of item this is.\n","sig":null,"attributes":[{"value":"/ What kind of item this is.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7753260,"byte_end":7753290,"line_start":43,"line_end":43,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5282},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7753397,"byte_end":7753401,"line_start":50,"line_end":50,"column_start":5,"column_end":9},"name":"Func","qualname":"::ast::import::ItemKind::Func","value":"ItemKind::Func(ast::TypeUse)","parent":{"krate":0,"index":5280},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5285},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7753448,"byte_end":7753453,"line_start":51,"line_end":51,"column_start":5,"column_end":10},"name":"Table","qualname":"::ast::import::ItemKind::Table","value":"ItemKind::Table(ast::TableType)","parent":{"krate":0,"index":5280},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5288},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7753479,"byte_end":7753485,"line_start":52,"line_end":52,"column_start":5,"column_end":11},"name":"Memory","qualname":"::ast::import::ItemKind::Memory","value":"ItemKind::Memory(ast::MemoryType)","parent":{"krate":0,"index":5280},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5291},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7753508,"byte_end":7753514,"line_start":53,"line_end":53,"column_start":5,"column_end":11},"name":"Global","qualname":"::ast::import::ItemKind::Global","value":"ItemKind::Global(ast::GlobalType)","parent":{"krate":0,"index":5280},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5294},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7753541,"byte_end":7753546,"line_start":54,"line_end":54,"column_start":5,"column_end":10},"name":"Event","qualname":"::ast::import::ItemKind::Event","value":"ItemKind::Event(ast::EventType)","parent":{"krate":0,"index":5280},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5297},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7753572,"byte_end":7753578,"line_start":55,"line_end":55,"column_start":5,"column_end":11},"name":"Module","qualname":"::ast::import::ItemKind::Module","value":"ItemKind::Module(ast::TypeUse)","parent":{"krate":0,"index":5280},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5300},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7753623,"byte_end":7753631,"line_start":56,"line_end":56,"column_start":5,"column_end":13},"name":"Instance","qualname":"::ast::import::ItemKind::Instance","value":"ItemKind::Instance(ast::TypeUse)","parent":{"krate":0,"index":5280},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5280},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7753378,"byte_end":7753386,"line_start":49,"line_end":49,"column_start":10,"column_end":18},"name":"ItemKind","qualname":"::ast::import::ItemKind","value":"pub enum ItemKind<'a> {\n    Func(ast::TypeUse),\n    Table(ast::TableType),\n    Memory(ast::MemoryType),\n    Global(ast::GlobalType),\n    Event(ast::EventType),\n    Module(ast::TypeUse),\n    Instance(ast::TypeUse),\n}","parent":null,"children":[{"krate":0,"index":5282},{"krate":0,"index":5285},{"krate":0,"index":5288},{"krate":0,"index":5291},{"krate":0,"index":5294},{"krate":0,"index":5297},{"krate":0,"index":5300}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7753346,"byte_end":7753368,"line_start":48,"line_end":48,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5309},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7756237,"byte_end":7756249,"line_start":132,"line_end":132,"column_start":12,"column_end":24},"name":"InlineImport","qualname":"::ast::import::InlineImport","value":"InlineImport { module, field }","parent":null,"children":[{"krate":0,"index":5311},{"krate":0,"index":5312}],"decl_id":null,"docs":" A listing of a inline `(import \"foo\")` statement.","sig":null,"attributes":[{"value":"/ A listing of a inline `(import \"foo\")` statement.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7755848,"byte_end":7755901,"line_start":124,"line_end":124,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7755902,"byte_end":7755905,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ Note that when parsing this type it is somewhat unconventional that it","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7755906,"byte_end":7755980,"line_start":126,"line_end":126,"column_start":1,"column_end":75}},{"value":"/ parses its own surrounding parentheses. This is typically an optional type,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7755981,"byte_end":7756060,"line_start":127,"line_end":127,"column_start":1,"column_end":80}},{"value":"/ so it's so far been a bit nicer to have the optionality handled through","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7756061,"byte_end":7756136,"line_start":128,"line_end":128,"column_start":1,"column_end":76}},{"value":"/ `Peek` rather than `Option<T>`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7756137,"byte_end":7756172,"line_start":129,"line_end":129,"column_start":1,"column_end":36}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7756203,"byte_end":7756225,"line_start":131,"line_end":131,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":5311},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7756264,"byte_end":7756270,"line_start":133,"line_end":133,"column_start":9,"column_end":15},"name":"module","qualname":"::ast::import::InlineImport::module","value":"&'a str","parent":{"krate":0,"index":5309},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5312},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7756289,"byte_end":7756294,"line_start":134,"line_end":134,"column_start":9,"column_end":14},"name":"field","qualname":"::ast::import::InlineImport::field","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":5309},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5321},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/instance.rs","byte_start":7757511,"byte_end":7757519,"line_start":6,"line_end":6,"column_start":12,"column_end":20},"name":"Instance","qualname":"::ast::instance::Instance","value":"Instance { span, id, exports, kind }","parent":null,"children":[{"krate":0,"index":5323},{"krate":0,"index":5324},{"krate":0,"index":5325},{"krate":0,"index":5326}],"decl_id":null,"docs":" A nested WebAssembly instance to be created as part of a module.\n","sig":null,"attributes":[{"value":"/ A nested WebAssembly instance to be created as part of a module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/instance.rs","byte_start":7757414,"byte_end":7757482,"line_start":4,"line_end":4,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":5323},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/instance.rs","byte_start":7757577,"byte_end":7757581,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::instance::Instance::span","value":"ast::token::Span","parent":{"krate":0,"index":5321},"children":[],"decl_id":null,"docs":" Where this `instance` was defined.\n","sig":null,"attributes":[{"value":"/ Where this `instance` was defined.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/instance.rs","byte_start":7757530,"byte_end":7757568,"line_start":7,"line_end":7,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":5324},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/instance.rs","byte_start":7757702,"byte_end":7757704,"line_start":11,"line_end":11,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::instance::Instance::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":5321},"children":[],"decl_id":null,"docs":" An identifier that this instance is resolved with (optionally) for name\n resolution.\n","sig":null,"attributes":[{"value":"/ An identifier that this instance is resolved with (optionally) for name","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/instance.rs","byte_start":7757598,"byte_end":7757673,"line_start":9,"line_end":9,"column_start":5,"column_end":80}},{"value":"/ resolution.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/instance.rs","byte_start":7757678,"byte_end":7757693,"line_start":10,"line_end":10,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":5325},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/instance.rs","byte_start":7757852,"byte_end":7757859,"line_start":14,"line_end":14,"column_start":9,"column_end":16},"name":"exports","qualname":"::ast::instance::Instance::exports","value":"ast::export::InlineExport<'a>","parent":{"krate":0,"index":5321},"children":[],"decl_id":null,"docs":" If present, inline export annotations which indicate names this\n definition should be exported under.\n","sig":null,"attributes":[{"value":"/ If present, inline export annotations which indicate names this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/instance.rs","byte_start":7757731,"byte_end":7757798,"line_start":12,"line_end":12,"column_start":5,"column_end":72}},{"value":"/ definition should be exported under.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/instance.rs","byte_start":7757803,"byte_end":7757843,"line_start":13,"line_end":13,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":5326},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/instance.rs","byte_start":7757972,"byte_end":7757976,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::instance::Instance::kind","value":"ast::instance::InstanceKind<'a>","parent":{"krate":0,"index":5321},"children":[],"decl_id":null,"docs":" What kind of instance this is, be it an inline-defined or imported one.\n","sig":null,"attributes":[{"value":"/ What kind of instance this is, be it an inline-defined or imported one.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/instance.rs","byte_start":7757888,"byte_end":7757963,"line_start":15,"line_end":15,"column_start":5,"column_end":80}}]},{"kind":"StructVariant","id":{"krate":0,"index":5332},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/instance.rs","byte_start":7758176,"byte_end":7758182,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"Import","qualname":"::ast::instance::InstanceKind::Import","value":"InstanceKind::Import { import, ty }","parent":{"krate":0,"index":5330},"children":[],"decl_id":null,"docs":" An instance which is actually defined as an import, such as:\n","sig":null,"attributes":[{"value":"/ An instance which is actually defined as an import, such as:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/instance.rs","byte_start":7758107,"byte_end":7758171,"line_start":22,"line_end":22,"column_start":5,"column_end":69}}]},{"kind":"StructVariant","id":{"krate":0,"index":5335},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/instance.rs","byte_start":7758436,"byte_end":7758442,"line_start":31,"line_end":31,"column_start":5,"column_end":11},"name":"Inline","qualname":"::ast::instance::InstanceKind::Inline","value":"InstanceKind::Inline { module, items }","parent":{"krate":0,"index":5330},"children":[],"decl_id":null,"docs":" Instances whose instantiation is defined inline.\n","sig":null,"attributes":[{"value":"/ Instances whose instantiation is defined inline.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/instance.rs","byte_start":7758379,"byte_end":7758431,"line_start":30,"line_end":30,"column_start":5,"column_end":57}}]},{"kind":"Enum","id":{"krate":0,"index":5330},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/instance.rs","byte_start":7758084,"byte_end":7758096,"line_start":21,"line_end":21,"column_start":10,"column_end":22},"name":"InstanceKind","qualname":"::ast::instance::InstanceKind","value":"pub enum InstanceKind<'a> {\n\n    /// An instance which is actually defined as an import, such as:\n    Import {\n        /// Where we're importing from\n        import: ast::InlineImport,\n        /// The type that this instance will have.\n        ty: ast::TypeUse,\n    },\n\n    /// Instances whose instantiation is defined inline.\n    Inline {\n        /// Module that we're instantiating\n        module: ast::Index,\n        /// Items used to instantiate the instance\n        items: Vec<ast::ExportKind>,\n    },\n}","parent":null,"children":[{"krate":0,"index":5332},{"krate":0,"index":5335}],"decl_id":null,"docs":" Possible ways to define a instance in the text format.\n","sig":null,"attributes":[{"value":"/ Possible ways to define a instance in the text format.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/instance.rs","byte_start":7757999,"byte_end":7758057,"line_start":19,"line_end":19,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":5341},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7759669,"byte_end":7759675,"line_start":6,"line_end":6,"column_start":12,"column_end":18},"name":"Memory","qualname":"::ast::memory::Memory","value":"Memory { span, id, exports, kind }","parent":null,"children":[{"krate":0,"index":5343},{"krate":0,"index":5344},{"krate":0,"index":5345},{"krate":0,"index":5346}],"decl_id":null,"docs":" A defined WebAssembly memory instance inside of a module.\n","sig":null,"attributes":[{"value":"/ A defined WebAssembly memory instance inside of a module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7759579,"byte_end":7759640,"line_start":4,"line_end":4,"column_start":1,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":5343},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7759730,"byte_end":7759734,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::memory::Memory::span","value":"ast::token::Span","parent":{"krate":0,"index":5341},"children":[],"decl_id":null,"docs":" Where this `memory` was defined\n","sig":null,"attributes":[{"value":"/ Where this `memory` was defined","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7759686,"byte_end":7759721,"line_start":7,"line_end":7,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":5344},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7759808,"byte_end":7759810,"line_start":10,"line_end":10,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::memory::Memory::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":5341},"children":[],"decl_id":null,"docs":" An optional name to refer to this memory by.\n","sig":null,"attributes":[{"value":"/ An optional name to refer to this memory by.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7759751,"byte_end":7759799,"line_start":9,"line_end":9,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":5345},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7759958,"byte_end":7759965,"line_start":13,"line_end":13,"column_start":9,"column_end":16},"name":"exports","qualname":"::ast::memory::Memory::exports","value":"ast::export::InlineExport<'a>","parent":{"krate":0,"index":5341},"children":[],"decl_id":null,"docs":" If present, inline export annotations which indicate names this\n definition should be exported under.\n","sig":null,"attributes":[{"value":"/ If present, inline export annotations which indicate names this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7759837,"byte_end":7759904,"line_start":11,"line_end":11,"column_start":5,"column_end":72}},{"value":"/ definition should be exported under.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7759909,"byte_end":7759949,"line_start":12,"line_end":12,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":5346},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7760048,"byte_end":7760052,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::memory::Memory::kind","value":"ast::memory::MemoryKind<'a>","parent":{"krate":0,"index":5341},"children":[],"decl_id":null,"docs":" How this memory is defined in the module.\n","sig":null,"attributes":[{"value":"/ How this memory is defined in the module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7759994,"byte_end":7760039,"line_start":14,"line_end":14,"column_start":5,"column_end":50}}]},{"kind":"StructVariant","id":{"krate":0,"index":5352},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7760277,"byte_end":7760283,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"Import","qualname":"::ast::memory::MemoryKind::Import","value":"MemoryKind::Import { import, ty }","parent":{"krate":0,"index":5350},"children":[],"decl_id":null,"docs":" This memory is actually an inlined import definition.\n","sig":null,"attributes":[{"value":"/ This memory is actually an inlined import definition.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7760188,"byte_end":7760245,"line_start":21,"line_end":21,"column_start":5,"column_end":62}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7760250,"byte_end":7760272,"line_start":22,"line_end":22,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5355},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7760445,"byte_end":7760451,"line_start":29,"line_end":29,"column_start":5,"column_end":11},"name":"Normal","qualname":"::ast::memory::MemoryKind::Normal","value":"MemoryKind::Normal(ast::MemoryType)","parent":{"krate":0,"index":5350},"children":[],"decl_id":null,"docs":" A typical memory definition which simply says the limits of the memory\n","sig":null,"attributes":[{"value":"/ A typical memory definition which simply says the limits of the memory","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7760366,"byte_end":7760440,"line_start":28,"line_end":28,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5358},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7760543,"byte_end":7760549,"line_start":32,"line_end":32,"column_start":5,"column_end":11},"name":"Inline","qualname":"::ast::memory::MemoryKind::Inline","value":"MemoryKind::Inline(Vec<&'a [u8]>)","parent":{"krate":0,"index":5350},"children":[],"decl_id":null,"docs":" The data of this memory, starting from 0, explicitly listed\n","sig":null,"attributes":[{"value":"/ The data of this memory, starting from 0, explicitly listed","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7760475,"byte_end":7760538,"line_start":31,"line_end":31,"column_start":5,"column_end":68}}]},{"kind":"Enum","id":{"krate":0,"index":5350},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7760167,"byte_end":7760177,"line_start":20,"line_end":20,"column_start":10,"column_end":20},"name":"MemoryKind","qualname":"::ast::memory::MemoryKind","value":"pub enum MemoryKind<'a> {\n\n    /// This memory is actually an inlined import definition.\n    #[allow(missing_docs)]\n    Import {\n        import: ast::InlineImport,\n        ty: ast::MemoryType,\n    },\n\n    /// A typical memory definition which simply says the limits of the memory\n    Normal(ast::MemoryType),\n\n    /// The data of this memory, starting from 0, explicitly listed\n    Inline(Vec<&'a [u8]>),\n}","parent":null,"children":[{"krate":0,"index":5352},{"krate":0,"index":5355},{"krate":0,"index":5358}],"decl_id":null,"docs":" Different syntactical ways a memory can be defined in a module.\n","sig":null,"attributes":[{"value":"/ Different syntactical ways a memory can be defined in a module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7760073,"byte_end":7760140,"line_start":18,"line_end":18,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5364},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7761863,"byte_end":7761867,"line_start":78,"line_end":78,"column_start":12,"column_end":16},"name":"Data","qualname":"::ast::memory::Data","value":"Data { span, id, kind, data }","parent":null,"children":[{"krate":0,"index":5366},{"krate":0,"index":5367},{"krate":0,"index":5368},{"krate":0,"index":5369}],"decl_id":null,"docs":" A `data` directive in a WebAssembly module.\n","sig":null,"attributes":[{"value":"/ A `data` directive in a WebAssembly module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7761787,"byte_end":7761834,"line_start":76,"line_end":76,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":5366},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7761920,"byte_end":7761924,"line_start":80,"line_end":80,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::memory::Data::span","value":"ast::token::Span","parent":{"krate":0,"index":5364},"children":[],"decl_id":null,"docs":" Where this `data` was defined\n","sig":null,"attributes":[{"value":"/ Where this `data` was defined","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7761878,"byte_end":7761911,"line_start":79,"line_end":79,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":5367},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7761993,"byte_end":7761995,"line_start":83,"line_end":83,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::memory::Data::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":5364},"children":[],"decl_id":null,"docs":" The optional name of this data segment\n","sig":null,"attributes":[{"value":"/ The optional name of this data segment","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7761942,"byte_end":7761984,"line_start":82,"line_end":82,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":5368},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7762082,"byte_end":7762086,"line_start":86,"line_end":86,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::memory::Data::kind","value":"ast::memory::DataKind<'a>","parent":{"krate":0,"index":5364},"children":[],"decl_id":null,"docs":" Whether this data segment is passive or active\n","sig":null,"attributes":[{"value":"/ Whether this data segment is passive or active","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7762023,"byte_end":7762073,"line_start":85,"line_end":85,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":5369},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7762215,"byte_end":7762219,"line_start":90,"line_end":90,"column_start":9,"column_end":13},"name":"data","qualname":"::ast::memory::Data::data","value":"std::vec::Vec<&'a [u8]>","parent":{"krate":0,"index":5364},"children":[],"decl_id":null,"docs":" Bytes for this `Data` segment, viewed as the concatenation of all the\n contained slices.\n","sig":null,"attributes":[{"value":"/ Bytes for this `Data` segment, viewed as the concatenation of all the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7762107,"byte_end":7762180,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ contained slices.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7762185,"byte_end":7762206,"line_start":89,"line_end":89,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5375},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7762469,"byte_end":7762476,"line_start":98,"line_end":98,"column_start":5,"column_end":12},"name":"Passive","qualname":"::ast::memory::DataKind::Passive","value":"DataKind::Passive","parent":{"krate":0,"index":5373},"children":[],"decl_id":null,"docs":" A passive data segment which isn't associated with a memory and is\n referenced from various instructions.\n","sig":null,"attributes":[{"value":"/ A passive data segment which isn't associated with a memory and is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7762348,"byte_end":7762418,"line_start":96,"line_end":96,"column_start":5,"column_end":75}},{"value":"/ referenced from various instructions.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7762423,"byte_end":7762464,"line_start":97,"line_end":97,"column_start":5,"column_end":46}}]},{"kind":"StructVariant","id":{"krate":0,"index":5377},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7762603,"byte_end":7762609,"line_start":102,"line_end":102,"column_start":5,"column_end":11},"name":"Active","qualname":"::ast::memory::DataKind::Active","value":"DataKind::Active { memory, offset }","parent":{"krate":0,"index":5373},"children":[],"decl_id":null,"docs":" An active data segment which is associated and loaded into a particular\n memory on module instantiation.\n","sig":null,"attributes":[{"value":"/ An active data segment which is associated and loaded into a particular","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7762483,"byte_end":7762558,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/ memory on module instantiation.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7762563,"byte_end":7762598,"line_start":101,"line_end":101,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":5373},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7762329,"byte_end":7762337,"line_start":95,"line_end":95,"column_start":10,"column_end":18},"name":"DataKind","qualname":"::ast::memory::DataKind","value":"pub enum DataKind<'a> {\n\n    /// A passive data segment which isn't associated with a memory and is\n    /// referenced from various instructions.\n    Passive,\n\n    /// An active data segment which is associated and loaded into a particular\n    /// memory on module instantiation.\n    Active {\n        /// The memory that this `Data` will be associated with.\n        memory: ast::Index,\n        /// Initial offset to load this data segment at\n        offset: ast::Expression,\n    },\n}","parent":null,"children":[{"krate":0,"index":5375},{"krate":0,"index":5377}],"decl_id":null,"docs":" Different kinds of data segments, either passive or active.\n","sig":null,"attributes":[{"value":"/ Different kinds of data segments, either passive or active.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7762239,"byte_end":7762302,"line_start":93,"line_end":93,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1450},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7764813,"byte_end":7764816,"line_start":11,"line_end":11,"column_start":12,"column_end":15},"name":"Wat","qualname":"::ast::module::Wat","value":"Wat { module }","parent":null,"children":[{"krate":0,"index":1452}],"decl_id":null,"docs":" A `*.wat` file parser, or a parser for one parenthesized module.","sig":null,"attributes":[{"value":"/ A `*.wat` file parser, or a parser for one parenthesized module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7764524,"byte_end":7764592,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7764593,"byte_end":7764596,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is the top-level type which you'll frequently parse when working with","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7764597,"byte_end":7764675,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ this crate. A `*.wat` file is either one `module` s-expression or a sequence","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7764676,"byte_end":7764756,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ of s-expressions that are module fields.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7764757,"byte_end":7764801,"line_start":10,"line_end":10,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":1452},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7764858,"byte_end":7764864,"line_start":13,"line_end":13,"column_start":9,"column_end":15},"name":"module","qualname":"::ast::module::Wat::module","value":"ast::module::Module<'a>","parent":{"krate":0,"index":1450},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7764827,"byte_end":7764849,"line_start":12,"line_end":12,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1457},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7765649,"byte_end":7765655,"line_start":39,"line_end":39,"column_start":12,"column_end":18},"name":"Module","qualname":"::ast::module::Module","value":"Module { span, id, name, kind }","parent":null,"children":[{"krate":0,"index":1459},{"krate":0,"index":1460},{"krate":0,"index":1461},{"krate":0,"index":1462}],"decl_id":null,"docs":" A parsed WebAssembly module.\n","sig":null,"attributes":[{"value":"/ A parsed WebAssembly module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7765605,"byte_end":7765637,"line_start":38,"line_end":38,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":1459},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7765710,"byte_end":7765714,"line_start":41,"line_end":41,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::module::Module::span","value":"ast::token::Span","parent":{"krate":0,"index":1457},"children":[],"decl_id":null,"docs":" Where this `module` was defined\n","sig":null,"attributes":[{"value":"/ Where this `module` was defined","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7765666,"byte_end":7765701,"line_start":40,"line_end":40,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1460},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7765790,"byte_end":7765792,"line_start":43,"line_end":43,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::module::Module::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":1457},"children":[],"decl_id":null,"docs":" An optional identifier this module is known by\n","sig":null,"attributes":[{"value":"/ An optional identifier this module is known by","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7765731,"byte_end":7765781,"line_start":42,"line_end":42,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1461},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7765878,"byte_end":7765882,"line_start":45,"line_end":45,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::module::Module::name","value":"std::option::Option<ast::token::NameAnnotation<'a>>","parent":{"krate":0,"index":1457},"children":[],"decl_id":null,"docs":" An optional `@name` annotation for this module\n","sig":null,"attributes":[{"value":"/ An optional `@name` annotation for this module","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7765819,"byte_end":7765869,"line_start":44,"line_end":44,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1462},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7765973,"byte_end":7765977,"line_start":47,"line_end":47,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::module::Module::kind","value":"ast::module::ModuleKind<'a>","parent":{"krate":0,"index":1457},"children":[],"decl_id":null,"docs":" What kind of module this was parsed as.\n","sig":null,"attributes":[{"value":"/ What kind of module this was parsed as.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7765921,"byte_end":7765964,"line_start":46,"line_end":46,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1465},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7766141,"byte_end":7766145,"line_start":53,"line_end":53,"column_start":5,"column_end":9},"name":"Text","qualname":"::ast::module::ModuleKind::Text","value":"ModuleKind::Text(Vec<ModuleField>)","parent":{"krate":0,"index":1463},"children":[],"decl_id":null,"docs":" A module defined in the textual s-expression format.\n","sig":null,"attributes":[{"value":"/ A module defined in the textual s-expression format.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7766080,"byte_end":7766136,"line_start":52,"line_end":52,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1468},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7766264,"byte_end":7766270,"line_start":56,"line_end":56,"column_start":5,"column_end":11},"name":"Binary","qualname":"::ast::module::ModuleKind::Binary","value":"ModuleKind::Binary(Vec<&'a [u8]>)","parent":{"krate":0,"index":1463},"children":[],"decl_id":null,"docs":" A module that had its raw binary bytes defined via the `binary`\n directive.\n","sig":null,"attributes":[{"value":"/ A module that had its raw binary bytes defined via the `binary`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7766173,"byte_end":7766240,"line_start":54,"line_end":54,"column_start":5,"column_end":72}},{"value":"/ directive.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7766245,"byte_end":7766259,"line_start":55,"line_end":55,"column_start":5,"column_end":19}}]},{"kind":"Enum","id":{"krate":0,"index":1463},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7766059,"byte_end":7766069,"line_start":51,"line_end":51,"column_start":10,"column_end":20},"name":"ModuleKind","qualname":"::ast::module::ModuleKind","value":"pub enum ModuleKind<'a> {\n\n    /// A module defined in the textual s-expression format.\n    Text(Vec<ModuleField>),\n\n    /// A module that had its raw binary bytes defined via the `binary`\n    /// directive.\n    Binary(Vec<&'a [u8]>),\n}","parent":null,"children":[{"krate":0,"index":1465},{"krate":0,"index":1468}],"decl_id":null,"docs":" The different kinds of ways to define a module.\n","sig":null,"attributes":[{"value":"/ The different kinds of ways to define a module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7765998,"byte_end":7766049,"line_start":50,"line_end":50,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1473},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7767563,"byte_end":7767570,"line_start":83,"line_end":83,"column_start":12,"column_end":19},"name":"resolve","qualname":"<Module>::resolve","value":"pub fn resolve(&mut Self) -> std::result::Result<Names, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Performs a name resolution pass on this [`Module`], resolving all\n symbolic names to indices.","sig":null,"attributes":[{"value":"/ Performs a name resolution pass on this [`Module`], resolving all","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7766316,"byte_end":7766385,"line_start":60,"line_end":60,"column_start":5,"column_end":74}},{"value":"/ symbolic names to indices.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7766390,"byte_end":7766420,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7766425,"byte_end":7766428,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ The WAT format contains a number of shorthands to make it easier to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7766433,"byte_end":7766504,"line_start":63,"line_end":63,"column_start":5,"column_end":76}},{"value":"/ write, such as inline exports, inline imports, inline type definitions,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7766509,"byte_end":7766584,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ etc. Additionally it allows using symbolic names such as `$foo` instead","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7766589,"byte_end":7766664,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of using indices. This module will postprocess an AST to remove all of","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7766669,"byte_end":7766743,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ this syntactic sugar, preparing the AST for binary emission.  This is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7766748,"byte_end":7766821,"line_start":67,"line_end":67,"column_start":5,"column_end":78}},{"value":"/ where expansion and name resolution happens.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7766826,"byte_end":7766874,"line_start":68,"line_end":68,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7766879,"byte_end":7766882,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This function will mutate the AST of this [`Module`] and replace all","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7766887,"byte_end":7766959,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ [`super::Index`] arguments with `Index::Num`. This will also expand inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7766964,"byte_end":7767042,"line_start":71,"line_end":71,"column_start":5,"column_end":83}},{"value":"/ exports/imports listed on fields and handle various other shorthands of","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7767047,"byte_end":7767122,"line_start":72,"line_end":72,"column_start":5,"column_end":80}},{"value":"/ the text format.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7767127,"byte_end":7767147,"line_start":73,"line_end":73,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7767152,"byte_end":7767155,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ If successful the AST was modified to be ready for binary encoding. A","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7767160,"byte_end":7767233,"line_start":75,"line_end":75,"column_start":5,"column_end":78}},{"value":"/ [`Names`] structure is also returned so if you'd like to do your own","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7767238,"byte_end":7767310,"line_start":76,"line_end":76,"column_start":5,"column_end":77}},{"value":"/ name lookups on the result you can do so as well.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7767315,"byte_end":7767368,"line_start":77,"line_end":77,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7767373,"byte_end":7767376,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7767381,"byte_end":7767393,"line_start":79,"line_end":79,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7767398,"byte_end":7767401,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ If an error happens during resolution, such a name resolution error or","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7767406,"byte_end":7767480,"line_start":81,"line_end":81,"column_start":5,"column_end":79}},{"value":"/ items are found in the wrong order, then an error is returned.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7767485,"byte_end":7767551,"line_start":82,"line_end":82,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1474},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7768751,"byte_end":7768757,"line_start":111,"line_end":111,"column_start":12,"column_end":18},"name":"encode","qualname":"<Module>::encode","value":"pub fn encode(&mut Self) -> std::result::Result<Vec<u8>, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Encodes this [`Module`] to its binary form.","sig":null,"attributes":[{"value":"/ Encodes this [`Module`] to its binary form.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7767681,"byte_end":7767728,"line_start":87,"line_end":87,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7767733,"byte_end":7767736,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This function will take the textual representation in [`Module`] and","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7767741,"byte_end":7767813,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ perform all steps necessary to convert it to a binary WebAssembly","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7767818,"byte_end":7767887,"line_start":90,"line_end":90,"column_start":5,"column_end":74}},{"value":"/ module, suitable for writing to a `*.wasm` file. This function may","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7767892,"byte_end":7767962,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ internally modify the [`Module`], for example:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7767967,"byte_end":7768017,"line_start":92,"line_end":92,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7768022,"byte_end":7768025,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ * Name resolution is performed to ensure that `Index::Id` isn't present","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7768030,"byte_end":7768105,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/   anywhere in the AST.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7768110,"byte_end":7768136,"line_start":95,"line_end":95,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7768141,"byte_end":7768144,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ * Inline shorthands such as imports/exports/types are all expanded to be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7768149,"byte_end":7768225,"line_start":97,"line_end":97,"column_start":5,"column_end":81}},{"value":"/   dedicated fields of the module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7768230,"byte_end":7768267,"line_start":98,"line_end":98,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7768272,"byte_end":7768275,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ * Module fields may be shuffled around to preserve index ordering from","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7768280,"byte_end":7768354,"line_start":100,"line_end":100,"column_start":5,"column_end":79}},{"value":"/   expansions.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7768359,"byte_end":7768376,"line_start":101,"line_end":101,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7768381,"byte_end":7768384,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ After all of this expansion has happened the module will be converted to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7768389,"byte_end":7768465,"line_start":103,"line_end":103,"column_start":5,"column_end":81}},{"value":"/ its binary form and returned as a `Vec<u8>`. This is then suitable to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7768470,"byte_end":7768543,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/ hand off to other wasm runtimes and such.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7768548,"byte_end":7768593,"line_start":105,"line_end":105,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7768598,"byte_end":7768601,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7768606,"byte_end":7768618,"line_start":107,"line_end":107,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7768623,"byte_end":7768626,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ This function can return an error for name resolution errors and other","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7768631,"byte_end":7768705,"line_start":109,"line_end":109,"column_start":5,"column_end":79}},{"value":"/ expansion-related errors.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7768710,"byte_end":7768739,"line_start":110,"line_end":110,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5385},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7770215,"byte_end":7770219,"line_start":162,"line_end":162,"column_start":5,"column_end":9},"name":"Type","qualname":"::ast::module::ModuleField::Type","value":"ModuleField::Type(ast::Type)","parent":{"krate":0,"index":5383},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5388},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7770240,"byte_end":7770246,"line_start":163,"line_end":163,"column_start":5,"column_end":11},"name":"Import","qualname":"::ast::module::ModuleField::Import","value":"ModuleField::Import(ast::Import)","parent":{"krate":0,"index":5383},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5391},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7770269,"byte_end":7770273,"line_start":164,"line_end":164,"column_start":5,"column_end":9},"name":"Func","qualname":"::ast::module::ModuleField::Func","value":"ModuleField::Func(ast::Func)","parent":{"krate":0,"index":5383},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5394},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7770294,"byte_end":7770299,"line_start":165,"line_end":165,"column_start":5,"column_end":10},"name":"Table","qualname":"::ast::module::ModuleField::Table","value":"ModuleField::Table(ast::Table)","parent":{"krate":0,"index":5383},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5397},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7770321,"byte_end":7770327,"line_start":166,"line_end":166,"column_start":5,"column_end":11},"name":"Memory","qualname":"::ast::module::ModuleField::Memory","value":"ModuleField::Memory(ast::Memory)","parent":{"krate":0,"index":5383},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5400},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7770350,"byte_end":7770356,"line_start":167,"line_end":167,"column_start":5,"column_end":11},"name":"Global","qualname":"::ast::module::ModuleField::Global","value":"ModuleField::Global(ast::Global)","parent":{"krate":0,"index":5383},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5403},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7770379,"byte_end":7770385,"line_start":168,"line_end":168,"column_start":5,"column_end":11},"name":"Export","qualname":"::ast::module::ModuleField::Export","value":"ModuleField::Export(ast::Export)","parent":{"krate":0,"index":5383},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5406},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7770408,"byte_end":7770417,"line_start":169,"line_end":169,"column_start":5,"column_end":14},"name":"ExportAll","qualname":"::ast::module::ModuleField::ExportAll","value":"ModuleField::ExportAll(ast::Span, ast::Id)","parent":{"krate":0,"index":5383},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5410},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7770447,"byte_end":7770452,"line_start":170,"line_end":170,"column_start":5,"column_end":10},"name":"Start","qualname":"::ast::module::ModuleField::Start","value":"ModuleField::Start(ast::Index)","parent":{"krate":0,"index":5383},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5413},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7770474,"byte_end":7770478,"line_start":171,"line_end":171,"column_start":5,"column_end":9},"name":"Elem","qualname":"::ast::module::ModuleField::Elem","value":"ModuleField::Elem(ast::Elem)","parent":{"krate":0,"index":5383},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5416},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7770499,"byte_end":7770503,"line_start":172,"line_end":172,"column_start":5,"column_end":9},"name":"Data","qualname":"::ast::module::ModuleField::Data","value":"ModuleField::Data(ast::Data)","parent":{"krate":0,"index":5383},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5419},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7770524,"byte_end":7770529,"line_start":173,"line_end":173,"column_start":5,"column_end":10},"name":"Event","qualname":"::ast::module::ModuleField::Event","value":"ModuleField::Event(ast::Event)","parent":{"krate":0,"index":5383},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5422},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7770551,"byte_end":7770557,"line_start":174,"line_end":174,"column_start":5,"column_end":11},"name":"Custom","qualname":"::ast::module::ModuleField::Custom","value":"ModuleField::Custom(ast::Custom)","parent":{"krate":0,"index":5383},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5425},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7770580,"byte_end":7770588,"line_start":175,"line_end":175,"column_start":5,"column_end":13},"name":"Instance","qualname":"::ast::module::ModuleField::Instance","value":"ModuleField::Instance(ast::Instance)","parent":{"krate":0,"index":5383},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5428},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7770613,"byte_end":7770625,"line_start":176,"line_end":176,"column_start":5,"column_end":17},"name":"NestedModule","qualname":"::ast::module::ModuleField::NestedModule","value":"ModuleField::NestedModule(ast::NestedModule)","parent":{"krate":0,"index":5383},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5431},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7770654,"byte_end":7770659,"line_start":177,"line_end":177,"column_start":5,"column_end":10},"name":"Alias","qualname":"::ast::module::ModuleField::Alias","value":"ModuleField::Alias(ast::Alias)","parent":{"krate":0,"index":5383},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5383},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7770193,"byte_end":7770204,"line_start":161,"line_end":161,"column_start":10,"column_end":21},"name":"ModuleField","qualname":"::ast::module::ModuleField","value":"pub enum ModuleField<'a> {\n    Type(ast::Type),\n    Import(ast::Import),\n    Func(ast::Func),\n    Table(ast::Table),\n    Memory(ast::Memory),\n    Global(ast::Global),\n    Export(ast::Export),\n    ExportAll(ast::Span, ast::Id),\n    Start(ast::Index),\n    Elem(ast::Elem),\n    Data(ast::Data),\n    Event(ast::Event),\n    Custom(ast::Custom),\n    Instance(ast::Instance),\n    NestedModule(ast::NestedModule),\n    Alias(ast::Alias),\n}","parent":null,"children":[{"krate":0,"index":5385},{"krate":0,"index":5388},{"krate":0,"index":5391},{"krate":0,"index":5394},{"krate":0,"index":5397},{"krate":0,"index":5400},{"krate":0,"index":5403},{"krate":0,"index":5406},{"krate":0,"index":5410},{"krate":0,"index":5413},{"krate":0,"index":5416},{"krate":0,"index":5419},{"krate":0,"index":5422},{"krate":0,"index":5425},{"krate":0,"index":5428},{"krate":0,"index":5431}],"decl_id":null,"docs":" A listing of all possible fields that can make up a WebAssembly module.\n","sig":null,"attributes":[{"value":"/ A listing of all possible fields that can make up a WebAssembly module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7770068,"byte_end":7770143,"line_start":158,"line_end":158,"column_start":1,"column_end":76}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7770144,"byte_end":7770166,"line_start":159,"line_end":159,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5437},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/nested_module.rs","byte_start":7773207,"byte_end":7773219,"line_start":6,"line_end":6,"column_start":12,"column_end":24},"name":"NestedModule","qualname":"::ast::nested_module::NestedModule","value":"NestedModule { span, id, name, exports, kind }","parent":null,"children":[{"krate":0,"index":5439},{"krate":0,"index":5440},{"krate":0,"index":5441},{"krate":0,"index":5442},{"krate":0,"index":5443}],"decl_id":null,"docs":" A nested WebAssembly nested module to be created as part of a module.\n","sig":null,"attributes":[{"value":"/ A nested WebAssembly nested module to be created as part of a module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/nested_module.rs","byte_start":7773105,"byte_end":7773178,"line_start":4,"line_end":4,"column_start":1,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":5439},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/nested_module.rs","byte_start":7773282,"byte_end":7773286,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::nested_module::NestedModule::span","value":"ast::token::Span","parent":{"krate":0,"index":5437},"children":[],"decl_id":null,"docs":" Where this `nested module` was defined.\n","sig":null,"attributes":[{"value":"/ Where this `nested module` was defined.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/nested_module.rs","byte_start":7773230,"byte_end":7773273,"line_start":7,"line_end":7,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":5440},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/nested_module.rs","byte_start":7773412,"byte_end":7773414,"line_start":11,"line_end":11,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::nested_module::NestedModule::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":5437},"children":[],"decl_id":null,"docs":" An identifier that this nested module is resolved with (optionally) for name\n resolution.\n","sig":null,"attributes":[{"value":"/ An identifier that this nested module is resolved with (optionally) for name","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/nested_module.rs","byte_start":7773303,"byte_end":7773383,"line_start":9,"line_end":9,"column_start":5,"column_end":85}},{"value":"/ resolution.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/nested_module.rs","byte_start":7773388,"byte_end":7773403,"line_start":10,"line_end":10,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":5441},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/nested_module.rs","byte_start":7773523,"byte_end":7773527,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::nested_module::NestedModule::name","value":"std::option::Option<ast::token::NameAnnotation<'a>>","parent":{"krate":0,"index":5437},"children":[],"decl_id":null,"docs":" An optional name for this module stored in the custom `name` section.\n","sig":null,"attributes":[{"value":"/ An optional name for this module stored in the custom `name` section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/nested_module.rs","byte_start":7773441,"byte_end":7773514,"line_start":12,"line_end":12,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":5442},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/nested_module.rs","byte_start":7773687,"byte_end":7773694,"line_start":16,"line_end":16,"column_start":9,"column_end":16},"name":"exports","qualname":"::ast::nested_module::NestedModule::exports","value":"ast::export::InlineExport<'a>","parent":{"krate":0,"index":5437},"children":[],"decl_id":null,"docs":" If present, inline export annotations which indicate names this\n definition should be exported under.\n","sig":null,"attributes":[{"value":"/ If present, inline export annotations which indicate names this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/nested_module.rs","byte_start":7773566,"byte_end":7773633,"line_start":14,"line_end":14,"column_start":5,"column_end":72}},{"value":"/ definition should be exported under.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/nested_module.rs","byte_start":7773638,"byte_end":7773678,"line_start":15,"line_end":15,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":5443},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/nested_module.rs","byte_start":7773812,"byte_end":7773816,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::nested_module::NestedModule::kind","value":"ast::nested_module::NestedModuleKind<'a>","parent":{"krate":0,"index":5437},"children":[],"decl_id":null,"docs":" What kind of nested module this is, be it an inline-defined or imported one.\n","sig":null,"attributes":[{"value":"/ What kind of nested module this is, be it an inline-defined or imported one.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/nested_module.rs","byte_start":7773723,"byte_end":7773803,"line_start":17,"line_end":17,"column_start":5,"column_end":85}}]},{"kind":"StructVariant","id":{"krate":0,"index":5449},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/nested_module.rs","byte_start":7774034,"byte_end":7774040,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Import","qualname":"::ast::nested_module::NestedModuleKind::Import","value":"NestedModuleKind::Import { import, ty }","parent":{"krate":0,"index":5447},"children":[],"decl_id":null,"docs":" An nested module which is actually defined as an import, such as:\n","sig":null,"attributes":[{"value":"/ An nested module which is actually defined as an import, such as:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/nested_module.rs","byte_start":7773960,"byte_end":7774029,"line_start":24,"line_end":24,"column_start":5,"column_end":74}}]},{"kind":"StructVariant","id":{"krate":0,"index":5452},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/nested_module.rs","byte_start":7774317,"byte_end":7774323,"line_start":33,"line_end":33,"column_start":5,"column_end":11},"name":"Inline","qualname":"::ast::nested_module::NestedModuleKind::Inline","value":"NestedModuleKind::Inline { ty, fields }","parent":{"krate":0,"index":5447},"children":[],"decl_id":null,"docs":" Nested modules whose instantiation is defined inline.\n","sig":null,"attributes":[{"value":"/ Nested modules whose instantiation is defined inline.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/nested_module.rs","byte_start":7774255,"byte_end":7774312,"line_start":32,"line_end":32,"column_start":5,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":5447},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/nested_module.rs","byte_start":7773933,"byte_end":7773949,"line_start":23,"line_end":23,"column_start":10,"column_end":26},"name":"NestedModuleKind","qualname":"::ast::nested_module::NestedModuleKind","value":"pub enum NestedModuleKind<'a> {\n\n    /// An nested module which is actually defined as an import, such as:\n    Import {\n        /// Where this nested module is imported from\n        import: ast::InlineImport,\n        /// The type that this nested module will have.\n        ty: ast::TypeUse,\n    },\n\n    /// Nested modules whose instantiation is defined inline.\n    Inline {\n        /// Optional type reference\n        ty: Option<ast::Index>,\n        /// Fields in the nested module.\n        fields: Vec<ast::ModuleField>,\n    },\n}","parent":null,"children":[{"krate":0,"index":5449},{"krate":0,"index":5452}],"decl_id":null,"docs":" Possible ways to define a nested module in the text format.\n","sig":null,"attributes":[{"value":"/ Possible ways to define a nested module in the text format.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/nested_module.rs","byte_start":7773843,"byte_end":7773906,"line_start":21,"line_end":21,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":5458},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7776783,"byte_end":7776788,"line_start":6,"line_end":6,"column_start":12,"column_end":17},"name":"Table","qualname":"::ast::table::Table","value":"Table { span, id, exports, kind }","parent":null,"children":[{"krate":0,"index":5460},{"krate":0,"index":5461},{"krate":0,"index":5462},{"krate":0,"index":5463}],"decl_id":null,"docs":" A WebAssembly `table` directive in a module.\n","sig":null,"attributes":[{"value":"/ A WebAssembly `table` directive in a module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7776706,"byte_end":7776754,"line_start":4,"line_end":4,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":5460},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7776841,"byte_end":7776845,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::table::Table::span","value":"ast::token::Span","parent":{"krate":0,"index":5458},"children":[],"decl_id":null,"docs":" Where this table was defined.\n","sig":null,"attributes":[{"value":"/ Where this table was defined.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7776799,"byte_end":7776832,"line_start":7,"line_end":7,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":5461},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7776918,"byte_end":7776920,"line_start":10,"line_end":10,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::table::Table::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":5458},"children":[],"decl_id":null,"docs":" An optional name to refer to this table by.\n","sig":null,"attributes":[{"value":"/ An optional name to refer to this table by.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7776862,"byte_end":7776909,"line_start":9,"line_end":9,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":5462},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7777068,"byte_end":7777075,"line_start":13,"line_end":13,"column_start":9,"column_end":16},"name":"exports","qualname":"::ast::table::Table::exports","value":"ast::export::InlineExport<'a>","parent":{"krate":0,"index":5458},"children":[],"decl_id":null,"docs":" If present, inline export annotations which indicate names this\n definition should be exported under.\n","sig":null,"attributes":[{"value":"/ If present, inline export annotations which indicate names this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7776947,"byte_end":7777014,"line_start":11,"line_end":11,"column_start":5,"column_end":72}},{"value":"/ definition should be exported under.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7777019,"byte_end":7777059,"line_start":12,"line_end":12,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":5463},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7777167,"byte_end":7777171,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::table::Table::kind","value":"ast::table::TableKind<'a>","parent":{"krate":0,"index":5458},"children":[],"decl_id":null,"docs":" How this table is textually defined in the module.\n","sig":null,"attributes":[{"value":"/ How this table is textually defined in the module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7777104,"byte_end":7777158,"line_start":14,"line_end":14,"column_start":5,"column_end":59}}]},{"kind":"StructVariant","id":{"krate":0,"index":5469},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7777373,"byte_end":7777379,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"Import","qualname":"::ast::table::TableKind::Import","value":"TableKind::Import { import, ty }","parent":{"krate":0,"index":5467},"children":[],"decl_id":null,"docs":" This table is actually an inlined import definition.\n","sig":null,"attributes":[{"value":"/ This table is actually an inlined import definition.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7777285,"byte_end":7777341,"line_start":21,"line_end":21,"column_start":5,"column_end":61}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7777346,"byte_end":7777368,"line_start":22,"line_end":22,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5472},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7777543,"byte_end":7777549,"line_start":29,"line_end":29,"column_start":5,"column_end":11},"name":"Normal","qualname":"::ast::table::TableKind::Normal","value":"TableKind::Normal(ast::TableType)","parent":{"krate":0,"index":5467},"children":[],"decl_id":null,"docs":" A typical memory definition which simply says the limits of the table\n","sig":null,"attributes":[{"value":"/ A typical memory definition which simply says the limits of the table","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7777465,"byte_end":7777538,"line_start":28,"line_end":28,"column_start":5,"column_end":78}}]},{"kind":"StructVariant","id":{"krate":0,"index":5475},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7777652,"byte_end":7777658,"line_start":32,"line_end":32,"column_start":5,"column_end":11},"name":"Inline","qualname":"::ast::table::TableKind::Inline","value":"TableKind::Inline { elem, payload }","parent":{"krate":0,"index":5467},"children":[],"decl_id":null,"docs":" The elem segments of this table, starting from 0, explicitly listed\n","sig":null,"attributes":[{"value":"/ The elem segments of this table, starting from 0, explicitly listed","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7777576,"byte_end":7777647,"line_start":31,"line_end":31,"column_start":5,"column_end":76}}]},{"kind":"Enum","id":{"krate":0,"index":5467},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7777265,"byte_end":7777274,"line_start":20,"line_end":20,"column_start":10,"column_end":19},"name":"TableKind","qualname":"::ast::table::TableKind","value":"pub enum TableKind<'a> {\n\n    /// This table is actually an inlined import definition.\n    #[allow(missing_docs)]\n    Import {\n        import: ast::InlineImport,\n        ty: ast::TableType,\n    },\n\n    /// A typical memory definition which simply says the limits of the table\n    Normal(ast::TableType),\n\n    /// The elem segments of this table, starting from 0, explicitly listed\n    Inline {\n        /// The element type of this table.\n        elem: ast::RefType,\n        /// The element table entries to have, and the length of this list is\n        /// the limits of the table as well.\n        payload: ElemPayload,\n    },\n}","parent":null,"children":[{"krate":0,"index":5469},{"krate":0,"index":5472},{"krate":0,"index":5475}],"decl_id":null,"docs":" Different ways to textually define a table.\n","sig":null,"attributes":[{"value":"/ Different ways to textually define a table.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7777191,"byte_end":7777238,"line_start":18,"line_end":18,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":5481},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7779280,"byte_end":7779284,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"Elem","qualname":"::ast::table::Elem","value":"Elem { span, id, kind, payload }","parent":null,"children":[{"krate":0,"index":5483},{"krate":0,"index":5484},{"krate":0,"index":5485},{"krate":0,"index":5486}],"decl_id":null,"docs":" An `elem` segment in a WebAssembly module.\n","sig":null,"attributes":[{"value":"/ An `elem` segment in a WebAssembly module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7779205,"byte_end":7779251,"line_start":84,"line_end":84,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":5483},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7779338,"byte_end":7779342,"line_start":88,"line_end":88,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::table::Elem::span","value":"ast::token::Span","parent":{"krate":0,"index":5481},"children":[],"decl_id":null,"docs":" Where this `elem` was defined.\n","sig":null,"attributes":[{"value":"/ Where this `elem` was defined.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7779295,"byte_end":7779329,"line_start":87,"line_end":87,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":5484},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7779423,"byte_end":7779425,"line_start":90,"line_end":90,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::table::Elem::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":5481},"children":[],"decl_id":null,"docs":" An optional name by which to refer to this segment.\n","sig":null,"attributes":[{"value":"/ An optional name by which to refer to this segment.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7779359,"byte_end":7779414,"line_start":89,"line_end":89,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":5485},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7779512,"byte_end":7779516,"line_start":92,"line_end":92,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::table::Elem::kind","value":"ast::table::ElemKind<'a>","parent":{"krate":0,"index":5481},"children":[],"decl_id":null,"docs":" The way this segment was defined in the module.\n","sig":null,"attributes":[{"value":"/ The way this segment was defined in the module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7779452,"byte_end":7779503,"line_start":91,"line_end":91,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":5486},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7779616,"byte_end":7779623,"line_start":94,"line_end":94,"column_start":9,"column_end":16},"name":"payload","qualname":"::ast::table::Elem::payload","value":"ast::table::ElemPayload<'a>","parent":{"krate":0,"index":5481},"children":[],"decl_id":null,"docs":" The payload of this element segment, typically a list of functions.\n","sig":null,"attributes":[{"value":"/ The payload of this element segment, typically a list of functions.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7779536,"byte_end":7779607,"line_start":93,"line_end":93,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5492},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7779874,"byte_end":7779881,"line_start":102,"line_end":102,"column_start":5,"column_end":12},"name":"Passive","qualname":"::ast::table::ElemKind::Passive","value":"ElemKind::Passive","parent":{"krate":0,"index":5490},"children":[],"decl_id":null,"docs":" A passive segment that isn't associated with a table and can be used in\n various bulk-memory instructions.\n","sig":null,"attributes":[{"value":"/ A passive segment that isn't associated with a table and can be used in","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7779752,"byte_end":7779827,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/ various bulk-memory instructions.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7779832,"byte_end":7779869,"line_start":101,"line_end":101,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5494},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7779983,"byte_end":7779991,"line_start":106,"line_end":106,"column_start":5,"column_end":13},"name":"Declared","qualname":"::ast::table::ElemKind::Declared","value":"ElemKind::Declared","parent":{"krate":0,"index":5490},"children":[],"decl_id":null,"docs":" A declared element segment that is purely used to declare function\n references.\n","sig":null,"attributes":[{"value":"/ A declared element segment that is purely used to declare function","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7779888,"byte_end":7779958,"line_start":104,"line_end":104,"column_start":5,"column_end":75}},{"value":"/ references.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7779963,"byte_end":7779978,"line_start":105,"line_end":105,"column_start":5,"column_end":20}}]},{"kind":"StructVariant","id":{"krate":0,"index":5496},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7780049,"byte_end":7780055,"line_start":109,"line_end":109,"column_start":5,"column_end":11},"name":"Active","qualname":"::ast::table::ElemKind::Active","value":"ElemKind::Active { table, offset }","parent":{"krate":0,"index":5490},"children":[],"decl_id":null,"docs":" An active segment associated with a table.\n","sig":null,"attributes":[{"value":"/ An active segment associated with a table.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7779998,"byte_end":7780044,"line_start":108,"line_end":108,"column_start":5,"column_end":51}}]},{"kind":"Enum","id":{"krate":0,"index":5490},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7779733,"byte_end":7779741,"line_start":99,"line_end":99,"column_start":10,"column_end":18},"name":"ElemKind","qualname":"::ast::table::ElemKind","value":"pub enum ElemKind<'a> {\n\n    /// A passive segment that isn't associated with a table and can be used in\n    /// various bulk-memory instructions.\n    Passive,\n\n    /// A declared element segment that is purely used to declare function\n    /// references.\n    Declared,\n\n    /// An active segment associated with a table.\n    Active {\n        /// The table this `elem` is initializing.\n        table: ast::Index,\n        /// The offset within `table` that we'll initialize at.\n        offset: ast::Expression,\n    },\n}","parent":null,"children":[{"krate":0,"index":5492},{"krate":0,"index":5494},{"krate":0,"index":5496}],"decl_id":null,"docs":" Different ways to define an element segment in an mdoule.\n","sig":null,"attributes":[{"value":"/ Different ways to define an element segment in an mdoule.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7779645,"byte_end":7779706,"line_start":97,"line_end":97,"column_start":1,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5504},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7780447,"byte_end":7780454,"line_start":121,"line_end":121,"column_start":5,"column_end":12},"name":"Indices","qualname":"::ast::table::ElemPayload::Indices","value":"ElemPayload::Indices(Vec<ast::Index>)","parent":{"krate":0,"index":5502},"children":[],"decl_id":null,"docs":" This element segment has a contiguous list of function indices\n","sig":null,"attributes":[{"value":"/ This element segment has a contiguous list of function indices","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7780376,"byte_end":7780442,"line_start":120,"line_end":120,"column_start":5,"column_end":71}}]},{"kind":"StructVariant","id":{"krate":0,"index":5507},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7780620,"byte_end":7780625,"line_start":125,"line_end":125,"column_start":5,"column_end":10},"name":"Exprs","qualname":"::ast::table::ElemPayload::Exprs","value":"ElemPayload::Exprs { ty, exprs }","parent":{"krate":0,"index":5502},"children":[],"decl_id":null,"docs":" This element segment has a list of optional function indices,\n represented as expressions using `ref.func` and `ref.null`.\n","sig":null,"attributes":[{"value":"/ This element segment has a list of optional function indices,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7780482,"byte_end":7780547,"line_start":123,"line_end":123,"column_start":5,"column_end":70}},{"value":"/ represented as expressions using `ref.func` and `ref.null`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7780552,"byte_end":7780615,"line_start":124,"line_end":124,"column_start":5,"column_end":68}}]},{"kind":"Enum","id":{"krate":0,"index":5502},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7780354,"byte_end":7780365,"line_start":119,"line_end":119,"column_start":10,"column_end":21},"name":"ElemPayload","qualname":"::ast::table::ElemPayload","value":"pub enum ElemPayload<'a> {\n\n    /// This element segment has a contiguous list of function indices\n    Indices(Vec<ast::Index>),\n\n    /// This element segment has a list of optional function indices,\n    /// represented as expressions using `ref.func` and `ref.null`.\n    Exprs {\n        /// The desired type of each expression below.\n        ty: ast::RefType,\n        /// The expressions, currently optional function indices, in this\n        /// segment.\n        exprs: Vec<Option<ast::Index>>,\n    },\n}","parent":null,"children":[{"krate":0,"index":5504},{"krate":0,"index":5507}],"decl_id":null,"docs":" Different ways to define the element segment payload in a module.\n","sig":null,"attributes":[{"value":"/ Different ways to define the element segment payload in a module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7780251,"byte_end":7780320,"line_start":117,"line_end":117,"column_start":1,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5518},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7784313,"byte_end":7784316,"line_start":8,"line_end":8,"column_start":5,"column_end":8},"name":"I32","qualname":"::ast::types::ValType::I32","value":"ValType::I32","parent":{"krate":0,"index":5516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5520},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7784322,"byte_end":7784325,"line_start":9,"line_end":9,"column_start":5,"column_end":8},"name":"I64","qualname":"::ast::types::ValType::I64","value":"ValType::I64","parent":{"krate":0,"index":5516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5522},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7784331,"byte_end":7784334,"line_start":10,"line_end":10,"column_start":5,"column_end":8},"name":"F32","qualname":"::ast::types::ValType::F32","value":"ValType::F32","parent":{"krate":0,"index":5516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5524},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7784340,"byte_end":7784343,"line_start":11,"line_end":11,"column_start":5,"column_end":8},"name":"F64","qualname":"::ast::types::ValType::F64","value":"ValType::F64","parent":{"krate":0,"index":5516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5526},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7784349,"byte_end":7784353,"line_start":12,"line_end":12,"column_start":5,"column_end":9},"name":"V128","qualname":"::ast::types::ValType::V128","value":"ValType::V128","parent":{"krate":0,"index":5516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5528},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7784359,"byte_end":7784361,"line_start":13,"line_end":13,"column_start":5,"column_end":7},"name":"I8","qualname":"::ast::types::ValType::I8","value":"ValType::I8","parent":{"krate":0,"index":5516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5530},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7784367,"byte_end":7784370,"line_start":14,"line_end":14,"column_start":5,"column_end":8},"name":"I16","qualname":"::ast::types::ValType::I16","value":"ValType::I16","parent":{"krate":0,"index":5516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5532},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7784376,"byte_end":7784379,"line_start":15,"line_end":15,"column_start":5,"column_end":8},"name":"Ref","qualname":"::ast::types::ValType::Ref","value":"ValType::Ref(RefType)","parent":{"krate":0,"index":5516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5535},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7784398,"byte_end":7784401,"line_start":16,"line_end":16,"column_start":5,"column_end":8},"name":"Rtt","qualname":"::ast::types::ValType::Rtt","value":"ValType::Rtt(ast::Index)","parent":{"krate":0,"index":5516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5516},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7784295,"byte_end":7784302,"line_start":7,"line_end":7,"column_start":10,"column_end":17},"name":"ValType","qualname":"::ast::types::ValType","value":"pub enum ValType<'a> {\n    I32,\n    I64,\n    F32,\n    F64,\n    V128,\n    I8,\n    I16,\n    Ref(RefType),\n    Rtt(ast::Index),\n}","parent":null,"children":[{"krate":0,"index":5518},{"krate":0,"index":5520},{"krate":0,"index":5522},{"krate":0,"index":5524},{"krate":0,"index":5526},{"krate":0,"index":5528},{"krate":0,"index":5530},{"krate":0,"index":5532},{"krate":0,"index":5535}],"decl_id":null,"docs":" The value types for a wasm module.\n","sig":null,"attributes":[{"value":"/ The value types for a wasm module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7784173,"byte_end":7784211,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7784212,"byte_end":7784234,"line_start":5,"line_end":5,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5563},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7786043,"byte_end":7786047,"line_start":67,"line_end":67,"column_start":5,"column_end":9},"name":"Func","qualname":"::ast::types::HeapType::Func","value":"HeapType::Func","parent":{"krate":0,"index":5561},"children":[],"decl_id":null,"docs":" An untyped function reference: funcref. This is part of the reference\n types proposal.\n","sig":null,"attributes":[{"value":"/ An untyped function reference: funcref. This is part of the reference","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7785941,"byte_end":7786014,"line_start":65,"line_end":65,"column_start":5,"column_end":78}},{"value":"/ types proposal.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7786019,"byte_end":7786038,"line_start":66,"line_end":66,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5565},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7786257,"byte_end":7786263,"line_start":71,"line_end":71,"column_start":5,"column_end":11},"name":"Extern","qualname":"::ast::types::HeapType::Extern","value":"HeapType::Extern","parent":{"krate":0,"index":5561},"children":[],"decl_id":null,"docs":" A reference to any host value: externref. This was originally known as\n anyref when it was the supertype of all reference value types. This is\n part of the reference types proposal.\n","sig":null,"attributes":[{"value":"/ A reference to any host value: externref. This was originally known as","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7786053,"byte_end":7786127,"line_start":68,"line_end":68,"column_start":5,"column_end":79}},{"value":"/ anyref when it was the supertype of all reference value types. This is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7786132,"byte_end":7786206,"line_start":69,"line_end":69,"column_start":5,"column_end":79}},{"value":"/ part of the reference types proposal.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7786211,"byte_end":7786252,"line_start":70,"line_end":70,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5567},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7786371,"byte_end":7786374,"line_start":74,"line_end":74,"column_start":5,"column_end":8},"name":"Exn","qualname":"::ast::types::HeapType::Exn","value":"HeapType::Exn","parent":{"krate":0,"index":5561},"children":[],"decl_id":null,"docs":" A reference to an exception: exnref. This is part of the exception\n handling proposal.\n","sig":null,"attributes":[{"value":"/ A reference to an exception: exnref. This is part of the exception","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7786269,"byte_end":7786339,"line_start":72,"line_end":72,"column_start":5,"column_end":75}},{"value":"/ handling proposal.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7786344,"byte_end":7786366,"line_start":73,"line_end":73,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5569},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7786491,"byte_end":7786493,"line_start":77,"line_end":77,"column_start":5,"column_end":7},"name":"Eq","qualname":"::ast::types::HeapType::Eq","value":"HeapType::Eq","parent":{"krate":0,"index":5561},"children":[],"decl_id":null,"docs":" A reference that has an identity that can be compared: eqref. This is\n part of the GC proposal.\n","sig":null,"attributes":[{"value":"/ A reference that has an identity that can be compared: eqref. This is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7786380,"byte_end":7786453,"line_start":75,"line_end":75,"column_start":5,"column_end":78}},{"value":"/ part of the GC proposal.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7786458,"byte_end":7786486,"line_start":76,"line_end":76,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5571},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7786654,"byte_end":7786657,"line_start":80,"line_end":80,"column_start":5,"column_end":8},"name":"I31","qualname":"::ast::types::HeapType::I31","value":"HeapType::I31","parent":{"krate":0,"index":5561},"children":[],"decl_id":null,"docs":" An unboxed 31-bit integer: i31ref. This may be going away if there is no common\n supertype of all reference types. Part of the GC proposal.\n","sig":null,"attributes":[{"value":"/ An unboxed 31-bit integer: i31ref. This may be going away if there is no common","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7786499,"byte_end":7786582,"line_start":78,"line_end":78,"column_start":5,"column_end":88}},{"value":"/ supertype of all reference types. Part of the GC proposal.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7786587,"byte_end":7786649,"line_start":79,"line_end":79,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5573},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7786764,"byte_end":7786769,"line_start":83,"line_end":83,"column_start":5,"column_end":10},"name":"Index","qualname":"::ast::types::HeapType::Index","value":"HeapType::Index(ast::Index)","parent":{"krate":0,"index":5561},"children":[],"decl_id":null,"docs":" A reference to a function, struct, or array: ref T. This is part of the\n GC proposal.\n","sig":null,"attributes":[{"value":"/ A reference to a function, struct, or array: ref T. This is part of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7786663,"byte_end":7786738,"line_start":81,"line_end":81,"column_start":5,"column_end":80}},{"value":"/ GC proposal.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7786743,"byte_end":7786759,"line_start":82,"line_end":82,"column_start":5,"column_end":21}}]},{"kind":"Enum","id":{"krate":0,"index":5561},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7785922,"byte_end":7785930,"line_start":64,"line_end":64,"column_start":10,"column_end":18},"name":"HeapType","qualname":"::ast::types::HeapType","value":"pub enum HeapType<'a> {\n\n    /// An untyped function reference: funcref. This is part of the reference\n    /// types proposal.\n    Func,\n\n    /// A reference to any host value: externref. This was originally known as\n    /// anyref when it was the supertype of all reference value types. This is\n    /// part of the reference types proposal.\n    Extern,\n\n    /// A reference to an exception: exnref. This is part of the exception\n    /// handling proposal.\n    Exn,\n\n    /// A reference that has an identity that can be compared: eqref. This is\n    /// part of the GC proposal.\n    Eq,\n\n    /// An unboxed 31-bit integer: i31ref. This may be going away if there is no common\n    /// supertype of all reference types. Part of the GC proposal.\n    I31,\n\n    /// A reference to a function, struct, or array: ref T. This is part of the\n    /// GC proposal.\n    Index(ast::Index),\n}","parent":null,"children":[{"krate":0,"index":5563},{"krate":0,"index":5565},{"krate":0,"index":5567},{"krate":0,"index":5569},{"krate":0,"index":5571},{"krate":0,"index":5573}],"decl_id":null,"docs":" A heap type for a reference type\n","sig":null,"attributes":[{"value":"/ A heap type for a reference type","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7785802,"byte_end":7785838,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7785839,"byte_end":7785861,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5599},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7787755,"byte_end":7787762,"line_start":115,"line_end":115,"column_start":12,"column_end":19},"name":"RefType","qualname":"::ast::types::RefType","value":"RefType { nullable, heap }","parent":null,"children":[{"krate":0,"index":5601},{"krate":0,"index":5602}],"decl_id":null,"docs":" A reference type in a wasm module.\n","sig":null,"attributes":[{"value":"/ A reference type in a wasm module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7787631,"byte_end":7787669,"line_start":112,"line_end":112,"column_start":1,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7787670,"byte_end":7787692,"line_start":113,"line_end":113,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":5601},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7787777,"byte_end":7787785,"line_start":116,"line_end":116,"column_start":9,"column_end":17},"name":"nullable","qualname":"::ast::types::RefType::nullable","value":"bool","parent":{"krate":0,"index":5599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5602},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7787801,"byte_end":7787805,"line_start":117,"line_end":117,"column_start":9,"column_end":13},"name":"heap","qualname":"::ast::types::RefType::heap","value":"ast::types::HeapType<'a>","parent":{"krate":0,"index":5599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1554},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7787919,"byte_end":7787923,"line_start":122,"line_end":122,"column_start":12,"column_end":16},"name":"func","qualname":"<RefType>::func","value":"pub fn func() -> Self","parent":null,"children":[],"decl_id":null,"docs":" A `funcref` as an abbreviation for `(ref null func)`.\n","sig":null,"attributes":[{"value":"/ A `funcref` as an abbreviation for `(ref null func)`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7787850,"byte_end":7787907,"line_start":121,"line_end":121,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1555},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7788110,"byte_end":7788118,"line_start":130,"line_end":130,"column_start":12,"column_end":20},"name":"extern","qualname":"<RefType>::extern","value":"pub fn r#extern() -> Self","parent":null,"children":[],"decl_id":null,"docs":" An `externref` as an abbreviation for `(ref null extern)`.\n","sig":null,"attributes":[{"value":"/ An `externref` as an abbreviation for `(ref null extern)`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7788036,"byte_end":7788098,"line_start":129,"line_end":129,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1556},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7788301,"byte_end":7788304,"line_start":138,"line_end":138,"column_start":12,"column_end":15},"name":"exn","qualname":"<RefType>::exn","value":"pub fn exn() -> Self","parent":null,"children":[],"decl_id":null,"docs":" An `exnref` as an abbreviation for `(ref null exn)`.\n","sig":null,"attributes":[{"value":"/ An `exnref` as an abbreviation for `(ref null exn)`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7788233,"byte_end":7788289,"line_start":137,"line_end":137,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1557},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7788482,"byte_end":7788484,"line_start":146,"line_end":146,"column_start":12,"column_end":14},"name":"eq","qualname":"<RefType>::eq","value":"pub fn eq() -> Self","parent":null,"children":[],"decl_id":null,"docs":" An `eqref` as an abbreviation for `(ref null eq)`.\n","sig":null,"attributes":[{"value":"/ An `eqref` as an abbreviation for `(ref null eq)`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7788416,"byte_end":7788470,"line_start":145,"line_end":145,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1558},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7788663,"byte_end":7788666,"line_start":154,"line_end":154,"column_start":12,"column_end":15},"name":"i31","qualname":"<RefType>::i31","value":"pub fn i31() -> Self","parent":null,"children":[],"decl_id":null,"docs":" An `i31ref` as an abbreviation for `(ref null i31)`.\n","sig":null,"attributes":[{"value":"/ An `i31ref` as an abbreviation for `(ref null i31)`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7788595,"byte_end":7788651,"line_start":153,"line_end":153,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":5626},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7790900,"byte_end":7790910,"line_start":226,"line_end":226,"column_start":12,"column_end":22},"name":"GlobalType","qualname":"::ast::types::GlobalType","value":"GlobalType { ty, mutable }","parent":null,"children":[{"krate":0,"index":5628},{"krate":0,"index":5629}],"decl_id":null,"docs":" Type for a `global` in a wasm module\n","sig":null,"attributes":[{"value":"/ Type for a `global` in a wasm module","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7790797,"byte_end":7790837,"line_start":224,"line_end":224,"column_start":1,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":5628},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7790967,"byte_end":7790969,"line_start":228,"line_end":228,"column_start":9,"column_end":11},"name":"ty","qualname":"::ast::types::GlobalType::ty","value":"ast::types::ValType<'a>","parent":{"krate":0,"index":5626},"children":[],"decl_id":null,"docs":" The element type of this `global`\n","sig":null,"attributes":[{"value":"/ The element type of this `global`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7790921,"byte_end":7790958,"line_start":227,"line_end":227,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":5629},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7791045,"byte_end":7791052,"line_start":230,"line_end":230,"column_start":9,"column_end":16},"name":"mutable","qualname":"::ast::types::GlobalType::mutable","value":"bool","parent":{"krate":0,"index":5626},"children":[],"decl_id":null,"docs":" Whether or not the global is mutable or not.\n","sig":null,"attributes":[{"value":"/ Whether or not the global is mutable or not.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7790988,"byte_end":7791036,"line_start":229,"line_end":229,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":5653},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7791665,"byte_end":7791671,"line_start":254,"line_end":254,"column_start":12,"column_end":18},"name":"Limits","qualname":"::ast::types::Limits","value":"Limits { min, max }","parent":null,"children":[{"krate":0,"index":5654},{"krate":0,"index":5655}],"decl_id":null,"docs":" Min/max limits used for tables/memories.\n","sig":null,"attributes":[{"value":"/ Min/max limits used for tables/memories.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7791558,"byte_end":7791602,"line_start":252,"line_end":252,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":5654},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7791733,"byte_end":7791736,"line_start":256,"line_end":256,"column_start":9,"column_end":12},"name":"min","qualname":"::ast::types::Limits::min","value":"u32","parent":{"krate":0,"index":5653},"children":[],"decl_id":null,"docs":" The minimum number of units for this type.\n","sig":null,"attributes":[{"value":"/ The minimum number of units for this type.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7791678,"byte_end":7791724,"line_start":255,"line_end":255,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":5655},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7791810,"byte_end":7791813,"line_start":258,"line_end":258,"column_start":9,"column_end":12},"name":"max","qualname":"::ast::types::Limits::max","value":"std::option::Option<u32>","parent":{"krate":0,"index":5653},"children":[],"decl_id":null,"docs":" An optional maximum number of units for this type.\n","sig":null,"attributes":[{"value":"/ An optional maximum number of units for this type.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7791747,"byte_end":7791801,"line_start":257,"line_end":257,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":5671},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7792222,"byte_end":7792231,"line_start":275,"line_end":275,"column_start":12,"column_end":21},"name":"TableType","qualname":"::ast::types::TableType","value":"TableType { limits, elem }","parent":null,"children":[{"krate":0,"index":5673},{"krate":0,"index":5674}],"decl_id":null,"docs":" Configuration for a table of a wasm mdoule\n","sig":null,"attributes":[{"value":"/ Configuration for a table of a wasm mdoule","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7792113,"byte_end":7792159,"line_start":273,"line_end":273,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":5673},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7792296,"byte_end":7792302,"line_start":277,"line_end":277,"column_start":9,"column_end":15},"name":"limits","qualname":"::ast::types::TableType::limits","value":"ast::types::Limits","parent":{"krate":0,"index":5671},"children":[],"decl_id":null,"docs":" Limits on the element sizes of this table\n","sig":null,"attributes":[{"value":"/ Limits on the element sizes of this table","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7792242,"byte_end":7792287,"line_start":276,"line_end":276,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":5674},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7792369,"byte_end":7792373,"line_start":279,"line_end":279,"column_start":9,"column_end":13},"name":"elem","qualname":"::ast::types::TableType::elem","value":"ast::types::RefType<'a>","parent":{"krate":0,"index":5671},"children":[],"decl_id":null,"docs":" The type of element stored in this table\n","sig":null,"attributes":[{"value":"/ The type of element stored in this table","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7792316,"byte_end":7792360,"line_start":278,"line_end":278,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":5698},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7792706,"byte_end":7792716,"line_start":293,"line_end":293,"column_start":12,"column_end":22},"name":"MemoryType","qualname":"::ast::types::MemoryType","value":"MemoryType { limits, shared }","parent":null,"children":[{"krate":0,"index":5699},{"krate":0,"index":5700}],"decl_id":null,"docs":" Configuration for a memory of a wasm module\n","sig":null,"attributes":[{"value":"/ Configuration for a memory of a wasm module","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7792596,"byte_end":7792643,"line_start":291,"line_end":291,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":5699},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7792775,"byte_end":7792781,"line_start":295,"line_end":295,"column_start":9,"column_end":15},"name":"limits","qualname":"::ast::types::MemoryType::limits","value":"ast::types::Limits","parent":{"krate":0,"index":5698},"children":[],"decl_id":null,"docs":" Limits on the page sizes of this memory\n","sig":null,"attributes":[{"value":"/ Limits on the page sizes of this memory","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7792723,"byte_end":7792766,"line_start":294,"line_end":294,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":5700},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7792860,"byte_end":7792866,"line_start":297,"line_end":297,"column_start":9,"column_end":15},"name":"shared","qualname":"::ast::types::MemoryType::shared","value":"bool","parent":{"krate":0,"index":5698},"children":[],"decl_id":null,"docs":" Whether or not this is a shared (atomic) memory type\n","sig":null,"attributes":[{"value":"/ Whether or not this is a shared (atomic) memory type","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7792795,"byte_end":7792851,"line_start":296,"line_end":296,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":5716},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7793224,"byte_end":7793236,"line_start":310,"line_end":310,"column_start":12,"column_end":24},"name":"FunctionType","qualname":"::ast::types::FunctionType","value":"FunctionType { params, results }","parent":null,"children":[{"krate":0,"index":5718},{"krate":0,"index":5719}],"decl_id":null,"docs":" A function type with parameters and results.\n","sig":null,"attributes":[{"value":"/ A function type with parameters and results.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7793131,"byte_end":7793179,"line_start":308,"line_end":308,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":5718},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7793396,"byte_end":7793402,"line_start":313,"line_end":313,"column_start":9,"column_end":15},"name":"params","qualname":"::ast::types::FunctionType::params","value":"std::vec::Vec<(std::option::Option<ast::token::Id<'a>>, std::option::Option<ast::token::NameAnnotation<'a>>, ast::types::ValType<'a>)>","parent":{"krate":0,"index":5716},"children":[],"decl_id":null,"docs":" The parameters of a function, optionally each having an identifier for\n name resolution and a name for the custom `name` section.\n","sig":null,"attributes":[{"value":"/ The parameters of a function, optionally each having an identifier for","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7793247,"byte_end":7793321,"line_start":311,"line_end":311,"column_start":5,"column_end":79}},{"value":"/ name resolution and a name for the custom `name` section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7793326,"byte_end":7793387,"line_start":312,"line_end":312,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":5719},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7793558,"byte_end":7793565,"line_start":319,"line_end":319,"column_start":9,"column_end":16},"name":"results","qualname":"::ast::types::FunctionType::results","value":"std::vec::Vec<ast::types::ValType<'a>>","parent":{"krate":0,"index":5716},"children":[],"decl_id":null,"docs":" The results types of a function.\n","sig":null,"attributes":[{"value":"/ The results types of a function.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7793513,"byte_end":7793549,"line_start":318,"line_end":318,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":5729},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7795965,"byte_end":7795984,"line_start":394,"line_end":394,"column_start":12,"column_end":31},"name":"FunctionTypeNoNames","qualname":"::ast::types::FunctionTypeNoNames","value":"","parent":null,"children":[],"decl_id":null,"docs":" A function type with parameters and results.\n","sig":null,"attributes":[{"value":"/ A function type with parameters and results.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7795872,"byte_end":7795920,"line_start":392,"line_end":392,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":5732},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7795989,"byte_end":7796009,"line_start":394,"line_end":394,"column_start":36,"column_end":56},"name":"0","qualname":"::ast::types::FunctionTypeNoNames::0","value":"ast::types::FunctionType<'a>","parent":{"krate":0,"index":5729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5742},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7796731,"byte_end":7796741,"line_start":425,"line_end":425,"column_start":12,"column_end":22},"name":"StructType","qualname":"::ast::types::StructType","value":"StructType { fields }","parent":null,"children":[{"krate":0,"index":5744}],"decl_id":null,"docs":" A struct type with fields.\n","sig":null,"attributes":[{"value":"/ A struct type with fields.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7796665,"byte_end":7796695,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":5744},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7796789,"byte_end":7796795,"line_start":427,"line_end":427,"column_start":9,"column_end":15},"name":"fields","qualname":"::ast::types::StructType::fields","value":"std::vec::Vec<ast::types::StructField<'a>>","parent":{"krate":0,"index":5742},"children":[],"decl_id":null,"docs":" The fields of the struct\n","sig":null,"attributes":[{"value":"/ The fields of the struct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7796752,"byte_end":7796780,"line_start":426,"line_end":426,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":5751},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7797448,"byte_end":7797459,"line_start":450,"line_end":450,"column_start":12,"column_end":23},"name":"StructField","qualname":"::ast::types::StructField","value":"StructField { id, mutable, ty }","parent":null,"children":[{"krate":0,"index":5753},{"krate":0,"index":5754},{"krate":0,"index":5755}],"decl_id":null,"docs":" A field of a struct type.\n","sig":null,"attributes":[{"value":"/ A field of a struct type.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7797383,"byte_end":7797412,"line_start":448,"line_end":448,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":5753},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7797526,"byte_end":7797528,"line_start":452,"line_end":452,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::types::StructField::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":5751},"children":[],"decl_id":null,"docs":" An optional identifier for name resolution.\n","sig":null,"attributes":[{"value":"/ An optional identifier for name resolution.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7797470,"byte_end":7797517,"line_start":451,"line_end":451,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":5754},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7797609,"byte_end":7797616,"line_start":454,"line_end":454,"column_start":9,"column_end":16},"name":"mutable","qualname":"::ast::types::StructField::mutable","value":"bool","parent":{"krate":0,"index":5751},"children":[],"decl_id":null,"docs":" Whether this field may be mutated or not.\n","sig":null,"attributes":[{"value":"/ Whether this field may be mutated or not.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7797555,"byte_end":7797600,"line_start":453,"line_end":453,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":5755},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7797677,"byte_end":7797679,"line_start":456,"line_end":456,"column_start":9,"column_end":11},"name":"ty","qualname":"::ast::types::StructField::ty","value":"ast::types::ValType<'a>","parent":{"krate":0,"index":5751},"children":[],"decl_id":null,"docs":" The value type stored in this field.\n","sig":null,"attributes":[{"value":"/ The value type stored in this field.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7797628,"byte_end":7797668,"line_start":455,"line_end":455,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":5762},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7798276,"byte_end":7798285,"line_start":477,"line_end":477,"column_start":12,"column_end":21},"name":"ArrayType","qualname":"::ast::types::ArrayType","value":"ArrayType { mutable, ty }","parent":null,"children":[{"krate":0,"index":5764},{"krate":0,"index":5765}],"decl_id":null,"docs":" An array type with fields.\n","sig":null,"attributes":[{"value":"/ An array type with fields.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7798210,"byte_end":7798240,"line_start":475,"line_end":475,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":5764},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7798350,"byte_end":7798357,"line_start":479,"line_end":479,"column_start":9,"column_end":16},"name":"mutable","qualname":"::ast::types::ArrayType::mutable","value":"bool","parent":{"krate":0,"index":5762},"children":[],"decl_id":null,"docs":" Whether this field may be mutated or not.\n","sig":null,"attributes":[{"value":"/ Whether this field may be mutated or not.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7798296,"byte_end":7798341,"line_start":478,"line_end":478,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":5765},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7798418,"byte_end":7798420,"line_start":481,"line_end":481,"column_start":9,"column_end":11},"name":"ty","qualname":"::ast::types::ArrayType::ty","value":"ast::types::ValType<'a>","parent":{"krate":0,"index":5762},"children":[],"decl_id":null,"docs":" The value type stored in this field.\n","sig":null,"attributes":[{"value":"/ The value type stored in this field.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7798369,"byte_end":7798409,"line_start":480,"line_end":480,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":5772},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7798954,"byte_end":7798964,"line_start":501,"line_end":501,"column_start":12,"column_end":22},"name":"ModuleType","qualname":"::ast::types::ModuleType","value":"ModuleType { imports, exports, instance_exports }","parent":null,"children":[{"krate":0,"index":5774},{"krate":0,"index":5775},{"krate":0,"index":5776}],"decl_id":null,"docs":" A type for a nested module\n","sig":null,"attributes":[{"value":"/ A type for a nested module","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7798879,"byte_end":7798909,"line_start":499,"line_end":499,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":5774},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7799039,"byte_end":7799046,"line_start":503,"line_end":503,"column_start":9,"column_end":16},"name":"imports","qualname":"::ast::types::ModuleType::imports","value":"std::vec::Vec<ast::import::Import<'a>>","parent":{"krate":0,"index":5772},"children":[],"decl_id":null,"docs":" The imports that are expected for this module type.\n","sig":null,"attributes":[{"value":"/ The imports that are expected for this module type.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7798975,"byte_end":7799030,"line_start":502,"line_end":502,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":5775},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7799141,"byte_end":7799148,"line_start":505,"line_end":505,"column_start":9,"column_end":16},"name":"exports","qualname":"::ast::types::ModuleType::exports","value":"std::vec::Vec<ast::types::ExportType<'a>>","parent":{"krate":0,"index":5772},"children":[],"decl_id":null,"docs":" The exports that this module type is expected to have.\n","sig":null,"attributes":[{"value":"/ The exports that this module type is expected to have.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7799074,"byte_end":7799132,"line_start":504,"line_end":504,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":5776},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7799245,"byte_end":7799261,"line_start":507,"line_end":507,"column_start":9,"column_end":25},"name":"instance_exports","qualname":"::ast::types::ModuleType::instance_exports","value":"std::vec::Vec<(ast::token::Span, ast::token::Id<'a>)>","parent":{"krate":0,"index":5772},"children":[],"decl_id":null,"docs":" Instances within this module which are entirely exported.\n","sig":null,"attributes":[{"value":"/ Instances within this module which are entirely exported.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7799175,"byte_end":7799236,"line_start":506,"line_end":506,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":5786},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7800567,"byte_end":7800579,"line_start":556,"line_end":556,"column_start":12,"column_end":24},"name":"InstanceType","qualname":"::ast::types::InstanceType","value":"InstanceType { exports }","parent":null,"children":[{"krate":0,"index":5788}],"decl_id":null,"docs":" A type for a nested instance\n","sig":null,"attributes":[{"value":"/ A type for a nested instance","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7800490,"byte_end":7800522,"line_start":554,"line_end":554,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5788},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7800640,"byte_end":7800647,"line_start":558,"line_end":558,"column_start":9,"column_end":16},"name":"exports","qualname":"::ast::types::InstanceType::exports","value":"std::vec::Vec<ast::types::ExportType<'a>>","parent":{"krate":0,"index":5786},"children":[],"decl_id":null,"docs":" The exported types from this instance\n","sig":null,"attributes":[{"value":"/ The exported types from this instance","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7800590,"byte_end":7800631,"line_start":557,"line_end":557,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":5798},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7801397,"byte_end":7801407,"line_start":590,"line_end":590,"column_start":12,"column_end":22},"name":"ExportType","qualname":"::ast::types::ExportType","value":"ExportType { span, name, item }","parent":null,"children":[{"krate":0,"index":5800},{"krate":0,"index":5801},{"krate":0,"index":5802}],"decl_id":null,"docs":" The type of an exported item from a module or instance.\n","sig":null,"attributes":[{"value":"/ The type of an exported item from a module or instance.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7801302,"byte_end":7801361,"line_start":588,"line_end":588,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":5800},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7801461,"byte_end":7801465,"line_start":592,"line_end":592,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::types::ExportType::span","value":"ast::token::Span","parent":{"krate":0,"index":5798},"children":[],"decl_id":null,"docs":" Where this export was defined.\n","sig":null,"attributes":[{"value":"/ Where this export was defined.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7801418,"byte_end":7801452,"line_start":591,"line_end":591,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":5801},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7801519,"byte_end":7801523,"line_start":594,"line_end":594,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::types::ExportType::name","value":"&'a str","parent":{"krate":0,"index":5798},"children":[],"decl_id":null,"docs":" The name of this export.\n","sig":null,"attributes":[{"value":"/ The name of this export.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7801482,"byte_end":7801510,"line_start":593,"line_end":593,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5802},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7801593,"byte_end":7801597,"line_start":596,"line_end":596,"column_start":9,"column_end":13},"name":"item","qualname":"::ast::types::ExportType::item","value":"ast::import::ItemSig<'a>","parent":{"krate":0,"index":5798},"children":[],"decl_id":null,"docs":" The signature of the item that's exported.\n","sig":null,"attributes":[{"value":"/ The signature of the item that's exported.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7801538,"byte_end":7801584,"line_start":595,"line_end":595,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5811},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7802010,"byte_end":7802014,"line_start":612,"line_end":612,"column_start":5,"column_end":9},"name":"Func","qualname":"::ast::types::TypeDef::Func","value":"TypeDef::Func(FunctionType)","parent":{"krate":0,"index":5809},"children":[],"decl_id":null,"docs":" A function type definition.\n","sig":null,"attributes":[{"value":"/ A function type definition.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7801974,"byte_end":7802005,"line_start":611,"line_end":611,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5814},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7802072,"byte_end":7802078,"line_start":614,"line_end":614,"column_start":5,"column_end":11},"name":"Struct","qualname":"::ast::types::TypeDef::Struct","value":"TypeDef::Struct(StructType)","parent":{"krate":0,"index":5809},"children":[],"decl_id":null,"docs":" A struct type definition.\n","sig":null,"attributes":[{"value":"/ A struct type definition.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7802038,"byte_end":7802067,"line_start":613,"line_end":613,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5817},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7802134,"byte_end":7802139,"line_start":616,"line_end":616,"column_start":5,"column_end":10},"name":"Array","qualname":"::ast::types::TypeDef::Array","value":"TypeDef::Array(ArrayType)","parent":{"krate":0,"index":5809},"children":[],"decl_id":null,"docs":" An array type definition.\n","sig":null,"attributes":[{"value":"/ An array type definition.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7802100,"byte_end":7802129,"line_start":615,"line_end":615,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5820},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7802194,"byte_end":7802200,"line_start":618,"line_end":618,"column_start":5,"column_end":11},"name":"Module","qualname":"::ast::types::TypeDef::Module","value":"TypeDef::Module(ModuleType)","parent":{"krate":0,"index":5809},"children":[],"decl_id":null,"docs":" A module type definition.\n","sig":null,"attributes":[{"value":"/ A module type definition.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7802160,"byte_end":7802189,"line_start":617,"line_end":617,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5823},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7802259,"byte_end":7802267,"line_start":620,"line_end":620,"column_start":5,"column_end":13},"name":"Instance","qualname":"::ast::types::TypeDef::Instance","value":"TypeDef::Instance(InstanceType)","parent":{"krate":0,"index":5809},"children":[],"decl_id":null,"docs":" An instance type definition.\n","sig":null,"attributes":[{"value":"/ An instance type definition.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7802222,"byte_end":7802254,"line_start":619,"line_end":619,"column_start":5,"column_end":37}}]},{"kind":"Enum","id":{"krate":0,"index":5809},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7801956,"byte_end":7801963,"line_start":610,"line_end":610,"column_start":10,"column_end":17},"name":"TypeDef","qualname":"::ast::types::TypeDef","value":"pub enum TypeDef<'a> {\n\n    /// A function type definition.\n    Func(FunctionType),\n\n    /// A struct type definition.\n    Struct(StructType),\n\n    /// An array type definition.\n    Array(ArrayType),\n\n    /// A module type definition.\n    Module(ModuleType),\n\n    /// An instance type definition.\n    Instance(InstanceType),\n}","parent":null,"children":[{"krate":0,"index":5811},{"krate":0,"index":5814},{"krate":0,"index":5817},{"krate":0,"index":5820},{"krate":0,"index":5823}],"decl_id":null,"docs":" A definition of a type.\n","sig":null,"attributes":[{"value":"/ A definition of a type.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7801902,"byte_end":7801929,"line_start":608,"line_end":608,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":5829},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7802353,"byte_end":7802357,"line_start":625,"line_end":625,"column_start":12,"column_end":16},"name":"Type","qualname":"::ast::types::Type","value":"Type { span, id, def }","parent":null,"children":[{"krate":0,"index":5831},{"krate":0,"index":5832},{"krate":0,"index":5833}],"decl_id":null,"docs":" A type declaration in a module\n","sig":null,"attributes":[{"value":"/ A type declaration in a module","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7802290,"byte_end":7802324,"line_start":623,"line_end":623,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":5831},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7802409,"byte_end":7802413,"line_start":627,"line_end":627,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::types::Type::span","value":"ast::token::Span","parent":{"krate":0,"index":5829},"children":[],"decl_id":null,"docs":" Where this type was defined.\n","sig":null,"attributes":[{"value":"/ Where this type was defined.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7802368,"byte_end":7802400,"line_start":626,"line_end":626,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":5832},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7802527,"byte_end":7802529,"line_start":630,"line_end":630,"column_start":9,"column_end":11},"name":"id","qualname":"::ast::types::Type::id","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":5829},"children":[],"decl_id":null,"docs":" An optional identifer to refer to this `type` by as part of name\n resolution.\n","sig":null,"attributes":[{"value":"/ An optional identifer to refer to this `type` by as part of name","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7802430,"byte_end":7802498,"line_start":628,"line_end":628,"column_start":5,"column_end":73}},{"value":"/ resolution.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7802503,"byte_end":7802518,"line_start":629,"line_end":629,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":5833},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7802599,"byte_end":7802602,"line_start":632,"line_end":632,"column_start":9,"column_end":12},"name":"def","qualname":"::ast::types::Type::def","value":"ast::types::TypeDef<'a>","parent":{"krate":0,"index":5829},"children":[],"decl_id":null,"docs":" The type that we're declaring.\n","sig":null,"attributes":[{"value":"/ The type that we're declaring.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7802556,"byte_end":7802590,"line_start":631,"line_end":631,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":5837},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7803816,"byte_end":7803823,"line_start":666,"line_end":666,"column_start":12,"column_end":19},"name":"TypeUse","qualname":"::ast::types::TypeUse","value":"TypeUse { index, inline }","parent":null,"children":[{"krate":0,"index":5840},{"krate":0,"index":5841}],"decl_id":null,"docs":" A reference to a type defined in this module.\n","sig":null,"attributes":[{"value":"/ A reference to a type defined in this module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7803731,"byte_end":7803780,"line_start":664,"line_end":664,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":5840},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7803901,"byte_end":7803906,"line_start":668,"line_end":668,"column_start":9,"column_end":14},"name":"index","qualname":"::ast::types::TypeUse::index","value":"std::option::Option<ast::token::Index<'a>>","parent":{"krate":0,"index":5837},"children":[],"decl_id":null,"docs":" The type that we're referencing, if it was present.\n","sig":null,"attributes":[{"value":"/ The type that we're referencing, if it was present.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7803837,"byte_end":7803892,"line_start":667,"line_end":667,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":5841},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7803977,"byte_end":7803983,"line_start":670,"line_end":670,"column_start":9,"column_end":15},"name":"inline","qualname":"::ast::types::TypeUse::inline","value":"std::option::Option<T>","parent":{"krate":0,"index":5837},"children":[],"decl_id":null,"docs":" The inline type, if present.\n","sig":null,"attributes":[{"value":"/ The inline type, if present.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7803936,"byte_end":7803968,"line_start":669,"line_end":669,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1641},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7804152,"byte_end":7804166,"line_start":676,"line_end":676,"column_start":12,"column_end":26},"name":"new_with_index","qualname":"<TypeUse>::new_with_index","value":"pub fn new_with_index(ast::Index) -> TypeUse","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new instance of `TypeUse` without an inline definition but\n with an index specified.\n","sig":null,"attributes":[{"value":"/ Constructs a new instance of `TypeUse` without an inline definition but","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7804032,"byte_end":7804107,"line_start":674,"line_end":674,"column_start":5,"column_end":80}},{"value":"/ with an index specified.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7804112,"byte_end":7804140,"line_start":675,"line_end":675,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1666},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7805465,"byte_end":7805469,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Wast","qualname":"::ast::wast::Wast","value":"Wast { directives }","parent":null,"children":[{"krate":0,"index":1668}],"decl_id":null,"docs":" A parsed representation of a `*.wast` file.","sig":null,"attributes":[{"value":"/ A parsed representation of a `*.wast` file.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7805182,"byte_end":7805229,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7805230,"byte_end":7805233,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ WAST files are not officially specified but are used in the official test","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7805234,"byte_end":7805311,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/ suite to write official spec tests for wasm. This type represents a parsed","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7805312,"byte_end":7805390,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ `*.wast` file which parses a list of directives in a file.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7805391,"byte_end":7805453,"line_start":9,"line_end":9,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":1668},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7805511,"byte_end":7805521,"line_start":12,"line_end":12,"column_start":9,"column_end":19},"name":"directives","qualname":"::ast::wast::Wast::directives","value":"std::vec::Vec<ast::wast::WastDirective<'a>>","parent":{"krate":0,"index":1666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7805480,"byte_end":7805502,"line_start":11,"line_end":11,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1680},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7806832,"byte_end":7806838,"line_start":55,"line_end":55,"column_start":5,"column_end":11},"name":"Module","qualname":"::ast::wast::WastDirective::Module","value":"WastDirective::Module(ast::Module)","parent":{"krate":0,"index":1678},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1683},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7806861,"byte_end":7806872,"line_start":56,"line_end":56,"column_start":5,"column_end":16},"name":"QuoteModule","qualname":"::ast::wast::WastDirective::QuoteModule","value":"WastDirective::QuoteModule { span, source }","parent":{"krate":0,"index":1678},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1686},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7806942,"byte_end":7806957,"line_start":60,"line_end":60,"column_start":5,"column_end":20},"name":"AssertMalformed","qualname":"::ast::wast::WastDirective::AssertMalformed","value":"WastDirective::AssertMalformed { span, module, message }","parent":{"krate":0,"index":1678},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1690},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7807055,"byte_end":7807068,"line_start":65,"line_end":65,"column_start":5,"column_end":18},"name":"AssertInvalid","qualname":"::ast::wast::WastDirective::AssertInvalid","value":"WastDirective::AssertInvalid { span, module, message }","parent":{"krate":0,"index":1678},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1694},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7807166,"byte_end":7807174,"line_start":70,"line_end":70,"column_start":5,"column_end":13},"name":"Register","qualname":"::ast::wast::WastDirective::Register","value":"WastDirective::Register { span, name, module }","parent":{"krate":0,"index":1678},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1698},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7807273,"byte_end":7807279,"line_start":75,"line_end":75,"column_start":5,"column_end":11},"name":"Invoke","qualname":"::ast::wast::WastDirective::Invoke","value":"WastDirective::Invoke(WastInvoke)","parent":{"krate":0,"index":1678},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1701},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7807301,"byte_end":7807311,"line_start":76,"line_end":76,"column_start":5,"column_end":15},"name":"AssertTrap","qualname":"::ast::wast::WastDirective::AssertTrap","value":"WastDirective::AssertTrap { span, exec, message }","parent":{"krate":0,"index":1678},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1705},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7807407,"byte_end":7807419,"line_start":81,"line_end":81,"column_start":5,"column_end":17},"name":"AssertReturn","qualname":"::ast::wast::WastDirective::AssertReturn","value":"WastDirective::AssertReturn { span, exec, results }","parent":{"krate":0,"index":1678},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1709},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7807538,"byte_end":7807554,"line_start":86,"line_end":86,"column_start":5,"column_end":21},"name":"AssertExhaustion","qualname":"::ast::wast::WastDirective::AssertExhaustion","value":"WastDirective::AssertExhaustion { span, call, message }","parent":{"krate":0,"index":1678},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1713},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7807649,"byte_end":7807665,"line_start":91,"line_end":91,"column_start":5,"column_end":21},"name":"AssertUnlinkable","qualname":"::ast::wast::WastDirective::AssertUnlinkable","value":"WastDirective::AssertUnlinkable { span, module, message }","parent":{"krate":0,"index":1678},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1678},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7806808,"byte_end":7806821,"line_start":54,"line_end":54,"column_start":10,"column_end":23},"name":"WastDirective","qualname":"::ast::wast::WastDirective","value":"pub enum WastDirective<'a> {\n    Module(ast::Module),\n    QuoteModule {\n        span: ast::Span,\n        source: Vec<&'a [u8]>,\n    },\n    AssertMalformed {\n        span: ast::Span,\n        module: QuoteModule,\n        message: &'a str,\n    },\n    AssertInvalid {\n        span: ast::Span,\n        module: ast::Module,\n        message: &'a str,\n    },\n    Register {\n        span: ast::Span,\n        name: &'a str,\n        module: Option<ast::Id>,\n    },\n    Invoke(WastInvoke),\n    AssertTrap {\n        span: ast::Span,\n        exec: WastExecute,\n        message: &'a str,\n    },\n    AssertReturn {\n        span: ast::Span,\n        exec: WastExecute,\n        results: Vec<ast::AssertExpression>,\n    },\n    AssertExhaustion {\n        span: ast::Span,\n        call: WastInvoke,\n        message: &'a str,\n    },\n    AssertUnlinkable {\n        span: ast::Span,\n        module: ast::Module,\n        message: &'a str,\n    },\n}","parent":null,"children":[{"krate":0,"index":1680},{"krate":0,"index":1683},{"krate":0,"index":1686},{"krate":0,"index":1690},{"krate":0,"index":1694},{"krate":0,"index":1698},{"krate":0,"index":1701},{"krate":0,"index":1705},{"krate":0,"index":1709},{"krate":0,"index":1713}],"decl_id":null,"docs":" The different kinds of directives found in a `*.wast` file.","sig":null,"attributes":[{"value":"/ The different kinds of directives found in a `*.wast` file.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7806578,"byte_end":7806641,"line_start":49,"line_end":49,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7806642,"byte_end":7806645,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ It's not entirely clear to me what all of these are per se, but they're only","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7806646,"byte_end":7806726,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/ really interesting to test harnesses mostly.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7806727,"byte_end":7806775,"line_start":52,"line_end":52,"column_start":1,"column_end":49}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7806776,"byte_end":7806798,"line_start":53,"line_end":53,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1718},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7807876,"byte_end":7807880,"line_start":100,"line_end":100,"column_start":12,"column_end":16},"name":"span","qualname":"<WastDirective>::span","value":"pub fn span(&Self) -> ast::Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the location in the source that this directive was defined at\n","sig":null,"attributes":[{"value":"/ Returns the location in the source that this directive was defined at","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7807791,"byte_end":7807864,"line_start":99,"line_end":99,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1738},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7814604,"byte_end":7814610,"line_start":258,"line_end":258,"column_start":5,"column_end":11},"name":"Invoke","qualname":"::ast::wast::WastExecute::Invoke","value":"WastExecute::Invoke(WastInvoke)","parent":{"krate":0,"index":1736},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1741},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7814632,"byte_end":7814638,"line_start":259,"line_end":259,"column_start":5,"column_end":11},"name":"Module","qualname":"::ast::wast::WastExecute::Module","value":"WastExecute::Module(ast::Module)","parent":{"krate":0,"index":1736},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1744},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7814661,"byte_end":7814664,"line_start":260,"line_end":260,"column_start":5,"column_end":8},"name":"Get","qualname":"::ast::wast::WastExecute::Get","value":"WastExecute::Get { module, global }","parent":{"krate":0,"index":1736},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1736},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7814582,"byte_end":7814593,"line_start":257,"line_end":257,"column_start":10,"column_end":21},"name":"WastExecute","qualname":"::ast::wast::WastExecute","value":"pub enum WastExecute<'a> {\n    Invoke(WastInvoke),\n    Module(ast::Module),\n    Get {\n        module: Option<ast::Id>,\n        global: &'a str,\n    },\n}","parent":null,"children":[{"krate":0,"index":1738},{"krate":0,"index":1741},{"krate":0,"index":1744}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7814550,"byte_end":7814572,"line_start":256,"line_end":256,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1750},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7815365,"byte_end":7815375,"line_start":286,"line_end":286,"column_start":12,"column_end":22},"name":"WastInvoke","qualname":"::ast::wast::WastInvoke","value":"WastInvoke { span, module, name, args }","parent":null,"children":[{"krate":0,"index":1752},{"krate":0,"index":1753},{"krate":0,"index":1754},{"krate":0,"index":1755}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7815331,"byte_end":7815353,"line_start":285,"line_end":285,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1752},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7815390,"byte_end":7815394,"line_start":287,"line_end":287,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::wast::WastInvoke::span","value":"ast::token::Span","parent":{"krate":0,"index":1750},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1753},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7815415,"byte_end":7815421,"line_start":288,"line_end":288,"column_start":9,"column_end":15},"name":"module","qualname":"::ast::wast::WastInvoke::module","value":"std::option::Option<ast::token::Id<'a>>","parent":{"krate":0,"index":1750},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1754},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7815452,"byte_end":7815456,"line_start":289,"line_end":289,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::wast::WastInvoke::name","value":"&'a str","parent":{"krate":0,"index":1750},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1755},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7815475,"byte_end":7815479,"line_start":290,"line_end":290,"column_start":9,"column_end":13},"name":"args","qualname":"::ast::wast::WastInvoke::args","value":"std::vec::Vec<ast::expr::Expression<'a>>","parent":{"krate":0,"index":1750},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1762},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7816033,"byte_end":7816039,"line_start":313,"line_end":313,"column_start":5,"column_end":11},"name":"Module","qualname":"::ast::wast::QuoteModule::Module","value":"QuoteModule::Module(ast::Module)","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1765},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7816062,"byte_end":7816067,"line_start":314,"line_end":314,"column_start":5,"column_end":10},"name":"Quote","qualname":"::ast::wast::QuoteModule::Quote","value":"QuoteModule::Quote(Vec<&'a [u8]>)","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1760},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7816011,"byte_end":7816022,"line_start":312,"line_end":312,"column_start":10,"column_end":21},"name":"QuoteModule","qualname":"::ast::wast::QuoteModule","value":"pub enum QuoteModule<'a> { Module(ast::Module), Quote(Vec<&'a [u8]>), }","parent":null,"children":[{"krate":0,"index":1762},{"krate":0,"index":1765}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7815979,"byte_end":7816001,"line_start":311,"line_end":311,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":559},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":181158,"byte_end":181160,"line_start":323,"line_end":323,"column_start":9,"column_end":11},"name":"kw","qualname":"::ast::kw","value":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","parent":null,"children":[{"krate":0,"index":5857},{"krate":0,"index":5860},{"krate":0,"index":5850},{"krate":0,"index":5854},{"krate":0,"index":5869},{"krate":0,"index":5872},{"krate":0,"index":5862},{"krate":0,"index":5866},{"krate":0,"index":5881},{"krate":0,"index":5884},{"krate":0,"index":5874},{"krate":0,"index":5878},{"krate":0,"index":5893},{"krate":0,"index":5896},{"krate":0,"index":5886},{"krate":0,"index":5890},{"krate":0,"index":5905},{"krate":0,"index":5908},{"krate":0,"index":5898},{"krate":0,"index":5902},{"krate":0,"index":5917},{"krate":0,"index":5920},{"krate":0,"index":5910},{"krate":0,"index":5914},{"krate":0,"index":5929},{"krate":0,"index":5932},{"krate":0,"index":5922},{"krate":0,"index":5926},{"krate":0,"index":5941},{"krate":0,"index":5944},{"krate":0,"index":5934},{"krate":0,"index":5938},{"krate":0,"index":5953},{"krate":0,"index":5956},{"krate":0,"index":5946},{"krate":0,"index":5950},{"krate":0,"index":5965},{"krate":0,"index":5968},{"krate":0,"index":5958},{"krate":0,"index":5962},{"krate":0,"index":5977},{"krate":0,"index":5980},{"krate":0,"index":5970},{"krate":0,"index":5974},{"krate":0,"index":5989},{"krate":0,"index":5992},{"krate":0,"index":5982},{"krate":0,"index":5986},{"krate":0,"index":6001},{"krate":0,"index":6004},{"krate":0,"index":5994},{"krate":0,"index":5998},{"krate":0,"index":6013},{"krate":0,"index":6016},{"krate":0,"index":6006},{"krate":0,"index":6010},{"krate":0,"index":6025},{"krate":0,"index":6028},{"krate":0,"index":6018},{"krate":0,"index":6022},{"krate":0,"index":6037},{"krate":0,"index":6040},{"krate":0,"index":6030},{"krate":0,"index":6034},{"krate":0,"index":6049},{"krate":0,"index":6052},{"krate":0,"index":6042},{"krate":0,"index":6046},{"krate":0,"index":6061},{"krate":0,"index":6064},{"krate":0,"index":6054},{"krate":0,"index":6058},{"krate":0,"index":6073},{"krate":0,"index":6076},{"krate":0,"index":6066},{"krate":0,"index":6070},{"krate":0,"index":6085},{"krate":0,"index":6088},{"krate":0,"index":6078},{"krate":0,"index":6082},{"krate":0,"index":6097},{"krate":0,"index":6100},{"krate":0,"index":6090},{"krate":0,"index":6094},{"krate":0,"index":6109},{"krate":0,"index":6112},{"krate":0,"index":6102},{"krate":0,"index":6106},{"krate":0,"index":6121},{"krate":0,"index":6124},{"krate":0,"index":6114},{"krate":0,"index":6118},{"krate":0,"index":6133},{"krate":0,"index":6136},{"krate":0,"index":6126},{"krate":0,"index":6130},{"krate":0,"index":6145},{"krate":0,"index":6148},{"krate":0,"index":6138},{"krate":0,"index":6142},{"krate":0,"index":6157},{"krate":0,"index":6160},{"krate":0,"index":6150},{"krate":0,"index":6154},{"krate":0,"index":6169},{"krate":0,"index":6172},{"krate":0,"index":6162},{"krate":0,"index":6166},{"krate":0,"index":6181},{"krate":0,"index":6184},{"krate":0,"index":6174},{"krate":0,"index":6178},{"krate":0,"index":6193},{"krate":0,"index":6196},{"krate":0,"index":6186},{"krate":0,"index":6190},{"krate":0,"index":6205},{"krate":0,"index":6208},{"krate":0,"index":6198},{"krate":0,"index":6202},{"krate":0,"index":6217},{"krate":0,"index":6220},{"krate":0,"index":6210},{"krate":0,"index":6214},{"krate":0,"index":6229},{"krate":0,"index":6232},{"krate":0,"index":6222},{"krate":0,"index":6226},{"krate":0,"index":6241},{"krate":0,"index":6244},{"krate":0,"index":6234},{"krate":0,"index":6238},{"krate":0,"index":6253},{"krate":0,"index":6256},{"krate":0,"index":6246},{"krate":0,"index":6250},{"krate":0,"index":6265},{"krate":0,"index":6268},{"krate":0,"index":6258},{"krate":0,"index":6262},{"krate":0,"index":6277},{"krate":0,"index":6280},{"krate":0,"index":6270},{"krate":0,"index":6274},{"krate":0,"index":6289},{"krate":0,"index":6292},{"krate":0,"index":6282},{"krate":0,"index":6286},{"krate":0,"index":6301},{"krate":0,"index":6304},{"krate":0,"index":6294},{"krate":0,"index":6298},{"krate":0,"index":6313},{"krate":0,"index":6316},{"krate":0,"index":6306},{"krate":0,"index":6310},{"krate":0,"index":6325},{"krate":0,"index":6328},{"krate":0,"index":6318},{"krate":0,"index":6322},{"krate":0,"index":6337},{"krate":0,"index":6340},{"krate":0,"index":6330},{"krate":0,"index":6334},{"krate":0,"index":6349},{"krate":0,"index":6352},{"krate":0,"index":6342},{"krate":0,"index":6346},{"krate":0,"index":6361},{"krate":0,"index":6364},{"krate":0,"index":6354},{"krate":0,"index":6358},{"krate":0,"index":6373},{"krate":0,"index":6376},{"krate":0,"index":6366},{"krate":0,"index":6370},{"krate":0,"index":6385},{"krate":0,"index":6388},{"krate":0,"index":6378},{"krate":0,"index":6382},{"krate":0,"index":6397},{"krate":0,"index":6400},{"krate":0,"index":6390},{"krate":0,"index":6394},{"krate":0,"index":6409},{"krate":0,"index":6412},{"krate":0,"index":6402},{"krate":0,"index":6406},{"krate":0,"index":6421},{"krate":0,"index":6424},{"krate":0,"index":6414},{"krate":0,"index":6418},{"krate":0,"index":6433},{"krate":0,"index":6436},{"krate":0,"index":6426},{"krate":0,"index":6430},{"krate":0,"index":6445},{"krate":0,"index":6448},{"krate":0,"index":6438},{"krate":0,"index":6442},{"krate":0,"index":6457},{"krate":0,"index":6460},{"krate":0,"index":6450},{"krate":0,"index":6454},{"krate":0,"index":6469},{"krate":0,"index":6472},{"krate":0,"index":6462},{"krate":0,"index":6466},{"krate":0,"index":6481},{"krate":0,"index":6484},{"krate":0,"index":6474},{"krate":0,"index":6478},{"krate":0,"index":6493},{"krate":0,"index":6496},{"krate":0,"index":6486},{"krate":0,"index":6490},{"krate":0,"index":6505},{"krate":0,"index":6508},{"krate":0,"index":6498},{"krate":0,"index":6502},{"krate":0,"index":6517},{"krate":0,"index":6520},{"krate":0,"index":6510},{"krate":0,"index":6514},{"krate":0,"index":6529},{"krate":0,"index":6532},{"krate":0,"index":6522},{"krate":0,"index":6526},{"krate":0,"index":6541},{"krate":0,"index":6544},{"krate":0,"index":6534},{"krate":0,"index":6538},{"krate":0,"index":6553},{"krate":0,"index":6556},{"krate":0,"index":6546},{"krate":0,"index":6550},{"krate":0,"index":6565},{"krate":0,"index":6568},{"krate":0,"index":6558},{"krate":0,"index":6562},{"krate":0,"index":6577},{"krate":0,"index":6580},{"krate":0,"index":6570},{"krate":0,"index":6574},{"krate":0,"index":6589},{"krate":0,"index":6592},{"krate":0,"index":6582},{"krate":0,"index":6586},{"krate":0,"index":6601},{"krate":0,"index":6604},{"krate":0,"index":6594},{"krate":0,"index":6598},{"krate":0,"index":6613},{"krate":0,"index":6616},{"krate":0,"index":6606},{"krate":0,"index":6610},{"krate":0,"index":6625},{"krate":0,"index":6628},{"krate":0,"index":6618},{"krate":0,"index":6622},{"krate":0,"index":6637},{"krate":0,"index":6640},{"krate":0,"index":6630},{"krate":0,"index":6634},{"krate":0,"index":6649},{"krate":0,"index":6652},{"krate":0,"index":6642},{"krate":0,"index":6646},{"krate":0,"index":6661},{"krate":0,"index":6664},{"krate":0,"index":6654},{"krate":0,"index":6658},{"krate":0,"index":6673},{"krate":0,"index":6676},{"krate":0,"index":6666},{"krate":0,"index":6670},{"krate":0,"index":6685},{"krate":0,"index":6688},{"krate":0,"index":6678},{"krate":0,"index":6682},{"krate":0,"index":6697},{"krate":0,"index":6700},{"krate":0,"index":6690},{"krate":0,"index":6694},{"krate":0,"index":6709},{"krate":0,"index":6712},{"krate":0,"index":6702},{"krate":0,"index":6706},{"krate":0,"index":6721},{"krate":0,"index":6724},{"krate":0,"index":6714},{"krate":0,"index":6718},{"krate":0,"index":6733},{"krate":0,"index":6736},{"krate":0,"index":6726},{"krate":0,"index":6730},{"krate":0,"index":6745},{"krate":0,"index":6748},{"krate":0,"index":6738},{"krate":0,"index":6742},{"krate":0,"index":6757},{"krate":0,"index":6760},{"krate":0,"index":6750},{"krate":0,"index":6754},{"krate":0,"index":6769},{"krate":0,"index":6772},{"krate":0,"index":6762},{"krate":0,"index":6766},{"krate":0,"index":6781},{"krate":0,"index":6784},{"krate":0,"index":6774},{"krate":0,"index":6778},{"krate":0,"index":6793},{"krate":0,"index":6796},{"krate":0,"index":6786},{"krate":0,"index":6790},{"krate":0,"index":6805},{"krate":0,"index":6808},{"krate":0,"index":6798},{"krate":0,"index":6802},{"krate":0,"index":6817},{"krate":0,"index":6820},{"krate":0,"index":6810},{"krate":0,"index":6814},{"krate":0,"index":6829},{"krate":0,"index":6832},{"krate":0,"index":6822},{"krate":0,"index":6826},{"krate":0,"index":6841},{"krate":0,"index":6844},{"krate":0,"index":6834},{"krate":0,"index":6838},{"krate":0,"index":6853},{"krate":0,"index":6856},{"krate":0,"index":6846},{"krate":0,"index":6850},{"krate":0,"index":6865},{"krate":0,"index":6868},{"krate":0,"index":6858},{"krate":0,"index":6862},{"krate":0,"index":6877},{"krate":0,"index":6880},{"krate":0,"index":6870},{"krate":0,"index":6874},{"krate":0,"index":6889},{"krate":0,"index":6892},{"krate":0,"index":6882},{"krate":0,"index":6886},{"krate":0,"index":6901},{"krate":0,"index":6904},{"krate":0,"index":6894},{"krate":0,"index":6898},{"krate":0,"index":6913},{"krate":0,"index":6916},{"krate":0,"index":6906},{"krate":0,"index":6910},{"krate":0,"index":6925},{"krate":0,"index":6928},{"krate":0,"index":6918},{"krate":0,"index":6922},{"krate":0,"index":6937},{"krate":0,"index":6940},{"krate":0,"index":6930},{"krate":0,"index":6934}],"decl_id":null,"docs":" Common keyword used to parse WebAssembly text files.\n","sig":null,"attributes":[{"value":"/ Common keyword used to parse WebAssembly text files.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":181093,"byte_end":181149,"line_start":322,"line_end":322,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":5857},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":181183,"byte_end":181188,"line_start":324,"line_end":324,"column_start":21,"column_end":26},"name":"after","qualname":"::ast::kw::after","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":5869},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":181211,"byte_end":181216,"line_start":325,"line_end":325,"column_start":21,"column_end":26},"name":"alias","qualname":"::ast::kw::alias","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":5881},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":181239,"byte_end":181242,"line_start":326,"line_end":326,"column_start":21,"column_end":24},"name":"any","qualname":"::ast::kw::any","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":5893},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":181265,"byte_end":181272,"line_start":327,"line_end":327,"column_start":21,"column_end":28},"name":"anyfunc","qualname":"::ast::kw::anyfunc","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":5905},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":181295,"byte_end":181301,"line_start":328,"line_end":328,"column_start":21,"column_end":27},"name":"anyref","qualname":"::ast::kw::anyref","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":5917},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":181324,"byte_end":181329,"line_start":329,"line_end":329,"column_start":21,"column_end":26},"name":"array","qualname":"::ast::kw::array","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":5929},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":181352,"byte_end":181369,"line_start":330,"line_end":330,"column_start":21,"column_end":38},"name":"assert_exhaustion","qualname":"::ast::kw::assert_exhaustion","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":5941},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":181392,"byte_end":181406,"line_start":331,"line_end":331,"column_start":21,"column_end":35},"name":"assert_invalid","qualname":"::ast::kw::assert_invalid","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":5953},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":181429,"byte_end":181445,"line_start":332,"line_end":332,"column_start":21,"column_end":37},"name":"assert_malformed","qualname":"::ast::kw::assert_malformed","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":5965},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":181468,"byte_end":181481,"line_start":333,"line_end":333,"column_start":21,"column_end":34},"name":"assert_return","qualname":"::ast::kw::assert_return","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":5977},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":181504,"byte_end":181532,"line_start":334,"line_end":334,"column_start":21,"column_end":49},"name":"assert_return_arithmetic_nan","qualname":"::ast::kw::assert_return_arithmetic_nan","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":5989},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":181555,"byte_end":181589,"line_start":335,"line_end":335,"column_start":21,"column_end":55},"name":"assert_return_arithmetic_nan_f32x4","qualname":"::ast::kw::assert_return_arithmetic_nan_f32x4","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6001},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":181612,"byte_end":181646,"line_start":336,"line_end":336,"column_start":21,"column_end":55},"name":"assert_return_arithmetic_nan_f64x2","qualname":"::ast::kw::assert_return_arithmetic_nan_f64x2","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6013},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":181669,"byte_end":181696,"line_start":337,"line_end":337,"column_start":21,"column_end":48},"name":"assert_return_canonical_nan","qualname":"::ast::kw::assert_return_canonical_nan","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6025},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":181719,"byte_end":181752,"line_start":338,"line_end":338,"column_start":21,"column_end":54},"name":"assert_return_canonical_nan_f32x4","qualname":"::ast::kw::assert_return_canonical_nan_f32x4","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6037},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":181775,"byte_end":181808,"line_start":339,"line_end":339,"column_start":21,"column_end":54},"name":"assert_return_canonical_nan_f64x2","qualname":"::ast::kw::assert_return_canonical_nan_f64x2","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6049},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":181831,"byte_end":181849,"line_start":340,"line_end":340,"column_start":21,"column_end":39},"name":"assert_return_func","qualname":"::ast::kw::assert_return_func","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6061},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":181872,"byte_end":181883,"line_start":341,"line_end":341,"column_start":21,"column_end":32},"name":"assert_trap","qualname":"::ast::kw::assert_trap","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6073},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":181906,"byte_end":181923,"line_start":342,"line_end":342,"column_start":21,"column_end":38},"name":"assert_unlinkable","qualname":"::ast::kw::assert_unlinkable","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6085},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":181946,"byte_end":181952,"line_start":343,"line_end":343,"column_start":21,"column_end":27},"name":"before","qualname":"::ast::kw::before","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6097},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":181975,"byte_end":181981,"line_start":344,"line_end":344,"column_start":21,"column_end":27},"name":"binary","qualname":"::ast::kw::binary","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6109},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":182004,"byte_end":182009,"line_start":345,"line_end":345,"column_start":21,"column_end":26},"name":"block","qualname":"::ast::kw::block","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6121},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":182032,"byte_end":182036,"line_start":346,"line_end":346,"column_start":21,"column_end":25},"name":"code","qualname":"::ast::kw::code","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6133},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":182059,"byte_end":182063,"line_start":347,"line_end":347,"column_start":21,"column_end":25},"name":"data","qualname":"::ast::kw::data","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6145},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":182086,"byte_end":182093,"line_start":348,"line_end":348,"column_start":21,"column_end":28},"name":"declare","qualname":"::ast::kw::declare","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6157},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":182116,"byte_end":182120,"line_start":349,"line_end":349,"column_start":21,"column_end":25},"name":"elem","qualname":"::ast::kw::elem","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6169},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":182143,"byte_end":182146,"line_start":350,"line_end":350,"column_start":21,"column_end":24},"name":"end","qualname":"::ast::kw::end","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6181},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":182169,"byte_end":182174,"line_start":351,"line_end":351,"column_start":21,"column_end":26},"name":"event","qualname":"::ast::kw::event","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6193},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":182197,"byte_end":182200,"line_start":352,"line_end":352,"column_start":21,"column_end":24},"name":"exn","qualname":"::ast::kw::exn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6205},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":182223,"byte_end":182229,"line_start":353,"line_end":353,"column_start":21,"column_end":27},"name":"exnref","qualname":"::ast::kw::exnref","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6217},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":182252,"byte_end":182258,"line_start":354,"line_end":354,"column_start":21,"column_end":27},"name":"export","qualname":"::ast::kw::export","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6229},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":182281,"byte_end":182289,"line_start":355,"line_end":355,"column_start":21,"column_end":29},"name":"r#extern","qualname":"::ast::kw::r#extern","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6241},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":182323,"byte_end":182332,"line_start":356,"line_end":356,"column_start":21,"column_end":30},"name":"externref","qualname":"::ast::kw::externref","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6253},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":182355,"byte_end":182357,"line_start":357,"line_end":357,"column_start":21,"column_end":23},"name":"eq","qualname":"::ast::kw::eq","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6265},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":182380,"byte_end":182385,"line_start":358,"line_end":358,"column_start":21,"column_end":26},"name":"eqref","qualname":"::ast::kw::eqref","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6277},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":182408,"byte_end":182411,"line_start":359,"line_end":359,"column_start":21,"column_end":24},"name":"f32","qualname":"::ast::kw::f32","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6289},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":182434,"byte_end":182439,"line_start":360,"line_end":360,"column_start":21,"column_end":26},"name":"f32x4","qualname":"::ast::kw::f32x4","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6301},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":182462,"byte_end":182465,"line_start":361,"line_end":361,"column_start":21,"column_end":24},"name":"f64","qualname":"::ast::kw::f64","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6313},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":182488,"byte_end":182493,"line_start":362,"line_end":362,"column_start":21,"column_end":26},"name":"f64x2","qualname":"::ast::kw::f64x2","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6325},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":182516,"byte_end":182521,"line_start":363,"line_end":363,"column_start":21,"column_end":26},"name":"field","qualname":"::ast::kw::field","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6337},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":182544,"byte_end":182549,"line_start":364,"line_end":364,"column_start":21,"column_end":26},"name":"first","qualname":"::ast::kw::first","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6349},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":182572,"byte_end":182576,"line_start":365,"line_end":365,"column_start":21,"column_end":25},"name":"func","qualname":"::ast::kw::func","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6361},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":182599,"byte_end":182606,"line_start":366,"line_end":366,"column_start":21,"column_end":28},"name":"funcref","qualname":"::ast::kw::funcref","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6373},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":182629,"byte_end":182632,"line_start":367,"line_end":367,"column_start":21,"column_end":24},"name":"get","qualname":"::ast::kw::get","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6385},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":182655,"byte_end":182661,"line_start":368,"line_end":368,"column_start":21,"column_end":27},"name":"global","qualname":"::ast::kw::global","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6397},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":182684,"byte_end":182687,"line_start":369,"line_end":369,"column_start":21,"column_end":24},"name":"i16","qualname":"::ast::kw::i16","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6409},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":182710,"byte_end":182715,"line_start":370,"line_end":370,"column_start":21,"column_end":26},"name":"i16x8","qualname":"::ast::kw::i16x8","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6421},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":182738,"byte_end":182741,"line_start":371,"line_end":371,"column_start":21,"column_end":24},"name":"i31","qualname":"::ast::kw::i31","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6433},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":182764,"byte_end":182770,"line_start":372,"line_end":372,"column_start":21,"column_end":27},"name":"i31ref","qualname":"::ast::kw::i31ref","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6445},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":182793,"byte_end":182796,"line_start":373,"line_end":373,"column_start":21,"column_end":24},"name":"i32","qualname":"::ast::kw::i32","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6457},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":182819,"byte_end":182824,"line_start":374,"line_end":374,"column_start":21,"column_end":26},"name":"i32x4","qualname":"::ast::kw::i32x4","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6469},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":182847,"byte_end":182850,"line_start":375,"line_end":375,"column_start":21,"column_end":24},"name":"i64","qualname":"::ast::kw::i64","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6481},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":182873,"byte_end":182878,"line_start":376,"line_end":376,"column_start":21,"column_end":26},"name":"i64x2","qualname":"::ast::kw::i64x2","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6493},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":182901,"byte_end":182903,"line_start":377,"line_end":377,"column_start":21,"column_end":23},"name":"i8","qualname":"::ast::kw::i8","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6505},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":182926,"byte_end":182931,"line_start":378,"line_end":378,"column_start":21,"column_end":26},"name":"i8x16","qualname":"::ast::kw::i8x16","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6517},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":182954,"byte_end":182960,"line_start":379,"line_end":379,"column_start":21,"column_end":27},"name":"import","qualname":"::ast::kw::import","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6529},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":182983,"byte_end":182991,"line_start":380,"line_end":380,"column_start":21,"column_end":29},"name":"instance","qualname":"::ast::kw::instance","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6541},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":183014,"byte_end":183025,"line_start":381,"line_end":381,"column_start":21,"column_end":32},"name":"instantiate","qualname":"::ast::kw::instantiate","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6553},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":183048,"byte_end":183054,"line_start":382,"line_end":382,"column_start":21,"column_end":27},"name":"invoke","qualname":"::ast::kw::invoke","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6565},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":183077,"byte_end":183081,"line_start":383,"line_end":383,"column_start":21,"column_end":25},"name":"item","qualname":"::ast::kw::item","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6577},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":183104,"byte_end":183108,"line_start":384,"line_end":384,"column_start":21,"column_end":25},"name":"last","qualname":"::ast::kw::last","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6589},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":183131,"byte_end":183136,"line_start":385,"line_end":385,"column_start":21,"column_end":26},"name":"local","qualname":"::ast::kw::local","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6601},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":183159,"byte_end":183165,"line_start":386,"line_end":386,"column_start":21,"column_end":27},"name":"memory","qualname":"::ast::kw::memory","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6613},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":183188,"byte_end":183194,"line_start":387,"line_end":387,"column_start":21,"column_end":27},"name":"module","qualname":"::ast::kw::module","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6625},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":183217,"byte_end":183227,"line_start":388,"line_end":388,"column_start":21,"column_end":31},"name":"modulecode","qualname":"::ast::kw::modulecode","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6637},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":183250,"byte_end":183264,"line_start":389,"line_end":389,"column_start":21,"column_end":35},"name":"nan_arithmetic","qualname":"::ast::kw::nan_arithmetic","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6649},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":183306,"byte_end":183319,"line_start":390,"line_end":390,"column_start":21,"column_end":34},"name":"nan_canonical","qualname":"::ast::kw::nan_canonical","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6661},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":183360,"byte_end":183364,"line_start":391,"line_end":391,"column_start":21,"column_end":25},"name":"null","qualname":"::ast::kw::null","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6673},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":183387,"byte_end":183394,"line_start":392,"line_end":392,"column_start":21,"column_end":28},"name":"nullref","qualname":"::ast::kw::nullref","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6685},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":183417,"byte_end":183423,"line_start":393,"line_end":393,"column_start":21,"column_end":27},"name":"offset","qualname":"::ast::kw::offset","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6697},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":183446,"byte_end":183451,"line_start":394,"line_end":394,"column_start":21,"column_end":26},"name":"param","qualname":"::ast::kw::param","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6709},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":183474,"byte_end":183480,"line_start":395,"line_end":395,"column_start":21,"column_end":27},"name":"parent","qualname":"::ast::kw::parent","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6721},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":183503,"byte_end":183510,"line_start":396,"line_end":396,"column_start":21,"column_end":28},"name":"passive","qualname":"::ast::kw::passive","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6733},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":183533,"byte_end":183538,"line_start":397,"line_end":397,"column_start":21,"column_end":26},"name":"quote","qualname":"::ast::kw::quote","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6745},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":183561,"byte_end":183567,"line_start":398,"line_end":398,"column_start":21,"column_end":27},"name":"r#else","qualname":"::ast::kw::r#else","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6757},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":183599,"byte_end":183603,"line_start":399,"line_end":399,"column_start":21,"column_end":25},"name":"r#if","qualname":"::ast::kw::r#if","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6769},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":183633,"byte_end":183639,"line_start":400,"line_end":400,"column_start":21,"column_end":27},"name":"r#loop","qualname":"::ast::kw::r#loop","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6781},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":183671,"byte_end":183676,"line_start":401,"line_end":401,"column_start":21,"column_end":26},"name":"r#mut","qualname":"::ast::kw::r#mut","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6793},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":183707,"byte_end":183713,"line_start":402,"line_end":402,"column_start":21,"column_end":27},"name":"r#type","qualname":"::ast::kw::r#type","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6805},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":183745,"byte_end":183750,"line_start":403,"line_end":403,"column_start":21,"column_end":26},"name":"r#ref","qualname":"::ast::kw::r#ref","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6817},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":183781,"byte_end":183789,"line_start":404,"line_end":404,"column_start":21,"column_end":29},"name":"ref_func","qualname":"::ast::kw::ref_func","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6829},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":183825,"byte_end":183833,"line_start":405,"line_end":405,"column_start":21,"column_end":29},"name":"ref_null","qualname":"::ast::kw::ref_null","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6841},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":183869,"byte_end":183877,"line_start":406,"line_end":406,"column_start":21,"column_end":29},"name":"register","qualname":"::ast::kw::register","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6853},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":183900,"byte_end":183906,"line_start":407,"line_end":407,"column_start":21,"column_end":27},"name":"result","qualname":"::ast::kw::result","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6865},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":183929,"byte_end":183932,"line_start":408,"line_end":408,"column_start":21,"column_end":24},"name":"rtt","qualname":"::ast::kw::rtt","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6877},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":183955,"byte_end":183961,"line_start":409,"line_end":409,"column_start":21,"column_end":27},"name":"shared","qualname":"::ast::kw::shared","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6889},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":183984,"byte_end":183989,"line_start":410,"line_end":410,"column_start":21,"column_end":26},"name":"start","qualname":"::ast::kw::start","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6901},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":184012,"byte_end":184020,"line_start":411,"line_end":411,"column_start":21,"column_end":29},"name":"r#struct","qualname":"::ast::kw::r#struct","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6913},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":184054,"byte_end":184059,"line_start":412,"line_end":412,"column_start":21,"column_end":26},"name":"table","qualname":"::ast::kw::table","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6925},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":184082,"byte_end":184086,"line_start":413,"line_end":413,"column_start":21,"column_end":25},"name":"then","qualname":"::ast::kw::then","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6937},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":184109,"byte_end":184113,"line_start":414,"line_end":414,"column_start":21,"column_end":25},"name":"v128","qualname":"::ast::kw::v128","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172389,"byte_end":172419,"line_start":44,"line_end":44,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":172428,"byte_end":172450,"line_start":45,"line_end":45,"column_start":9,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":560},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":184188,"byte_end":184198,"line_start":418,"line_end":418,"column_start":9,"column_end":19},"name":"annotation","qualname":"::ast::annotation","value":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","parent":null,"children":[{"krate":0,"index":6949},{"krate":0,"index":6952},{"krate":0,"index":6942},{"krate":0,"index":6946},{"krate":0,"index":6961},{"krate":0,"index":6964},{"krate":0,"index":6954},{"krate":0,"index":6958}],"decl_id":null,"docs":" Common annotations used to parse WebAssembly text files.\n","sig":null,"attributes":[{"value":"/ Common annotations used to parse WebAssembly text files.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":184119,"byte_end":184179,"line_start":417,"line_end":417,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":6949},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":184217,"byte_end":184223,"line_start":419,"line_end":419,"column_start":17,"column_end":23},"name":"custom","qualname":"::ast::annotation::custom","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":179569,"byte_end":179599,"line_start":260,"line_end":260,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":179608,"byte_end":179630,"line_start":261,"line_end":261,"column_start":9,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":6961},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":184242,"byte_end":184246,"line_start":420,"line_end":420,"column_start":17,"column_end":21},"name":"name","qualname":"::ast::annotation::name","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":179569,"byte_end":179599,"line_start":260,"line_end":260,"column_start":9,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/mod.rs","byte_start":179608,"byte_end":179630,"line_start":261,"line_end":261,"column_start":9,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":562},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lexer","qualname":"::lexer","value":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":6966},{"krate":0,"index":6970},{"krate":0,"index":6973},{"krate":0,"index":6990},{"krate":0,"index":6984},{"krate":0,"index":6986},{"krate":0,"index":6993},{"krate":0,"index":7025},{"krate":0,"index":7019},{"krate":0,"index":7021},{"krate":0,"index":7028},{"krate":0,"index":7042},{"krate":0,"index":7036},{"krate":0,"index":7038},{"krate":0,"index":7045},{"krate":0,"index":7083},{"krate":0,"index":7081},{"krate":0,"index":7077},{"krate":0,"index":7078},{"krate":0,"index":7085},{"krate":0,"index":7096},{"krate":0,"index":7090},{"krate":0,"index":7092},{"krate":0,"index":7099},{"krate":0,"index":7109},{"krate":0,"index":7103},{"krate":0,"index":7105},{"krate":0,"index":7112},{"krate":0,"index":7130},{"krate":0,"index":7124},{"krate":0,"index":7126},{"krate":0,"index":571},{"krate":0,"index":612},{"krate":0,"index":616},{"krate":0,"index":619},{"krate":0,"index":622},{"krate":0,"index":625},{"krate":0,"index":629},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636}],"decl_id":null,"docs":" Definition of a lexer for the WebAssembly text format.","sig":null,"attributes":[{"value":"! Definition of a lexer for the WebAssembly text format.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":184252,"byte_end":184310,"line_start":1,"line_end":1,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":184311,"byte_end":184314,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module provides a [`Lexer`][] type which is an iterate over the raw","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":184315,"byte_end":184391,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"! tokens of a WebAssembly text file. A [`Lexer`][] accounts for every single","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":184392,"byte_end":184470,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"! byte in a WebAssembly text field, returning tokens even for comments and","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":184471,"byte_end":184547,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"! whitespace. Typically you'll ignore comments and whitespace, however.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":184548,"byte_end":184621,"line_start":6,"line_end":6,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":184622,"byte_end":184625,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! If you'd like to iterate over the tokens in a file you can do so via:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":184626,"byte_end":184699,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":184700,"byte_end":184703,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":184704,"byte_end":184711,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"! # fn foo() -> Result<(), wast::Error> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":184712,"byte_end":184755,"line_start":11,"line_end":11,"column_start":1,"column_end":44}},{"value":"! use wast::lexer::Lexer;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":184756,"byte_end":184783,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":184784,"byte_end":184787,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! let wat = \"(module (func $foo))\";","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":184788,"byte_end":184825,"line_start":14,"line_end":14,"column_start":1,"column_end":38}},{"value":"! for token in Lexer::new(wat) {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":184826,"byte_end":184860,"line_start":15,"line_end":15,"column_start":1,"column_end":35}},{"value":"!     println!(\"{:?}\", token?);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":184861,"byte_end":184894,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"! }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":184895,"byte_end":184900,"line_start":17,"line_end":17,"column_start":1,"column_end":6}},{"value":"! # Ok(())","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":184901,"byte_end":184913,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":184914,"byte_end":184921,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":184922,"byte_end":184929,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":184930,"byte_end":184933,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! Note that you'll typically not use this module but will rather use","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":184934,"byte_end":185004,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"! [`ParseBuffer`](crate::parser::ParseBuffer) instead.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":185005,"byte_end":185061,"line_start":23,"line_end":23,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":185062,"byte_end":185065,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! [`Lexer`]: crate::lexer::Lexer","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":185066,"byte_end":185100,"line_start":25,"line_end":25,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6966},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":185504,"byte_end":185509,"line_start":40,"line_end":40,"column_start":12,"column_end":17},"name":"Lexer","qualname":"::lexer::Lexer","value":"Lexer {  }","parent":null,"children":[{"krate":0,"index":6968},{"krate":0,"index":6969}],"decl_id":null,"docs":" A structure used to lex the s-expression syntax of WAT files.","sig":null,"attributes":[{"value":"/ A structure used to lex the s-expression syntax of WAT files.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":185209,"byte_end":185274,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":185275,"byte_end":185278,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This structure is used to generate [`Source`] items, which should account for","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":185279,"byte_end":185360,"line_start":36,"line_end":36,"column_start":1,"column_end":82}},{"value":"/ every single byte of the input as we iterate over it. A [`LexError`] is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":185361,"byte_end":185436,"line_start":37,"line_end":37,"column_start":1,"column_end":76}},{"value":"/ returned for any non-lexable text.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":185437,"byte_end":185475,"line_start":38,"line_end":38,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6975},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":185954,"byte_end":185961,"line_start":54,"line_end":54,"column_start":5,"column_end":12},"name":"Comment","qualname":"::lexer::Source::Comment","value":"Source::Comment(Comment)","parent":{"krate":0,"index":6973},"children":[],"decl_id":null,"docs":" A fragment of source that is a comment, either a line or a block\n comment.\n","sig":null,"attributes":[{"value":"/ A fragment of source that is a comment, either a line or a block","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":185864,"byte_end":185932,"line_start":52,"line_end":52,"column_start":5,"column_end":73}},{"value":"/ comment.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":185937,"byte_end":185949,"line_start":53,"line_end":53,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6978},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":186037,"byte_end":186047,"line_start":56,"line_end":56,"column_start":5,"column_end":15},"name":"Whitespace","qualname":"::lexer::Source::Whitespace","value":"Source::Whitespace(&'a str)","parent":{"krate":0,"index":6973},"children":[],"decl_id":null,"docs":" A fragment of source that represents whitespace.\n","sig":null,"attributes":[{"value":"/ A fragment of source that represents whitespace.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":185980,"byte_end":186032,"line_start":55,"line_end":55,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6981},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":186137,"byte_end":186142,"line_start":58,"line_end":58,"column_start":5,"column_end":10},"name":"Token","qualname":"::lexer::Source::Token","value":"Source::Token(Token)","parent":{"krate":0,"index":6973},"children":[],"decl_id":null,"docs":" A fragment of source that represents an actual s-expression token.\n","sig":null,"attributes":[{"value":"/ A fragment of source that represents an actual s-expression token.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":186062,"byte_end":186132,"line_start":57,"line_end":57,"column_start":5,"column_end":75}}]},{"kind":"Enum","id":{"krate":0,"index":6973},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":185847,"byte_end":185853,"line_start":51,"line_end":51,"column_start":10,"column_end":16},"name":"Source","qualname":"::lexer::Source","value":"pub enum Source<'a> {\n\n    /// A fragment of source that is a comment, either a line or a block\n    /// comment.\n    Comment(Comment),\n\n    /// A fragment of source that represents whitespace.\n    Whitespace(&'a str),\n\n    /// A fragment of source that represents an actual s-expression token.\n    Token(Token),\n}","parent":null,"children":[{"krate":0,"index":6975},{"krate":0,"index":6978},{"krate":0,"index":6981}],"decl_id":null,"docs":" A fragment of source lex'd from an input string.","sig":null,"attributes":[{"value":"/ A fragment of source lex'd from an input string.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":185585,"byte_end":185637,"line_start":45,"line_end":45,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":185638,"byte_end":185641,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This enumeration contains all kinds of fragments, including comments and","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":185642,"byte_end":185718,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ whitespace. For most cases you'll probably ignore these and simply look at","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":185719,"byte_end":185797,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ tokens.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":185798,"byte_end":185809,"line_start":49,"line_end":49,"column_start":1,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6995},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":186355,"byte_end":186361,"line_start":65,"line_end":65,"column_start":5,"column_end":11},"name":"LParen","qualname":"::lexer::Token::LParen","value":"Token::LParen(&'a str)","parent":{"krate":0,"index":6993},"children":[],"decl_id":null,"docs":" A left-parenthesis, including the source text for where it comes from.\n","sig":null,"attributes":[{"value":"/ A left-parenthesis, including the source text for where it comes from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":186276,"byte_end":186350,"line_start":64,"line_end":64,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6998},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":186456,"byte_end":186462,"line_start":67,"line_end":67,"column_start":5,"column_end":11},"name":"RParen","qualname":"::lexer::Token::RParen","value":"Token::RParen(&'a str)","parent":{"krate":0,"index":6993},"children":[],"decl_id":null,"docs":" A right-parenthesis, including the source text for where it comes from.\n","sig":null,"attributes":[{"value":"/ A right-parenthesis, including the source text for where it comes from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":186376,"byte_end":186451,"line_start":66,"line_end":66,"column_start":5,"column_end":80}}]},{"kind":"StructVariant","id":{"krate":0,"index":7001},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":186539,"byte_end":186545,"line_start":70,"line_end":70,"column_start":5,"column_end":11},"name":"String","qualname":"::lexer::Token::String","value":"Token::String { val, src }","parent":{"krate":0,"index":6993},"children":[],"decl_id":null,"docs":" A string literal, which is actually a list of bytes.\n","sig":null,"attributes":[{"value":"/ A string literal, which is actually a list of bytes.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":186478,"byte_end":186534,"line_start":69,"line_end":69,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7004},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":186880,"byte_end":186882,"line_start":81,"line_end":81,"column_start":5,"column_end":7},"name":"Id","qualname":"::lexer::Token::Id","value":"Token::Id(&'a str)","parent":{"krate":0,"index":6993},"children":[],"decl_id":null,"docs":" An identifier (like `$foo`).","sig":null,"attributes":[{"value":"/ An identifier (like `$foo`).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":186738,"byte_end":186770,"line_start":77,"line_end":77,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":186775,"byte_end":186778,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ All identifiers start with `$` and the payload here is the original","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":186783,"byte_end":186854,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ source text.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":186859,"byte_end":186875,"line_start":80,"line_end":80,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7007},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":187034,"byte_end":187041,"line_start":86,"line_end":86,"column_start":5,"column_end":12},"name":"Keyword","qualname":"::lexer::Token::Keyword","value":"Token::Keyword(&'a str)","parent":{"krate":0,"index":6993},"children":[],"decl_id":null,"docs":" A keyword, or something that starts with an alphabetic character.","sig":null,"attributes":[{"value":"/ A keyword, or something that starts with an alphabetic character.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":186898,"byte_end":186967,"line_start":83,"line_end":83,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":186972,"byte_end":186975,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ The payload here is the original source text.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":186980,"byte_end":187029,"line_start":85,"line_end":85,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7010},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":187216,"byte_end":187224,"line_start":90,"line_end":90,"column_start":5,"column_end":13},"name":"Reserved","qualname":"::lexer::Token::Reserved","value":"Token::Reserved(&'a str)","parent":{"krate":0,"index":6993},"children":[],"decl_id":null,"docs":" A reserved series of `idchar` symbols. Unknown what this is meant to be\n used for, you'll probably generate an error about an unexpected token.\n","sig":null,"attributes":[{"value":"/ A reserved series of `idchar` symbols. Unknown what this is meant to be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":187057,"byte_end":187132,"line_start":88,"line_end":88,"column_start":5,"column_end":80}},{"value":"/ used for, you'll probably generate an error about an unexpected token.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":187137,"byte_end":187211,"line_start":89,"line_end":89,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7013},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":187260,"byte_end":187267,"line_start":93,"line_end":93,"column_start":5,"column_end":12},"name":"Integer","qualname":"::lexer::Token::Integer","value":"Token::Integer(Integer)","parent":{"krate":0,"index":6993},"children":[],"decl_id":null,"docs":" An integer.\n","sig":null,"attributes":[{"value":"/ An integer.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":187240,"byte_end":187255,"line_start":92,"line_end":92,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7016},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":187304,"byte_end":187309,"line_start":96,"line_end":96,"column_start":5,"column_end":10},"name":"Float","qualname":"::lexer::Token::Float","value":"Token::Float(Float)","parent":{"krate":0,"index":6993},"children":[],"decl_id":null,"docs":" A float.\n","sig":null,"attributes":[{"value":"/ A float.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":187287,"byte_end":187299,"line_start":95,"line_end":95,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":6993},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":186260,"byte_end":186265,"line_start":63,"line_end":63,"column_start":10,"column_end":15},"name":"Token","qualname":"::lexer::Token","value":"pub enum Token<'a> {\n\n    /// A left-parenthesis, including the source text for where it comes from.\n    LParen(&'a str),\n\n    /// A right-parenthesis, including the source text for where it comes from.\n    RParen(&'a str),\n\n    /// A string literal, which is actually a list of bytes.\n    String {\n        /// The list of bytes that this string literal represents.\n        val: Cow,\n        /// The original source text of this string literal.\n        src: &'a str,\n    },\n\n    /// An identifier (like `$foo`).\n    ///\n    /// All identifiers start with `$` and the payload here is the original\n    /// source text.\n    Id(&'a str),\n\n    /// A keyword, or something that starts with an alphabetic character.\n    ///\n    /// The payload here is the original source text.\n    Keyword(&'a str),\n\n    /// A reserved series of `idchar` symbols. Unknown what this is meant to be\n    /// used for, you'll probably generate an error about an unexpected token.\n    Reserved(&'a str),\n\n    /// An integer.\n    Integer(Integer),\n\n    /// A float.\n    Float(Float),\n}","parent":null,"children":[{"krate":0,"index":6995},{"krate":0,"index":6998},{"krate":0,"index":7001},{"krate":0,"index":7004},{"krate":0,"index":7007},{"krate":0,"index":7010},{"krate":0,"index":7013},{"krate":0,"index":7016}],"decl_id":null,"docs":" The kinds of tokens that can be lexed for WAT s-expressions.\n","sig":null,"attributes":[{"value":"/ The kinds of tokens that can be lexed for WAT s-expressions.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":186158,"byte_end":186222,"line_start":61,"line_end":61,"column_start":1,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7030},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":187634,"byte_end":187638,"line_start":107,"line_end":107,"column_start":5,"column_end":9},"name":"Line","qualname":"::lexer::Comment::Line","value":"Comment::Line(&'a str)","parent":{"krate":0,"index":7028},"children":[],"decl_id":null,"docs":" A line comment, preceded with `;;`\n","sig":null,"attributes":[{"value":"/ A line comment, preceded with `;;`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":187591,"byte_end":187629,"line_start":106,"line_end":106,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7033},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":187747,"byte_end":187752,"line_start":111,"line_end":111,"column_start":5,"column_end":10},"name":"Block","qualname":"::lexer::Comment::Block","value":"Comment::Block(&'a str)","parent":{"krate":0,"index":7028},"children":[],"decl_id":null,"docs":" A block comment, surrounded by `(;` and `;)`. Note that these can be\n nested.\n","sig":null,"attributes":[{"value":"/ A block comment, surrounded by `(;` and `;)`. Note that these can be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":187654,"byte_end":187726,"line_start":109,"line_end":109,"column_start":5,"column_end":77}},{"value":"/ nested.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":187731,"byte_end":187742,"line_start":110,"line_end":110,"column_start":5,"column_end":16}}]},{"kind":"Enum","id":{"krate":0,"index":7028},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":187573,"byte_end":187580,"line_start":105,"line_end":105,"column_start":10,"column_end":17},"name":"Comment","qualname":"::lexer::Comment","value":"pub enum Comment<'a> {\n\n    /// A line comment, preceded with `;;`\n    Line(&'a str),\n\n    /// A block comment, surrounded by `(;` and `;)`. Note that these can be\n    /// nested.\n    Block(&'a str),\n}","parent":null,"children":[{"krate":0,"index":7030},{"krate":0,"index":7033}],"decl_id":null,"docs":" The types of comments that can be lexed from WAT source text, including the\n original text of the comment itself.","sig":null,"attributes":[{"value":"/ The types of comments that can be lexed from WAT source text, including the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":187325,"byte_end":187404,"line_start":99,"line_end":99,"column_start":1,"column_end":80}},{"value":"/ original text of the comment itself.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":187405,"byte_end":187445,"line_start":100,"line_end":100,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":187446,"byte_end":187449,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ Note that the original text here includes the symbols for the comment","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":187450,"byte_end":187523,"line_start":102,"line_end":102,"column_start":1,"column_end":74}},{"value":"/ itself.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":187524,"byte_end":187535,"line_start":103,"line_end":103,"column_start":1,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7046},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":188131,"byte_end":188151,"line_start":122,"line_end":122,"column_start":5,"column_end":25},"name":"DanglingBlockComment","qualname":"::lexer::LexError::DanglingBlockComment","value":"LexError::DanglingBlockComment","parent":{"krate":0,"index":7045},"children":[],"decl_id":null,"docs":" A dangling block comment was found with an unbalanced `(;` which was\n never terminated in the file.\n","sig":null,"attributes":[{"value":"/ A dangling block comment was found with an unbalanced `(;` which was","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":188016,"byte_end":188088,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ never terminated in the file.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":188093,"byte_end":188126,"line_start":121,"line_end":121,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7048},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":188269,"byte_end":188279,"line_start":126,"line_end":126,"column_start":5,"column_end":15},"name":"Unexpected","qualname":"::lexer::LexError::Unexpected","value":"LexError::Unexpected(char)","parent":{"krate":0,"index":7045},"children":[],"decl_id":null,"docs":" An unexpected character was encountered when generally parsing and\n looking for something else.\n","sig":null,"attributes":[{"value":"/ An unexpected character was encountered when generally parsing and","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":188158,"byte_end":188228,"line_start":124,"line_end":124,"column_start":5,"column_end":75}},{"value":"/ looking for something else.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":188233,"byte_end":188264,"line_start":125,"line_end":125,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7051},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":188349,"byte_end":188369,"line_start":129,"line_end":129,"column_start":5,"column_end":25},"name":"InvalidStringElement","qualname":"::lexer::LexError::InvalidStringElement","value":"LexError::InvalidStringElement(char)","parent":{"krate":0,"index":7045},"children":[],"decl_id":null,"docs":" An invalid `char` in a string literal was found.\n","sig":null,"attributes":[{"value":"/ An invalid `char` in a string literal was found.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":188292,"byte_end":188344,"line_start":128,"line_end":128,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7054},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":188485,"byte_end":188504,"line_start":133,"line_end":133,"column_start":5,"column_end":24},"name":"InvalidStringEscape","qualname":"::lexer::LexError::InvalidStringEscape","value":"LexError::InvalidStringEscape(char)","parent":{"krate":0,"index":7045},"children":[],"decl_id":null,"docs":" An invalid string escape letter was found (the thing after the `\\` in\n string literals)\n","sig":null,"attributes":[{"value":"/ An invalid string escape letter was found (the thing after the `\\` in","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":188382,"byte_end":188455,"line_start":131,"line_end":131,"column_start":5,"column_end":78}},{"value":"/ string literals)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":188460,"byte_end":188480,"line_start":132,"line_end":132,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7057},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":188565,"byte_end":188580,"line_start":136,"line_end":136,"column_start":5,"column_end":20},"name":"InvalidHexDigit","qualname":"::lexer::LexError::InvalidHexDigit","value":"LexError::InvalidHexDigit(char)","parent":{"krate":0,"index":7045},"children":[],"decl_id":null,"docs":" An invalid hexadecimal digit was found.\n","sig":null,"attributes":[{"value":"/ An invalid hexadecimal digit was found.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":188517,"byte_end":188560,"line_start":135,"line_end":135,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7060},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":188637,"byte_end":188649,"line_start":139,"line_end":139,"column_start":5,"column_end":17},"name":"InvalidDigit","qualname":"::lexer::LexError::InvalidDigit","value":"LexError::InvalidDigit(char)","parent":{"krate":0,"index":7045},"children":[],"decl_id":null,"docs":" An invalid base-10 digit was found.\n","sig":null,"attributes":[{"value":"/ An invalid base-10 digit was found.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":188593,"byte_end":188632,"line_start":138,"line_end":138,"column_start":5,"column_end":44}}]},{"kind":"StructVariant","id":{"krate":0,"index":7063},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":188783,"byte_end":188791,"line_start":143,"line_end":143,"column_start":5,"column_end":13},"name":"Expected","qualname":"::lexer::LexError::Expected","value":"LexError::Expected { wanted, found }","parent":{"krate":0,"index":7045},"children":[],"decl_id":null,"docs":" Parsing expected `wanted` but ended up finding `found` instead where the\n two characters aren't the same.\n","sig":null,"attributes":[{"value":"/ Parsing expected `wanted` but ended up finding `found` instead where the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":188662,"byte_end":188738,"line_start":141,"line_end":141,"column_start":5,"column_end":81}},{"value":"/ two characters aren't the same.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":188743,"byte_end":188778,"line_start":142,"line_end":142,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7066},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":189035,"byte_end":189048,"line_start":151,"line_end":151,"column_start":5,"column_end":18},"name":"UnexpectedEof","qualname":"::lexer::LexError::UnexpectedEof","value":"LexError::UnexpectedEof","parent":{"krate":0,"index":7045},"children":[],"decl_id":null,"docs":" We needed to parse more but EOF (or end of the string) was encountered.\n","sig":null,"attributes":[{"value":"/ We needed to parse more but EOF (or end of the string) was encountered.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":188955,"byte_end":189030,"line_start":150,"line_end":150,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7068},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":189150,"byte_end":189162,"line_start":155,"line_end":155,"column_start":5,"column_end":17},"name":"NumberTooBig","qualname":"::lexer::LexError::NumberTooBig","value":"LexError::NumberTooBig","parent":{"krate":0,"index":7045},"children":[],"decl_id":null,"docs":" A number failed to parse because it was too big to fit within the target\n type.\n","sig":null,"attributes":[{"value":"/ A number failed to parse because it was too big to fit within the target","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":189055,"byte_end":189131,"line_start":153,"line_end":153,"column_start":5,"column_end":81}},{"value":"/ type.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":189136,"byte_end":189145,"line_start":154,"line_end":154,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7070},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":189307,"byte_end":189326,"line_start":159,"line_end":159,"column_start":5,"column_end":24},"name":"InvalidUnicodeValue","qualname":"::lexer::LexError::InvalidUnicodeValue","value":"LexError::InvalidUnicodeValue(u32)","parent":{"krate":0,"index":7045},"children":[],"decl_id":null,"docs":" An invalid unicode value was found in a `\\u{...}` escape in a string,\n only valid unicode scalars can be escaped that way.\n","sig":null,"attributes":[{"value":"/ An invalid unicode value was found in a `\\u{...}` escape in a string,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":189169,"byte_end":189242,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/ only valid unicode scalars can be escaped that way.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":189247,"byte_end":189302,"line_start":158,"line_end":158,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7073},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":189490,"byte_end":189504,"line_start":163,"line_end":163,"column_start":5,"column_end":19},"name":"LoneUnderscore","qualname":"::lexer::LexError::LoneUnderscore","value":"LexError::LoneUnderscore","parent":{"krate":0,"index":7045},"children":[],"decl_id":null,"docs":" A lone underscore was found when parsing a number, since underscores\n should always be preceded and succeeded with a digit of some form.\n","sig":null,"attributes":[{"value":"/ A lone underscore was found when parsing a number, since underscores","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":189338,"byte_end":189410,"line_start":161,"line_end":161,"column_start":5,"column_end":77}},{"value":"/ should always be preceded and succeeded with a digit of some form.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":189415,"byte_end":189485,"line_start":162,"line_end":162,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7075},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":189530,"byte_end":189545,"line_start":166,"line_end":166,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::lexer::LexError::__Nonexhaustive","value":"LexError::__Nonexhaustive","parent":{"krate":0,"index":7045},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7045},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":188001,"byte_end":188009,"line_start":119,"line_end":119,"column_start":10,"column_end":18},"name":"LexError","qualname":"::lexer::LexError","value":"pub enum LexError {\n\n    /// A dangling block comment was found with an unbalanced `(;` which was\n    /// never terminated in the file.\n    DanglingBlockComment,\n\n    /// An unexpected character was encountered when generally parsing and\n    /// looking for something else.\n    Unexpected(char),\n\n    /// An invalid `char` in a string literal was found.\n    InvalidStringElement(char),\n\n    /// An invalid string escape letter was found (the thing after the `\\` in\n    /// string literals)\n    InvalidStringEscape(char),\n\n    /// An invalid hexadecimal digit was found.\n    InvalidHexDigit(char),\n\n    /// An invalid base-10 digit was found.\n    InvalidDigit(char),\n\n    /// Parsing expected `wanted` but ended up finding `found` instead where the\n    /// two characters aren't the same.\n    Expected {\n        /// The character that was expected to be found\n        wanted: char,\n        /// The character that was actually found\n        found: char,\n    },\n\n    /// We needed to parse more but EOF (or end of the string) was encountered.\n    UnexpectedEof,\n\n    /// A number failed to parse because it was too big to fit within the target\n    /// type.\n    NumberTooBig,\n\n    /// An invalid unicode value was found in a `\\u{...}` escape in a string,\n    /// only valid unicode scalars can be escaped that way.\n    InvalidUnicodeValue(u32),\n\n    /// A lone underscore was found when parsing a number, since underscores\n    /// should always be preceded and succeeded with a digit of some form.\n    LoneUnderscore,\n\n    #[doc(hidden)]\n    __Nonexhaustive,\n}","parent":null,"children":[{"krate":0,"index":7046},{"krate":0,"index":7048},{"krate":0,"index":7051},{"krate":0,"index":7054},{"krate":0,"index":7057},{"krate":0,"index":7060},{"krate":0,"index":7063},{"krate":0,"index":7066},{"krate":0,"index":7068},{"krate":0,"index":7070},{"krate":0,"index":7073},{"krate":0,"index":7075}],"decl_id":null,"docs":" Errors that can be generated while lexing.","sig":null,"attributes":[{"value":"/ Errors that can be generated while lexing.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":187766,"byte_end":187812,"line_start":114,"line_end":114,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":187813,"byte_end":187816,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ All lexing errors have line/colum/position information as well as a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":187817,"byte_end":187888,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/ `LexError` indicating what kind of error happened while lexing.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":187889,"byte_end":187956,"line_start":117,"line_end":117,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7085},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":189694,"byte_end":189701,"line_start":173,"line_end":173,"column_start":12,"column_end":19},"name":"Integer","qualname":"::lexer::Integer","value":"Integer {  }","parent":null,"children":[{"krate":0,"index":7087},{"krate":0,"index":7088},{"krate":0,"index":7089}],"decl_id":null,"docs":" A parsed integer, signed or unsigned.","sig":null,"attributes":[{"value":"/ A parsed integer, signed or unsigned.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":189550,"byte_end":189591,"line_start":169,"line_end":169,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":189592,"byte_end":189595,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ Methods can be use to access the value of the integer.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":189596,"byte_end":189654,"line_start":171,"line_end":171,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":7099},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":189887,"byte_end":189892,"line_start":183,"line_end":183,"column_start":12,"column_end":17},"name":"Float","qualname":"::lexer::Float","value":"Float {  }","parent":null,"children":[{"krate":0,"index":7101},{"krate":0,"index":7102}],"decl_id":null,"docs":" A parsed float.","sig":null,"attributes":[{"value":"/ A parsed float.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":189767,"byte_end":189786,"line_start":179,"line_end":179,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":189787,"byte_end":189790,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ Methods can be use to access the value of the float.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":189791,"byte_end":189847,"line_start":181,"line_end":181,"column_start":1,"column_end":57}}]},{"kind":"StructVariant","id":{"krate":0,"index":7114},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":190069,"byte_end":190072,"line_start":192,"line_end":192,"column_start":5,"column_end":8},"name":"Nan","qualname":"::lexer::FloatVal::Nan","value":"FloatVal::Nan { val, negative }","parent":{"krate":0,"index":7112},"children":[],"decl_id":null,"docs":" A float `NaN` representation\n","sig":null,"attributes":[{"value":"/ A float `NaN` representation","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":190032,"byte_end":190064,"line_start":191,"line_end":191,"column_start":5,"column_end":37}}]},{"kind":"StructVariant","id":{"krate":0,"index":7117},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":190305,"byte_end":190308,"line_start":199,"line_end":199,"column_start":5,"column_end":8},"name":"Inf","qualname":"::lexer::FloatVal::Inf","value":"FloatVal::Inf { negative }","parent":{"krate":0,"index":7112},"children":[],"decl_id":null,"docs":" An float infinite representation,\n","sig":null,"attributes":[{"value":"/ An float infinite representation,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":190263,"byte_end":190300,"line_start":198,"line_end":198,"column_start":5,"column_end":42}}]},{"kind":"StructVariant","id":{"krate":0,"index":7119},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":190429,"byte_end":190432,"line_start":204,"line_end":204,"column_start":5,"column_end":8},"name":"Val","qualname":"::lexer::FloatVal::Val","value":"FloatVal::Val { hex, integral, decimal, exponent }","parent":{"krate":0,"index":7112},"children":[],"decl_id":null,"docs":" A parsed and separated floating point value\n","sig":null,"attributes":[{"value":"/ A parsed and separated floating point value","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":190377,"byte_end":190424,"line_start":203,"line_end":203,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":7112},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":190013,"byte_end":190021,"line_start":190,"line_end":190,"column_start":10,"column_end":18},"name":"FloatVal","qualname":"::lexer::FloatVal","value":"pub enum FloatVal<'a> {\n\n    /// A float `NaN` representation\n    Nan {\n        /// The specific bits to encode for this float, optionally\n        val: Option<u64>,\n        /// Whether or not this is a negative `NaN` or not.\n        negative: bool,\n    },\n\n    /// An float infinite representation,\n    Inf {\n        #[allow(missing_docs)]\n        negative: bool,\n    },\n\n    /// A parsed and separated floating point value\n    Val {\n        /// Whether or not the `integral` and `decimal` are specified in hex\n        hex: bool,\n        /// The float parts before the `.`\n        integral: Cow,\n        /// The float parts after the `.`\n        decimal: Option<Cow>,\n        /// The exponent to multiple this `integral.decimal` portion of the\n        /// float by. If `hex` is true this is `2^exponent` and otherwise it's\n        /// `10^exponent`\n        exponent: Option<Cow>,\n    },\n}","parent":null,"children":[{"krate":0,"index":7114},{"krate":0,"index":7117},{"krate":0,"index":7119}],"decl_id":null,"docs":" Possible parsed float values\n","sig":null,"attributes":[{"value":"/ Possible parsed float values","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":189943,"byte_end":189975,"line_start":188,"line_end":188,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":191020,"byte_end":191023,"line_start":220,"line_end":220,"column_start":12,"column_end":15},"name":"new","qualname":"<Lexer>::new","value":"pub fn new(&str) -> Lexer","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lexer which will lex the `input` source string.\n","sig":null,"attributes":[{"value":"/ Creates a new lexer which will lex the `input` source string.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":190943,"byte_end":191008,"line_start":219,"line_end":219,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":191225,"byte_end":191230,"line_start":228,"line_end":228,"column_start":12,"column_end":17},"name":"input","qualname":"<Lexer>::input","value":"pub fn input(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Returns the original source input that we're lexing.\n","sig":null,"attributes":[{"value":"/ Returns the original source input that we're lexing.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":191157,"byte_end":191213,"line_start":227,"line_end":227,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":191494,"byte_end":191499,"line_start":239,"line_end":239,"column_start":12,"column_end":17},"name":"parse","qualname":"<Lexer>::parse","value":"pub fn parse(&mut Self) -> Result<Option<Source>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Lexes the next token in the input.","sig":null,"attributes":[{"value":"/ Lexes the next token in the input.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":191281,"byte_end":191319,"line_start":232,"line_end":232,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":191324,"byte_end":191327,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Returns `Some` if a token is found or `None` if we're at EOF.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":191332,"byte_end":191397,"line_start":234,"line_end":234,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":191402,"byte_end":191405,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":191410,"byte_end":191422,"line_start":236,"line_end":236,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":191427,"byte_end":191430,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the input is malformed.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":191435,"byte_end":191482,"line_start":238,"line_end":238,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":207197,"byte_end":207200,"line_start":692,"line_end":692,"column_start":12,"column_end":15},"name":"src","qualname":"<Source>::src","value":"pub fn src(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Returns the original source text for this token.\n","sig":null,"attributes":[{"value":"/ Returns the original source text for this token.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":207133,"byte_end":207185,"line_start":691,"line_end":691,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":207478,"byte_end":207481,"line_start":703,"line_end":703,"column_start":12,"column_end":15},"name":"src","qualname":"<Comment>::src","value":"pub fn src(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Returns the original source text for this comment.\n","sig":null,"attributes":[{"value":"/ Returns the original source text for this comment.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":207412,"byte_end":207466,"line_start":702,"line_end":702,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":207702,"byte_end":207705,"line_start":713,"line_end":713,"column_start":12,"column_end":15},"name":"src","qualname":"<Token>::src","value":"pub fn src(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Returns the original source text for this token.\n","sig":null,"attributes":[{"value":"/ Returns the original source text for this token.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":207638,"byte_end":207690,"line_start":712,"line_end":712,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":208161,"byte_end":208164,"line_start":729,"line_end":729,"column_start":12,"column_end":15},"name":"src","qualname":"<Integer>::src","value":"pub fn src(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Returns the original source text for this integer.\n","sig":null,"attributes":[{"value":"/ Returns the original source text for this integer.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":208095,"byte_end":208149,"line_start":728,"line_end":728,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":208346,"byte_end":208349,"line_start":735,"line_end":735,"column_start":12,"column_end":15},"name":"val","qualname":"<Integer>::val","value":"pub fn val(&Self) -> (&str, u32)","parent":null,"children":[],"decl_id":null,"docs":" Returns the value string that can be parsed for this integer, as well as\n the base that it should be parsed in\n","sig":null,"attributes":[{"value":"/ Returns the value string that can be parsed for this integer, as well as","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":208213,"byte_end":208289,"line_start":733,"line_end":733,"column_start":5,"column_end":81}},{"value":"/ the base that it should be parsed in","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":208294,"byte_end":208334,"line_start":734,"line_end":734,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":208526,"byte_end":208529,"line_start":742,"line_end":742,"column_start":12,"column_end":15},"name":"src","qualname":"<Float>::src","value":"pub fn src(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Returns the original source text for this integer.\n","sig":null,"attributes":[{"value":"/ Returns the original source text for this integer.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":208460,"byte_end":208514,"line_start":741,"line_end":741,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":208690,"byte_end":208693,"line_start":748,"line_end":748,"column_start":12,"column_end":15},"name":"val","qualname":"<Float>::val","value":"pub fn val(&Self) -> &FloatVal","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed value of this float with all of the components still\n listed as strings.\n","sig":null,"attributes":[{"value":"/ Returns a parsed value of this float with all of the components still","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":208578,"byte_end":208651,"line_start":746,"line_end":746,"column_start":5,"column_end":78}},{"value":"/ listed as strings.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":208656,"byte_end":208678,"line_start":747,"line_end":747,"column_start":5,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":639},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"parser","qualname":"::parser","value":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","parent":null,"children":[{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":659},{"krate":0,"index":662},{"krate":0,"index":666},{"krate":0,"index":668},{"krate":0,"index":7133},{"krate":0,"index":7145},{"krate":0,"index":7143},{"krate":0,"index":7141},{"krate":0,"index":7146},{"krate":0,"index":7152},{"krate":0,"index":7149},{"krate":0,"index":674},{"krate":0,"index":7154},{"krate":0,"index":7161},{"krate":0,"index":7158},{"krate":0,"index":678},{"krate":0,"index":693},{"krate":0,"index":728},{"krate":0,"index":750},{"krate":0,"index":754}],"decl_id":null,"docs":" Traits for parsing the WebAssembly Text format","sig":null,"attributes":[{"value":"! Traits for parsing the WebAssembly Text format","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":219593,"byte_end":219643,"line_start":1,"line_end":1,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":219644,"byte_end":219647,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains the traits, abstractions, and utilities needed to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":219648,"byte_end":219722,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"! define custom parsers for WebAssembly text format items. This module exposes","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":219723,"byte_end":219803,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"! a recursive descent parsing strategy and centers around the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":219804,"byte_end":219867,"line_start":5,"line_end":5,"column_start":1,"column_end":64}},{"value":"! [`Parse`](crate::parser::Parse) trait for defining new fragments of","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":219868,"byte_end":219939,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"! WebAssembly text syntax.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":219940,"byte_end":219968,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":219969,"byte_end":219972,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! The top-level [`parse`](crate::parser::parse) function can be used to fully parse AST fragments:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":219973,"byte_end":220073,"line_start":9,"line_end":9,"column_start":1,"column_end":101}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":220074,"byte_end":220077,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":220078,"byte_end":220085,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"! use wast::Wat;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":220086,"byte_end":220104,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"! use wast::parser::{self, ParseBuffer};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":220105,"byte_end":220147,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":220148,"byte_end":220151,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! # fn foo() -> Result<(), wast::Error> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":220152,"byte_end":220195,"line_start":15,"line_end":15,"column_start":1,"column_end":44}},{"value":"! let wat = \"(module (func))\";","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":220196,"byte_end":220228,"line_start":16,"line_end":16,"column_start":1,"column_end":33}},{"value":"! let buf = ParseBuffer::new(wat)?;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":220229,"byte_end":220266,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"! let module = parser::parse::<Wat>(&buf)?;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":220267,"byte_end":220312,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"! # Ok(())","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":220313,"byte_end":220325,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":220326,"byte_end":220333,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":220334,"byte_end":220341,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":220342,"byte_end":220345,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! and you can also define your own new syntax with the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":220346,"byte_end":220402,"line_start":23,"line_end":23,"column_start":1,"column_end":57}},{"value":"! [`Parse`](crate::parser::Parse) trait:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":220403,"byte_end":220445,"line_start":24,"line_end":24,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":220446,"byte_end":220449,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":220450,"byte_end":220457,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"! use wast::{kw, Import, Func};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":220458,"byte_end":220491,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"! use wast::parser::{Parser, Parse, Result};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":220492,"byte_end":220538,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":220539,"byte_end":220542,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! // Fields of a WebAssembly which only allow imports and functions, and all","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":220543,"byte_end":220621,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"! // imports must come before all the functions","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":220622,"byte_end":220671,"line_start":31,"line_end":31,"column_start":1,"column_end":50}},{"value":"! struct OnlyImportsAndFunctions<'a> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":220672,"byte_end":220712,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"!     imports: Vec<Import<'a>>,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":220713,"byte_end":220746,"line_start":33,"line_end":33,"column_start":1,"column_end":34}},{"value":"!     functions: Vec<Func<'a>>,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":220747,"byte_end":220780,"line_start":34,"line_end":34,"column_start":1,"column_end":34}},{"value":"! }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":220781,"byte_end":220786,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":220787,"byte_end":220790,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"! impl<'a> Parse<'a> for OnlyImportsAndFunctions<'a> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":220791,"byte_end":220847,"line_start":37,"line_end":37,"column_start":1,"column_end":57}},{"value":"!     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":220848,"byte_end":220902,"line_start":38,"line_end":38,"column_start":1,"column_end":55}},{"value":"!         // While the second token is `import` (the first is `(`, so we care","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":220903,"byte_end":220982,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"!         // about the second) we parse an `ast::ModuleImport` inside of","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":220983,"byte_end":221057,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"!         // parentheses. The `parens` function here ensures that what we","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":221058,"byte_end":221133,"line_start":41,"line_end":41,"column_start":1,"column_end":76}},{"value":"!         // parse inside of it is surrounded by `(` and `)`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":221134,"byte_end":221197,"line_start":42,"line_end":42,"column_start":1,"column_end":64}},{"value":"!         let mut imports = Vec::new();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":221198,"byte_end":221239,"line_start":43,"line_end":43,"column_start":1,"column_end":42}},{"value":"!         while parser.peek2::<kw::import>() {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":221240,"byte_end":221288,"line_start":44,"line_end":44,"column_start":1,"column_end":49}},{"value":"!             let import = parser.parens(|p| p.parse())?;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":221289,"byte_end":221348,"line_start":45,"line_end":45,"column_start":1,"column_end":60}},{"value":"!             imports.push(import);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":221349,"byte_end":221386,"line_start":46,"line_end":46,"column_start":1,"column_end":38}},{"value":"!         }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":221387,"byte_end":221400,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":221401,"byte_end":221404,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"!         // Afterwards we assume everything else is a function. Note that","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":221405,"byte_end":221481,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"!         // `parse` here is a generic function and type inference figures out","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":221482,"byte_end":221562,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"!         // that we're parsing functions here and imports above.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":221563,"byte_end":221630,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"!         let mut functions = Vec::new();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":221631,"byte_end":221674,"line_start":52,"line_end":52,"column_start":1,"column_end":44}},{"value":"!         while !parser.is_empty() {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":221675,"byte_end":221713,"line_start":53,"line_end":53,"column_start":1,"column_end":39}},{"value":"!             let func = parser.parens(|p| p.parse())?;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":221714,"byte_end":221771,"line_start":54,"line_end":54,"column_start":1,"column_end":58}},{"value":"!             functions.push(func);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":221772,"byte_end":221809,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"!         }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":221810,"byte_end":221823,"line_start":56,"line_end":56,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":221824,"byte_end":221827,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"!         Ok(OnlyImportsAndFunctions { imports, functions })","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":221828,"byte_end":221890,"line_start":58,"line_end":58,"column_start":1,"column_end":63}},{"value":"!     }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":221891,"byte_end":221900,"line_start":59,"line_end":59,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":221901,"byte_end":221906,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":221907,"byte_end":221914,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":221915,"byte_end":221918,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! This module is heavily inspired by [`syn`](https://docs.rs/syn) so you can","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":221919,"byte_end":221997,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"! likely also draw inspiration from the excellent examples in the `syn` crate.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":221998,"byte_end":222078,"line_start":64,"line_end":64,"column_start":1,"column_end":81}}]},{"kind":"Function","id":{"krate":0,"index":656},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":223143,"byte_end":223148,"line_start":106,"line_end":106,"column_start":8,"column_end":13},"name":"parse","qualname":"::parser::parse","value":"pub fn parse<'a, T: Parse>(&'a ParseBuffer) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" A top-level convenience parseing function that parss a `T` from `buf` and\n requires that all tokens in `buf` are consume.","sig":null,"attributes":[{"value":"/ A top-level convenience parseing function that parss a `T` from `buf` and","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":222267,"byte_end":222344,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"/ requires that all tokens in `buf` are consume.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":222345,"byte_end":222395,"line_start":74,"line_end":74,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":222396,"byte_end":222399,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ This generic parsing function can be used to parse any `T` implementing the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":222400,"byte_end":222479,"line_start":76,"line_end":76,"column_start":1,"column_end":80}},{"value":"/ [`Parse`] trait. It is not used from [`Parse`] trait implementations.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":222480,"byte_end":222553,"line_start":77,"line_end":77,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":222554,"byte_end":222557,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":222558,"byte_end":222572,"line_start":79,"line_end":79,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":222573,"byte_end":222576,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":222577,"byte_end":222584,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ use wast::Wat;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":222585,"byte_end":222603,"line_start":82,"line_end":82,"column_start":1,"column_end":19}},{"value":"/ use wast::parser::{self, ParseBuffer};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":222604,"byte_end":222646,"line_start":83,"line_end":83,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":222647,"byte_end":222650,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ # fn foo() -> Result<(), wast::Error> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":222651,"byte_end":222694,"line_start":85,"line_end":85,"column_start":1,"column_end":44}},{"value":"/ let wat = \"(module (func))\";","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":222695,"byte_end":222727,"line_start":86,"line_end":86,"column_start":1,"column_end":33}},{"value":"/ let buf = ParseBuffer::new(wat)?;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":222728,"byte_end":222765,"line_start":87,"line_end":87,"column_start":1,"column_end":38}},{"value":"/ let module = parser::parse::<Wat>(&buf)?;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":222766,"byte_end":222811,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":222812,"byte_end":222824,"line_start":89,"line_end":89,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":222825,"byte_end":222832,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":222833,"byte_end":222840,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":222841,"byte_end":222844,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ or parsing simply a fragment","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":222845,"byte_end":222877,"line_start":93,"line_end":93,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":222878,"byte_end":222881,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":222882,"byte_end":222889,"line_start":95,"line_end":95,"column_start":1,"column_end":8}},{"value":"/ use wast::parser::{self, ParseBuffer};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":222890,"byte_end":222932,"line_start":96,"line_end":96,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":222933,"byte_end":222936,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # fn foo() -> Result<(), wast::Error> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":222937,"byte_end":222980,"line_start":98,"line_end":98,"column_start":1,"column_end":44}},{"value":"/ let wat = \"12\";","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":222981,"byte_end":223000,"line_start":99,"line_end":99,"column_start":1,"column_end":20}},{"value":"/ let buf = ParseBuffer::new(wat)?;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":223001,"byte_end":223038,"line_start":100,"line_end":100,"column_start":1,"column_end":38}},{"value":"/ let val = parser::parse::<u32>(&buf)?;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":223039,"byte_end":223081,"line_start":101,"line_end":101,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(val, 12);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":223082,"byte_end":223106,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/ # Ok(())","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":223107,"byte_end":223119,"line_start":103,"line_end":103,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":223120,"byte_end":223127,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":223128,"byte_end":223135,"line_start":105,"line_end":105,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":659},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":227149,"byte_end":227154,"line_start":208,"line_end":208,"column_start":11,"column_end":16},"name":"Parse","qualname":"::parser::Parse","value":"Parse<'a>: Sized","parent":null,"children":[{"krate":0,"index":661}],"decl_id":null,"docs":" A trait for parsing a fragment of syntax in a recursive descent fashion.","sig":null,"attributes":[{"value":"/ A trait for parsing a fragment of syntax in a recursive descent fashion.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":223429,"byte_end":223505,"line_start":116,"line_end":116,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":223506,"byte_end":223509,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ The [`Parse`] trait is main abstraction you'll be working with when defining","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":223510,"byte_end":223590,"line_start":118,"line_end":118,"column_start":1,"column_end":81}},{"value":"/ custom parser or custom syntax for your WebAssembly text format (or when","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":223591,"byte_end":223667,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/ using the official format items). Almost all items in the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":223668,"byte_end":223729,"line_start":120,"line_end":120,"column_start":1,"column_end":62}},{"value":"/ [`ast`](crate::ast) module implement the [`Parse`] trait, and you'll","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":223730,"byte_end":223802,"line_start":121,"line_end":121,"column_start":1,"column_end":73}},{"value":"/ commonly use this with:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":223803,"byte_end":223830,"line_start":122,"line_end":122,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":223831,"byte_end":223834,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ * The top-level [`parse`] function to parse an entire input.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":223835,"byte_end":223899,"line_start":124,"line_end":124,"column_start":1,"column_end":65}},{"value":"/ * The intermediate [`Parser::parse`] function to parse an item out of an","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":223900,"byte_end":223976,"line_start":125,"line_end":125,"column_start":1,"column_end":77}},{"value":"/   input stream and then parse remaining items.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":223977,"byte_end":224027,"line_start":126,"line_end":126,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":224028,"byte_end":224031,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ Implementation of [`Parse`] take a [`Parser`] as input and will mutate the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":224032,"byte_end":224110,"line_start":128,"line_end":128,"column_start":1,"column_end":79}},{"value":"/ parser as they parse syntax. Once a token is consume it cannot be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":224111,"byte_end":224180,"line_start":129,"line_end":129,"column_start":1,"column_end":70}},{"value":"/ \"un-consumed\". Utilities such as [`Parser::peek`] and [`Parser::lookahead1`]","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":224181,"byte_end":224261,"line_start":130,"line_end":130,"column_start":1,"column_end":81}},{"value":"/ can be used to determine what to parse next.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":224262,"byte_end":224310,"line_start":131,"line_end":131,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":224311,"byte_end":224314,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ## When to parse `(` and `)`?","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":224315,"byte_end":224348,"line_start":133,"line_end":133,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":224349,"byte_end":224352,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ Conventionally types are not responsible for parsing their own `(` and `)`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":224353,"byte_end":224431,"line_start":135,"line_end":135,"column_start":1,"column_end":79}},{"value":"/ tokens which surround the type. For example WebAssembly imports look like:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":224432,"byte_end":224510,"line_start":136,"line_end":136,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":224511,"byte_end":224514,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":224515,"byte_end":224526,"line_start":138,"line_end":138,"column_start":1,"column_end":12}},{"value":"/ (import \"foo\" \"bar\" (func (type 0)))","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":224527,"byte_end":224567,"line_start":139,"line_end":139,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":224568,"byte_end":224575,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":224576,"byte_end":224579,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ but the [`Import`](crate::ast::Import) type parser looks like:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":224580,"byte_end":224646,"line_start":142,"line_end":142,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":224647,"byte_end":224650,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":224651,"byte_end":224658,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ # use wast::kw;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":224659,"byte_end":224678,"line_start":145,"line_end":145,"column_start":1,"column_end":20}},{"value":"/ # use wast::parser::{Parser, Parse, Result};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":224679,"byte_end":224727,"line_start":146,"line_end":146,"column_start":1,"column_end":49}},{"value":"/ # struct Import<'a>(&'a str);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":224728,"byte_end":224761,"line_start":147,"line_end":147,"column_start":1,"column_end":34}},{"value":"/ impl<'a> Parse<'a> for Import<'a> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":224762,"byte_end":224801,"line_start":148,"line_end":148,"column_start":1,"column_end":40}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":224802,"byte_end":224856,"line_start":149,"line_end":149,"column_start":1,"column_end":55}},{"value":"/         parser.parse::<kw::import>()?;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":224857,"byte_end":224899,"line_start":150,"line_end":150,"column_start":1,"column_end":43}},{"value":"/         // ...","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":224900,"byte_end":224918,"line_start":151,"line_end":151,"column_start":1,"column_end":19}},{"value":"/ # panic!()","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":224919,"byte_end":224933,"line_start":152,"line_end":152,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":224934,"byte_end":224943,"line_start":153,"line_end":153,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":224944,"byte_end":224949,"line_start":154,"line_end":154,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":224950,"byte_end":224957,"line_start":155,"line_end":155,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":224958,"byte_end":224961,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ It is assumed here that the `(` and `)` tokens which surround an `import`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":224962,"byte_end":225039,"line_start":157,"line_end":157,"column_start":1,"column_end":78}},{"value":"/ statement in the WebAssembly text format are parsed by the parent item","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":225040,"byte_end":225114,"line_start":158,"line_end":158,"column_start":1,"column_end":75}},{"value":"/ parsing `Import`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":225115,"byte_end":225136,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":225137,"byte_end":225140,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ Note that this is just a convention, so it's not necessarily required for","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":225141,"byte_end":225218,"line_start":161,"line_end":161,"column_start":1,"column_end":78}},{"value":"/ all types. It's recommended that your types stick to this convention where","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":225219,"byte_end":225297,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"/ possible to avoid nested calls to [`Parser::parens`] or accidentally trying","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":225298,"byte_end":225377,"line_start":163,"line_end":163,"column_start":1,"column_end":80}},{"value":"/ to parse too many parenthesis.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":225378,"byte_end":225412,"line_start":164,"line_end":164,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":225413,"byte_end":225416,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":225417,"byte_end":225431,"line_start":166,"line_end":166,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":225432,"byte_end":225435,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ Let's say you want to define your own WebAssembly text format which only","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":225436,"byte_end":225512,"line_start":168,"line_end":168,"column_start":1,"column_end":77}},{"value":"/ contains imports and functions. You also require all imports to be listed","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":225513,"byte_end":225590,"line_start":169,"line_end":169,"column_start":1,"column_end":78}},{"value":"/ before all functions. An example [`Parse`] implementation might look like:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":225591,"byte_end":225669,"line_start":170,"line_end":170,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":225670,"byte_end":225673,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":225674,"byte_end":225681,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ use wast::{Import, Func, kw};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":225682,"byte_end":225715,"line_start":173,"line_end":173,"column_start":1,"column_end":34}},{"value":"/ use wast::parser::{Parser, Parse, Result};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":225716,"byte_end":225762,"line_start":174,"line_end":174,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":225763,"byte_end":225766,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ // Fields of a WebAssembly which only allow imports and functions, and all","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":225767,"byte_end":225845,"line_start":176,"line_end":176,"column_start":1,"column_end":79}},{"value":"/ // imports must come before all the functions","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":225846,"byte_end":225895,"line_start":177,"line_end":177,"column_start":1,"column_end":50}},{"value":"/ struct OnlyImportsAndFunctions<'a> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":225896,"byte_end":225936,"line_start":178,"line_end":178,"column_start":1,"column_end":41}},{"value":"/     imports: Vec<Import<'a>>,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":225937,"byte_end":225970,"line_start":179,"line_end":179,"column_start":1,"column_end":34}},{"value":"/     functions: Vec<Func<'a>>,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":225971,"byte_end":226004,"line_start":180,"line_end":180,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":226005,"byte_end":226010,"line_start":181,"line_end":181,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":226011,"byte_end":226014,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ impl<'a> Parse<'a> for OnlyImportsAndFunctions<'a> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":226015,"byte_end":226071,"line_start":183,"line_end":183,"column_start":1,"column_end":57}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":226072,"byte_end":226126,"line_start":184,"line_end":184,"column_start":1,"column_end":55}},{"value":"/         // While the second token is `import` (the first is `(`, so we care","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":226127,"byte_end":226206,"line_start":185,"line_end":185,"column_start":1,"column_end":80}},{"value":"/         // about the second) we parse an `ast::ModuleImport` inside of","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":226207,"byte_end":226281,"line_start":186,"line_end":186,"column_start":1,"column_end":75}},{"value":"/         // parentheses. The `parens` function here ensures that what we","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":226282,"byte_end":226357,"line_start":187,"line_end":187,"column_start":1,"column_end":76}},{"value":"/         // parse inside of it is surrounded by `(` and `)`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":226358,"byte_end":226421,"line_start":188,"line_end":188,"column_start":1,"column_end":64}},{"value":"/         let mut imports = Vec::new();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":226422,"byte_end":226463,"line_start":189,"line_end":189,"column_start":1,"column_end":42}},{"value":"/         while parser.peek2::<kw::import>() {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":226464,"byte_end":226512,"line_start":190,"line_end":190,"column_start":1,"column_end":49}},{"value":"/             let import = parser.parens(|p| p.parse())?;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":226513,"byte_end":226572,"line_start":191,"line_end":191,"column_start":1,"column_end":60}},{"value":"/             imports.push(import);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":226573,"byte_end":226610,"line_start":192,"line_end":192,"column_start":1,"column_end":38}},{"value":"/         }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":226611,"byte_end":226624,"line_start":193,"line_end":193,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":226625,"byte_end":226628,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/         // Afterwards we assume everything else is a function. Note that","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":226629,"byte_end":226705,"line_start":195,"line_end":195,"column_start":1,"column_end":77}},{"value":"/         // `parse` here is a generic function and type inference figures out","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":226706,"byte_end":226786,"line_start":196,"line_end":196,"column_start":1,"column_end":81}},{"value":"/         // that we're parsing functions here and imports above.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":226787,"byte_end":226854,"line_start":197,"line_end":197,"column_start":1,"column_end":68}},{"value":"/         let mut functions = Vec::new();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":226855,"byte_end":226898,"line_start":198,"line_end":198,"column_start":1,"column_end":44}},{"value":"/         while !parser.is_empty() {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":226899,"byte_end":226937,"line_start":199,"line_end":199,"column_start":1,"column_end":39}},{"value":"/             let func = parser.parens(|p| p.parse())?;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":226938,"byte_end":226995,"line_start":200,"line_end":200,"column_start":1,"column_end":58}},{"value":"/             functions.push(func);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":226996,"byte_end":227033,"line_start":201,"line_end":201,"column_start":1,"column_end":38}},{"value":"/         }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":227034,"byte_end":227047,"line_start":202,"line_end":202,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":227048,"byte_end":227051,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/         Ok(OnlyImportsAndFunctions { imports, functions })","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":227052,"byte_end":227114,"line_start":204,"line_end":204,"column_start":1,"column_end":63}},{"value":"/     }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":227115,"byte_end":227124,"line_start":205,"line_end":205,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":227125,"byte_end":227130,"line_start":206,"line_end":206,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":227131,"byte_end":227138,"line_start":207,"line_end":207,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":228122,"byte_end":228127,"line_start":228,"line_end":228,"column_start":8,"column_end":13},"name":"parse","qualname":"::parser::Parse::parse","value":"pub fn parse(Parser) -> Result<Self>","parent":{"krate":0,"index":659},"children":[],"decl_id":null,"docs":" Attempts to parse `Self` from `parser`, returning an error if it could\n not be parsed.","sig":null,"attributes":[{"value":"/ Attempts to parse `Self` from `parser`, returning an error if it could","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":227172,"byte_end":227246,"line_start":209,"line_end":209,"column_start":5,"column_end":79}},{"value":"/ not be parsed.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":227251,"byte_end":227269,"line_start":210,"line_end":210,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":227274,"byte_end":227277,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ This method will mutate the state of `parser` after attempting to parse","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":227282,"byte_end":227357,"line_start":212,"line_end":212,"column_start":5,"column_end":80}},{"value":"/ an instance of `Self`. If an error happens then it is likely fatal and","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":227362,"byte_end":227436,"line_start":213,"line_end":213,"column_start":5,"column_end":79}},{"value":"/ there is no guarantee of how many tokens have been consumed from","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":227441,"byte_end":227509,"line_start":214,"line_end":214,"column_start":5,"column_end":73}},{"value":"/ `parser`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":227514,"byte_end":227527,"line_start":215,"line_end":215,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":227532,"byte_end":227535,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ As recommended in the documentation of [`Parse`], implementations of","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":227540,"byte_end":227612,"line_start":217,"line_end":217,"column_start":5,"column_end":77}},{"value":"/ this function should not start out by parsing `(` and `)` tokens, but","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":227617,"byte_end":227690,"line_start":218,"line_end":218,"column_start":5,"column_end":78}},{"value":"/ rather parents calling recursive parsers should parse the `(` and `)`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":227695,"byte_end":227768,"line_start":219,"line_end":219,"column_start":5,"column_end":78}},{"value":"/ tokens for their child item that's being parsed.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":227773,"byte_end":227825,"line_start":220,"line_end":220,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":227830,"byte_end":227833,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":227838,"byte_end":227850,"line_start":222,"line_end":222,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":227855,"byte_end":227858,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if `Self` could not be parsed. Note","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":227863,"byte_end":227937,"line_start":224,"line_end":224,"column_start":5,"column_end":79}},{"value":"/ that creating an [`Error`] is not exactly a cheap operation, so","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":227942,"byte_end":228009,"line_start":225,"line_end":225,"column_start":5,"column_end":72}},{"value":"/ [`Error`] is typically fatal and propagated all the way back to the top","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":228014,"byte_end":228089,"line_start":226,"line_end":226,"column_start":5,"column_end":80}},{"value":"/ parse call site.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":228094,"byte_end":228114,"line_start":227,"line_end":227,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":662},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":228885,"byte_end":228889,"line_start":245,"line_end":245,"column_start":11,"column_end":15},"name":"Peek","qualname":"::parser::Peek","value":"Peek","parent":null,"children":[{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665}],"decl_id":null,"docs":" A trait for types which be used to \"peek\" to see if they're the next token\n in an input stream of [`Parser`].","sig":null,"attributes":[{"value":"/ A trait for types which be used to \"peek\" to see if they're the next token","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":228168,"byte_end":228246,"line_start":231,"line_end":231,"column_start":1,"column_end":79}},{"value":"/ in an input stream of [`Parser`].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":228247,"byte_end":228284,"line_start":232,"line_end":232,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":228285,"byte_end":228288,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ Often when implementing [`Parse`] you'll need to query what the next token","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":228289,"byte_end":228367,"line_start":234,"line_end":234,"column_start":1,"column_end":79}},{"value":"/ in the stream is to figure out what to parse next. This [`Peek`] trait","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":228368,"byte_end":228442,"line_start":235,"line_end":235,"column_start":1,"column_end":75}},{"value":"/ defines the set of types that can be tested whether they're the next token","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":228443,"byte_end":228521,"line_start":236,"line_end":236,"column_start":1,"column_end":79}},{"value":"/ in the input stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":228522,"byte_end":228546,"line_start":237,"line_end":237,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":228547,"byte_end":228550,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ Implementations of [`Peek`] should only be present on types that consume","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":228551,"byte_end":228627,"line_start":239,"line_end":239,"column_start":1,"column_end":77}},{"value":"/ exactly one token (not zero, not more, exactly one). Types implementing","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":228628,"byte_end":228703,"line_start":240,"line_end":240,"column_start":1,"column_end":76}},{"value":"/ [`Peek`] should also typically implement [`Parse`] should also typically","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":228704,"byte_end":228780,"line_start":241,"line_end":241,"column_start":1,"column_end":77}},{"value":"/ implement [`Parse`].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":228781,"byte_end":228805,"line_start":242,"line_end":242,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":228806,"byte_end":228809,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ See the documentation of [`Parser::peek`] for example usage.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":228810,"byte_end":228874,"line_start":244,"line_end":244,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":229186,"byte_end":229190,"line_start":252,"line_end":252,"column_start":8,"column_end":12},"name":"peek","qualname":"::parser::Peek::peek","value":"pub fn peek(Cursor) -> bool","parent":{"krate":0,"index":662},"children":[],"decl_id":null,"docs":" Tests to see whether this token is the first token within the [`Cursor`]\n specified.","sig":null,"attributes":[{"value":"/ Tests to see whether this token is the first token within the [`Cursor`]","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":228896,"byte_end":228972,"line_start":246,"line_end":246,"column_start":5,"column_end":81}},{"value":"/ specified.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":228977,"byte_end":228991,"line_start":247,"line_end":247,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":228996,"byte_end":228999,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if [`Parse`] for this type is highly likely to succeed","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":229004,"byte_end":229077,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ failing no other error conditions happening (like an integer literal","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":229082,"byte_end":229154,"line_start":250,"line_end":250,"column_start":5,"column_end":77}},{"value":"/ being too big).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":229159,"byte_end":229178,"line_start":251,"line_end":251,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":229332,"byte_end":229337,"line_start":256,"line_end":256,"column_start":8,"column_end":13},"name":"peek2","qualname":"::parser::Peek::peek2","value":"pub fn peek2(Cursor) -> bool","parent":{"krate":0,"index":662},"children":[],"decl_id":null,"docs":" The same as `peek`, except it checks the token immediately following\n the current token.\n","sig":null,"attributes":[{"value":"/ The same as `peek`, except it checks the token immediately following","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":229225,"byte_end":229297,"line_start":254,"line_end":254,"column_start":5,"column_end":77}},{"value":"/ the current token.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":229302,"byte_end":229324,"line_start":255,"line_end":255,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":229628,"byte_end":229635,"line_start":266,"line_end":266,"column_start":8,"column_end":15},"name":"display","qualname":"::parser::Peek::display","value":"pub fn display() -> &'static str","parent":{"krate":0,"index":662},"children":[],"decl_id":null,"docs":" Returns a human-readable name of this token to display when generating\n errors about this token missing.\n","sig":null,"attributes":[{"value":"/ Returns a human-readable name of this token to display when generating","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":229505,"byte_end":229579,"line_start":264,"line_end":264,"column_start":5,"column_end":79}},{"value":"/ errors about this token missing.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":229584,"byte_end":229620,"line_start":265,"line_end":265,"column_start":5,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":666},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":229761,"byte_end":229767,"line_start":271,"line_end":271,"column_start":10,"column_end":16},"name":"Result","qualname":"::parser::Result","value":"std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A convenience type definition for `Result` where the error is hardwired to\n [`Error`].\n","sig":null,"attributes":[{"value":"/ A convenience type definition for `Result` where the error is hardwired to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":229658,"byte_end":229736,"line_start":269,"line_end":269,"column_start":1,"column_end":79}},{"value":"/ [`Error`].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":229737,"byte_end":229751,"line_start":270,"line_end":270,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":668},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":230068,"byte_end":230079,"line_start":278,"line_end":278,"column_start":12,"column_end":23},"name":"ParseBuffer","qualname":"::parser::ParseBuffer","value":"ParseBuffer {  }","parent":null,"children":[{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673}],"decl_id":null,"docs":" A low-level buffer of tokens which represents a completely lexed file.","sig":null,"attributes":[{"value":"/ A low-level buffer of tokens which represents a completely lexed file.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":229805,"byte_end":229879,"line_start":273,"line_end":273,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":229880,"byte_end":229883,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ A `ParseBuffer` will immediately lex an entire file and then store all","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":229884,"byte_end":229958,"line_start":275,"line_end":275,"column_start":1,"column_end":75}},{"value":"/ tokens internally. A `ParseBuffer` only used to pass to the top-level","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":229959,"byte_end":230032,"line_start":276,"line_end":276,"column_start":1,"column_end":74}},{"value":"/ [`parse`] function.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":230033,"byte_end":230056,"line_start":277,"line_end":277,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":7146},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":231106,"byte_end":231112,"line_start":307,"line_end":307,"column_start":12,"column_end":18},"name":"Parser","qualname":"::parser::Parser","value":"Parser {  }","parent":null,"children":[{"krate":0,"index":7148}],"decl_id":null,"docs":" An in-progress parser for the tokens of a WebAssembly text file.","sig":null,"attributes":[{"value":"/ An in-progress parser for the tokens of a WebAssembly text file.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":230669,"byte_end":230737,"line_start":298,"line_end":298,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":230738,"byte_end":230741,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ A `Parser` is argument to the [`Parse`] trait and is now the input stream is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":230742,"byte_end":230822,"line_start":300,"line_end":300,"column_start":1,"column_end":81}},{"value":"/ interacted with to parse new items. Cloning [`Parser`] or copying a parser","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":230823,"byte_end":230901,"line_start":301,"line_end":301,"column_start":1,"column_end":79}},{"value":"/ refers to the same stream of tokens to parse, you cannot clone a [`Parser`]","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":230902,"byte_end":230981,"line_start":302,"line_end":302,"column_start":1,"column_end":80}},{"value":"/ and clone two items.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":230982,"byte_end":231006,"line_start":303,"line_end":303,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":231007,"byte_end":231010,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ For more information about a [`Parser`] see its methods.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":231011,"byte_end":231071,"line_start":305,"line_end":305,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":674},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":231323,"byte_end":231333,"line_start":315,"line_end":315,"column_start":12,"column_end":22},"name":"Lookahead1","qualname":"::parser::Lookahead1","value":"Lookahead1 {  }","parent":null,"children":[{"krate":0,"index":676},{"krate":0,"index":677}],"decl_id":null,"docs":" A helpful structure to perform a lookahead of one token to determine what to\n parse.","sig":null,"attributes":[{"value":"/ A helpful structure to perform a lookahead of one token to determine what to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":231152,"byte_end":231232,"line_start":311,"line_end":311,"column_start":1,"column_end":81}},{"value":"/ parse.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":231233,"byte_end":231243,"line_start":312,"line_end":312,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":231244,"byte_end":231247,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"/ For more information see the [`Parser::lookahead1`] method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":231248,"byte_end":231311,"line_start":314,"line_end":314,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":7154},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":231716,"byte_end":231722,"line_start":326,"line_end":326,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::parser::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":7156},{"krate":0,"index":7157}],"decl_id":null,"docs":" An immutable cursor into a list of tokens.","sig":null,"attributes":[{"value":"/ An immutable cursor into a list of tokens.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":231400,"byte_end":231446,"line_start":320,"line_end":320,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":231447,"byte_end":231450,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ This cursor cannot be mutated but can be used to parse more tokens in a list","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":231451,"byte_end":231531,"line_start":322,"line_end":322,"column_start":1,"column_end":81}},{"value":"/ of tokens. Cursors are created from the [`Parser::step`] method. This is a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":231532,"byte_end":231610,"line_start":323,"line_end":323,"column_start":1,"column_end":79}},{"value":"/ very low-level parsing structure and you likely won't use it much.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":231611,"byte_end":231681,"line_start":324,"line_end":324,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":231967,"byte_end":231970,"line_start":337,"line_end":337,"column_start":12,"column_end":15},"name":"new","qualname":"<ParseBuffer>::new","value":"pub fn new(&str) -> Result<ParseBuffer>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`ParseBuffer`] by lexing the given `input` completely.","sig":null,"attributes":[{"value":"/ Creates a new [`ParseBuffer`] by lexing the given `input` completely.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":231799,"byte_end":231872,"line_start":332,"line_end":332,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":231877,"byte_end":231880,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":231885,"byte_end":231897,"line_start":334,"line_end":334,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":231902,"byte_end":231905,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ Returns an error if `input` fails to lex.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":231910,"byte_end":231955,"line_start":336,"line_end":336,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":235438,"byte_end":235446,"line_start":424,"line_end":424,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Parser>::is_empty","value":"pub fn is_empty(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether there are no more `Token` tokens to parse from this\n [`Parser`].","sig":null,"attributes":[{"value":"/ Returns whether there are no more `Token` tokens to parse from this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":234984,"byte_end":235055,"line_start":415,"line_end":415,"column_start":5,"column_end":76}},{"value":"/ [`Parser`].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":235060,"byte_end":235075,"line_start":416,"line_end":416,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":235080,"byte_end":235083,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ This indicates that either we've reached the end of the input, or we're","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":235088,"byte_end":235163,"line_start":418,"line_end":418,"column_start":5,"column_end":80}},{"value":"/ a sub-[`Parser`] inside of a parenthesized expression and we've hit the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":235168,"byte_end":235243,"line_start":419,"line_end":419,"column_start":5,"column_end":80}},{"value":"/ `)` token.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":235248,"byte_end":235262,"line_start":420,"line_end":420,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":235267,"byte_end":235270,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ Note that if `false` is returned there *may* be more comments. Comments","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":235275,"byte_end":235350,"line_start":422,"line_end":422,"column_start":5,"column_end":80}},{"value":"/ and whitespace are not considered for whether this parser is empty.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":235355,"byte_end":235426,"line_start":423,"line_end":423,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":237660,"byte_end":237665,"line_start":489,"line_end":489,"column_start":12,"column_end":17},"name":"parse","qualname":"<Parser>::parse","value":"pub fn parse<T: Parse>(Self) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Parses a `T` from this [`Parser`].","sig":null,"attributes":[{"value":"/ Parses a `T` from this [`Parser`].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":235950,"byte_end":235988,"line_start":441,"line_end":441,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":235993,"byte_end":235996,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ This method has a trivial definition (it simply calls","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":236001,"byte_end":236058,"line_start":443,"line_end":443,"column_start":5,"column_end":62}},{"value":"/ [`T::parse`](Parse::parse)) but is here for syntactic purposes. This is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":236063,"byte_end":236138,"line_start":444,"line_end":444,"column_start":5,"column_end":80}},{"value":"/ what you'll call 99% of the time in a [`Parse`] implementation in order","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":236143,"byte_end":236218,"line_start":445,"line_end":445,"column_start":5,"column_end":80}},{"value":"/ to parse sub-items.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":236223,"byte_end":236246,"line_start":446,"line_end":446,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":236251,"byte_end":236254,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ Typically you always want to use `?` with the result of this method, you","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":236259,"byte_end":236335,"line_start":448,"line_end":448,"column_start":5,"column_end":81}},{"value":"/ should not handle errors and decide what else to parse. To handle","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":236340,"byte_end":236409,"line_start":449,"line_end":449,"column_start":5,"column_end":74}},{"value":"/ branches in parsing, use [`Parser::peek`].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":236414,"byte_end":236460,"line_start":450,"line_end":450,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":236465,"byte_end":236468,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":236473,"byte_end":236487,"line_start":452,"line_end":452,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":236492,"byte_end":236495,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ A good example of using `parse` is to see how the [`TableType`] type is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":236500,"byte_end":236575,"line_start":454,"line_end":454,"column_start":5,"column_end":80}},{"value":"/ parsed in this crate. A [`TableType`] is defined in the official","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":236580,"byte_end":236648,"line_start":455,"line_end":455,"column_start":5,"column_end":73}},{"value":"/ specification as [`tabletype`][spec] and is defined as:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":236653,"byte_end":236712,"line_start":456,"line_end":456,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":236717,"byte_end":236720,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://webassembly.github.io/spec/core/text/types.html#table-types","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":236725,"byte_end":236804,"line_start":458,"line_end":458,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":236809,"byte_end":236812,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":236817,"byte_end":236828,"line_start":460,"line_end":460,"column_start":5,"column_end":16}},{"value":"/ tabletype ::= lim:limits et:reftype","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":236833,"byte_end":236872,"line_start":461,"line_end":461,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":236877,"byte_end":236884,"line_start":462,"line_end":462,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":236889,"byte_end":236892,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ so to parse a [`TableType`] we recursively need to parse a [`Limits`]","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":236897,"byte_end":236970,"line_start":464,"line_end":464,"column_start":5,"column_end":78}},{"value":"/ and a [`RefType`]","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":236975,"byte_end":236996,"line_start":465,"line_end":465,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":237001,"byte_end":237004,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":237009,"byte_end":237016,"line_start":467,"line_end":467,"column_start":5,"column_end":12}},{"value":"/ # use wast::*;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":237021,"byte_end":237039,"line_start":468,"line_end":468,"column_start":5,"column_end":23}},{"value":"/ # use wast::parser::*;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":237044,"byte_end":237070,"line_start":469,"line_end":469,"column_start":5,"column_end":31}},{"value":"/ struct TableType<'a> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":237075,"byte_end":237101,"line_start":470,"line_end":470,"column_start":5,"column_end":31}},{"value":"/     limits: Limits,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":237106,"byte_end":237129,"line_start":471,"line_end":471,"column_start":5,"column_end":28}},{"value":"/     elem: RefType<'a>,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":237134,"byte_end":237160,"line_start":472,"line_end":472,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":237165,"byte_end":237170,"line_start":473,"line_end":473,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":237175,"byte_end":237178,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ impl<'a> Parse<'a> for TableType<'a> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":237183,"byte_end":237225,"line_start":475,"line_end":475,"column_start":5,"column_end":47}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":237230,"byte_end":237284,"line_start":476,"line_end":476,"column_start":5,"column_end":59}},{"value":"/         // parse the `lim` then `et` in sequence","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":237289,"byte_end":237341,"line_start":477,"line_end":477,"column_start":5,"column_end":57}},{"value":"/         Ok(TableType {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":237346,"byte_end":237372,"line_start":478,"line_end":478,"column_start":5,"column_end":31}},{"value":"/             limits: parser.parse()?,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":237377,"byte_end":237417,"line_start":479,"line_end":479,"column_start":5,"column_end":45}},{"value":"/             elem: parser.parse()?,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":237422,"byte_end":237460,"line_start":480,"line_end":480,"column_start":5,"column_end":43}},{"value":"/         })","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":237465,"byte_end":237479,"line_start":481,"line_end":481,"column_start":5,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":237484,"byte_end":237493,"line_start":482,"line_end":482,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":237498,"byte_end":237503,"line_start":483,"line_end":483,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":237508,"byte_end":237515,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":237520,"byte_end":237523,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ [`Limits`]: crate::ast::Limits","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":237528,"byte_end":237562,"line_start":486,"line_end":486,"column_start":5,"column_end":39}},{"value":"/ [`TableType`]: crate::ast::TableType","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":237567,"byte_end":237607,"line_start":487,"line_end":487,"column_start":5,"column_end":45}},{"value":"/ [`RefType`]: crate::ast::RefType","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":237612,"byte_end":237648,"line_start":488,"line_end":488,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":239603,"byte_end":239607,"line_start":546,"line_end":546,"column_start":12,"column_end":16},"name":"peek","qualname":"<Parser>::peek","value":"pub fn peek<T: Peek>(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Performs a cheap test to see whether the current token in this stream is\n `T`.","sig":null,"attributes":[{"value":"/ Performs a cheap test to see whether the current token in this stream is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":237735,"byte_end":237811,"line_start":493,"line_end":493,"column_start":5,"column_end":81}},{"value":"/ `T`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":237816,"byte_end":237824,"line_start":494,"line_end":494,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":237829,"byte_end":237832,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ This method can be used to efficiently determine what next to parse. The","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":237837,"byte_end":237913,"line_start":496,"line_end":496,"column_start":5,"column_end":81}},{"value":"/ [`Peek`] trait is defined for types which can be used to test if they're","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":237918,"byte_end":237994,"line_start":497,"line_end":497,"column_start":5,"column_end":81}},{"value":"/ the next item in the input stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":237999,"byte_end":238037,"line_start":498,"line_end":498,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":238042,"byte_end":238045,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ Nothing is actually parsed in this method, nor does this mutate the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":238050,"byte_end":238121,"line_start":500,"line_end":500,"column_start":5,"column_end":76}},{"value":"/ state of this [`Parser`]. Instead, this simply performs a check.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":238126,"byte_end":238194,"line_start":501,"line_end":501,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":238199,"byte_end":238202,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ This method is frequently combined with the [`Parser::lookahead1`]","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":238207,"byte_end":238277,"line_start":503,"line_end":503,"column_start":5,"column_end":75}},{"value":"/ method to automatically produce nice error messages if some tokens","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":238282,"byte_end":238352,"line_start":504,"line_end":504,"column_start":5,"column_end":75}},{"value":"/ aren't found.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":238357,"byte_end":238374,"line_start":505,"line_end":505,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":238379,"byte_end":238382,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":238387,"byte_end":238401,"line_start":507,"line_end":507,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":238406,"byte_end":238409,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ For an example of using the `peek` method let's take a look at parsing","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":238414,"byte_end":238488,"line_start":509,"line_end":509,"column_start":5,"column_end":79}},{"value":"/ the [`Limits`] type. This is [defined in the official spec][spec] as:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":238493,"byte_end":238566,"line_start":510,"line_end":510,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":238571,"byte_end":238574,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":238579,"byte_end":238590,"line_start":512,"line_end":512,"column_start":5,"column_end":16}},{"value":"/ limits ::= n:u32","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":238595,"byte_end":238615,"line_start":513,"line_end":513,"column_start":5,"column_end":25}},{"value":"/          | n:u32 m:u32","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":238620,"byte_end":238646,"line_start":514,"line_end":514,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":238651,"byte_end":238658,"line_start":515,"line_end":515,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":238663,"byte_end":238666,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ which means that it's either one `u32` token or two, so we need to know","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":238671,"byte_end":238746,"line_start":517,"line_end":517,"column_start":5,"column_end":80}},{"value":"/ whether to consume two tokens or one:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":238751,"byte_end":238792,"line_start":518,"line_end":518,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":238797,"byte_end":238800,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":238805,"byte_end":238812,"line_start":520,"line_end":520,"column_start":5,"column_end":12}},{"value":"/ # use wast::parser::*;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":238817,"byte_end":238843,"line_start":521,"line_end":521,"column_start":5,"column_end":31}},{"value":"/ struct Limits {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":238848,"byte_end":238867,"line_start":522,"line_end":522,"column_start":5,"column_end":24}},{"value":"/     min: u32,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":238872,"byte_end":238889,"line_start":523,"line_end":523,"column_start":5,"column_end":22}},{"value":"/     max: Option<u32>,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":238894,"byte_end":238919,"line_start":524,"line_end":524,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":238924,"byte_end":238929,"line_start":525,"line_end":525,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":238934,"byte_end":238937,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ impl<'a> Parse<'a> for Limits {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":238942,"byte_end":238977,"line_start":527,"line_end":527,"column_start":5,"column_end":40}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":238982,"byte_end":239036,"line_start":528,"line_end":528,"column_start":5,"column_end":59}},{"value":"/         // Always parse the first number...","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":239041,"byte_end":239088,"line_start":529,"line_end":529,"column_start":5,"column_end":52}},{"value":"/         let min = parser.parse()?;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":239093,"byte_end":239131,"line_start":530,"line_end":530,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":239136,"byte_end":239139,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/         // ... and then test if there's a second number before parsing","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":239144,"byte_end":239218,"line_start":532,"line_end":532,"column_start":5,"column_end":79}},{"value":"/         let max = if parser.peek::<u32>() {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":239223,"byte_end":239270,"line_start":533,"line_end":533,"column_start":5,"column_end":52}},{"value":"/             Some(parser.parse()?)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":239275,"byte_end":239312,"line_start":534,"line_end":534,"column_start":5,"column_end":42}},{"value":"/         } else {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":239317,"byte_end":239337,"line_start":535,"line_end":535,"column_start":5,"column_end":25}},{"value":"/             None","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":239342,"byte_end":239362,"line_start":536,"line_end":536,"column_start":5,"column_end":25}},{"value":"/         };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":239367,"byte_end":239381,"line_start":537,"line_end":537,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":239386,"byte_end":239389,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/         Ok(Limits { min, max })","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":239394,"byte_end":239429,"line_start":539,"line_end":539,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":239434,"byte_end":239443,"line_start":540,"line_end":540,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":239448,"byte_end":239453,"line_start":541,"line_end":541,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":239458,"byte_end":239465,"line_start":542,"line_end":542,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":239470,"byte_end":239473,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://webassembly.github.io/spec/core/text/types.html#limits","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":239478,"byte_end":239552,"line_start":544,"line_end":544,"column_start":5,"column_end":79}},{"value":"/ [`Limits`]: crate::ast::Limits","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":239557,"byte_end":239591,"line_start":545,"line_end":545,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":239788,"byte_end":239793,"line_start":552,"line_end":552,"column_start":12,"column_end":17},"name":"peek2","qualname":"<Parser>::peek2","value":"pub fn peek2<T: Peek>(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Same as the [`Parser::peek`] method, except checks the next token, not\n the current token.\n","sig":null,"attributes":[{"value":"/ Same as the [`Parser::peek`] method, except checks the next token, not","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":239675,"byte_end":239749,"line_start":550,"line_end":550,"column_start":5,"column_end":79}},{"value":"/ the current token.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":239754,"byte_end":239776,"line_start":551,"line_end":551,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":241785,"byte_end":241795,"line_start":610,"line_end":610,"column_start":12,"column_end":22},"name":"lookahead1","qualname":"<Parser>::lookahead1","value":"pub fn lookahead1(Self) -> Lookahead1","parent":null,"children":[],"decl_id":null,"docs":" A helper structure to perform a sequence of `peek` operations and if\n they all fail produce a nice error message.","sig":null,"attributes":[{"value":"/ A helper structure to perform a sequence of `peek` operations and if","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":239989,"byte_end":240061,"line_start":561,"line_end":561,"column_start":5,"column_end":77}},{"value":"/ they all fail produce a nice error message.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":240066,"byte_end":240113,"line_start":562,"line_end":562,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":240118,"byte_end":240121,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ This method purely exists for conveniently producing error messages and","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":240126,"byte_end":240201,"line_start":564,"line_end":564,"column_start":5,"column_end":80}},{"value":"/ provides no functionality that [`Parser::peek`] doesn't already give.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":240206,"byte_end":240279,"line_start":565,"line_end":565,"column_start":5,"column_end":78}},{"value":"/ The [`Lookahead1`] structure has one main method [`Lookahead1::peek`],","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":240284,"byte_end":240358,"line_start":566,"line_end":566,"column_start":5,"column_end":79}},{"value":"/ which is the same method as [`Parser::peek`]. The difference is that the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":240363,"byte_end":240439,"line_start":567,"line_end":567,"column_start":5,"column_end":81}},{"value":"/ [`Lookahead1::error`] method needs no arguments.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":240444,"byte_end":240496,"line_start":568,"line_end":568,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":240501,"byte_end":240504,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":240509,"byte_end":240523,"line_start":570,"line_end":570,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":240528,"byte_end":240531,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ Let's look at the parsing of [`Index`]. This type is either a `u32` or","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":240536,"byte_end":240610,"line_start":572,"line_end":572,"column_start":5,"column_end":79}},{"value":"/ an [`Id`] and is used in name resolution primarily. The [official","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":240615,"byte_end":240684,"line_start":573,"line_end":573,"column_start":5,"column_end":74}},{"value":"/ grammar for an index][spec] is:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":240689,"byte_end":240724,"line_start":574,"line_end":574,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":240729,"byte_end":240732,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":240737,"byte_end":240748,"line_start":576,"line_end":576,"column_start":5,"column_end":16}},{"value":"/ idx ::= x:u32","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":240753,"byte_end":240770,"line_start":577,"line_end":577,"column_start":5,"column_end":22}},{"value":"/       | v:id","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":240775,"byte_end":240791,"line_start":578,"line_end":578,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":240796,"byte_end":240803,"line_start":579,"line_end":579,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":240808,"byte_end":240811,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ Which is to say that an index is either a `u32` or an [`Id`]. When","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":240816,"byte_end":240886,"line_start":581,"line_end":581,"column_start":5,"column_end":75}},{"value":"/ parsing an [`Index`] we can do:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":240891,"byte_end":240926,"line_start":582,"line_end":582,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":240931,"byte_end":240934,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":240939,"byte_end":240946,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/ # use wast::*;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":240951,"byte_end":240969,"line_start":585,"line_end":585,"column_start":5,"column_end":23}},{"value":"/ # use wast::parser::*;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":240974,"byte_end":241000,"line_start":586,"line_end":586,"column_start":5,"column_end":31}},{"value":"/ enum Index<'a> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":241005,"byte_end":241025,"line_start":587,"line_end":587,"column_start":5,"column_end":25}},{"value":"/     Num(u32),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":241030,"byte_end":241047,"line_start":588,"line_end":588,"column_start":5,"column_end":22}},{"value":"/     Id(Id<'a>),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":241052,"byte_end":241071,"line_start":589,"line_end":589,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":241076,"byte_end":241081,"line_start":590,"line_end":590,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":241086,"byte_end":241089,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ impl<'a> Parse<'a> for Index<'a> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":241094,"byte_end":241132,"line_start":592,"line_end":592,"column_start":5,"column_end":43}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":241137,"byte_end":241191,"line_start":593,"line_end":593,"column_start":5,"column_end":59}},{"value":"/         let mut l = parser.lookahead1();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":241196,"byte_end":241240,"line_start":594,"line_end":594,"column_start":5,"column_end":49}},{"value":"/         if l.peek::<Id>() {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":241245,"byte_end":241276,"line_start":595,"line_end":595,"column_start":5,"column_end":36}},{"value":"/             Ok(Index::Id(parser.parse()?))","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":241281,"byte_end":241327,"line_start":596,"line_end":596,"column_start":5,"column_end":51}},{"value":"/         } else if l.peek::<u32>() {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":241332,"byte_end":241371,"line_start":597,"line_end":597,"column_start":5,"column_end":44}},{"value":"/             Ok(Index::Num(parser.parse()?))","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":241376,"byte_end":241423,"line_start":598,"line_end":598,"column_start":5,"column_end":52}},{"value":"/         } else {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":241428,"byte_end":241448,"line_start":599,"line_end":599,"column_start":5,"column_end":25}},{"value":"/             // produces error message of `expected identifier or u32`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":241453,"byte_end":241526,"line_start":600,"line_end":600,"column_start":5,"column_end":78}},{"value":"/             Err(l.error())","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":241531,"byte_end":241561,"line_start":601,"line_end":601,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":241566,"byte_end":241579,"line_start":602,"line_end":602,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":241584,"byte_end":241593,"line_start":603,"line_end":603,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":241598,"byte_end":241603,"line_start":604,"line_end":604,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":241608,"byte_end":241615,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":241620,"byte_end":241623,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://webassembly.github.io/spec/core/text/modules.html#indices","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":241628,"byte_end":241705,"line_start":607,"line_end":607,"column_start":5,"column_end":82}},{"value":"/ [`Index`]: crate::ast::Index","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":241710,"byte_end":241742,"line_start":608,"line_end":608,"column_start":5,"column_end":37}},{"value":"/ [`Id`]: crate::ast::Id","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":241747,"byte_end":241773,"line_start":609,"line_end":609,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":243754,"byte_end":243760,"line_start":660,"line_end":660,"column_start":12,"column_end":18},"name":"parens","qualname":"<Parser>::parens","value":"pub fn parens<T, impl FnOnce(Parser<'a>) -> Result<T>: FnOnce(Parser) ->\n              Result<T>>(Self, impl FnOnce(Parser<'a>) -> Result<T>)\n-> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Parse an item surrounded by parentheses.","sig":null,"attributes":[{"value":"/ Parse an item surrounded by parentheses.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":241924,"byte_end":241968,"line_start":617,"line_end":617,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":241973,"byte_end":241976,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ WebAssembly's text format is all based on s-expressions, so naturally","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":241981,"byte_end":242054,"line_start":619,"line_end":619,"column_start":5,"column_end":78}},{"value":"/ you're going to want to parse a lot of parenthesized things! As noted in","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":242059,"byte_end":242135,"line_start":620,"line_end":620,"column_start":5,"column_end":81}},{"value":"/ the documentation of [`Parse`] you typically don't parse your own","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":242140,"byte_end":242209,"line_start":621,"line_end":621,"column_start":5,"column_end":74}},{"value":"/ surrounding `(` and `)` tokens, but the parser above you parsed them for","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":242214,"byte_end":242290,"line_start":622,"line_end":622,"column_start":5,"column_end":81}},{"value":"/ you. This is method method the parser above you uses.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":242295,"byte_end":242352,"line_start":623,"line_end":623,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":242357,"byte_end":242360,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ This method will parse a `(` token, and then call `f` on a sub-parser","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":242365,"byte_end":242438,"line_start":625,"line_end":625,"column_start":5,"column_end":78}},{"value":"/ which when finished asserts that a `)` token is the next token. This","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":242443,"byte_end":242515,"line_start":626,"line_end":626,"column_start":5,"column_end":77}},{"value":"/ requires that `f` consumes all tokens leading up to the paired `)`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":242520,"byte_end":242591,"line_start":627,"line_end":627,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":242596,"byte_end":242599,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ Usage will often simply be `parser.parens(|p| p.parse())?` to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":242604,"byte_end":242669,"line_start":629,"line_end":629,"column_start":5,"column_end":70}},{"value":"/ automatically parse a type within parentheses, but you can, as always,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":242674,"byte_end":242748,"line_start":630,"line_end":630,"column_start":5,"column_end":79}},{"value":"/ go crazy and do whatever you'd like too.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":242753,"byte_end":242797,"line_start":631,"line_end":631,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":242802,"byte_end":242805,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":242810,"byte_end":242824,"line_start":633,"line_end":633,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":242829,"byte_end":242832,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ A good example of this is to see how a `Module` is parsed. This isn't","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":242837,"byte_end":242910,"line_start":635,"line_end":635,"column_start":5,"column_end":78}},{"value":"/ the exact definition, but it's close enough!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":242915,"byte_end":242963,"line_start":636,"line_end":636,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":242968,"byte_end":242971,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":242976,"byte_end":242983,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # use wast::*;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":242988,"byte_end":243006,"line_start":639,"line_end":639,"column_start":5,"column_end":23}},{"value":"/ # use wast::parser::*;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":243011,"byte_end":243037,"line_start":640,"line_end":640,"column_start":5,"column_end":31}},{"value":"/ struct Module<'a> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":243042,"byte_end":243065,"line_start":641,"line_end":641,"column_start":5,"column_end":28}},{"value":"/     fields: Vec<ModuleField<'a>>,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":243070,"byte_end":243107,"line_start":642,"line_end":642,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":243112,"byte_end":243117,"line_start":643,"line_end":643,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":243122,"byte_end":243125,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ impl<'a> Parse<'a> for Module<'a> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":243130,"byte_end":243169,"line_start":645,"line_end":645,"column_start":5,"column_end":44}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":243174,"byte_end":243228,"line_start":646,"line_end":646,"column_start":5,"column_end":59}},{"value":"/         // Modules start out with a `module` keyword","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":243233,"byte_end":243289,"line_start":647,"line_end":647,"column_start":5,"column_end":61}},{"value":"/         parser.parse::<kw::module>()?;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":243294,"byte_end":243336,"line_start":648,"line_end":648,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":243341,"byte_end":243344,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/         // And then everything else is `(field ...)`, so while we've got","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":243349,"byte_end":243425,"line_start":650,"line_end":650,"column_start":5,"column_end":81}},{"value":"/         // items left we continuously parse parenthesized items.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":243430,"byte_end":243498,"line_start":651,"line_end":651,"column_start":5,"column_end":73}},{"value":"/         let mut fields = Vec::new();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":243503,"byte_end":243543,"line_start":652,"line_end":652,"column_start":5,"column_end":45}},{"value":"/         while !parser.is_empty() {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":243548,"byte_end":243586,"line_start":653,"line_end":653,"column_start":5,"column_end":43}},{"value":"/             fields.push(parser.parens(|p| p.parse())?);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":243591,"byte_end":243650,"line_start":654,"line_end":654,"column_start":5,"column_end":64}},{"value":"/         }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":243655,"byte_end":243668,"line_start":655,"line_end":655,"column_start":5,"column_end":18}},{"value":"/         Ok(Module { fields })","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":243673,"byte_end":243706,"line_start":656,"line_end":656,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":243711,"byte_end":243720,"line_start":657,"line_end":657,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":243725,"byte_end":243730,"line_start":658,"line_end":658,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":243735,"byte_end":243742,"line_start":659,"line_end":659,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":244955,"byte_end":244959,"line_start":694,"line_end":694,"column_start":12,"column_end":16},"name":"step","qualname":"<Parser>::step","value":"pub fn step<F, T>(Self, F) -> Result<T> where F: FnOnce(Cursor) ->\nResult<(T, Cursor)>","parent":null,"children":[],"decl_id":null,"docs":" A low-level parsing method you probably won't use.","sig":null,"attributes":[{"value":"/ A low-level parsing method you probably won't use.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":244634,"byte_end":244688,"line_start":688,"line_end":688,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":244693,"byte_end":244696,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ This is used to implement parsing of the most primitive types in the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":244701,"byte_end":244773,"line_start":690,"line_end":690,"column_start":5,"column_end":77}},{"value":"/ [`ast`](crate::ast) module. You probably don't want to use this, but","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":244778,"byte_end":244850,"line_start":691,"line_end":691,"column_start":5,"column_end":77}},{"value":"/ probably want to use something like [`Parser::parse`] or","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":244855,"byte_end":244915,"line_start":692,"line_end":692,"column_start":5,"column_end":65}},{"value":"/ [`Parser::parens`].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":244920,"byte_end":244943,"line_start":693,"line_end":693,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":245533,"byte_end":245538,"line_start":709,"line_end":709,"column_start":12,"column_end":17},"name":"error","qualname":"<Parser>::error","value":"pub fn error<impl fmt::Display: fmt::Display>(Self, impl fmt::Display)\n-> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error whose line/column information is pointing at the\n current token.","sig":null,"attributes":[{"value":"/ Creates an error whose line/column information is pointing at the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":245183,"byte_end":245252,"line_start":703,"line_end":703,"column_start":5,"column_end":74}},{"value":"/ current token.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":245257,"byte_end":245275,"line_start":704,"line_end":704,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":245280,"byte_end":245283,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ This is used to produce human-readable error messages which point to the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":245288,"byte_end":245364,"line_start":706,"line_end":706,"column_start":5,"column_end":81}},{"value":"/ right location in the input stream, and the `msg` here is arbitrary text","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":245369,"byte_end":245445,"line_start":707,"line_end":707,"column_start":5,"column_end":81}},{"value":"/ used to associate with the error and indicate why it was generated.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":245450,"byte_end":245521,"line_start":708,"line_end":708,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":245834,"byte_end":245842,"line_start":718,"line_end":718,"column_start":12,"column_end":20},"name":"cur_span","qualname":"<Parser>::cur_span","value":"pub fn cur_span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span of the current token\n","sig":null,"attributes":[{"value":"/ Returns the span of the current token","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":245781,"byte_end":245822,"line_start":717,"line_end":717,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":245958,"byte_end":245967,"line_start":723,"line_end":723,"column_start":12,"column_end":21},"name":"prev_span","qualname":"<Parser>::prev_span","value":"pub fn prev_span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span of the previous token\n","sig":null,"attributes":[{"value":"/ Returns the span of the previous token","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":245904,"byte_end":245946,"line_start":722,"line_end":722,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":251694,"byte_end":251713,"line_start":855,"line_end":855,"column_start":12,"column_end":31},"name":"register_annotation","qualname":"<Parser>::register_annotation","value":"pub fn register_annotation<'b>(Self, &'b str) -> /*impl Trait*/ where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":" Registers a new known annotation with this parser to allow parsing\n annotations with this name.","sig":null,"attributes":[{"value":"/ Registers a new known annotation with this parser to allow parsing","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":246062,"byte_end":246132,"line_start":727,"line_end":727,"column_start":5,"column_end":75}},{"value":"/ annotations with this name.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":246137,"byte_end":246168,"line_start":728,"line_end":728,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":246173,"byte_end":246176,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ [WebAssembly annotations][annotation] are a proposal for the text format","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":246181,"byte_end":246257,"line_start":730,"line_end":730,"column_start":5,"column_end":81}},{"value":"/ which allows decorating the text format with custom structured","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":246262,"byte_end":246328,"line_start":731,"line_end":731,"column_start":5,"column_end":71}},{"value":"/ information. By default all annotations are ignored when parsing, but","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":246333,"byte_end":246406,"line_start":732,"line_end":732,"column_start":5,"column_end":78}},{"value":"/ the whole purpose of them is to sometimes parse them!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":246411,"byte_end":246468,"line_start":733,"line_end":733,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":246473,"byte_end":246476,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ To support parsing text annotations this method is used to allow","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":246481,"byte_end":246549,"line_start":735,"line_end":735,"column_start":5,"column_end":73}},{"value":"/ annotations and their tokens to *not* be skipped. Once an annotation is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":246554,"byte_end":246629,"line_start":736,"line_end":736,"column_start":5,"column_end":80}},{"value":"/ registered with this method, then while the return value has not been","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":246634,"byte_end":246707,"line_start":737,"line_end":737,"column_start":5,"column_end":78}},{"value":"/ dropped (e.g. the scope of where this function is called) annotations","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":246712,"byte_end":246785,"line_start":738,"line_end":738,"column_start":5,"column_end":78}},{"value":"/ with the name `annotation` will be parse of the token stream and not","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":246790,"byte_end":246862,"line_start":739,"line_end":739,"column_start":5,"column_end":77}},{"value":"/ implicitly skipped.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":246867,"byte_end":246890,"line_start":740,"line_end":740,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":246895,"byte_end":246898,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ # Skipping annotations","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":246903,"byte_end":246929,"line_start":742,"line_end":742,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":246934,"byte_end":246937,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ The behavior of skipping unknown/unregistered annotations can be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":246942,"byte_end":247010,"line_start":744,"line_end":744,"column_start":5,"column_end":73}},{"value":"/ somewhat subtle and surprising, so if you're interested in parsing","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":247015,"byte_end":247085,"line_start":745,"line_end":745,"column_start":5,"column_end":75}},{"value":"/ annotations it's important to point out the importance of this method","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":247090,"byte_end":247163,"line_start":746,"line_end":746,"column_start":5,"column_end":78}},{"value":"/ and where to call it.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":247168,"byte_end":247193,"line_start":747,"line_end":747,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":247198,"byte_end":247201,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ Generally when parsing tokens you'll be bottoming out in various","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":247206,"byte_end":247274,"line_start":749,"line_end":749,"column_start":5,"column_end":73}},{"value":"/ `Cursor` methods. These are all documented as advancing the stream as","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":247279,"byte_end":247352,"line_start":750,"line_end":750,"column_start":5,"column_end":78}},{"value":"/ much as possible to the next token, skipping \"irrelevant stuff\" like","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":247357,"byte_end":247429,"line_start":751,"line_end":751,"column_start":5,"column_end":77}},{"value":"/ comments, whitespace, etc. The `Cursor` methods will also skip unknown","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":247434,"byte_end":247508,"line_start":752,"line_end":752,"column_start":5,"column_end":79}},{"value":"/ annotations. This means that if you parse *any* token, it will skip over","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":247513,"byte_end":247589,"line_start":753,"line_end":753,"column_start":5,"column_end":81}},{"value":"/ any number of annotations that are unknown at all times.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":247594,"byte_end":247654,"line_start":754,"line_end":754,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":247659,"byte_end":247662,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ To parse an annotation you must, before parsing any token of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":247667,"byte_end":247735,"line_start":756,"line_end":756,"column_start":5,"column_end":73}},{"value":"/ annotation, register the annotation via this method. This includes the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":247740,"byte_end":247814,"line_start":757,"line_end":757,"column_start":5,"column_end":79}},{"value":"/ beginning `(` token, which is otherwise skipped if the annotation isn't","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":247819,"byte_end":247894,"line_start":758,"line_end":758,"column_start":5,"column_end":80}},{"value":"/ marked as registered. Typically parser parse the *contents* of an","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":247899,"byte_end":247968,"line_start":759,"line_end":759,"column_start":5,"column_end":74}},{"value":"/ s-expression, so this means that the outer parser of an s-expression","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":247973,"byte_end":248045,"line_start":760,"line_end":760,"column_start":5,"column_end":77}},{"value":"/ must register the custom annotation name, rather than the inner parser.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":248050,"byte_end":248125,"line_start":761,"line_end":761,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":248130,"byte_end":248133,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":248138,"byte_end":248150,"line_start":763,"line_end":763,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":248155,"byte_end":248158,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ This function returns an RAII guard which, when dropped, will unregister","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":248163,"byte_end":248239,"line_start":765,"line_end":765,"column_start":5,"column_end":81}},{"value":"/ the `annotation` given. Parsing `annotation` is only supported while the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":248244,"byte_end":248320,"line_start":766,"line_end":766,"column_start":5,"column_end":81}},{"value":"/ returned value is still alive, and once dropped the parser will go back","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":248325,"byte_end":248400,"line_start":767,"line_end":767,"column_start":5,"column_end":80}},{"value":"/ to skipping annotations with the name `annotation`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":248405,"byte_end":248460,"line_start":768,"line_end":768,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":248465,"byte_end":248468,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":248473,"byte_end":248486,"line_start":770,"line_end":770,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":248491,"byte_end":248494,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ Let's see an example of how the `@name` annotation is parsed for modules","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":248499,"byte_end":248575,"line_start":772,"line_end":772,"column_start":5,"column_end":81}},{"value":"/ to get an idea of how this works:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":248580,"byte_end":248617,"line_start":773,"line_end":773,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":248622,"byte_end":248625,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":248630,"byte_end":248637,"line_start":775,"line_end":775,"column_start":5,"column_end":12}},{"value":"/ # use wast::*;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":248642,"byte_end":248660,"line_start":776,"line_end":776,"column_start":5,"column_end":23}},{"value":"/ # use wast::parser::*;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":248665,"byte_end":248691,"line_start":777,"line_end":777,"column_start":5,"column_end":31}},{"value":"/ struct Module<'a> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":248696,"byte_end":248719,"line_start":778,"line_end":778,"column_start":5,"column_end":28}},{"value":"/     name: Option<NameAnnotation<'a>>,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":248724,"byte_end":248765,"line_start":779,"line_end":779,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":248770,"byte_end":248775,"line_start":780,"line_end":780,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":248780,"byte_end":248783,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ impl<'a> Parse<'a> for Module<'a> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":248788,"byte_end":248827,"line_start":782,"line_end":782,"column_start":5,"column_end":44}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":248832,"byte_end":248886,"line_start":783,"line_end":783,"column_start":5,"column_end":59}},{"value":"/         // Modules start out with a `module` keyword","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":248891,"byte_end":248947,"line_start":784,"line_end":784,"column_start":5,"column_end":61}},{"value":"/         parser.parse::<kw::module>()?;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":248952,"byte_end":248994,"line_start":785,"line_end":785,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":248999,"byte_end":249002,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/         // Next may be `(@name \"foo\")`. Typically this annotation would","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":249007,"byte_end":249082,"line_start":787,"line_end":787,"column_start":5,"column_end":80}},{"value":"/         // skipped, but we don't want it skipped, so we register it.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":249087,"byte_end":249159,"line_start":788,"line_end":788,"column_start":5,"column_end":77}},{"value":"/         // Note that the parse implementation of","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":249164,"byte_end":249216,"line_start":789,"line_end":789,"column_start":5,"column_end":57}},{"value":"/         // `Option<NameAnnotation>` is the one that consumes the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":249221,"byte_end":249289,"line_start":790,"line_end":790,"column_start":5,"column_end":73}},{"value":"/         // parentheses here.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":249294,"byte_end":249326,"line_start":791,"line_end":791,"column_start":5,"column_end":37}},{"value":"/         let _r = parser.register_annotation(\"name\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":249331,"byte_end":249387,"line_start":792,"line_end":792,"column_start":5,"column_end":61}},{"value":"/         let name = parser.parse()?;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":249392,"byte_end":249431,"line_start":793,"line_end":793,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":249436,"byte_end":249439,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/         // ... and normally you'd otherwise parse module fields here ...","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":249444,"byte_end":249520,"line_start":795,"line_end":795,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":249525,"byte_end":249528,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/         Ok(Module { name })","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":249533,"byte_end":249564,"line_start":797,"line_end":797,"column_start":5,"column_end":36}},{"value":"/     }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":249569,"byte_end":249578,"line_start":798,"line_end":798,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":249583,"byte_end":249588,"line_start":799,"line_end":799,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":249593,"byte_end":249600,"line_start":800,"line_end":800,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":249605,"byte_end":249608,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ Another example is how we parse the `@custom` annotation. Note that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":249613,"byte_end":249689,"line_start":802,"line_end":802,"column_start":5,"column_end":81}},{"value":"/ is parsed as part of `ModuleField`, so note how the annotation is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":249694,"byte_end":249763,"line_start":803,"line_end":803,"column_start":5,"column_end":74}},{"value":"/ registered *before* we parse the parentheses of the annotation.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":249768,"byte_end":249835,"line_start":804,"line_end":804,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":249840,"byte_end":249843,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":249848,"byte_end":249855,"line_start":806,"line_end":806,"column_start":5,"column_end":12}},{"value":"/ # use wast::*;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":249860,"byte_end":249878,"line_start":807,"line_end":807,"column_start":5,"column_end":23}},{"value":"/ # use wast::parser::*;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":249883,"byte_end":249909,"line_start":808,"line_end":808,"column_start":5,"column_end":31}},{"value":"/ struct Module<'a> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":249914,"byte_end":249937,"line_start":809,"line_end":809,"column_start":5,"column_end":28}},{"value":"/     fields: Vec<ModuleField<'a>>,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":249942,"byte_end":249979,"line_start":810,"line_end":810,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":249984,"byte_end":249989,"line_start":811,"line_end":811,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":249994,"byte_end":249997,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ impl<'a> Parse<'a> for Module<'a> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":250002,"byte_end":250041,"line_start":813,"line_end":813,"column_start":5,"column_end":44}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":250046,"byte_end":250100,"line_start":814,"line_end":814,"column_start":5,"column_end":59}},{"value":"/         // Modules start out with a `module` keyword","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":250105,"byte_end":250161,"line_start":815,"line_end":815,"column_start":5,"column_end":61}},{"value":"/         parser.parse::<kw::module>()?;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":250166,"byte_end":250208,"line_start":816,"line_end":816,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":250213,"byte_end":250216,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/         // register the `@custom` annotation *first* before we start","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":250221,"byte_end":250293,"line_start":818,"line_end":818,"column_start":5,"column_end":77}},{"value":"/         // parsing fields, because each field is contained in","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":250298,"byte_end":250363,"line_start":819,"line_end":819,"column_start":5,"column_end":70}},{"value":"/         // parentheses and to parse the parentheses of an annotation we","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":250368,"byte_end":250443,"line_start":820,"line_end":820,"column_start":5,"column_end":80}},{"value":"/         // have to known to not skip it.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":250448,"byte_end":250492,"line_start":821,"line_end":821,"column_start":5,"column_end":49}},{"value":"/         let _r = parser.register_annotation(\"custom\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":250497,"byte_end":250555,"line_start":822,"line_end":822,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":250560,"byte_end":250563,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/         let mut fields = Vec::new();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":250568,"byte_end":250608,"line_start":824,"line_end":824,"column_start":5,"column_end":45}},{"value":"/         while !parser.is_empty() {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":250613,"byte_end":250651,"line_start":825,"line_end":825,"column_start":5,"column_end":43}},{"value":"/             fields.push(parser.parens(|p| p.parse())?);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":250656,"byte_end":250715,"line_start":826,"line_end":826,"column_start":5,"column_end":64}},{"value":"/         }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":250720,"byte_end":250733,"line_start":827,"line_end":827,"column_start":5,"column_end":18}},{"value":"/         Ok(Module { fields })","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":250738,"byte_end":250771,"line_start":828,"line_end":828,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":250776,"byte_end":250785,"line_start":829,"line_end":829,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":250790,"byte_end":250795,"line_start":830,"line_end":830,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":250800,"byte_end":250803,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ enum ModuleField<'a> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":250808,"byte_end":250834,"line_start":832,"line_end":832,"column_start":5,"column_end":31}},{"value":"/     Custom(Custom<'a>),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":250839,"byte_end":250866,"line_start":833,"line_end":833,"column_start":5,"column_end":32}},{"value":"/     // ...","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":250871,"byte_end":250885,"line_start":834,"line_end":834,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":250890,"byte_end":250895,"line_start":835,"line_end":835,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":250900,"byte_end":250903,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ impl<'a> Parse<'a> for ModuleField<'a> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":250908,"byte_end":250952,"line_start":837,"line_end":837,"column_start":5,"column_end":49}},{"value":"/     fn parse(parser: Parser<'a>) -> Result<Self> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":250957,"byte_end":251011,"line_start":838,"line_end":838,"column_start":5,"column_end":59}},{"value":"/         // Note that because we have previously registered the `@custom`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":251016,"byte_end":251092,"line_start":839,"line_end":839,"column_start":5,"column_end":81}},{"value":"/         // annotation with the parser we known that `peek` methods like","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":251097,"byte_end":251172,"line_start":840,"line_end":840,"column_start":5,"column_end":80}},{"value":"/         // this, working on the annotation token, are enabled to ever","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":251177,"byte_end":251250,"line_start":841,"line_end":841,"column_start":5,"column_end":78}},{"value":"/         // return `true`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":251255,"byte_end":251284,"line_start":842,"line_end":842,"column_start":5,"column_end":34}},{"value":"/         if parser.peek::<annotation::custom>() {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":251289,"byte_end":251341,"line_start":843,"line_end":843,"column_start":5,"column_end":57}},{"value":"/             return Ok(ModuleField::Custom(parser.parse()?));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":251346,"byte_end":251410,"line_start":844,"line_end":844,"column_start":5,"column_end":69}},{"value":"/         }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":251415,"byte_end":251428,"line_start":845,"line_end":845,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":251433,"byte_end":251436,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/         // .. typically we'd parse other module fields here...","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":251441,"byte_end":251507,"line_start":847,"line_end":847,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":251512,"byte_end":251515,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/         Err(parser.error(\"unknown module field\"))","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":251520,"byte_end":251573,"line_start":849,"line_end":849,"column_start":5,"column_end":58}},{"value":"/     }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":251578,"byte_end":251587,"line_start":850,"line_end":850,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":251592,"byte_end":251597,"line_start":851,"line_end":851,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":251602,"byte_end":251609,"line_start":852,"line_end":852,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":251614,"byte_end":251617,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ [annotation]: https://github.com/WebAssembly/annotations","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":251622,"byte_end":251682,"line_start":854,"line_end":854,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":252579,"byte_end":252587,"line_start":883,"line_end":883,"column_start":12,"column_end":20},"name":"cur_span","qualname":"<Cursor>::cur_span","value":"pub fn cur_span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the span of the next `Token` token.","sig":null,"attributes":[{"value":"/ Returns the span of the next `Token` token.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":252453,"byte_end":252500,"line_start":880,"line_end":880,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":252505,"byte_end":252508,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ Does not take into account whitespace or comments.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":252513,"byte_end":252567,"line_start":882,"line_end":882,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":253282,"byte_end":253287,"line_start":903,"line_end":903,"column_start":12,"column_end":17},"name":"error","qualname":"<Cursor>::error","value":"pub fn error<impl fmt::Display: fmt::Display>(&Self, impl fmt::Display)\n-> Error","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Parser::error`], but works with the current token in this\n [`Cursor`] instead.\n","sig":null,"attributes":[{"value":"/ Same as [`Parser::error`], but works with the current token in this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":253171,"byte_end":253242,"line_start":901,"line_end":901,"column_start":5,"column_end":76}},{"value":"/ [`Cursor`] instead.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":253247,"byte_end":253270,"line_start":902,"line_end":902,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":253742,"byte_end":253748,"line_start":914,"line_end":914,"column_start":12,"column_end":18},"name":"lparen","qualname":"<Cursor>::lparen","value":"pub fn lparen(Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a `(`.","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a `(`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":253393,"byte_end":253459,"line_start":907,"line_end":907,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":253464,"byte_end":253467,"line_start":908,"line_end":908,"column_start":5,"column_end":8}},{"value":"/ If the current token is `(`, returns a new [`Cursor`] pointing at the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":253472,"byte_end":253545,"line_start":909,"line_end":909,"column_start":5,"column_end":78}},{"value":"/ rest of the tokens in the stream. Otherwise returns `None`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":253550,"byte_end":253613,"line_start":910,"line_end":910,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":253618,"byte_end":253621,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ This function will automatically skip over any comments, whitespace, or","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":253626,"byte_end":253701,"line_start":912,"line_end":912,"column_start":5,"column_end":80}},{"value":"/ unknown annotations.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":253706,"byte_end":253730,"line_start":913,"line_end":913,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":254252,"byte_end":254258,"line_start":928,"line_end":928,"column_start":12,"column_end":18},"name":"rparen","qualname":"<Cursor>::rparen","value":"pub fn rparen(Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a `)`.","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a `)`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":253903,"byte_end":253969,"line_start":921,"line_end":921,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":253974,"byte_end":253977,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ If the current token is `)`, returns a new [`Cursor`] pointing at the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":253982,"byte_end":254055,"line_start":923,"line_end":923,"column_start":5,"column_end":78}},{"value":"/ rest of the tokens in the stream. Otherwise returns `None`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":254060,"byte_end":254123,"line_start":924,"line_end":924,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":254128,"byte_end":254131,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/ This function will automatically skip over any comments, whitespace, or","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":254136,"byte_end":254211,"line_start":926,"line_end":926,"column_start":5,"column_end":80}},{"value":"/ unknown annotations.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":254216,"byte_end":254240,"line_start":927,"line_end":927,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":254867,"byte_end":254869,"line_start":944,"line_end":944,"column_start":12,"column_end":14},"name":"id","qualname":"<Cursor>::id","value":"pub fn id(Self) -> Option<(&'a str, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a\n [`Token::Id`](crate::lexer::Token)","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":254413,"byte_end":254474,"line_start":935,"line_end":935,"column_start":5,"column_end":66}},{"value":"/ [`Token::Id`](crate::lexer::Token)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":254479,"byte_end":254517,"line_start":936,"line_end":936,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":254522,"byte_end":254525,"line_start":937,"line_end":937,"column_start":5,"column_end":8}},{"value":"/ If the current token is `Id`, returns the identifier minus the leading","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":254530,"byte_end":254604,"line_start":938,"line_end":938,"column_start":5,"column_end":79}},{"value":"/ `$` character as well as a new [`Cursor`] pointing at the rest of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":254609,"byte_end":254682,"line_start":939,"line_end":939,"column_start":5,"column_end":78}},{"value":"/ tokens in the stream. Otherwise returns `None`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":254687,"byte_end":254738,"line_start":940,"line_end":940,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":254743,"byte_end":254746,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ This function will automatically skip over any comments, whitespace, or","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":254751,"byte_end":254826,"line_start":942,"line_end":942,"column_start":5,"column_end":80}},{"value":"/ unknown annotations.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":254831,"byte_end":254855,"line_start":943,"line_end":943,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":255473,"byte_end":255480,"line_start":960,"line_end":960,"column_start":12,"column_end":19},"name":"keyword","qualname":"<Cursor>::keyword","value":"pub fn keyword(Self) -> Option<(&'a str, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a\n [`Token::Keyword`](crate::lexer::Token)","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":255044,"byte_end":255105,"line_start":951,"line_end":951,"column_start":5,"column_end":66}},{"value":"/ [`Token::Keyword`](crate::lexer::Token)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":255110,"byte_end":255153,"line_start":952,"line_end":952,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":255158,"byte_end":255161,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ If the current token is `Keyword`, returns the keyword as well as a new","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":255166,"byte_end":255241,"line_start":954,"line_end":954,"column_start":5,"column_end":80}},{"value":"/ [`Cursor`] pointing at the rest of the tokens in the stream. Otherwise","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":255246,"byte_end":255320,"line_start":955,"line_end":955,"column_start":5,"column_end":79}},{"value":"/ returns `None`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":255325,"byte_end":255344,"line_start":956,"line_end":956,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":255349,"byte_end":255352,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ This function will automatically skip over any comments, whitespace, or","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":255357,"byte_end":255432,"line_start":958,"line_end":958,"column_start":5,"column_end":80}},{"value":"/ unknown annotations.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":255437,"byte_end":255461,"line_start":959,"line_end":959,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":256092,"byte_end":256100,"line_start":976,"line_end":976,"column_start":12,"column_end":20},"name":"reserved","qualname":"<Cursor>::reserved","value":"pub fn reserved(Self) -> Option<(&'a str, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a\n [`Token::Reserved`](crate::lexer::Token)","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":255654,"byte_end":255715,"line_start":967,"line_end":967,"column_start":5,"column_end":66}},{"value":"/ [`Token::Reserved`](crate::lexer::Token)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":255720,"byte_end":255764,"line_start":968,"line_end":968,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":255769,"byte_end":255772,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ If the current token is `Reserved`, returns the reserved token as well","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":255777,"byte_end":255851,"line_start":970,"line_end":970,"column_start":5,"column_end":79}},{"value":"/ as a new [`Cursor`] pointing at the rest of the tokens in the stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":255856,"byte_end":255929,"line_start":971,"line_end":971,"column_start":5,"column_end":78}},{"value":"/ Otherwise returns `None`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":255934,"byte_end":255963,"line_start":972,"line_end":972,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":255968,"byte_end":255971,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ This function will automatically skip over any comments, whitespace, or","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":255976,"byte_end":256051,"line_start":974,"line_end":974,"column_start":5,"column_end":80}},{"value":"/ unknown annotations.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":256056,"byte_end":256080,"line_start":975,"line_end":975,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":256704,"byte_end":256711,"line_start":992,"line_end":992,"column_start":12,"column_end":19},"name":"integer","qualname":"<Cursor>::integer","value":"pub fn integer(Self) -> Option<(&'a Integer, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a\n [`Token::Integer`](crate::lexer::Token)","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":256275,"byte_end":256336,"line_start":983,"line_end":983,"column_start":5,"column_end":66}},{"value":"/ [`Token::Integer`](crate::lexer::Token)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":256341,"byte_end":256384,"line_start":984,"line_end":984,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":256389,"byte_end":256392,"line_start":985,"line_end":985,"column_start":5,"column_end":8}},{"value":"/ If the current token is `Integer`, returns the integer as well as a new","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":256397,"byte_end":256472,"line_start":986,"line_end":986,"column_start":5,"column_end":80}},{"value":"/ [`Cursor`] pointing at the rest of the tokens in the stream. Otherwise","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":256477,"byte_end":256551,"line_start":987,"line_end":987,"column_start":5,"column_end":79}},{"value":"/ returns `None`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":256556,"byte_end":256575,"line_start":988,"line_end":988,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":256580,"byte_end":256583,"line_start":989,"line_end":989,"column_start":5,"column_end":8}},{"value":"/ This function will automatically skip over any comments, whitespace, or","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":256588,"byte_end":256663,"line_start":990,"line_end":990,"column_start":5,"column_end":80}},{"value":"/ unknown annotations.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":256668,"byte_end":256692,"line_start":991,"line_end":991,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":257314,"byte_end":257319,"line_start":1008,"line_end":1008,"column_start":12,"column_end":17},"name":"float","qualname":"<Cursor>::float","value":"pub fn float(Self) -> Option<(&'a Float, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a\n [`Token::Float`](crate::lexer::Token)","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":256891,"byte_end":256952,"line_start":999,"line_end":999,"column_start":5,"column_end":66}},{"value":"/ [`Token::Float`](crate::lexer::Token)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":256957,"byte_end":256998,"line_start":1000,"line_end":1000,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":257003,"byte_end":257006,"line_start":1001,"line_end":1001,"column_start":5,"column_end":8}},{"value":"/ If the current token is `Float`, returns the float as well as a new","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":257011,"byte_end":257082,"line_start":1002,"line_end":1002,"column_start":5,"column_end":76}},{"value":"/ [`Cursor`] pointing at the rest of the tokens in the stream. Otherwise","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":257087,"byte_end":257161,"line_start":1003,"line_end":1003,"column_start":5,"column_end":79}},{"value":"/ returns `None`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":257166,"byte_end":257185,"line_start":1004,"line_end":1004,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":257190,"byte_end":257193,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ This function will automatically skip over any comments, whitespace, or","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":257198,"byte_end":257273,"line_start":1006,"line_end":1006,"column_start":5,"column_end":80}},{"value":"/ unknown annotations.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":257278,"byte_end":257302,"line_start":1007,"line_end":1007,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":257939,"byte_end":257945,"line_start":1024,"line_end":1024,"column_start":12,"column_end":18},"name":"string","qualname":"<Cursor>::string","value":"pub fn string(Self) -> Option<(&'a [u8], Self)>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a\n [`Token::String`](crate::lexer::Token)","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":257495,"byte_end":257556,"line_start":1015,"line_end":1015,"column_start":5,"column_end":66}},{"value":"/ [`Token::String`](crate::lexer::Token)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":257561,"byte_end":257603,"line_start":1016,"line_end":1016,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":257608,"byte_end":257611,"line_start":1017,"line_end":1017,"column_start":5,"column_end":8}},{"value":"/ If the current token is `String`, returns the byte value of the string","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":257616,"byte_end":257690,"line_start":1018,"line_end":1018,"column_start":5,"column_end":79}},{"value":"/ as well as a new [`Cursor`] pointing at the rest of the tokens in the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":257695,"byte_end":257768,"line_start":1019,"line_end":1019,"column_start":5,"column_end":78}},{"value":"/ stream. Otherwise returns `None`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":257773,"byte_end":257810,"line_start":1020,"line_end":1020,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":257815,"byte_end":257818,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ This function will automatically skip over any comments, whitespace, or","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":257823,"byte_end":257898,"line_start":1022,"line_end":1022,"column_start":5,"column_end":80}},{"value":"/ unknown annotations.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":257903,"byte_end":257927,"line_start":1023,"line_end":1023,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":259134,"byte_end":259144,"line_start":1051,"line_end":1051,"column_start":12,"column_end":22},"name":"annotation","qualname":"<Cursor>::annotation","value":"pub fn annotation(Self) -> Option<(&'a str, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a\n [`Token::Reserved`](crate::lexer::Token) and looks like the start of an\n annotation.","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":258131,"byte_end":258192,"line_start":1031,"line_end":1031,"column_start":5,"column_end":66}},{"value":"/ [`Token::Reserved`](crate::lexer::Token) and looks like the start of an","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":258197,"byte_end":258272,"line_start":1032,"line_end":1032,"column_start":5,"column_end":80}},{"value":"/ annotation.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":258277,"byte_end":258292,"line_start":1033,"line_end":1033,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":258297,"byte_end":258300,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/ [Annotations][annotation] are a WebAssembly proposal for the text format","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":258305,"byte_end":258381,"line_start":1035,"line_end":1035,"column_start":5,"column_end":81}},{"value":"/ which allows placing structured text inside of a text file, for example","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":258386,"byte_end":258461,"line_start":1036,"line_end":1036,"column_start":5,"column_end":80}},{"value":"/ to specify the name section or other custom sections.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":258466,"byte_end":258523,"line_start":1037,"line_end":1037,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":258528,"byte_end":258531,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/ This function will attempt to see if the current token is the `@foo`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":258536,"byte_end":258608,"line_start":1039,"line_end":1039,"column_start":5,"column_end":77}},{"value":"/ part of the annotation. This requires the previous token to be `(` and","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":258613,"byte_end":258687,"line_start":1040,"line_end":1040,"column_start":5,"column_end":79}},{"value":"/ the current token is `Reserved` which starts with `@` and has a nonzero","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":258692,"byte_end":258767,"line_start":1041,"line_end":1041,"column_start":5,"column_end":80}},{"value":"/ length for the following name.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":258772,"byte_end":258806,"line_start":1042,"line_end":1042,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":258811,"byte_end":258814,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ Note that this will skip *unknown* annoations. Only pre-registered","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":258819,"byte_end":258889,"line_start":1044,"line_end":1044,"column_start":5,"column_end":75}},{"value":"/ annotations will be returned here.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":258894,"byte_end":258932,"line_start":1045,"line_end":1045,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":258937,"byte_end":258940,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ This function will automatically skip over any comments, whitespace, or","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":258945,"byte_end":259020,"line_start":1047,"line_end":1047,"column_start":5,"column_end":80}},{"value":"/ unknown annotations.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":259025,"byte_end":259049,"line_start":1048,"line_end":1048,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":259054,"byte_end":259057,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ [annotation]: https://github.com/WebAssembly/annotations","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":259062,"byte_end":259122,"line_start":1050,"line_end":1050,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":259711,"byte_end":259718,"line_start":1066,"line_end":1066,"column_start":12,"column_end":19},"name":"comment","qualname":"<Cursor>::comment","value":"pub fn comment(Self) -> Option<(&'a Comment, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to advance this cursor if the current token is a\n [`Source::Comment`](crate::lexer::Comment)","sig":null,"attributes":[{"value":"/ Attempts to advance this cursor if the current token is a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":259513,"byte_end":259574,"line_start":1062,"line_end":1062,"column_start":5,"column_end":66}},{"value":"/ [`Source::Comment`](crate::lexer::Comment)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":259579,"byte_end":259625,"line_start":1063,"line_end":1063,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":259630,"byte_end":259633,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ This function will only skip whitespace, no other tokens.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":259638,"byte_end":259699,"line_start":1065,"line_end":1065,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":264941,"byte_end":264945,"line_start":1198,"line_end":1198,"column_start":12,"column_end":16},"name":"peek","qualname":"<Lookahead1>::peek","value":"pub fn peek<T: Peek>(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Attempts to see if `T` is the next token in the [`Parser`] this\n [`Lookahead1`] references.","sig":null,"attributes":[{"value":"/ Attempts to see if `T` is the next token in the [`Parser`] this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":264742,"byte_end":264809,"line_start":1194,"line_end":1194,"column_start":5,"column_end":72}},{"value":"/ [`Lookahead1`] references.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":264814,"byte_end":264844,"line_start":1195,"line_end":1195,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":264849,"byte_end":264852,"line_start":1196,"line_end":1196,"column_start":5,"column_end":8}},{"value":"/ For more information see [`Parser::lookahead1`] and [`Parser::peek`]","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":264857,"byte_end":264929,"line_start":1197,"line_end":1197,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":265397,"byte_end":265402,"line_start":1212,"line_end":1212,"column_start":12,"column_end":17},"name":"error","qualname":"<Lookahead1>::error","value":"pub fn error(Self) -> Error","parent":null,"children":[],"decl_id":null,"docs":" Generates an error message saying that one of the tokens passed to\n [`Lookahead1::peek`] method was expected.","sig":null,"attributes":[{"value":"/ Generates an error message saying that one of the tokens passed to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":265132,"byte_end":265202,"line_start":1207,"line_end":1207,"column_start":5,"column_end":75}},{"value":"/ [`Lookahead1::peek`] method was expected.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":265207,"byte_end":265252,"line_start":1208,"line_end":1208,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":265257,"byte_end":265260,"line_start":1209,"line_end":1209,"column_start":5,"column_end":8}},{"value":"/ Before calling this method you should call [`Lookahead1::peek`] for all","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":265265,"byte_end":265340,"line_start":1210,"line_end":1210,"column_start":5,"column_end":80}},{"value":"/ possible tokens you'd like to parse.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":265345,"byte_end":265385,"line_start":1211,"line_end":1211,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":7163},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":3007,"byte_end":3012,"line_start":75,"line_end":75,"column_start":12,"column_end":17},"name":"Error","qualname":"::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":7164}],"decl_id":null,"docs":" A convenience error type to tie together all the detailed errors produced by\n this crate.","sig":null,"attributes":[{"value":"/ A convenience error type to tie together all the detailed errors produced by","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":2537,"byte_end":2617,"line_start":64,"line_end":64,"column_start":1,"column_end":81}},{"value":"/ this crate.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":2618,"byte_end":2633,"line_start":65,"line_end":65,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":2634,"byte_end":2637,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ This type can be created from a [`lexer::LexError`] or [`parser::Error`].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":2638,"byte_end":2715,"line_start":67,"line_end":67,"column_start":1,"column_end":78}},{"value":"/ This also contains storage for file/text information so a nice error can be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":2716,"byte_end":2795,"line_start":68,"line_end":68,"column_start":1,"column_end":80}},{"value":"/ rendered along the same lines of rustc's own error messages (minus the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":2796,"byte_end":2870,"line_start":69,"line_end":69,"column_start":1,"column_end":75}},{"value":"/ color).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":2871,"byte_end":2882,"line_start":70,"line_end":70,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":2883,"byte_end":2886,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ This type is typically suitable for use in public APIs for consumers of this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":2887,"byte_end":2967,"line_start":72,"line_end":72,"column_start":1,"column_end":81}},{"value":"/ crate.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":2968,"byte_end":2978,"line_start":73,"line_end":73,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":4336,"byte_end":4339,"line_start":132,"line_end":132,"column_start":12,"column_end":15},"name":"new","qualname":"<Error>::new","value":"pub fn new(Span, String) -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates a new error with the given `message` which is targeted at the\n given `span`","sig":null,"attributes":[{"value":"/ Creates a new error with the given `message` which is targeted at the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":4064,"byte_end":4137,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ given `span`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":4142,"byte_end":4158,"line_start":128,"line_end":128,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":4163,"byte_end":4166,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ Note that you'll want to ensure that `set_text` or `set_path` is called","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":4171,"byte_end":4246,"line_start":130,"line_end":130,"column_start":5,"column_end":80}},{"value":"/ on the resulting error to improve the rendering of the error message.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":4251,"byte_end":4324,"line_start":131,"line_end":131,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":4972,"byte_end":4980,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"set_text","qualname":"<Error>::set_text","value":"pub fn set_text(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" To provide a more useful error this function can be used to extract\n relevant textual information about this error into the error itself.","sig":null,"attributes":[{"value":"/ To provide a more useful error this function can be used to extract","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":4602,"byte_end":4673,"line_start":143,"line_end":143,"column_start":5,"column_end":76}},{"value":"/ relevant textual information about this error into the error itself.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":4678,"byte_end":4750,"line_start":144,"line_end":144,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":4755,"byte_end":4758,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ The `contents` here should be the full text of the original file being","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":4763,"byte_end":4837,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"/ parsed, and this will extract a sub-slice as necessary to render in the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":4842,"byte_end":4917,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ `Display` implementation later on.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":4922,"byte_end":4960,"line_start":148,"line_end":148,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":5418,"byte_end":5426,"line_start":161,"line_end":161,"column_start":12,"column_end":20},"name":"set_path","qualname":"<Error>::set_path","value":"pub fn set_path(&mut Self, &Path)","parent":null,"children":[],"decl_id":null,"docs":" To provide a more useful error this function can be used to set\n the file name that this error is associated with.","sig":null,"attributes":[{"value":"/ To provide a more useful error this function can be used to set","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":5160,"byte_end":5227,"line_start":156,"line_end":156,"column_start":5,"column_end":72}},{"value":"/ the file name that this error is associated with.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":5232,"byte_end":5285,"line_start":157,"line_end":157,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":5290,"byte_end":5293,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ The `path` here will be stored in this error and later rendered in the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":5298,"byte_end":5372,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ `Display` implementation.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":5377,"byte_end":5406,"line_start":160,"line_end":160,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":5670,"byte_end":5679,"line_start":169,"line_end":169,"column_start":12,"column_end":21},"name":"lex_error","qualname":"<Error>::lex_error","value":"pub fn lex_error(&Self) -> Option<&lexer::LexError>","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying `LexError`, if any, that describes this error.\n","sig":null,"attributes":[{"value":"/ Returns the underlying `LexError`, if any, that describes this error.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":5585,"byte_end":5658,"line_start":168,"line_end":168,"column_start":5,"column_end":78}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":12810,"byte_end":12817,"line_start":168,"line_end":168,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":13934,"byte_end":13937,"line_start":212,"line_end":212,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":14700,"byte_end":14712,"line_start":250,"line_end":250,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":14936,"byte_end":14946,"line_start":260,"line_end":260,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":15185,"byte_end":15194,"line_start":270,"line_end":270,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":15334,"byte_end":15344,"line_start":277,"line_end":277,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":15531,"byte_end":15543,"line_start":285,"line_end":285,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":15647,"byte_end":15657,"line_start":291,"line_end":291,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":15787,"byte_end":15791,"line_start":298,"line_end":298,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":16490,"byte_end":16496,"line_start":325,"line_end":325,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":16804,"byte_end":16811,"line_start":338,"line_end":338,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":17404,"byte_end":17412,"line_start":359,"line_end":359,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":17824,"byte_end":17831,"line_start":374,"line_end":374,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":19236,"byte_end":19242,"line_start":423,"line_end":423,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":19543,"byte_end":19550,"line_start":437,"line_end":437,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":20430,"byte_end":20437,"line_start":472,"line_end":472,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":20641,"byte_end":20646,"line_start":481,"line_end":481,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":20875,"byte_end":20884,"line_start":490,"line_end":490,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":21016,"byte_end":21022,"line_start":497,"line_end":497,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":21365,"byte_end":21375,"line_start":513,"line_end":513,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":21739,"byte_end":21749,"line_start":526,"line_end":526,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":21953,"byte_end":21958,"line_start":537,"line_end":537,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":22235,"byte_end":22241,"line_start":547,"line_end":547,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":22520,"byte_end":22526,"line_start":557,"line_end":557,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":22838,"byte_end":22844,"line_start":568,"line_end":568,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":22974,"byte_end":22984,"line_start":575,"line_end":575,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":23979,"byte_end":23983,"line_start":614,"line_end":614,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":26684,"byte_end":26695,"line_start":699,"line_end":699,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":27374,"byte_end":27378,"line_start":721,"line_end":721,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":27991,"byte_end":27995,"line_start":742,"line_end":742,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":28852,"byte_end":28862,"line_start":769,"line_end":769,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":29037,"byte_end":29046,"line_start":778,"line_end":778,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":29713,"byte_end":29719,"line_start":799,"line_end":799,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":29865,"byte_end":29877,"line_start":806,"line_end":806,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":30006,"byte_end":30015,"line_start":813,"line_end":813,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":30146,"byte_end":30155,"line_start":820,"line_end":820,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":30283,"byte_end":30291,"line_start":827,"line_end":827,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":30391,"byte_end":30401,"line_start":833,"line_end":833,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":30524,"byte_end":30538,"line_start":840,"line_end":840,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":30794,"byte_end":30801,"line_start":853,"line_end":853,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":30924,"byte_end":30931,"line_start":859,"line_end":859,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":33944,"byte_end":33949,"line_start":957,"line_end":957,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":34095,"byte_end":34100,"line_start":963,"line_end":963,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":34717,"byte_end":34719,"line_start":988,"line_end":988,"column_start":17,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":34862,"byte_end":34871,"line_start":995,"line_end":995,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":34993,"byte_end":35005,"line_start":1001,"line_end":1001,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":35123,"byte_end":35134,"line_start":1007,"line_end":1007,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":35388,"byte_end":35394,"line_start":1019,"line_end":1019,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":35554,"byte_end":35559,"line_start":1027,"line_end":1027,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":35658,"byte_end":35667,"line_start":1033,"line_end":1033,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":35886,"byte_end":35893,"line_start":1044,"line_end":1044,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":36023,"byte_end":36035,"line_start":1051,"line_end":1051,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":36170,"byte_end":36182,"line_start":1058,"line_end":1058,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":36310,"byte_end":36322,"line_start":1065,"line_end":1065,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":36644,"byte_end":36652,"line_start":1076,"line_end":1076,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":37029,"byte_end":37034,"line_start":1089,"line_end":1089,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/expand.rs","byte_start":58112,"byte_end":58120,"line_start":74,"line_end":74,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/expand.rs","byte_start":80161,"byte_end":80171,"line_start":633,"line_end":633,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/expand.rs","byte_start":80943,"byte_end":80955,"line_start":656,"line_end":656,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/expand.rs","byte_start":81156,"byte_end":81166,"line_start":663,"line_end":663,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/expand.rs","byte_start":82389,"byte_end":82401,"line_start":697,"line_end":697,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/names.rs","byte_start":86618,"byte_end":86626,"line_start":101,"line_end":101,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":331},{"krate":0,"index":333},{"krate":0,"index":335},{"krate":0,"index":337},{"krate":0,"index":339},{"krate":0,"index":341},{"krate":0,"index":343},{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/names.rs","byte_start":126444,"byte_end":126450,"line_start":1007,"line_end":1007,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":365},{"krate":0,"index":367},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":375},{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/names.rs","byte_start":147153,"byte_end":147162,"line_start":1561,"line_end":1561,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/names.rs","byte_start":150274,"byte_end":150277,"line_start":1640,"line_end":1640,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/names.rs","byte_start":150651,"byte_end":150660,"line_start":1657,"line_end":1657,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/names.rs","byte_start":151000,"byte_end":151012,"line_start":1674,"line_end":1674,"column_start":14,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/names.rs","byte_start":160070,"byte_end":160082,"line_start":1925,"line_end":1925,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/names.rs","byte_start":162364,"byte_end":162371,"line_start":1992,"line_end":1992,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":487},{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/names.rs","byte_start":163099,"byte_end":163111,"line_start":2016,"line_end":2016,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/names.rs","byte_start":163967,"byte_end":163978,"line_start":2048,"line_end":2048,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":504},{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/names.rs","byte_start":165471,"byte_end":165481,"line_start":2095,"line_end":2095,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/names.rs","byte_start":166919,"byte_end":166928,"line_start":2143,"line_end":2143,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":524},{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/names.rs","byte_start":168789,"byte_end":168793,"line_start":2210,"line_end":2210,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":529},{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/names.rs","byte_start":170360,"byte_end":170375,"line_start":2252,"line_end":2252,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/mod.rs","byte_start":37572,"byte_end":37574,"line_start":21,"line_end":21,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":540},{"krate":0,"index":543},{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/mod.rs","byte_start":41978,"byte_end":41983,"line_start":142,"line_end":142,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7653146,"byte_end":7653150,"line_start":14,"line_end":14,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":929},{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7654397,"byte_end":7654399,"line_start":51,"line_end":51,"column_start":10,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7655049,"byte_end":7655051,"line_start":81,"line_end":81,"column_start":19,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7655201,"byte_end":7655203,"line_start":88,"line_end":88,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7655335,"byte_end":7655337,"line_start":94,"line_end":94,"column_start":17,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7655369,"byte_end":7655371,"line_start":96,"line_end":96,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":949}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7655673,"byte_end":7655675,"line_start":107,"line_end":107,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":952}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7655793,"byte_end":7655795,"line_start":113,"line_end":113,"column_start":15,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":954},{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7656695,"byte_end":7656700,"line_start":141,"line_end":141,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":957}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7656953,"byte_end":7656958,"line_start":151,"line_end":151,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":960}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7657326,"byte_end":7657331,"line_start":165,"line_end":165,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":962},{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7657515,"byte_end":7657520,"line_start":175,"line_end":175,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7657770,"byte_end":7657775,"line_start":185,"line_end":185,"column_start":13,"column_end":18},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7657798,"byte_end":7657803,"line_start":187,"line_end":187,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":968}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7658357,"byte_end":7658371,"line_start":209,"line_end":209,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":972}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7658578,"byte_end":7658584,"line_start":217,"line_end":217,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7661071,"byte_end":7661077,"line_start":303,"line_end":303,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":990}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7672193,"byte_end":7672199,"line_start":592,"line_end":592,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":999},{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/alias.rs","byte_start":7674674,"byte_end":7674679,"line_start":21,"line_end":21,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1176}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7676306,"byte_end":7676322,"line_start":30,"line_end":30,"column_start":24,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7677485,"byte_end":7677495,"line_start":60,"line_end":60,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1198}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7678447,"byte_end":7678458,"line_start":93,"line_end":93,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1201}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7681864,"byte_end":7681870,"line_start":55,"line_end":55,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1214}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7682439,"byte_end":7682450,"line_start":77,"line_end":77,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1218}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7683241,"byte_end":7683258,"line_start":101,"line_end":101,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1221}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/event.rs","byte_start":7686518,"byte_end":7686523,"line_start":25,"line_end":25,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1233}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/event.rs","byte_start":7686872,"byte_end":7686881,"line_start":40,"line_end":40,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1236}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/export.rs","byte_start":7687827,"byte_end":7687833,"line_start":30,"line_end":30,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1250}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/export.rs","byte_start":7688101,"byte_end":7688111,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1254}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/export.rs","byte_start":7689619,"byte_end":7689631,"line_start":80,"line_end":80,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1257}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/export.rs","byte_start":7689968,"byte_end":7689980,"line_start":93,"line_end":93,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1260},{"krate":0,"index":1261}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7691073,"byte_end":7691083,"line_start":16,"line_end":16,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1275}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7693082,"byte_end":7693098,"line_start":76,"line_end":76,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1307},{"krate":0,"index":1308},{"krate":0,"index":1310}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7732646,"byte_end":7732655,"line_start":903,"line_end":903,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1314}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7733150,"byte_end":7733164,"line_start":922,"line_end":922,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1317}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7733865,"byte_end":7733871,"line_start":947,"line_end":947,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1319}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7735766,"byte_end":7735778,"line_start":999,"line_end":999,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1324}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7736748,"byte_end":7736757,"line_start":1026,"line_end":1026,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1327}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7737429,"byte_end":7737438,"line_start":1047,"line_end":1047,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1330}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7737969,"byte_end":7737977,"line_start":1066,"line_end":1066,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1333}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7738450,"byte_end":7738460,"line_start":1084,"line_end":1084,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1336}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7738915,"byte_end":7738927,"line_start":1101,"line_end":1101,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1339}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7739402,"byte_end":7739414,"line_start":1119,"line_end":1119,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1342}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7739873,"byte_end":7739882,"line_start":1141,"line_end":1141,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5193}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7743139,"byte_end":7743148,"line_start":1232,"line_end":1232,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1346}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7745378,"byte_end":7745390,"line_start":1302,"line_end":1302,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1349}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7746238,"byte_end":7746249,"line_start":1334,"line_end":1334,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1352}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7746907,"byte_end":7746914,"line_start":1360,"line_end":1360,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1356}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/func.rs","byte_start":7748857,"byte_end":7748861,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1368}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/global.rs","byte_start":7751377,"byte_end":7751383,"line_start":34,"line_end":34,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1381}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7752455,"byte_end":7752461,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1395}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7753700,"byte_end":7753707,"line_start":59,"line_end":59,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1399}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7756339,"byte_end":7756351,"line_start":137,"line_end":137,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1402}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7756625,"byte_end":7756637,"line_start":149,"line_end":149,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1405},{"krate":0,"index":1406}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/instance.rs","byte_start":7758646,"byte_end":7758654,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1418}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7760592,"byte_end":7760598,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1432}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7762836,"byte_end":7762840,"line_start":111,"line_end":111,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1436}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7764904,"byte_end":7764907,"line_start":16,"line_end":16,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1455}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7766299,"byte_end":7766305,"line_start":59,"line_end":59,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1473},{"krate":0,"index":1474},{"krate":0,"index":1475}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7769352,"byte_end":7769358,"line_start":132,"line_end":132,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1478}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7770689,"byte_end":7770700,"line_start":180,"line_end":180,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1481}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7770974,"byte_end":7770985,"line_start":190,"line_end":190,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1484}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/nested_module.rs","byte_start":7774515,"byte_end":7774527,"line_start":41,"line_end":41,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1498}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/nested_module.rs","byte_start":7775942,"byte_end":7775952,"line_start":86,"line_end":86,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1504},{"krate":0,"index":1505}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7777927,"byte_end":7777932,"line_start":41,"line_end":41,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1517}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7780885,"byte_end":7780889,"line_start":134,"line_end":134,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1521}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7782149,"byte_end":7782160,"line_start":176,"line_end":176,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1526}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7782293,"byte_end":7782304,"line_start":182,"line_end":182,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1529}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7784445,"byte_end":7784452,"line_start":19,"line_end":19,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1547}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7786813,"byte_end":7786821,"line_start":86,"line_end":86,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1551}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7787832,"byte_end":7787839,"line_start":120,"line_end":120,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1554},{"krate":0,"index":1555},{"krate":0,"index":1556},{"krate":0,"index":1557},{"krate":0,"index":1558}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7788799,"byte_end":7788806,"line_start":162,"line_end":162,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1561}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7790352,"byte_end":7790359,"line_start":209,"line_end":209,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1565},{"krate":0,"index":1566}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7791086,"byte_end":7791096,"line_start":233,"line_end":233,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1569}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7791854,"byte_end":7791860,"line_start":261,"line_end":261,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1573}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7792414,"byte_end":7792423,"line_start":282,"line_end":282,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1576}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7792900,"byte_end":7792910,"line_start":300,"line_end":300,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1579}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7793597,"byte_end":7793609,"line_start":322,"line_end":322,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1582}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7795252,"byte_end":7795264,"line_start":364,"line_end":364,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1586}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7795519,"byte_end":7795531,"line_start":375,"line_end":375,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1589},{"krate":0,"index":1590}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7796036,"byte_end":7796055,"line_start":396,"line_end":396,"column_start":24,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1593}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7796332,"byte_end":7796351,"line_start":407,"line_end":407,"column_start":19,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1596},{"krate":0,"index":1597}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7796561,"byte_end":7796573,"line_start":417,"line_end":417,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1600}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7796845,"byte_end":7796855,"line_start":430,"line_end":430,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1603}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7797706,"byte_end":7797717,"line_start":459,"line_end":459,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1607}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7798461,"byte_end":7798470,"line_start":484,"line_end":484,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1611}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7799320,"byte_end":7799330,"line_start":510,"line_end":510,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1615}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7800140,"byte_end":7800150,"line_start":537,"line_end":537,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1620},{"krate":0,"index":1621}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7800696,"byte_end":7800708,"line_start":561,"line_end":561,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1624}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7800970,"byte_end":7800982,"line_start":571,"line_end":571,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1628},{"krate":0,"index":1629}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7801643,"byte_end":7801653,"line_start":599,"line_end":599,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1632}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7802643,"byte_end":7802647,"line_start":635,"line_end":635,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1636}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7804011,"byte_end":7804018,"line_start":673,"line_end":673,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1641}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7804349,"byte_end":7804356,"line_start":684,"line_end":684,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1645}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7804800,"byte_end":7804807,"line_start":700,"line_end":700,"column_start":57,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1649}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7805573,"byte_end":7805577,"line_start":15,"line_end":15,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1671}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7806229,"byte_end":7806247,"line_start":35,"line_end":35,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1676},{"krate":0,"index":1677}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7807767,"byte_end":7807780,"line_start":98,"line_end":98,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1718}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7808514,"byte_end":7808527,"line_start":116,"line_end":116,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1721}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7814762,"byte_end":7814773,"line_start":266,"line_end":266,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1749}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7815533,"byte_end":7815543,"line_start":293,"line_end":293,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1758}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7816110,"byte_end":7816121,"line_start":317,"line_end":317,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1770}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":190927,"byte_end":190932,"line_start":218,"line_end":218,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":599},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":610},{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":206962,"byte_end":206967,"line_start":682,"line_end":682,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":614},{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":207116,"byte_end":207122,"line_start":690,"line_end":690,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":207394,"byte_end":207401,"line_start":701,"line_end":701,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":207622,"byte_end":207627,"line_start":711,"line_end":711,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":208077,"byte_end":208084,"line_start":727,"line_end":727,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":627},{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":208444,"byte_end":208449,"line_start":740,"line_end":740,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":209532,"byte_end":209540,"line_start":800,"line_end":800,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":231777,"byte_end":231788,"line_start":331,"line_end":331,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":234967,"byte_end":234973,"line_start":414,"line_end":414,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":698},{"krate":0,"index":700},{"krate":0,"index":702},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":713},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":252168,"byte_end":252180,"line_start":869,"line_end":869,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":252436,"byte_end":252442,"line_start":879,"line_end":879,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":746},{"krate":0,"index":749}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":264721,"byte_end":264731,"line_start":1193,"line_end":1193,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":751},{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":266394,"byte_end":266400,"line_start":1241,"line_end":1241,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":757}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":3350,"byte_end":3355,"line_start":100,"line_end":100,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":5856,"byte_end":5861,"line_start":177,"line_end":177,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":6835,"byte_end":6840,"line_start":214,"line_end":214,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":6850,"byte_end":6854,"line_start":216,"line_end":216,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":2513,"byte_end":2518,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":562}},{"kind":"Mod","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":2528,"byte_end":2534,"line_start":62,"line_end":62,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":639}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":12810,"byte_end":12817,"line_start":168,"line_end":168,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":21},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":13934,"byte_end":13937,"line_start":212,"line_end":212,"column_start":28,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":5,"index":4228},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":14700,"byte_end":14712,"line_start":250,"line_end":250,"column_start":17,"column_end":29},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":5716},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":14936,"byte_end":14946,"line_start":260,"line_end":260,"column_start":17,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":5742},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":15185,"byte_end":15194,"line_start":270,"line_end":270,"column_start":17,"column_end":26},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":5762},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":15334,"byte_end":15344,"line_start":277,"line_end":277,"column_start":17,"column_end":27},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":5772},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":15531,"byte_end":15543,"line_start":285,"line_end":285,"column_start":17,"column_end":29},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":5786},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":15647,"byte_end":15657,"line_start":291,"line_end":291,"column_start":17,"column_end":27},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":5798},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":15787,"byte_end":15791,"line_start":298,"line_end":298,"column_start":17,"column_end":21},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":5829},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":16490,"byte_end":16496,"line_start":325,"line_end":325,"column_start":17,"column_end":23},"kind":{"Impl":{"id":14}},"from":{"krate":2,"index":29967},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":16804,"byte_end":16811,"line_start":338,"line_end":338,"column_start":21,"column_end":28},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":5516},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":17404,"byte_end":17412,"line_start":359,"line_end":359,"column_start":21,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":5561},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":17824,"byte_end":17831,"line_start":374,"line_end":374,"column_start":21,"column_end":28},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":5599},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":19236,"byte_end":19242,"line_start":423,"line_end":423,"column_start":17,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":5256},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":19543,"byte_end":19550,"line_start":437,"line_end":437,"column_start":17,"column_end":24},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":5268},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":20430,"byte_end":20437,"line_start":472,"line_end":472,"column_start":20,"column_end":27},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":5837},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":20641,"byte_end":20646,"line_start":481,"line_end":481,"column_start":17,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1012},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":20875,"byte_end":20884,"line_start":490,"line_end":490,"column_start":21,"column_end":30},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":5671},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":21016,"byte_end":21022,"line_start":497,"line_end":497,"column_start":17,"column_end":23},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":5653},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":21365,"byte_end":21375,"line_start":513,"line_end":513,"column_start":17,"column_end":27},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":5698},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":21739,"byte_end":21749,"line_start":526,"line_end":526,"column_start":21,"column_end":31},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":5626},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":21953,"byte_end":21958,"line_start":537,"line_end":537,"column_start":17,"column_end":22},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":5458},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":22235,"byte_end":22241,"line_start":547,"line_end":547,"column_start":17,"column_end":23},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":5341},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":22520,"byte_end":22526,"line_start":557,"line_end":557,"column_start":17,"column_end":23},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":5235},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":22838,"byte_end":22844,"line_start":568,"line_end":568,"column_start":17,"column_end":23},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1950},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":22974,"byte_end":22984,"line_start":575,"line_end":575,"column_start":17,"column_end":27},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1958},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":23979,"byte_end":23983,"line_start":614,"line_end":614,"column_start":17,"column_end":21},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":5481},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":26684,"byte_end":26695,"line_start":699,"line_end":699,"column_start":17,"column_end":28},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":5502},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":27374,"byte_end":27378,"line_start":721,"line_end":721,"column_start":17,"column_end":21},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":5364},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":27991,"byte_end":27995,"line_start":742,"line_end":742,"column_start":17,"column_end":21},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":5213},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":28852,"byte_end":28862,"line_start":769,"line_end":769,"column_start":17,"column_end":27},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1996},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":29037,"byte_end":29046,"line_start":778,"line_end":778,"column_start":17,"column_end":26},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":5100},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":29713,"byte_end":29719,"line_start":799,"line_end":799,"column_start":17,"column_end":23},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":5114},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":29865,"byte_end":29877,"line_start":806,"line_end":806,"column_start":17,"column_end":29},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":5119},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":30006,"byte_end":30015,"line_start":813,"line_end":813,"column_start":17,"column_end":26},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":5126},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":30146,"byte_end":30155,"line_start":820,"line_end":820,"column_start":17,"column_end":26},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":5133},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":30283,"byte_end":30291,"line_start":827,"line_end":827,"column_start":17,"column_end":25},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":5140},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":30391,"byte_end":30401,"line_start":833,"line_end":833,"column_start":17,"column_end":27},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":5146},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":30524,"byte_end":30538,"line_start":840,"line_end":840,"column_start":17,"column_end":31},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":5107},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":30794,"byte_end":30801,"line_start":853,"line_end":853,"column_start":17,"column_end":24},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1158},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":30924,"byte_end":30931,"line_start":859,"line_end":859,"column_start":17,"column_end":24},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1162},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":33944,"byte_end":33949,"line_start":957,"line_end":957,"column_start":6,"column_end":11},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":34095,"byte_end":34100,"line_start":963,"line_end":963,"column_start":17,"column_end":22},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":145},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":34717,"byte_end":34719,"line_start":988,"line_end":988,"column_start":17,"column_end":19},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1002},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":34862,"byte_end":34871,"line_start":995,"line_end":995,"column_start":17,"column_end":26},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":5166},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":34993,"byte_end":35005,"line_start":1001,"line_end":1001,"column_start":17,"column_end":29},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":5195},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":35123,"byte_end":35134,"line_start":1007,"line_end":1007,"column_start":21,"column_end":32},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":5200},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":35388,"byte_end":35394,"line_start":1019,"line_end":1019,"column_start":17,"column_end":23},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1860},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":35554,"byte_end":35559,"line_start":1027,"line_end":1027,"column_start":17,"column_end":22},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1930},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":35658,"byte_end":35667,"line_start":1033,"line_end":1033,"column_start":17,"column_end":26},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1939},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":35886,"byte_end":35893,"line_start":1044,"line_end":1044,"column_start":17,"column_end":24},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":5206},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":36023,"byte_end":36035,"line_start":1051,"line_end":1051,"column_start":17,"column_end":29},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":5152},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":36170,"byte_end":36182,"line_start":1058,"line_end":1058,"column_start":17,"column_end":29},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":5159},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":36310,"byte_end":36322,"line_start":1065,"line_end":1065,"column_start":17,"column_end":29},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":5437},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":36644,"byte_end":36652,"line_start":1076,"line_end":1076,"column_start":17,"column_end":25},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":5321},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/binary.rs","byte_start":37029,"byte_end":37034,"line_start":1089,"line_end":1089,"column_start":17,"column_end":22},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1772},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/expand.rs","byte_start":58112,"byte_end":58120,"line_start":74,"line_end":74,"column_start":10,"column_end":18},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":771},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/expand.rs","byte_start":80161,"byte_end":80171,"line_start":633,"line_end":633,"column_start":10,"column_end":20},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":783},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/expand.rs","byte_start":80943,"byte_end":80955,"line_start":656,"line_end":656,"column_start":32,"column_end":44},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":5716},"to":{"krate":0,"index":248}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/expand.rs","byte_start":81156,"byte_end":81166,"line_start":663,"line_end":663,"column_start":32,"column_end":42},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":5772},"to":{"krate":0,"index":248}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/expand.rs","byte_start":82389,"byte_end":82401,"line_start":697,"line_end":697,"column_start":32,"column_end":44},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":5786},"to":{"krate":0,"index":248}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/names.rs","byte_start":86618,"byte_end":86626,"line_start":101,"line_end":101,"column_start":10,"column_end":18},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":797},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/names.rs","byte_start":126444,"byte_end":126450,"line_start":1007,"line_end":1007,"column_start":10,"column_end":16},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":804},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/names.rs","byte_start":147153,"byte_end":147162,"line_start":1561,"line_end":1561,"column_start":13,"column_end":22},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/names.rs","byte_start":150274,"byte_end":150277,"line_start":1640,"line_end":1640,"column_start":9,"column_end":12},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":384},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/names.rs","byte_start":150651,"byte_end":150660,"line_start":1657,"line_end":1657,"column_start":25,"column_end":34},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":377},"to":{"krate":2,"index":1910}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/names.rs","byte_start":151000,"byte_end":151012,"line_start":1674,"line_end":1674,"column_start":14,"column_end":26},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/names.rs","byte_start":159455,"byte_end":159462,"line_start":1908,"line_end":1908,"column_start":26,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":1910},"to":{"krate":0,"index":455}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/names.rs","byte_start":160070,"byte_end":160082,"line_start":1925,"line_end":1925,"column_start":32,"column_end":44},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":5716},"to":{"krate":0,"index":455}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/names.rs","byte_start":162364,"byte_end":162371,"line_start":1992,"line_end":1992,"column_start":26,"column_end":33},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":468},"to":{"krate":0,"index":462}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/names.rs","byte_start":163099,"byte_end":163111,"line_start":2016,"line_end":2016,"column_start":32,"column_end":44},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":5786},"to":{"krate":0,"index":455}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/names.rs","byte_start":163967,"byte_end":163978,"line_start":2048,"line_end":2048,"column_start":26,"column_end":37},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":489},"to":{"krate":0,"index":462}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/names.rs","byte_start":165471,"byte_end":165481,"line_start":2095,"line_end":2095,"column_start":32,"column_end":42},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":5772},"to":{"krate":0,"index":455}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/names.rs","byte_start":166919,"byte_end":166928,"line_start":2143,"line_end":2143,"column_start":26,"column_end":35},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":507},"to":{"krate":0,"index":462}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/names.rs","byte_start":168789,"byte_end":168793,"line_start":2210,"line_end":2210,"column_start":10,"column_end":14},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":829},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/names.rs","byte_start":170360,"byte_end":170375,"line_start":2252,"line_end":2252,"column_start":10,"column_end":25},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/mod.rs","byte_start":37572,"byte_end":37574,"line_start":21,"line_end":21,"column_start":6,"column_end":8},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":877},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/resolve/mod.rs","byte_start":41978,"byte_end":41983,"line_start":142,"line_end":142,"column_start":10,"column_end":15},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":908},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7653146,"byte_end":7653150,"line_start":14,"line_end":14,"column_start":6,"column_end":10},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":7189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7654397,"byte_end":7654399,"line_start":51,"line_end":51,"column_start":10,"column_end":12},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1002},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7655049,"byte_end":7655051,"line_start":81,"line_end":81,"column_start":19,"column_end":21},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1002},"to":{"krate":2,"index":6386}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7655201,"byte_end":7655203,"line_start":88,"line_end":88,"column_start":24,"column_end":26},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1002},"to":{"krate":2,"index":1648}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7655335,"byte_end":7655337,"line_start":94,"line_end":94,"column_start":17,"column_end":19},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1002},"to":{"krate":2,"index":1653}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7655369,"byte_end":7655371,"line_start":96,"line_end":96,"column_start":24,"column_end":26},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1002},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7655673,"byte_end":7655675,"line_start":107,"line_end":107,"column_start":21,"column_end":23},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1002},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7655793,"byte_end":7655795,"line_start":113,"line_end":113,"column_start":15,"column_end":17},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1002},"to":{"krate":0,"index":662}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7656695,"byte_end":7656700,"line_start":141,"line_end":141,"column_start":6,"column_end":11},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1012},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7656953,"byte_end":7656958,"line_start":151,"line_end":151,"column_start":24,"column_end":29},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1012},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7657326,"byte_end":7657331,"line_start":165,"line_end":165,"column_start":15,"column_end":20},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1012},"to":{"krate":0,"index":662}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7657515,"byte_end":7657520,"line_start":175,"line_end":175,"column_start":20,"column_end":25},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1648}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7657770,"byte_end":7657775,"line_start":185,"line_end":185,"column_start":13,"column_end":18},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1653}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7657798,"byte_end":7657803,"line_start":187,"line_end":187,"column_start":15,"column_end":20},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":6386}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7658357,"byte_end":7658371,"line_start":209,"line_end":209,"column_start":24,"column_end":38},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1029},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7658578,"byte_end":7658584,"line_start":217,"line_end":217,"column_start":24,"column_end":30},"kind":{"Impl":{"id":98}},"from":{"krate":2,"index":29967},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7661071,"byte_end":7661077,"line_start":303,"line_end":303,"column_start":20,"column_end":26},"kind":{"Impl":{"id":99}},"from":{"krate":5,"index":4928},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/token.rs","byte_start":7672193,"byte_end":7672199,"line_start":592,"line_end":592,"column_start":15,"column_end":21},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":996},"to":{"krate":0,"index":662}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/alias.rs","byte_start":7674674,"byte_end":7674679,"line_start":21,"line_end":21,"column_start":24,"column_end":29},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1772},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7676306,"byte_end":7676322,"line_start":30,"line_end":30,"column_start":24,"column_end":40},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1782},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7677485,"byte_end":7677495,"line_start":60,"line_end":60,"column_start":27,"column_end":37},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1815},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/assert_expr.rs","byte_start":7678447,"byte_end":7678458,"line_start":93,"line_end":93,"column_start":24,"column_end":35},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1833},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7681864,"byte_end":7681870,"line_start":55,"line_end":55,"column_start":24,"column_end":30},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1860},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7682439,"byte_end":7682450,"line_start":77,"line_end":77,"column_start":24,"column_end":35},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1869},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/custom.rs","byte_start":7683241,"byte_end":7683258,"line_start":101,"line_end":101,"column_start":24,"column_end":41},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1889},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/event.rs","byte_start":7686518,"byte_end":7686523,"line_start":25,"line_end":25,"column_start":24,"column_end":29},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1930},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/event.rs","byte_start":7686872,"byte_end":7686881,"line_start":40,"line_end":40,"column_start":24,"column_end":33},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1939},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/export.rs","byte_start":7687827,"byte_end":7687833,"line_start":30,"line_end":30,"column_start":24,"column_end":30},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1950},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/export.rs","byte_start":7688101,"byte_end":7688111,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1958},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/export.rs","byte_start":7689619,"byte_end":7689631,"line_start":80,"line_end":80,"column_start":24,"column_end":36},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1990},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/export.rs","byte_start":7689968,"byte_end":7689980,"line_start":93,"line_end":93,"column_start":15,"column_end":27},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1990},"to":{"krate":0,"index":662}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7691073,"byte_end":7691083,"line_start":16,"line_end":16,"column_start":24,"column_end":34},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1996},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7693082,"byte_end":7693098,"line_start":76,"line_end":76,"column_start":10,"column_end":26},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2002},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7732646,"byte_end":7732655,"line_start":903,"line_end":903,"column_start":24,"column_end":33},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":5100},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7733150,"byte_end":7733164,"line_start":922,"line_end":922,"column_start":24,"column_end":38},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":5107},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7733865,"byte_end":7733871,"line_start":947,"line_end":947,"column_start":6,"column_end":12},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":5114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7735766,"byte_end":7735778,"line_start":999,"line_end":999,"column_start":24,"column_end":36},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":5119},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7736748,"byte_end":7736757,"line_start":1026,"line_end":1026,"column_start":24,"column_end":33},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":5126},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7737429,"byte_end":7737438,"line_start":1047,"line_end":1047,"column_start":24,"column_end":33},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":5133},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7737969,"byte_end":7737977,"line_start":1066,"line_end":1066,"column_start":24,"column_end":32},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":5140},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7738450,"byte_end":7738460,"line_start":1084,"line_end":1084,"column_start":24,"column_end":34},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":5146},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7738915,"byte_end":7738927,"line_start":1101,"line_end":1101,"column_start":24,"column_end":36},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":5152},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7739402,"byte_end":7739414,"line_start":1119,"line_end":1119,"column_start":24,"column_end":36},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":5159},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7739873,"byte_end":7739882,"line_start":1141,"line_end":1141,"column_start":6,"column_end":15},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":5166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7743139,"byte_end":7743148,"line_start":1232,"line_end":1232,"column_start":24,"column_end":33},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":5166},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7745378,"byte_end":7745390,"line_start":1302,"line_end":1302,"column_start":24,"column_end":36},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":5195},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7746238,"byte_end":7746249,"line_start":1334,"line_end":1334,"column_start":24,"column_end":35},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":5200},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/expr.rs","byte_start":7746907,"byte_end":7746914,"line_start":1360,"line_end":1360,"column_start":24,"column_end":31},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":5206},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/func.rs","byte_start":7748857,"byte_end":7748861,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":5213},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/global.rs","byte_start":7751377,"byte_end":7751383,"line_start":34,"line_end":34,"column_start":24,"column_end":30},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":5235},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7752455,"byte_end":7752461,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":5256},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7753700,"byte_end":7753707,"line_start":59,"line_end":59,"column_start":24,"column_end":31},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":5268},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7756339,"byte_end":7756351,"line_start":137,"line_end":137,"column_start":24,"column_end":36},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":5309},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/import.rs","byte_start":7756625,"byte_end":7756637,"line_start":149,"line_end":149,"column_start":15,"column_end":27},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":5309},"to":{"krate":0,"index":662}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/instance.rs","byte_start":7758646,"byte_end":7758654,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":5321},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7760592,"byte_end":7760598,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":5341},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/memory.rs","byte_start":7762836,"byte_end":7762840,"line_start":111,"line_end":111,"column_start":24,"column_end":28},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":5364},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7764904,"byte_end":7764907,"line_start":16,"line_end":16,"column_start":24,"column_end":27},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1450},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7766299,"byte_end":7766305,"line_start":59,"line_end":59,"column_start":10,"column_end":16},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1457},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7769352,"byte_end":7769358,"line_start":132,"line_end":132,"column_start":24,"column_end":30},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1457},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7770689,"byte_end":7770700,"line_start":180,"line_end":180,"column_start":10,"column_end":21},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":5383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/module.rs","byte_start":7770974,"byte_end":7770985,"line_start":190,"line_end":190,"column_start":24,"column_end":35},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":5383},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/nested_module.rs","byte_start":7774515,"byte_end":7774527,"line_start":41,"line_end":41,"column_start":24,"column_end":36},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":5437},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/nested_module.rs","byte_start":7775942,"byte_end":7775952,"line_start":86,"line_end":86,"column_start":15,"column_end":25},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1501},"to":{"krate":0,"index":662}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7777927,"byte_end":7777932,"line_start":41,"line_end":41,"column_start":24,"column_end":29},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":5458},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7780885,"byte_end":7780889,"line_start":134,"line_end":134,"column_start":24,"column_end":28},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":5481},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7782149,"byte_end":7782160,"line_start":176,"line_end":176,"column_start":24,"column_end":35},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":5502},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/table.rs","byte_start":7782293,"byte_end":7782304,"line_start":182,"line_end":182,"column_start":10,"column_end":21},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":5502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7784445,"byte_end":7784452,"line_start":19,"line_end":19,"column_start":24,"column_end":31},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":5516},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7786813,"byte_end":7786821,"line_start":86,"line_end":86,"column_start":24,"column_end":32},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":5561},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7787832,"byte_end":7787839,"line_start":120,"line_end":120,"column_start":10,"column_end":17},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":5599},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7788799,"byte_end":7788806,"line_start":162,"line_end":162,"column_start":24,"column_end":31},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":5599},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7790352,"byte_end":7790359,"line_start":209,"line_end":209,"column_start":19,"column_end":26},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":5599},"to":{"krate":0,"index":662}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7791086,"byte_end":7791096,"line_start":233,"line_end":233,"column_start":24,"column_end":34},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":5626},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7791854,"byte_end":7791860,"line_start":261,"line_end":261,"column_start":24,"column_end":30},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":5653},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7792414,"byte_end":7792423,"line_start":282,"line_end":282,"column_start":24,"column_end":33},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":5671},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7792900,"byte_end":7792910,"line_start":300,"line_end":300,"column_start":24,"column_end":34},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":5698},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7793597,"byte_end":7793609,"line_start":322,"line_end":322,"column_start":10,"column_end":22},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":5716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7795252,"byte_end":7795264,"line_start":364,"line_end":364,"column_start":24,"column_end":36},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":5716},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7795519,"byte_end":7795531,"line_start":375,"line_end":375,"column_start":19,"column_end":31},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":5716},"to":{"krate":0,"index":662}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7796036,"byte_end":7796055,"line_start":396,"line_end":396,"column_start":24,"column_end":43},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":5729},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7796332,"byte_end":7796351,"line_start":407,"line_end":407,"column_start":19,"column_end":38},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":5729},"to":{"krate":0,"index":662}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7796561,"byte_end":7796573,"line_start":417,"line_end":417,"column_start":44,"column_end":56},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":5716},"to":{"krate":2,"index":1840}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7796845,"byte_end":7796855,"line_start":430,"line_end":430,"column_start":24,"column_end":34},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":5742},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7797706,"byte_end":7797717,"line_start":459,"line_end":459,"column_start":10,"column_end":21},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":5751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7798461,"byte_end":7798470,"line_start":484,"line_end":484,"column_start":24,"column_end":33},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":5762},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7799320,"byte_end":7799330,"line_start":510,"line_end":510,"column_start":24,"column_end":34},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":5772},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7800140,"byte_end":7800150,"line_start":537,"line_end":537,"column_start":19,"column_end":29},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":5772},"to":{"krate":0,"index":662}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7800696,"byte_end":7800708,"line_start":561,"line_end":561,"column_start":24,"column_end":36},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":5786},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7800970,"byte_end":7800982,"line_start":571,"line_end":571,"column_start":19,"column_end":31},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":5786},"to":{"krate":0,"index":662}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7801643,"byte_end":7801653,"line_start":599,"line_end":599,"column_start":24,"column_end":34},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":5798},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7802643,"byte_end":7802647,"line_start":635,"line_end":635,"column_start":24,"column_end":28},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":5829},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7804011,"byte_end":7804018,"line_start":673,"line_end":673,"column_start":13,"column_end":20},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":5837},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7804349,"byte_end":7804356,"line_start":684,"line_end":684,"column_start":45,"column_end":52},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":5837},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/types.rs","byte_start":7804800,"byte_end":7804807,"line_start":700,"line_end":700,"column_start":57,"column_end":64},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":5837},"to":{"krate":2,"index":1840}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7805573,"byte_end":7805577,"line_start":15,"line_end":15,"column_start":24,"column_end":28},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":1666},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7806229,"byte_end":7806247,"line_start":35,"line_end":35,"column_start":15,"column_end":33},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":1673},"to":{"krate":0,"index":662}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7807767,"byte_end":7807780,"line_start":98,"line_end":98,"column_start":6,"column_end":19},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":1678},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7808514,"byte_end":7808527,"line_start":116,"line_end":116,"column_start":24,"column_end":37},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":1678},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7814762,"byte_end":7814773,"line_start":266,"line_end":266,"column_start":24,"column_end":35},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":1736},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7815533,"byte_end":7815543,"line_start":293,"line_end":293,"column_start":24,"column_end":34},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":1750},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/ast/wast.rs","byte_start":7816110,"byte_end":7816121,"line_start":317,"line_end":317,"column_start":24,"column_end":35},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":1760},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":190927,"byte_end":190932,"line_start":218,"line_end":218,"column_start":10,"column_end":15},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":6966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":206962,"byte_end":206967,"line_start":682,"line_end":682,"column_start":23,"column_end":28},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":6966},"to":{"krate":2,"index":4984}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":207116,"byte_end":207122,"line_start":690,"line_end":690,"column_start":10,"column_end":16},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":6973},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":207394,"byte_end":207401,"line_start":701,"line_end":701,"column_start":10,"column_end":17},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":7028},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":207622,"byte_end":207627,"line_start":711,"line_end":711,"column_start":10,"column_end":15},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":6993},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":208077,"byte_end":208084,"line_start":727,"line_end":727,"column_start":10,"column_end":17},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":7085},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":208444,"byte_end":208449,"line_start":740,"line_end":740,"column_start":10,"column_end":15},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":7099},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lexer.rs","byte_start":209532,"byte_end":209540,"line_start":800,"line_end":800,"column_start":23,"column_end":31},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":7045},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":227160,"byte_end":227165,"line_start":208,"line_end":208,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":1927},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":231777,"byte_end":231788,"line_start":331,"line_end":331,"column_start":6,"column_end":17},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":668},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":234967,"byte_end":234973,"line_start":414,"line_end":414,"column_start":10,"column_end":16},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":7146},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":252168,"byte_end":252180,"line_start":869,"line_end":869,"column_start":23,"column_end":35},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":721},"to":{"krate":2,"index":2117}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":252436,"byte_end":252442,"line_start":879,"line_end":879,"column_start":10,"column_end":16},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":7154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":264721,"byte_end":264731,"line_start":1193,"line_end":1193,"column_start":6,"column_end":16},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/parser.rs","byte_start":266394,"byte_end":266400,"line_start":1241,"line_end":1241,"column_start":45,"column_end":51},"kind":{"Impl":{"id":198}},"from":{"krate":2,"index":29967},"to":{"krate":0,"index":659}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":3350,"byte_end":3355,"line_start":100,"line_end":100,"column_start":6,"column_end":11},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":7163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":5856,"byte_end":5861,"line_start":177,"line_end":177,"column_start":23,"column_end":28},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":7163},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":6835,"byte_end":6840,"line_start":214,"line_end":214,"column_start":28,"column_end":33},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":7163},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wast-21.0.0/src/lib.rs","byte_start":6850,"byte_end":6854,"line_start":216,"line_end":216,"column_start":6,"column_end":10},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":7174},"to":{"krate":4294967295,"index":4294967295}}]}