{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10","program":"/home/alansky/.rustup/toolchains/nightly-2020-07-02-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","blake2s_simd","--edition=2018","/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=21337f6558061191","-C","extra-filename=-21337f6558061191","--out-dir","/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps","-L","dependency=/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps","--extern","arrayref=/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps/libarrayref-ab8b2acc67af4bd2.rmeta","--extern","arrayvec=/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps/libarrayvec-6116c522e2db840d.rmeta","--extern","constant_time_eq=/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps/libconstant_time_eq-6556d6fa008afe7a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/alansky/.rustup/toolchains/nightly-2020-07-02-x86_64-unknown-linux-gnu"],"output":"/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps/libblake2s_simd-21337f6558061191.rmeta"},"prelude":{"crate_id":{"name":"blake2s_simd","disambiguator":[7902463547115962537,10654243826711787319]},"crate_root":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src","external_crates":[{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[309489290393175025,9116230521283433112]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[4391997853131671271,2752570053062459009]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[680011651820151502,5018330578075825921]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","num":4,"id":{"name":"arrayref","disambiguator":[8373382528599677554,13332392277119662300]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","num":5,"id":{"name":"arrayvec","disambiguator":[11279203675526883881,13544490597063547646]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","num":6,"id":{"name":"std","disambiguator":[15171822389981698586,9596930288317159773]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","num":7,"id":{"name":"alloc","disambiguator":[4249137077638888796,17834651879708154657]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","num":8,"id":{"name":"libc","disambiguator":[13082819734751436340,16140962863799451331]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","num":9,"id":{"name":"unwind","disambiguator":[8371738565553744270,17943531712744420027]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","num":10,"id":{"name":"cfg_if","disambiguator":[17468180561489458258,7285327718060701271]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","num":11,"id":{"name":"backtrace","disambiguator":[14551538593801126895,13478667531910088620]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[16022708609364593127,529027819734980321]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","num":13,"id":{"name":"backtrace_sys","disambiguator":[18024135037275500963,3187671833432925572]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","num":14,"id":{"name":"hashbrown","disambiguator":[5194268306266264186,14551347693776345482]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","num":15,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[18097577876301876973,855323625195415836]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[5106557709654100294,13294098602154984522]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","num":17,"id":{"name":"constant_time_eq","disambiguator":[11192647923568855990,300974934528865723]}}],"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":0,"byte_end":22570,"line_start":1,"line_end":666,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":0,"byte_end":22570,"line_start":1,"line_end":666,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":108},{"krate":0,"index":134},{"krate":0,"index":233},{"krate":0,"index":294},{"krate":0,"index":338},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":401},{"krate":0,"index":404},{"krate":0,"index":689},{"krate":0,"index":706},{"krate":0,"index":405},{"krate":0,"index":428},{"krate":0,"index":430},{"krate":0,"index":722},{"krate":0,"index":733},{"krate":0,"index":432},{"krate":0,"index":442},{"krate":0,"index":447},{"krate":0,"index":449},{"krate":0,"index":451},{"krate":0,"index":754},{"krate":0,"index":759},{"krate":0,"index":758},{"krate":0,"index":453},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":461},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":466},{"krate":0,"index":468}],"decl_id":null,"docs":" [![GitHub](https://img.shields.io/github/tag/oconnor663/blake2_simd.svg?label=GitHub)](https://github.com/oconnor663/blake2_simd) [![crates.io](https://img.shields.io/crates/v/blake2s_simd.svg)](https://crates.io/crates/blake2s_simd) [![Build Status](https://travis-ci.org/oconnor663/blake2_simd.svg?branch=master)](https://travis-ci.org/oconnor663/blake2_simd)","sig":null,"attributes":[{"value":"! [![GitHub](https://img.shields.io/github/tag/oconnor663/blake2_simd.svg?label=GitHub)](https://github.com/oconnor663/blake2_simd) [![crates.io](https://img.shields.io/crates/v/blake2s_simd.svg)](https://crates.io/crates/blake2s_simd) [![Build Status](https://travis-ci.org/oconnor663/blake2_simd.svg?branch=master)](https://travis-ci.org/oconnor663/blake2_simd)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":0,"byte_end":365,"line_start":1,"line_end":1,"column_start":1,"column_end":366}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":366,"byte_end":369,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! An implementation of the BLAKE2s and BLAKE2sp hash functions. See also","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":370,"byte_end":444,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"! [`blake2b_simd`](https://docs.rs/blake2b_simd).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":445,"byte_end":496,"line_start":4,"line_end":4,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":497,"byte_end":500,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! This crate includes:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":501,"byte_end":525,"line_start":6,"line_end":6,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":526,"byte_end":529,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! - 100% stable Rust.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":530,"byte_end":553,"line_start":8,"line_end":8,"column_start":1,"column_end":24}},{"value":"! - SIMD implementations based on Samuel Neves' [`blake2-avx2`](https://github.com/sneves/blake2-avx2).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":554,"byte_end":659,"line_start":9,"line_end":9,"column_start":1,"column_end":106}},{"value":"!   These are very fast. For benchmarks, see [the Performance section of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":660,"byte_end":738,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"!   README](https://github.com/oconnor663/blake2_simd#performance).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":739,"byte_end":808,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"! - Portable, safe implementations for other platforms.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":809,"byte_end":866,"line_start":12,"line_end":12,"column_start":1,"column_end":58}},{"value":"! - Dynamic CPU feature detection. Binaries include multiple implementations by default and","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":867,"byte_end":960,"line_start":13,"line_end":13,"column_start":1,"column_end":94}},{"value":"!   choose the fastest one the processor supports at runtime.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":961,"byte_end":1024,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"! - All the features from the [the BLAKE2 spec](https://blake2.net/blake2.pdf), like adjustable","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":1025,"byte_end":1122,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"!   length, keying, and associated data for tree hashing.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":1123,"byte_end":1182,"line_start":16,"line_end":16,"column_start":1,"column_end":60}},{"value":"! - `no_std` support. The `std` Cargo feature is on by default, for CPU feature detection and","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":1183,"byte_end":1278,"line_start":17,"line_end":17,"column_start":1,"column_end":96}},{"value":"!   for implementing `std::io::Write`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":1279,"byte_end":1319,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"! - Support for computing multiple BLAKE2s hashes in parallel, matching the efficiency of","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":1320,"byte_end":1411,"line_start":19,"line_end":19,"column_start":1,"column_end":92}},{"value":"!   BLAKE2sp. See the [`many`](many/index.html) module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":1412,"byte_end":1469,"line_start":20,"line_end":20,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":1470,"byte_end":1473,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! # Example","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":1474,"byte_end":1487,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":1488,"byte_end":1491,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":1492,"byte_end":1499,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"! use blake2s_simd::{blake2s, Params};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":1500,"byte_end":1540,"line_start":25,"line_end":25,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":1541,"byte_end":1544,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! let expected = \"08d6cad88075de8f192db097573d0e829411cd91eb6ec65e8fc16c017edfdb74\";","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":1545,"byte_end":1631,"line_start":27,"line_end":27,"column_start":1,"column_end":87}},{"value":"! let hash = blake2s(b\"foo\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":1632,"byte_end":1663,"line_start":28,"line_end":28,"column_start":1,"column_end":32}},{"value":"! assert_eq!(expected, &hash.to_hex());","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":1664,"byte_end":1705,"line_start":29,"line_end":29,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":1706,"byte_end":1709,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! let hash = Params::new()","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":1710,"byte_end":1738,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"!     .hash_length(16)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":1739,"byte_end":1763,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"!     .key(b\"Squeamish Ossifrage\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":1764,"byte_end":1800,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"!     .personal(b\"Shaftoe\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":1801,"byte_end":1830,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"!     .to_state()","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":1831,"byte_end":1850,"line_start":35,"line_end":35,"column_start":1,"column_end":20}},{"value":"!     .update(b\"foo\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":1851,"byte_end":1874,"line_start":36,"line_end":36,"column_start":1,"column_end":24}},{"value":"!     .update(b\"bar\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":1875,"byte_end":1898,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"!     .update(b\"baz\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":1899,"byte_end":1922,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"!     .finalize();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":1923,"byte_end":1943,"line_start":39,"line_end":39,"column_start":1,"column_end":21}},{"value":"! assert_eq!(\"28325512782cbf5019424fa65da9a6c7\", &hash.to_hex());","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":1944,"byte_end":2011,"line_start":40,"line_end":40,"column_start":1,"column_end":68}},{"value":"! ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":2012,"byte_end":2019,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"no_std","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":2055,"byte_end":2061,"line_start":43,"line_end":43,"column_start":35,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":233},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"blake2sp","qualname":"::blake2sp","value":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":585},{"krate":0,"index":591},{"krate":0,"index":252},{"krate":0,"index":266},{"krate":0,"index":268},{"krate":0,"index":593},{"krate":0,"index":606},{"krate":0,"index":270},{"krate":0,"index":283},{"krate":0,"index":285},{"krate":0,"index":287},{"krate":0,"index":293}],"decl_id":null,"docs":" BLAKE2sp, a variant of BLAKE2s that uses SIMD more efficiently.","sig":null,"attributes":[{"value":"! BLAKE2sp, a variant of BLAKE2s that uses SIMD more efficiently.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":78650,"byte_end":78717,"line_start":1,"line_end":1,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":78718,"byte_end":78721,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The AVX2 implementation of BLAKE2sp is about twice as fast that of BLAKE2s.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":78722,"byte_end":78801,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"! However, note that it's a different hash function, and it gives a different","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":78802,"byte_end":78881,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"! hash from BLAKE2s for the same input.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":78882,"byte_end":78923,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":78924,"byte_end":78927,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! # Example","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":78928,"byte_end":78941,"line_start":7,"line_end":7,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":78942,"byte_end":78945,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":78946,"byte_end":78953,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"! use blake2s_simd::blake2sp;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":78954,"byte_end":78985,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":78986,"byte_end":78989,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! let hash = blake2sp::Params::new()","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":78990,"byte_end":79028,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"!     .hash_length(16)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":79029,"byte_end":79053,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"!     .key(b\"Squeamish Ossifrage\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":79054,"byte_end":79090,"line_start":14,"line_end":14,"column_start":1,"column_end":37}},{"value":"!     .to_state()","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":79091,"byte_end":79110,"line_start":15,"line_end":15,"column_start":1,"column_end":20}},{"value":"!     .update(b\"foo\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":79111,"byte_end":79134,"line_start":16,"line_end":16,"column_start":1,"column_end":24}},{"value":"!     .update(b\"bar\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":79135,"byte_end":79158,"line_start":17,"line_end":17,"column_start":1,"column_end":24}},{"value":"!     .update(b\"baz\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":79159,"byte_end":79182,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"!     .finalize();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":79183,"byte_end":79203,"line_start":19,"line_end":19,"column_start":1,"column_end":21}},{"value":"! assert_eq!(\"9a604f1653c25063debb3aeea79671c0\", &hash.to_hex());","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":79204,"byte_end":79271,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"! ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":79272,"byte_end":79279,"line_start":21,"line_end":21,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":251},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":79953,"byte_end":79961,"line_start":51,"line_end":51,"column_start":8,"column_end":16},"name":"blake2sp","qualname":"::blake2sp::blake2sp","value":"pub fn blake2sp(&[u8]) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" Compute the BLAKE2sp hash of a slice of bytes all at once, using default\n parameters.","sig":null,"attributes":[{"value":"/ Compute the BLAKE2sp hash of a slice of bytes all at once, using default","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":79609,"byte_end":79685,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/ parameters.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":79686,"byte_end":79701,"line_start":41,"line_end":41,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":79702,"byte_end":79705,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":79706,"byte_end":79719,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":79720,"byte_end":79723,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":79724,"byte_end":79731,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ # use blake2s_simd::blake2sp::blake2sp;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":79732,"byte_end":79775,"line_start":46,"line_end":46,"column_start":1,"column_end":44}},{"value":"/ let expected = \"050dc5786037ea72cb9ed9d0324afcab03c97ec02e8c47368fc5dfb4cf49d8c9\";","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":79776,"byte_end":79862,"line_start":47,"line_end":47,"column_start":1,"column_end":87}},{"value":"/ let hash = blake2sp(b\"foo\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":79863,"byte_end":79895,"line_start":48,"line_end":48,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(expected, &hash.to_hex());","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":79896,"byte_end":79937,"line_start":49,"line_end":49,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":79938,"byte_end":79945,"line_start":50,"line_end":50,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":585},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":80558,"byte_end":80564,"line_start":69,"line_end":69,"column_start":12,"column_end":18},"name":"Params","qualname":"::blake2sp::Params","value":"Params {  }","parent":null,"children":[{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":590}],"decl_id":null,"docs":" A parameter builder for BLAKE2sp, just like the [`Params`](../struct.Params.html) type for\n BLAKE2s.","sig":null,"attributes":[{"value":"/ A parameter builder for BLAKE2sp, just like the [`Params`](../struct.Params.html) type for","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":80019,"byte_end":80113,"line_start":55,"line_end":55,"column_start":1,"column_end":95}},{"value":"/ BLAKE2s.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":80114,"byte_end":80126,"line_start":56,"line_end":56,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":80127,"byte_end":80130,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ This builder only supports configuring the hash length and a secret key. This matches the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":80131,"byte_end":80224,"line_start":58,"line_end":58,"column_start":1,"column_end":94}},{"value":"/ options provided by the [reference","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":80225,"byte_end":80263,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/ implementation](https://github.com/BLAKE2/BLAKE2/blob/320c325437539ae91091ce62efec1913cd8093c2/ref/blake2.h#L162-L165).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":80264,"byte_end":80387,"line_start":60,"line_end":60,"column_start":1,"column_end":124}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":80388,"byte_end":80391,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":80392,"byte_end":80405,"line_start":62,"line_end":62,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":80406,"byte_end":80409,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":80410,"byte_end":80417,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ use blake2s_simd::blake2sp;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":80418,"byte_end":80449,"line_start":65,"line_end":65,"column_start":1,"column_end":32}},{"value":"/ let mut state = blake2sp::Params::new().hash_length(32).to_state();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":80450,"byte_end":80521,"line_start":66,"line_end":66,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":80522,"byte_end":80529,"line_start":67,"line_end":67,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":80740,"byte_end":80743,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"new","qualname":"<Params>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `Params::default()`.\n","sig":null,"attributes":[{"value":"/ Equivalent to `Params::default()`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":80690,"byte_end":80728,"line_start":77,"line_end":77,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":82759,"byte_end":82763,"line_start":131,"line_end":131,"column_start":12,"column_end":16},"name":"hash","qualname":"<Params>::hash","value":"pub fn hash(&Self, &[u8]) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" Hash an input all at once with these parameters.\n","sig":null,"attributes":[{"value":"/ Hash an input all at once with these parameters.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":82695,"byte_end":82747,"line_start":130,"line_end":130,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":83880,"byte_end":83888,"line_start":162,"line_end":162,"column_start":12,"column_end":20},"name":"to_state","qualname":"<Params>::to_state","value":"pub fn to_state(&Self) -> State","parent":null,"children":[],"decl_id":null,"docs":" Construct a BLAKE2sp `State` object based on these parameters.\n","sig":null,"attributes":[{"value":"/ Construct a BLAKE2sp `State` object based on these parameters.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":83802,"byte_end":83868,"line_start":161,"line_end":161,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":84185,"byte_end":84196,"line_start":169,"line_end":169,"column_start":12,"column_end":23},"name":"hash_length","qualname":"<Params>::hash_length","value":"pub fn hash_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the length of the final hash, from 1 to `OUTBYTES` (64). Apart from controlling the\n length of the final `Hash`, this is also associated data, and changing it will result in a\n totally different hash.\n","sig":null,"attributes":[{"value":"/ Set the length of the final hash, from 1 to `OUTBYTES` (64). Apart from controlling the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":83951,"byte_end":84042,"line_start":166,"line_end":166,"column_start":5,"column_end":96}},{"value":"/ length of the final `Hash`, this is also associated data, and changing it will result in a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":84047,"byte_end":84141,"line_start":167,"line_end":167,"column_start":5,"column_end":99}},{"value":"/ totally different hash.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":84146,"byte_end":84173,"line_start":168,"line_end":168,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":84600,"byte_end":84603,"line_start":181,"line_end":181,"column_start":12,"column_end":15},"name":"key","qualname":"<Params>::key","value":"pub fn key(&mut Self, &[u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Use a secret key, so that BLAKE2sp acts as a MAC. The maximum key length is `KEYBYTES`\n (64). An empty key is equivalent to having no key at all.\n","sig":null,"attributes":[{"value":"/ Use a secret key, so that BLAKE2sp acts as a MAC. The maximum key length is `KEYBYTES`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":84432,"byte_end":84522,"line_start":179,"line_end":179,"column_start":5,"column_end":95}},{"value":"/ (64). An empty key is equivalent to having no key at all.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":84527,"byte_end":84588,"line_start":180,"line_end":180,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":593},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":85754,"byte_end":85759,"line_start":225,"line_end":225,"column_start":12,"column_end":17},"name":"State","qualname":"::blake2sp::State","value":"State {  }","parent":null,"children":[{"krate":0,"index":594},{"krate":0,"index":597},{"krate":0,"index":599},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605}],"decl_id":null,"docs":" An incremental hasher for BLAKE2sp, just like the [`State`](../struct.State.html) type for\n BLAKE2s.","sig":null,"attributes":[{"value":"/ An incremental hasher for BLAKE2sp, just like the [`State`](../struct.State.html) type for","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":85282,"byte_end":85376,"line_start":208,"line_end":208,"column_start":1,"column_end":95}},{"value":"/ BLAKE2s.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":85377,"byte_end":85389,"line_start":209,"line_end":209,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":85390,"byte_end":85393,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":85394,"byte_end":85407,"line_start":211,"line_end":211,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":85408,"byte_end":85411,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":85412,"byte_end":85419,"line_start":213,"line_end":213,"column_start":1,"column_end":8}},{"value":"/ use blake2s_simd::blake2sp;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":85420,"byte_end":85451,"line_start":214,"line_end":214,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":85452,"byte_end":85455,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ let mut state = blake2sp::State::new();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":85456,"byte_end":85499,"line_start":216,"line_end":216,"column_start":1,"column_end":44}},{"value":"/ state.update(b\"foo\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":85500,"byte_end":85525,"line_start":217,"line_end":217,"column_start":1,"column_end":26}},{"value":"/ state.update(b\"bar\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":85526,"byte_end":85551,"line_start":218,"line_end":218,"column_start":1,"column_end":26}},{"value":"/ let hash = state.finalize();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":85552,"byte_end":85584,"line_start":219,"line_end":219,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":85585,"byte_end":85588,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ let expected = \"268120e51df583c61d6bfb7915f1c8ead299696c42f413092cd0b2247e1a388d\";","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":85589,"byte_end":85675,"line_start":221,"line_end":221,"column_start":1,"column_end":87}},{"value":"/ assert_eq!(expected, &hash.to_hex());","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":85676,"byte_end":85717,"line_start":222,"line_end":222,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":85718,"byte_end":85725,"line_start":223,"line_end":223,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":86320,"byte_end":86323,"line_start":241,"line_end":241,"column_start":12,"column_end":15},"name":"new","qualname":"<State>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `State::default()` or `Params::default().to_state()`.\n","sig":null,"attributes":[{"value":"/ Equivalent to `State::default()` or `Params::default().to_state()`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":86237,"byte_end":86308,"line_start":240,"line_end":240,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":89047,"byte_end":89053,"line_start":308,"line_end":308,"column_start":12,"column_end":18},"name":"update","qualname":"<State>::update","value":"pub fn update(&mut Self, &[u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add input to the hash. You can call `update` any number of times.\n","sig":null,"attributes":[{"value":"/ Add input to the hash. You can call `update` any number of times.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":88966,"byte_end":89035,"line_start":307,"line_end":307,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":92152,"byte_end":92160,"line_start":372,"line_end":372,"column_start":12,"column_end":20},"name":"finalize","qualname":"<State>::finalize","value":"pub fn finalize(&Self) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" Finalize the state and return a `Hash`. This method is idempotent, and calling it multiple\n times will give the same result. It's also possible to `update` with more input in between.\n","sig":null,"attributes":[{"value":"/ Finalize the state and return a `Hash`. This method is idempotent, and calling it multiple","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":91946,"byte_end":92040,"line_start":370,"line_end":370,"column_start":5,"column_end":99}},{"value":"/ times will give the same result. It's also possible to `update` with more input in between.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":92045,"byte_end":92140,"line_start":371,"line_end":371,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":93507,"byte_end":93512,"line_start":408,"line_end":408,"column_start":12,"column_end":17},"name":"count","qualname":"<State>::count","value":"pub fn count(&Self) -> Count","parent":null,"children":[],"decl_id":null,"docs":" Return the total number of bytes input so far.","sig":null,"attributes":[{"value":"/ Return the total number of bytes input so far.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":93289,"byte_end":93339,"line_start":404,"line_end":404,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":93344,"byte_end":93347,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Note that `count` doesn't include the bytes of the key block, if any.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":93352,"byte_end":93425,"line_start":406,"line_end":406,"column_start":5,"column_end":78}},{"value":"/ It's exactly the total number of input bytes fed to `update`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":93430,"byte_end":93495,"line_start":407,"line_end":407,"column_start":5,"column_end":70}}]},{"kind":"Mod","id":{"krate":0,"index":338},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"many","qualname":"::many","value":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":362},{"krate":0,"index":366},{"krate":0,"index":369},{"krate":0,"index":373},{"krate":0,"index":676},{"krate":0,"index":686},{"krate":0,"index":379},{"krate":0,"index":383},{"krate":0,"index":386}],"decl_id":null,"docs":" Interfaces for hashing multiple inputs at once, using SIMD more\n efficiently.","sig":null,"attributes":[{"value":"! Interfaces for hashing multiple inputs at once, using SIMD more","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":118436,"byte_end":118503,"line_start":1,"line_end":1,"column_start":1,"column_end":68}},{"value":"! efficiently.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":118504,"byte_end":118520,"line_start":2,"line_end":2,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":118521,"byte_end":118524,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! The throughput of these interfaces is comparable to BLAKE2sp, much larger","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":118525,"byte_end":118602,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"! than that of regular BLAKE2s when AVX2 is available.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":118603,"byte_end":118659,"line_start":5,"line_end":5,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":118660,"byte_end":118663,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! These interfaces can accept any number of inputs, and the implementation","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":118664,"byte_end":118740,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"! does its best to parallelize them. In general, the more inputs you can pass","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":118741,"byte_end":118820,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"! in at once the better. If you need to batch your inputs in smaller groups,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":118821,"byte_end":118899,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"! see the [`degree`](fn.degree.html) function for a good batch size.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":118900,"byte_end":118970,"line_start":10,"line_end":10,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":118971,"byte_end":118974,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! The implementation keeps working in parallel even when inputs are of","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":118975,"byte_end":119047,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"! different lengths, by managing a working set of jobs whose input isn't yet","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":119048,"byte_end":119126,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"! exhausted. However, if one or two inputs are much longer than the others,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":119127,"byte_end":119204,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"! and they're encountered only at the end, there might not be any remaining","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":119205,"byte_end":119282,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"! work to parallelize them with. In this case, sorting the inputs","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":119283,"byte_end":119350,"line_start":16,"line_end":16,"column_start":1,"column_end":68}},{"value":"! longest-first can improve parallelism.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":119351,"byte_end":119393,"line_start":17,"line_end":17,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":119394,"byte_end":119397,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! # Example","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":119398,"byte_end":119411,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":119412,"byte_end":119415,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":119416,"byte_end":119423,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"! use blake2s_simd::{blake2s, State, many::update_many};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":119424,"byte_end":119482,"line_start":22,"line_end":22,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":119483,"byte_end":119486,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! let mut states = [","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":119487,"byte_end":119509,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"!     State::new(),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":119510,"byte_end":119531,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"!     State::new(),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":119532,"byte_end":119553,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"!     State::new(),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":119554,"byte_end":119575,"line_start":27,"line_end":27,"column_start":1,"column_end":22}},{"value":"!     State::new(),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":119576,"byte_end":119597,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"! ];","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":119598,"byte_end":119604,"line_start":29,"line_end":29,"column_start":1,"column_end":7}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":119605,"byte_end":119608,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! let inputs = [","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":119609,"byte_end":119627,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"!     &b\"foo\"[..],","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":119628,"byte_end":119648,"line_start":32,"line_end":32,"column_start":1,"column_end":21}},{"value":"!     &b\"bar\"[..],","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":119649,"byte_end":119669,"line_start":33,"line_end":33,"column_start":1,"column_end":21}},{"value":"!     &b\"baz\"[..],","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":119670,"byte_end":119690,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"!     &b\"bing\"[..],","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":119691,"byte_end":119712,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"! ];","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":119713,"byte_end":119719,"line_start":36,"line_end":36,"column_start":1,"column_end":7}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":119720,"byte_end":119723,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! update_many(states.iter_mut().zip(inputs.iter()));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":119724,"byte_end":119778,"line_start":38,"line_end":38,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":119779,"byte_end":119782,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! for (state, input) in states.iter_mut().zip(inputs.iter()) {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":119783,"byte_end":119847,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"!     assert_eq!(blake2s(input), state.finalize());","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":119848,"byte_end":119901,"line_start":41,"line_end":41,"column_start":1,"column_end":54}},{"value":"! }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":119902,"byte_end":119907,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":119908,"byte_end":119915,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":356},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":120762,"byte_end":120772,"line_start":66,"line_end":66,"column_start":11,"column_end":21},"name":"MAX_DEGREE","qualname":"::many::MAX_DEGREE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The largest possible value of [`degree`](fn.degree.html) on the target\n platform.","sig":null,"attributes":[{"value":"/ The largest possible value of [`degree`](fn.degree.html) on the target","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":120205,"byte_end":120279,"line_start":57,"line_end":57,"column_start":1,"column_end":75}},{"value":"/ platform.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":120280,"byte_end":120293,"line_start":58,"line_end":58,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":120294,"byte_end":120297,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Note that this constant reflects the parallelism degree supported by this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":120298,"byte_end":120375,"line_start":60,"line_end":60,"column_start":1,"column_end":78}},{"value":"/ crate, so it will change over time as support is added or removed. For","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":120376,"byte_end":120450,"line_start":61,"line_end":61,"column_start":1,"column_end":75}},{"value":"/ example, when Rust stabilizes AVX-512 support and this crate adds an","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":120451,"byte_end":120523,"line_start":62,"line_end":62,"column_start":1,"column_end":73}},{"value":"/ AVX-512 implementation, this constant will double on x86 targets. If that","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":120524,"byte_end":120601,"line_start":63,"line_end":63,"column_start":1,"column_end":78}},{"value":"/ implementation is an optional feature (e.g. because it's nightly-only), the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":120602,"byte_end":120681,"line_start":64,"line_end":64,"column_start":1,"column_end":80}},{"value":"/ value of this constant will depend on that optional feature also.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":120682,"byte_end":120751,"line_start":65,"line_end":65,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":357},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":122148,"byte_end":122154,"line_start":92,"line_end":92,"column_start":8,"column_end":14},"name":"degree","qualname":"::many::degree","value":"pub fn degree() -> usize","parent":null,"children":[],"decl_id":null,"docs":" The parallelism degree of the implementation, detected at runtime. If you\n hash your inputs in small batches, making the batch size a multiple of\n `degree` will generally give good performance.","sig":null,"attributes":[{"value":"/ The parallelism degree of the implementation, detected at runtime. If you","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":120801,"byte_end":120878,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"/ hash your inputs in small batches, making the batch size a multiple of","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":120879,"byte_end":120953,"line_start":69,"line_end":69,"column_start":1,"column_end":75}},{"value":"/ `degree` will generally give good performance.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":120954,"byte_end":121004,"line_start":70,"line_end":70,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":121005,"byte_end":121008,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ For example, an x86 processor that supports AVX2 can compute eight BLAKE2s","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":121009,"byte_end":121087,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ hashes in parallel, so `degree` returns 8 on that machine. If you call","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":121088,"byte_end":121162,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ [`hash_many`] with only seven inputs, that's not enough to use the AVX2","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":121163,"byte_end":121238,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ implementation, and your average throughput will be lower. Likewise if you","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":121239,"byte_end":121317,"line_start":75,"line_end":75,"column_start":1,"column_end":79}},{"value":"/ call it with nine inputs of equal length, the first eight will be hashed in","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":121318,"byte_end":121397,"line_start":76,"line_end":76,"column_start":1,"column_end":80}},{"value":"/ parallel with AVX2, but the last one will have to be hashed by itself, and","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":121398,"byte_end":121476,"line_start":77,"line_end":77,"column_start":1,"column_end":79}},{"value":"/ again your average throughput will be lower.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":121477,"byte_end":121525,"line_start":78,"line_end":78,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":121526,"byte_end":121529,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ As noted in the module level docs, performance is more complicated if your","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":121530,"byte_end":121608,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ inputs are of different lengths. When parallelizing long and short inputs","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":121609,"byte_end":121686,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"/ together, the longer ones will have bytes left over, and the implementation","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":121687,"byte_end":121766,"line_start":82,"line_end":82,"column_start":1,"column_end":80}},{"value":"/ will try to parallelize those leftover bytes with subsequent inputs. The","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":121767,"byte_end":121843,"line_start":83,"line_end":83,"column_start":1,"column_end":77}},{"value":"/ more inputs available in that case, the more the implementation will be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":121844,"byte_end":121919,"line_start":84,"line_end":84,"column_start":1,"column_end":76}},{"value":"/ able to parallelize.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":121920,"byte_end":121944,"line_start":85,"line_end":85,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":121945,"byte_end":121948,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ If you need a constant batch size, for example to collect inputs in an","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":121949,"byte_end":122023,"line_start":87,"line_end":87,"column_start":1,"column_end":75}},{"value":"/ array, see [`MAX_DEGREE`].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":122024,"byte_end":122054,"line_start":88,"line_end":88,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":122055,"byte_end":122058,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ [`hash_many`]: fn.hash_many.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":122059,"byte_end":122095,"line_start":90,"line_end":90,"column_start":1,"column_end":37}},{"value":"/ [`MAX_DEGREE`]: constant.MAX_DEGREE.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":122096,"byte_end":122140,"line_start":91,"line_end":91,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":373},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":125451,"byte_end":125462,"line_start":208,"line_end":208,"column_start":8,"column_end":19},"name":"update_many","qualname":"::many::update_many","value":"pub fn update_many<'a, 'b, I, T: ?Sized>(I) where I: IntoIterator<Item =\n(&'a mut State, &'b T)>, T: 'b + AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Update any number of `State` objects at once.","sig":null,"attributes":[{"value":"/ Update any number of `State` objects at once.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":124872,"byte_end":124921,"line_start":181,"line_end":181,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":124922,"byte_end":124925,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":124926,"byte_end":124939,"line_start":183,"line_end":183,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":124940,"byte_end":124943,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":124944,"byte_end":124951,"line_start":185,"line_end":185,"column_start":1,"column_end":8}},{"value":"/ use blake2s_simd::{blake2s, State, many::update_many};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":124952,"byte_end":125010,"line_start":186,"line_end":186,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":125011,"byte_end":125014,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ let mut states = [","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":125015,"byte_end":125037,"line_start":188,"line_end":188,"column_start":1,"column_end":23}},{"value":"/     State::new(),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":125038,"byte_end":125059,"line_start":189,"line_end":189,"column_start":1,"column_end":22}},{"value":"/     State::new(),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":125060,"byte_end":125081,"line_start":190,"line_end":190,"column_start":1,"column_end":22}},{"value":"/     State::new(),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":125082,"byte_end":125103,"line_start":191,"line_end":191,"column_start":1,"column_end":22}},{"value":"/     State::new(),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":125104,"byte_end":125125,"line_start":192,"line_end":192,"column_start":1,"column_end":22}},{"value":"/ ];","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":125126,"byte_end":125132,"line_start":193,"line_end":193,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":125133,"byte_end":125136,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ let inputs = [","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":125137,"byte_end":125155,"line_start":195,"line_end":195,"column_start":1,"column_end":19}},{"value":"/     &b\"foo\"[..],","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":125156,"byte_end":125176,"line_start":196,"line_end":196,"column_start":1,"column_end":21}},{"value":"/     &b\"bar\"[..],","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":125177,"byte_end":125197,"line_start":197,"line_end":197,"column_start":1,"column_end":21}},{"value":"/     &b\"baz\"[..],","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":125198,"byte_end":125218,"line_start":198,"line_end":198,"column_start":1,"column_end":21}},{"value":"/     &b\"bing\"[..],","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":125219,"byte_end":125240,"line_start":199,"line_end":199,"column_start":1,"column_end":22}},{"value":"/ ];","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":125241,"byte_end":125247,"line_start":200,"line_end":200,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":125248,"byte_end":125251,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ update_many(states.iter_mut().zip(inputs.iter()));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":125252,"byte_end":125306,"line_start":202,"line_end":202,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":125307,"byte_end":125310,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ for (state, input) in states.iter_mut().zip(inputs.iter()) {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":125311,"byte_end":125375,"line_start":204,"line_end":204,"column_start":1,"column_end":65}},{"value":"/     assert_eq!(blake2s(input), state.finalize());","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":125376,"byte_end":125429,"line_start":205,"line_end":205,"column_start":1,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":125430,"byte_end":125435,"line_start":206,"line_end":206,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":125436,"byte_end":125443,"line_start":207,"line_end":207,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":676},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":127914,"byte_end":127925,"line_start":268,"line_end":268,"column_start":12,"column_end":23},"name":"HashManyJob","qualname":"::many::HashManyJob","value":"HashManyJob {  }","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685}],"decl_id":null,"docs":" A job for the [`hash_many`] function. After calling [`hash_many`] on a\n collection of `HashManyJob` objects, you can call [`to_hash`] on each job\n to get the result.","sig":null,"attributes":[{"value":"/ A job for the [`hash_many`] function. After calling [`hash_many`] on a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":127613,"byte_end":127687,"line_start":261,"line_end":261,"column_start":1,"column_end":75}},{"value":"/ collection of `HashManyJob` objects, you can call [`to_hash`] on each job","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":127688,"byte_end":127765,"line_start":262,"line_end":262,"column_start":1,"column_end":78}},{"value":"/ to get the result.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":127766,"byte_end":127788,"line_start":263,"line_end":263,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":127789,"byte_end":127792,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ [`hash_many`]: fn.hash_many.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":127793,"byte_end":127829,"line_start":265,"line_end":265,"column_start":1,"column_end":37}},{"value":"/ [`to_hash`]: struct.HashManyJob.html#method.to_hash","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":127830,"byte_end":127885,"line_start":266,"line_end":266,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":128249,"byte_end":128252,"line_start":282,"line_end":282,"column_start":12,"column_end":15},"name":"new","qualname":"<HashManyJob>::new","value":"pub fn new(&Params, &'a [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `HashManyJob` from a set of hashing parameters and an\n input.\n","sig":null,"attributes":[{"value":"/ Construct a new `HashManyJob` from a set of hashing parameters and an","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":128135,"byte_end":128208,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ input.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":128213,"byte_end":128223,"line_start":280,"line_end":280,"column_start":5,"column_end":15}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":128228,"byte_end":128237,"line_start":281,"line_end":281,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":129535,"byte_end":129542,"line_start":321,"line_end":321,"column_start":12,"column_end":19},"name":"to_hash","qualname":"<HashManyJob>::to_hash","value":"pub fn to_hash(&Self) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" Get the hash from a finished job. If you call this before calling\n [`hash_many`], it will panic in debug mode.","sig":null,"attributes":[{"value":"/ Get the hash from a finished job. If you call this before calling","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":129339,"byte_end":129408,"line_start":316,"line_end":316,"column_start":5,"column_end":74}},{"value":"/ [`hash_many`], it will panic in debug mode.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":129413,"byte_end":129460,"line_start":317,"line_end":317,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":129465,"byte_end":129468,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ [`hash_many`]: fn.hash_many.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":129473,"byte_end":129509,"line_start":319,"line_end":319,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":129514,"byte_end":129523,"line_start":320,"line_end":320,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":386},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":131179,"byte_end":131188,"line_start":381,"line_end":381,"column_start":8,"column_end":17},"name":"hash_many","qualname":"::many::hash_many","value":"pub fn hash_many<'a, 'b, I>(I) where 'b:'a, I: IntoIterator<Item =\n&'a mut HashManyJob>","parent":null,"children":[],"decl_id":null,"docs":" Hash any number of complete inputs all at once.","sig":null,"attributes":[{"value":"/ Hash any number of complete inputs all at once.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":130188,"byte_end":130239,"line_start":344,"line_end":344,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":130240,"byte_end":130243,"line_start":345,"line_end":345,"column_start":1,"column_end":4}},{"value":"/ This is slightly more efficient than using `update_many` with `State`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":130244,"byte_end":130317,"line_start":346,"line_end":346,"column_start":1,"column_end":74}},{"value":"/ objects, because it doesn't need to do any buffering.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":130318,"byte_end":130375,"line_start":347,"line_end":347,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":130376,"byte_end":130379,"line_start":348,"line_end":348,"column_start":1,"column_end":4}},{"value":"/ Running `hash_many` on the same `HashManyJob` object more than once has no","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":130380,"byte_end":130458,"line_start":349,"line_end":349,"column_start":1,"column_end":79}},{"value":"/ effect.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":130459,"byte_end":130470,"line_start":350,"line_end":350,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":130471,"byte_end":130474,"line_start":351,"line_end":351,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":130475,"byte_end":130488,"line_start":352,"line_end":352,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":130489,"byte_end":130492,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":130493,"byte_end":130500,"line_start":354,"line_end":354,"column_start":1,"column_end":8}},{"value":"/ use blake2s_simd::{blake2s, Params, many::{HashManyJob, hash_many}};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":130501,"byte_end":130573,"line_start":355,"line_end":355,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":130574,"byte_end":130577,"line_start":356,"line_end":356,"column_start":1,"column_end":4}},{"value":"/ let inputs = [","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":130578,"byte_end":130596,"line_start":357,"line_end":357,"column_start":1,"column_end":19}},{"value":"/     &b\"foo\"[..],","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":130597,"byte_end":130617,"line_start":358,"line_end":358,"column_start":1,"column_end":21}},{"value":"/     &b\"bar\"[..],","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":130618,"byte_end":130638,"line_start":359,"line_end":359,"column_start":1,"column_end":21}},{"value":"/     &b\"baz\"[..],","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":130639,"byte_end":130659,"line_start":360,"line_end":360,"column_start":1,"column_end":21}},{"value":"/     &b\"bing\"[..],","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":130660,"byte_end":130681,"line_start":361,"line_end":361,"column_start":1,"column_end":22}},{"value":"/ ];","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":130682,"byte_end":130688,"line_start":362,"line_end":362,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":130689,"byte_end":130692,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ let mut params = Params::new();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":130693,"byte_end":130728,"line_start":364,"line_end":364,"column_start":1,"column_end":36}},{"value":"/ params.hash_length(16);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":130729,"byte_end":130756,"line_start":365,"line_end":365,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":130757,"byte_end":130760,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ let mut jobs = [","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":130761,"byte_end":130781,"line_start":367,"line_end":367,"column_start":1,"column_end":21}},{"value":"/     HashManyJob::new(&params, inputs[0]),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":130782,"byte_end":130827,"line_start":368,"line_end":368,"column_start":1,"column_end":46}},{"value":"/     HashManyJob::new(&params, inputs[1]),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":130828,"byte_end":130873,"line_start":369,"line_end":369,"column_start":1,"column_end":46}},{"value":"/     HashManyJob::new(&params, inputs[2]),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":130874,"byte_end":130919,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/     HashManyJob::new(&params, inputs[3]),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":130920,"byte_end":130965,"line_start":371,"line_end":371,"column_start":1,"column_end":46}},{"value":"/ ];","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":130966,"byte_end":130972,"line_start":372,"line_end":372,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":130973,"byte_end":130976,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/ hash_many(jobs.iter_mut());","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":130977,"byte_end":131008,"line_start":374,"line_end":374,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":131009,"byte_end":131012,"line_start":375,"line_end":375,"column_start":1,"column_end":4}},{"value":"/ for (input, job) in inputs.iter().zip(jobs.iter()) {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":131013,"byte_end":131069,"line_start":376,"line_end":376,"column_start":1,"column_end":57}},{"value":"/     let expected = params.hash(input);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":131070,"byte_end":131112,"line_start":377,"line_end":377,"column_start":1,"column_end":43}},{"value":"/     assert_eq!(expected, job.to_hash());","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":131113,"byte_end":131157,"line_start":378,"line_end":378,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":131158,"byte_end":131163,"line_start":379,"line_end":379,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":131164,"byte_end":131171,"line_start":380,"line_end":380,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":394},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":2452,"byte_end":2460,"line_start":67,"line_end":67,"column_start":11,"column_end":19},"name":"OUTBYTES","qualname":"::OUTBYTES","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The max hash length.\n","sig":null,"attributes":[{"value":"/ The max hash length.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":2417,"byte_end":2441,"line_start":66,"line_end":66,"column_start":1,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":395},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":2527,"byte_end":2535,"line_start":69,"line_end":69,"column_start":11,"column_end":19},"name":"KEYBYTES","qualname":"::KEYBYTES","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The max key length.\n","sig":null,"attributes":[{"value":"/ The max key length.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":2493,"byte_end":2516,"line_start":68,"line_end":68,"column_start":1,"column_end":24}}]},{"kind":"Const","id":{"krate":0,"index":396},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":2603,"byte_end":2612,"line_start":71,"line_end":71,"column_start":11,"column_end":20},"name":"SALTBYTES","qualname":"::SALTBYTES","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The max salt length.\n","sig":null,"attributes":[{"value":"/ The max salt length.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":2568,"byte_end":2592,"line_start":70,"line_end":70,"column_start":1,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":397},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":2691,"byte_end":2704,"line_start":73,"line_end":73,"column_start":11,"column_end":24},"name":"PERSONALBYTES","qualname":"::PERSONALBYTES","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The max personalization length.\n","sig":null,"attributes":[{"value":"/ The max personalization length.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":2645,"byte_end":2680,"line_start":72,"line_end":72,"column_start":1,"column_end":36}}]},{"kind":"Const","id":{"krate":0,"index":398},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":2937,"byte_end":2947,"line_start":76,"line_end":76,"column_start":11,"column_end":21},"name":"BLOCKBYTES","qualname":"::BLOCKBYTES","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The number input bytes passed to each call to the compression function. Small benchmarks need\n to use an even multiple of `BLOCKBYTES`, or else their apparent throughput will be low.\n","sig":null,"attributes":[{"value":"/ The number input bytes passed to each call to the compression function. Small benchmarks need","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":2737,"byte_end":2834,"line_start":74,"line_end":74,"column_start":1,"column_end":98}},{"value":"/ to use an even multiple of `BLOCKBYTES`, or else their apparent throughput will be low.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":2835,"byte_end":2926,"line_start":75,"line_end":75,"column_start":1,"column_end":92}}]},{"kind":"Function","id":{"krate":0,"index":404},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":4087,"byte_end":4094,"line_start":106,"line_end":106,"column_start":8,"column_end":15},"name":"blake2s","qualname":"::blake2s","value":"pub fn blake2s(&[u8]) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" Compute the BLAKE2s hash of a slice of bytes all at once, using default\n parameters.","sig":null,"attributes":[{"value":"/ Compute the BLAKE2s hash of a slice of bytes all at once, using default","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":3746,"byte_end":3821,"line_start":95,"line_end":95,"column_start":1,"column_end":76}},{"value":"/ parameters.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":3822,"byte_end":3837,"line_start":96,"line_end":96,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":3838,"byte_end":3841,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":3842,"byte_end":3855,"line_start":98,"line_end":98,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":3856,"byte_end":3859,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":3860,"byte_end":3867,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # use blake2s_simd::{blake2s, Params};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":3868,"byte_end":3910,"line_start":101,"line_end":101,"column_start":1,"column_end":43}},{"value":"/ let expected = \"08d6cad88075de8f192db097573d0e829411cd91eb6ec65e8fc16c017edfdb74\";","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":3911,"byte_end":3997,"line_start":102,"line_end":102,"column_start":1,"column_end":87}},{"value":"/ let hash = blake2s(b\"foo\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":3998,"byte_end":4029,"line_start":103,"line_end":103,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(expected, &hash.to_hex());","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":4030,"byte_end":4071,"line_start":104,"line_end":104,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":4072,"byte_end":4079,"line_start":105,"line_end":105,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":689},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":5084,"byte_end":5090,"line_start":135,"line_end":135,"column_start":12,"column_end":18},"name":"Params","qualname":"::Params","value":"Params {  }","parent":null,"children":[{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":694},{"krate":0,"index":696},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705}],"decl_id":null,"docs":" A parameter builder that exposes all the non-default BLAKE2 features.","sig":null,"attributes":[{"value":"/ A parameter builder that exposes all the non-default BLAKE2 features.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":4152,"byte_end":4225,"line_start":110,"line_end":110,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":4226,"byte_end":4229,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ Apart from `hash_length`, which controls the length of the final `Hash`,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":4230,"byte_end":4306,"line_start":112,"line_end":112,"column_start":1,"column_end":77}},{"value":"/ all of these parameters are just associated data that gets mixed with the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":4307,"byte_end":4384,"line_start":113,"line_end":113,"column_start":1,"column_end":78}},{"value":"/ input. For more details, see [the BLAKE2 spec](https://blake2.net/blake2.pdf).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":4385,"byte_end":4467,"line_start":114,"line_end":114,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":4468,"byte_end":4471,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ Several of the parameters have a valid range defined in the spec and","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":4472,"byte_end":4544,"line_start":116,"line_end":116,"column_start":1,"column_end":73}},{"value":"/ documented below. Trying to set an invalid parameter will panic.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":4545,"byte_end":4613,"line_start":117,"line_end":117,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":4614,"byte_end":4617,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":4618,"byte_end":4631,"line_start":119,"line_end":119,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":4632,"byte_end":4635,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":4636,"byte_end":4643,"line_start":121,"line_end":121,"column_start":1,"column_end":8}},{"value":"/ # use blake2s_simd::Params;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":4644,"byte_end":4675,"line_start":122,"line_end":122,"column_start":1,"column_end":32}},{"value":"/ // Create a Params object with a secret key and a non-default length.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":4676,"byte_end":4749,"line_start":123,"line_end":123,"column_start":1,"column_end":74}},{"value":"/ let mut params = Params::new();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":4750,"byte_end":4785,"line_start":124,"line_end":124,"column_start":1,"column_end":36}},{"value":"/ params.key(b\"my secret key\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":4786,"byte_end":4819,"line_start":125,"line_end":125,"column_start":1,"column_end":34}},{"value":"/ params.hash_length(16);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":4820,"byte_end":4847,"line_start":126,"line_end":126,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":4848,"byte_end":4851,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ // Use those params to hash an input all at once.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":4852,"byte_end":4905,"line_start":128,"line_end":128,"column_start":1,"column_end":54}},{"value":"/ let hash = params.hash(b\"my input\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":4906,"byte_end":4946,"line_start":129,"line_end":129,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":4947,"byte_end":4950,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ // Or use those params to build an incremental State.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":4951,"byte_end":5008,"line_start":131,"line_end":131,"column_start":1,"column_end":58}},{"value":"/ let mut state = params.to_state();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":5009,"byte_end":5047,"line_start":132,"line_end":132,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":5048,"byte_end":5055,"line_start":133,"line_end":133,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":5517,"byte_end":5520,"line_start":154,"line_end":154,"column_start":12,"column_end":15},"name":"new","qualname":"<Params>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `Params::default()`.\n","sig":null,"attributes":[{"value":"/ Equivalent to `Params::default()`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":5453,"byte_end":5491,"line_start":152,"line_end":152,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":5496,"byte_end":5505,"line_start":153,"line_end":153,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":7159,"byte_end":7163,"line_start":199,"line_end":199,"column_start":12,"column_end":16},"name":"hash","qualname":"<Params>::hash","value":"pub fn hash(&Self, &[u8]) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" Hash an input all at once with these parameters.\n","sig":null,"attributes":[{"value":"/ Hash an input all at once with these parameters.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":7081,"byte_end":7133,"line_start":197,"line_end":197,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":7138,"byte_end":7147,"line_start":198,"line_end":198,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":7842,"byte_end":7850,"line_start":221,"line_end":221,"column_start":12,"column_end":20},"name":"to_state","qualname":"<Params>::to_state","value":"pub fn to_state(&Self) -> State","parent":null,"children":[],"decl_id":null,"docs":" Construct a `State` object based on these parameters, for hashing input\n incrementally.\n","sig":null,"attributes":[{"value":"/ Construct a `State` object based on these parameters, for hashing input","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":7732,"byte_end":7807,"line_start":219,"line_end":219,"column_start":5,"column_end":80}},{"value":"/ incrementally.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":7812,"byte_end":7830,"line_start":220,"line_end":220,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":8170,"byte_end":8181,"line_start":229,"line_end":229,"column_start":12,"column_end":23},"name":"hash_length","qualname":"<Params>::hash_length","value":"pub fn hash_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the length of the final hash in bytes, from 1 to `OUTBYTES` (32). Apart from\n controlling the length of the final `Hash`, this is also associated data, and changing it\n will result in a totally different hash.\n","sig":null,"attributes":[{"value":"/ Set the length of the final hash in bytes, from 1 to `OUTBYTES` (32). Apart from","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":7913,"byte_end":7997,"line_start":225,"line_end":225,"column_start":5,"column_end":89}},{"value":"/ controlling the length of the final `Hash`, this is also associated data, and changing it","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":8002,"byte_end":8095,"line_start":226,"line_end":226,"column_start":5,"column_end":98}},{"value":"/ will result in a totally different hash.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":8100,"byte_end":8144,"line_start":227,"line_end":227,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":8149,"byte_end":8158,"line_start":228,"line_end":228,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":8597,"byte_end":8600,"line_start":242,"line_end":242,"column_start":12,"column_end":15},"name":"key","qualname":"<Params>::key","value":"pub fn key(&mut Self, &[u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Use a secret key, so that BLAKE2 acts as a MAC. The maximum key length is `KEYBYTES` (32).\n An empty key is equivalent to having no key at all.\n","sig":null,"attributes":[{"value":"/ Use a secret key, so that BLAKE2 acts as a MAC. The maximum key length is `KEYBYTES` (32).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":8417,"byte_end":8511,"line_start":239,"line_end":239,"column_start":5,"column_end":99}},{"value":"/ An empty key is equivalent to having no key at all.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":8516,"byte_end":8571,"line_start":240,"line_end":240,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":8576,"byte_end":8585,"line_start":241,"line_end":241,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":9037,"byte_end":9041,"line_start":253,"line_end":253,"column_start":12,"column_end":16},"name":"salt","qualname":"<Params>::salt","value":"pub fn salt(&mut Self, &[u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" At most `SALTBYTES` (8). Shorter salts are padded with null bytes. An empty salt is\n equivalent to having no salt at all.\n","sig":null,"attributes":[{"value":"/ At most `SALTBYTES` (8). Shorter salts are padded with null bytes. An empty salt is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":8879,"byte_end":8966,"line_start":250,"line_end":250,"column_start":5,"column_end":92}},{"value":"/ equivalent to having no salt at all.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":8971,"byte_end":9011,"line_start":251,"line_end":251,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":9016,"byte_end":9025,"line_start":252,"line_end":252,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":9468,"byte_end":9476,"line_start":263,"line_end":263,"column_start":12,"column_end":20},"name":"personal","qualname":"<Params>::personal","value":"pub fn personal(&mut Self, &[u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" At most `PERSONALBYTES` (8). Shorter personalizations are padded with null bytes. An empty\n personalization is equivalent to having no personalization at all.\n","sig":null,"attributes":[{"value":"/ At most `PERSONALBYTES` (8). Shorter personalizations are padded with null bytes. An empty","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":9273,"byte_end":9367,"line_start":260,"line_end":260,"column_start":5,"column_end":99}},{"value":"/ personalization is equivalent to having no personalization at all.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":9372,"byte_end":9442,"line_start":261,"line_end":261,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":9447,"byte_end":9456,"line_start":262,"line_end":262,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":9939,"byte_end":9945,"line_start":276,"line_end":276,"column_start":12,"column_end":18},"name":"fanout","qualname":"<Params>::fanout","value":"pub fn fanout(&mut Self, u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" From 0 (meaning unlimited) to 255. The default is 1 (meaning sequential).\n","sig":null,"attributes":[{"value":"/ From 0 (meaning unlimited) to 255. The default is 1 (meaning sequential).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":9836,"byte_end":9913,"line_start":274,"line_end":274,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":9918,"byte_end":9927,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":10175,"byte_end":10184,"line_start":283,"line_end":283,"column_start":12,"column_end":21},"name":"max_depth","qualname":"<Params>::max_depth","value":"pub fn max_depth(&mut Self, u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" From 0 (meaning BLAKE2X B2 hashes), through 1 (the default, meaning sequential) to 255 (meaning unlimited).\n","sig":null,"attributes":[{"value":"/ From 0 (meaning BLAKE2X B2 hashes), through 1 (the default, meaning sequential) to 255 (meaning unlimited).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":10038,"byte_end":10149,"line_start":281,"line_end":281,"column_start":5,"column_end":116}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":10154,"byte_end":10163,"line_start":282,"line_end":282,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":10376,"byte_end":10391,"line_start":290,"line_end":290,"column_start":12,"column_end":27},"name":"max_leaf_length","qualname":"<Params>::max_leaf_length","value":"pub fn max_leaf_length(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" From 0 (the default, meaning unlimited or sequential) to `2^32 - 1`.\n","sig":null,"attributes":[{"value":"/ From 0 (the default, meaning unlimited or sequential) to `2^32 - 1`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":10278,"byte_end":10350,"line_start":288,"line_end":288,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":10355,"byte_end":10364,"line_start":289,"line_end":289,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":10605,"byte_end":10616,"line_start":297,"line_end":297,"column_start":12,"column_end":23},"name":"node_offset","qualname":"<Params>::node_offset","value":"pub fn node_offset(&mut Self, u64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" From 0 (the default, meaning first, leftmost, leaf, or sequential) to `2^48 - 1`.\n","sig":null,"attributes":[{"value":"/ From 0 (the default, meaning first, leftmost, leaf, or sequential) to `2^48 - 1`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":10494,"byte_end":10579,"line_start":295,"line_end":295,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":10584,"byte_end":10593,"line_start":296,"line_end":296,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":10869,"byte_end":10879,"line_start":305,"line_end":305,"column_start":12,"column_end":22},"name":"node_depth","qualname":"<Params>::node_depth","value":"pub fn node_depth(&mut Self, u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" From 0 (the default, meaning leaf or sequential) to 255.\n","sig":null,"attributes":[{"value":"/ From 0 (the default, meaning leaf or sequential) to 255.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":10783,"byte_end":10843,"line_start":303,"line_end":303,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":10848,"byte_end":10857,"line_start":304,"line_end":304,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":11064,"byte_end":11081,"line_start":312,"line_end":312,"column_start":12,"column_end":29},"name":"inner_hash_length","qualname":"<Params>::inner_hash_length","value":"pub fn inner_hash_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" From 0 (the default, meaning sequential) to `OUTBYTES` (32).\n","sig":null,"attributes":[{"value":"/ From 0 (the default, meaning sequential) to `OUTBYTES` (32).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":10974,"byte_end":11038,"line_start":310,"line_end":310,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":11043,"byte_end":11052,"line_start":311,"line_end":311,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":11548,"byte_end":11557,"line_start":324,"line_end":324,"column_start":12,"column_end":21},"name":"last_node","qualname":"<Params>::last_node","value":"pub fn last_node(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates the rightmost node in a row. This can also be changed on the\n `State` object, potentially after hashing has begun. See\n [`State::set_last_node`].","sig":null,"attributes":[{"value":"/ Indicates the rightmost node in a row. This can also be changed on the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":11268,"byte_end":11342,"line_start":318,"line_end":318,"column_start":5,"column_end":79}},{"value":"/ `State` object, potentially after hashing has begun. See","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":11347,"byte_end":11407,"line_start":319,"line_end":319,"column_start":5,"column_end":65}},{"value":"/ [`State::set_last_node`].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":11412,"byte_end":11441,"line_start":320,"line_end":320,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":11446,"byte_end":11449,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ [`State::set_last_node`]: struct.State.html#method.set_last_node","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":11454,"byte_end":11522,"line_start":322,"line_end":322,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":11527,"byte_end":11536,"line_start":323,"line_end":323,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":722},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":13061,"byte_end":13066,"line_start":381,"line_end":381,"column_start":12,"column_end":17},"name":"State","qualname":"::State","value":"State {  }","parent":null,"children":[{"krate":0,"index":723},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732}],"decl_id":null,"docs":" An incremental hasher for BLAKE2s.","sig":null,"attributes":[{"value":"/ An incremental hasher for BLAKE2s.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":12615,"byte_end":12653,"line_start":363,"line_end":363,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":12654,"byte_end":12657,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/ To construct a `State` with non-default parameters, see `Params::to_state`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":12658,"byte_end":12737,"line_start":365,"line_end":365,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":12738,"byte_end":12741,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":12742,"byte_end":12755,"line_start":367,"line_end":367,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":12756,"byte_end":12759,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":12760,"byte_end":12767,"line_start":369,"line_end":369,"column_start":1,"column_end":8}},{"value":"/ use blake2s_simd::{State, blake2s};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":12768,"byte_end":12807,"line_start":370,"line_end":370,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":12808,"byte_end":12811,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ let mut state = blake2s_simd::State::new();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":12812,"byte_end":12859,"line_start":372,"line_end":372,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":12860,"byte_end":12863,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/ state.update(b\"foo\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":12864,"byte_end":12889,"line_start":374,"line_end":374,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(blake2s(b\"foo\"), state.finalize());","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":12890,"byte_end":12940,"line_start":375,"line_end":375,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":12941,"byte_end":12944,"line_start":376,"line_end":376,"column_start":1,"column_end":4}},{"value":"/ state.update(b\"bar\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":12945,"byte_end":12970,"line_start":377,"line_end":377,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(blake2s(b\"foobar\"), state.finalize());","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":12971,"byte_end":13024,"line_start":378,"line_end":378,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":13025,"byte_end":13032,"line_start":379,"line_end":379,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":13369,"byte_end":13372,"line_start":394,"line_end":394,"column_start":12,"column_end":15},"name":"new","qualname":"<State>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `State::default()` or `Params::default().to_state()`.\n","sig":null,"attributes":[{"value":"/ Equivalent to `State::default()` or `Params::default().to_state()`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":13286,"byte_end":13357,"line_start":393,"line_end":393,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":15221,"byte_end":15227,"line_start":445,"line_end":445,"column_start":12,"column_end":18},"name":"update","qualname":"<State>::update","value":"pub fn update(&mut Self, &[u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add input to the hash. You can call `update` any number of times.\n","sig":null,"attributes":[{"value":"/ Add input to the hash. You can call `update` any number of times.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":15140,"byte_end":15209,"line_start":444,"line_end":444,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":16647,"byte_end":16655,"line_start":474,"line_end":474,"column_start":12,"column_end":20},"name":"finalize","qualname":"<State>::finalize","value":"pub fn finalize(&Self) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" Finalize the state and return a `Hash`. This method is idempotent, and calling it multiple\n times will give the same result. It's also possible to `update` with more input in between.\n","sig":null,"attributes":[{"value":"/ Finalize the state and return a `Hash`. This method is idempotent, and calling it multiple","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":16441,"byte_end":16535,"line_start":472,"line_end":472,"column_start":5,"column_end":99}},{"value":"/ times will give the same result. It's also possible to `update` with more input in between.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":16540,"byte_end":16635,"line_start":473,"line_end":473,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":17638,"byte_end":17651,"line_start":498,"line_end":498,"column_start":12,"column_end":25},"name":"set_last_node","qualname":"<State>::set_last_node","value":"pub fn set_last_node(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set a flag indicating that this is the last node of its level in a tree hash. This is\n equivalent to [`Params::last_node`], except that it can be set at any time before calling\n `finalize`. That allows callers to begin hashing a node without knowing ahead of time\n whether it's the last in its level. For more details about the intended use of this flag\n [the BLAKE2 spec].","sig":null,"attributes":[{"value":"/ Set a flag indicating that this is the last node of its level in a tree hash. This is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":17089,"byte_end":17178,"line_start":490,"line_end":490,"column_start":5,"column_end":94}},{"value":"/ equivalent to [`Params::last_node`], except that it can be set at any time before calling","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":17183,"byte_end":17276,"line_start":491,"line_end":491,"column_start":5,"column_end":98}},{"value":"/ `finalize`. That allows callers to begin hashing a node without knowing ahead of time","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":17281,"byte_end":17370,"line_start":492,"line_end":492,"column_start":5,"column_end":94}},{"value":"/ whether it's the last in its level. For more details about the intended use of this flag","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":17375,"byte_end":17467,"line_start":493,"line_end":493,"column_start":5,"column_end":97}},{"value":"/ [the BLAKE2 spec].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":17472,"byte_end":17494,"line_start":494,"line_end":494,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":17499,"byte_end":17502,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ [`Params::last_node`]: struct.Params.html#method.last_node","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":17507,"byte_end":17569,"line_start":496,"line_end":496,"column_start":5,"column_end":67}},{"value":"/ [the BLAKE2 spec]: https://blake2.net/blake2.pdf","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":17574,"byte_end":17626,"line_start":497,"line_end":497,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":18068,"byte_end":18073,"line_start":511,"line_end":511,"column_start":12,"column_end":17},"name":"count","qualname":"<State>::count","value":"pub fn count(&Self) -> Count","parent":null,"children":[],"decl_id":null,"docs":" Return the total number of bytes input so far.","sig":null,"attributes":[{"value":"/ Return the total number of bytes input so far.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":17850,"byte_end":17900,"line_start":507,"line_end":507,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":17905,"byte_end":17908,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ Note that `count` doesn't include the bytes of the key block, if any.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":17913,"byte_end":17986,"line_start":509,"line_end":509,"column_start":5,"column_end":78}},{"value":"/ It's exactly the total number of input bytes fed to `update`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":17991,"byte_end":18056,"line_start":510,"line_end":510,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":754},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":19791,"byte_end":19795,"line_start":573,"line_end":573,"column_start":12,"column_end":16},"name":"Hash","qualname":"::Hash","value":"Hash {  }","parent":null,"children":[{"krate":0,"index":755},{"krate":0,"index":757}],"decl_id":null,"docs":" A finalized BLAKE2 hash, with constant-time equality.\n","sig":null,"attributes":[{"value":"/ A finalized BLAKE2 hash, with constant-time equality.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":19699,"byte_end":19756,"line_start":571,"line_end":571,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":20021,"byte_end":20029,"line_start":581,"line_end":581,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Hash>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Convert the hash to a byte slice. Note that if you're using BLAKE2 as a MAC, you need\n constant time equality, which `&[u8]` doesn't provide.\n","sig":null,"attributes":[{"value":"/ Convert the hash to a byte slice. Note that if you're using BLAKE2 as a MAC, you need","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":19857,"byte_end":19946,"line_start":579,"line_end":579,"column_start":5,"column_end":94}},{"value":"/ constant time equality, which `&[u8]` doesn't provide.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":19951,"byte_end":20009,"line_start":580,"line_end":580,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":20353,"byte_end":20361,"line_start":589,"line_end":589,"column_start":12,"column_end":20},"name":"as_array","qualname":"<Hash>::as_array","value":"pub fn as_array(&Self) -> &[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Convert the hash to a byte array. Note that if you're using BLAKE2 as a\n MAC, you need constant time equality, which arrays don't provide. This\n panics in debug mode if the length of the hash isn't `OUTBYTES`.\n","sig":null,"attributes":[{"value":"/ Convert the hash to a byte array. Note that if you're using BLAKE2 as a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":20100,"byte_end":20175,"line_start":585,"line_end":585,"column_start":5,"column_end":80}},{"value":"/ MAC, you need constant time equality, which arrays don't provide. This","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":20180,"byte_end":20254,"line_start":586,"line_end":586,"column_start":5,"column_end":79}},{"value":"/ panics in debug mode if the length of the hash isn't `OUTBYTES`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":20259,"byte_end":20327,"line_start":587,"line_end":587,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":20332,"byte_end":20341,"line_start":588,"line_end":588,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":20623,"byte_end":20629,"line_start":596,"line_end":596,"column_start":12,"column_end":18},"name":"to_hex","qualname":"<Hash>::to_hex","value":"pub fn to_hex(&Self) -> HexString","parent":null,"children":[],"decl_id":null,"docs":" Convert the hash to a lowercase hexadecimal\n [`ArrayString`](https://docs.rs/arrayvec/0.4/arrayvec/struct.ArrayString.html).\n","sig":null,"attributes":[{"value":"/ Convert the hash to a lowercase hexadecimal","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":20476,"byte_end":20523,"line_start":594,"line_end":594,"column_start":5,"column_end":52}},{"value":"/ [`ArrayString`](https://docs.rs/arrayvec/0.4/arrayvec/struct.ArrayString.html).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":20528,"byte_end":20611,"line_start":595,"line_end":595,"column_start":5,"column_end":88}}]},{"kind":"Mod","id":{"krate":0,"index":468},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":22299,"byte_end":22309,"line_start":656,"line_end":656,"column_start":9,"column_end":19},"name":"benchmarks","qualname":"::benchmarks","value":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":470},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":22342,"byte_end":22356,"line_start":659,"line_end":659,"column_start":12,"column_end":26},"name":"force_portable","qualname":"::benchmarks::force_portable","value":"pub fn force_portable(&mut Params)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":471},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":22464,"byte_end":22487,"line_start":663,"line_end":663,"column_start":12,"column_end":35},"name":"force_portable_blake2sp","qualname":"::benchmarks::force_portable_blake2sp","value":"pub fn force_portable_blake2sp(&mut blake2sp::Params)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":80677,"byte_end":80683,"line_start":76,"line_end":76,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":84883,"byte_end":84889,"line_start":190,"line_end":190,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":84968,"byte_end":84974,"line_start":196,"line_end":196,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":86225,"byte_end":86230,"line_start":239,"line_end":239,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":94098,"byte_end":94103,"line_start":433,"line_end":433,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":94342,"byte_end":94347,"line_start":444,"line_end":444,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/guts.rs","byte_start":100403,"byte_end":100417,"line_start":27,"line_end":27,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":307},{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/guts.rs","byte_start":104115,"byte_end":104118,"line_start":142,"line_end":142,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/guts.rs","byte_start":104622,"byte_end":104630,"line_start":162,"line_end":162,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/guts.rs","byte_start":104905,"byte_end":104913,"line_start":178,"line_end":178,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/guts.rs","byte_start":105182,"byte_end":105188,"line_start":193,"line_end":193,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":128113,"byte_end":128124,"line_start":278,"line_end":278,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":129772,"byte_end":129783,"line_start":330,"line_end":330,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":5440,"byte_end":5446,"line_start":151,"line_end":151,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":410},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":417},{"krate":0,"index":419},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":11771,"byte_end":11777,"line_start":334,"line_end":334,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":11856,"byte_end":11862,"line_start":340,"line_end":340,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":13274,"byte_end":13279,"line_start":392,"line_end":392,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":19174,"byte_end":19179,"line_start":550,"line_end":550,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":19548,"byte_end":19553,"line_start":563,"line_end":563,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":19846,"byte_end":19850,"line_start":578,"line_end":578,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":21065,"byte_end":21069,"line_start":612,"line_end":612,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":21314,"byte_end":21318,"line_start":619,"line_end":619,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":21451,"byte_end":21455,"line_start":625,"line_end":625,"column_start":13,"column_end":17},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":21481,"byte_end":21485,"line_start":627,"line_end":627,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":21573,"byte_end":21577,"line_start":633,"line_end":633,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":2322,"byte_end":2330,"line_start":56,"line_end":56,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":233}},{"kind":"Mod","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":2350,"byte_end":2354,"line_start":58,"line_end":58,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":338}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":80677,"byte_end":80683,"line_start":76,"line_end":76,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":84883,"byte_end":84889,"line_start":190,"line_end":190,"column_start":18,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":585},"to":{"krate":1,"index":1910}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":84968,"byte_end":84974,"line_start":196,"line_end":196,"column_start":21,"column_end":27},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":585},"to":{"krate":1,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":86225,"byte_end":86230,"line_start":239,"line_end":239,"column_start":6,"column_end":11},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":94098,"byte_end":94103,"line_start":433,"line_end":433,"column_start":21,"column_end":26},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":593},"to":{"krate":1,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/blake2sp.rs","byte_start":94342,"byte_end":94347,"line_start":444,"line_end":444,"column_start":18,"column_end":23},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":593},"to":{"krate":1,"index":1910}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/guts.rs","byte_start":100403,"byte_end":100417,"line_start":27,"line_end":27,"column_start":6,"column_end":20},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":626},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/guts.rs","byte_start":104115,"byte_end":104118,"line_start":142,"line_end":142,"column_start":35,"column_end":38},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":311},"to":{"krate":1,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/guts.rs","byte_start":104622,"byte_end":104630,"line_start":162,"line_end":162,"column_start":6,"column_end":14},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/guts.rs","byte_start":104905,"byte_end":104913,"line_start":178,"line_end":178,"column_start":6,"column_end":14},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":644},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/guts.rs","byte_start":105182,"byte_end":105188,"line_start":193,"line_end":193,"column_start":6,"column_end":12},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":654},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":128113,"byte_end":128124,"line_start":278,"line_end":278,"column_start":10,"column_end":21},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/many.rs","byte_start":129772,"byte_end":129783,"line_start":330,"line_end":330,"column_start":25,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":676},"to":{"krate":1,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":5440,"byte_end":5446,"line_start":151,"line_end":151,"column_start":6,"column_end":12},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":689},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":11771,"byte_end":11777,"line_start":334,"line_end":334,"column_start":18,"column_end":24},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":689},"to":{"krate":1,"index":1910}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":11856,"byte_end":11862,"line_start":340,"line_end":340,"column_start":21,"column_end":27},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":689},"to":{"krate":1,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":13274,"byte_end":13279,"line_start":392,"line_end":392,"column_start":6,"column_end":11},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":19174,"byte_end":19179,"line_start":550,"line_end":550,"column_start":21,"column_end":26},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":722},"to":{"krate":1,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":19548,"byte_end":19553,"line_start":563,"line_end":563,"column_start":18,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":722},"to":{"krate":1,"index":1910}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":19846,"byte_end":19850,"line_start":578,"line_end":578,"column_start":6,"column_end":10},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":754},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":21065,"byte_end":21069,"line_start":612,"line_end":612,"column_start":20,"column_end":24},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":1648}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":21314,"byte_end":21318,"line_start":619,"line_end":619,"column_start":26,"column_end":30},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":1648}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":21451,"byte_end":21455,"line_start":625,"line_end":625,"column_start":13,"column_end":17},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":1653}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":21481,"byte_end":21485,"line_start":627,"line_end":627,"column_start":22,"column_end":26},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":1831}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2s_simd-0.5.10/src/lib.rs","byte_start":21573,"byte_end":21577,"line_start":633,"line_end":633,"column_start":21,"column_end":25},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":754},"to":{"krate":1,"index":6198}}]}