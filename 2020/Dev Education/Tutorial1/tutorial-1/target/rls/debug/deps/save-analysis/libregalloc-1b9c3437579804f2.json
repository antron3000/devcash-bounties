{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27","program":"/home/alansky/.rustup/toolchains/nightly-2020-07-02-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","regalloc","--edition=2018","/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=1b9c3437579804f2","-C","extra-filename=-1b9c3437579804f2","--out-dir","/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps","-L","dependency=/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps","--extern","log=/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps/liblog-ca964ba05def85b8.rmeta","--extern","rustc_hash=/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps/librustc_hash-c3be73f3935c5841.rmeta","--extern","smallvec=/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps/libsmallvec-c6a45bab8cba3f95.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/alansky/.rustup/toolchains/nightly-2020-07-02-x86_64-unknown-linux-gnu"],"output":"/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps/libregalloc-1b9c3437579804f2.rmeta"},"prelude":{"crate_id":{"name":"regalloc","disambiguator":[2827655970227419178,8508829687962323613]},"crate_root":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src","external_crates":[{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15171822389981698586,9596930288317159773]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/sparse_set.rs","num":2,"id":{"name":"core","disambiguator":[309489290393175025,9116230521283433112]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4391997853131671271,2752570053062459009]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[680011651820151502,5018330578075825921]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4249137077638888796,17834651879708154657]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[13082819734751436340,16140962863799451331]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8371738565553744270,17943531712744420027]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17468180561489458258,7285327718060701271]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[14551538593801126895,13478667531910088620]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[16022708609364593127,529027819734980321]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[18024135037275500963,3187671833432925572]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5194268306266264186,14551347693776345482]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[18097577876301876973,855323625195415836]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[5106557709654100294,13294098602154984522]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/analysis_main.rs","num":15,"id":{"name":"log","disambiguator":[670169231150417229,9944140970327141030]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/analysis_main.rs","num":16,"id":{"name":"cfg_if","disambiguator":[7714184797746965624,2556834864094820256]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/analysis_data_flow.rs","num":17,"id":{"name":"smallvec","disambiguator":[10542451656544325124,11196187688015791765]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","num":18,"id":{"name":"rustc_hash","disambiguator":[1667800158540236469,2241002503309440891]}}],"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":0,"byte_end":25977,"line_start":1,"line_end":614,"column_start":1,"column_end":37}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":656},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":1302,"byte_end":1305,"line_start":44,"line_end":44,"column_start":33,"column_end":36},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1945},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":1339,"byte_end":1342,"line_start":45,"line_end":45,"column_start":33,"column_end":36},"alias_span":null,"name":"Set","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2180},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":1398,"byte_end":1406,"line_start":49,"line_end":49,"column_start":33,"column_end":41},"alias_span":null,"name":"RegClass","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2210},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":1503,"byte_end":1506,"line_start":53,"line_end":53,"column_start":33,"column_end":36},"alias_span":null,"name":"Reg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2233},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":1541,"byte_end":1548,"line_start":55,"line_end":55,"column_start":33,"column_end":40},"alias_span":null,"name":"RealReg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2256},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":1582,"byte_end":1592,"line_start":56,"line_end":56,"column_start":33,"column_end":43},"alias_span":null,"name":"VirtualReg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2279},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":1627,"byte_end":1635,"line_start":58,"line_end":58,"column_start":33,"column_end":41},"alias_span":null,"name":"Writable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":771},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":1670,"byte_end":1685,"line_start":60,"line_end":60,"column_start":33,"column_end":48},"alias_span":null,"name":"NUM_REG_CLASSES","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2315},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":1736,"byte_end":1745,"line_start":64,"line_end":64,"column_start":33,"column_end":42},"alias_span":null,"name":"SpillSlot","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2357},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":6333,"byte_end":6348,"line_start":146,"line_end":146,"column_start":33,"column_end":48},"alias_span":null,"name":"RealRegUniverse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2366},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":6382,"byte_end":6394,"line_start":147,"line_end":147,"column_start":33,"column_end":45},"alias_span":null,"name":"RegClassInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":850},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":6520,"byte_end":6537,"line_start":152,"line_end":152,"column_start":33,"column_end":50},"alias_span":null,"name":"RegUsageCollector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":727},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":7578,"byte_end":7588,"line_start":176,"line_end":176,"column_start":33,"column_end":43},"alias_span":null,"name":"TypedIxVec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2023},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":7623,"byte_end":7630,"line_start":177,"line_end":177,"column_start":34,"column_end":41},"alias_span":null,"name":"BlockIx","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1979},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":7632,"byte_end":7638,"line_start":177,"line_end":177,"column_start":43,"column_end":49},"alias_span":null,"name":"InstIx","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1951},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":7640,"byte_end":7645,"line_start":177,"line_end":177,"column_start":51,"column_end":56},"alias_span":null,"name":"Range","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1740},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":17109,"byte_end":17122,"line_start":393,"line_end":393,"column_start":31,"column_end":44},"alias_span":null,"name":"AnalysisError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1868},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":17149,"byte_end":17161,"line_start":394,"line_end":394,"column_start":26,"column_end":38},"alias_span":null,"name":"CheckerError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1862},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":17163,"byte_end":17176,"line_start":394,"line_end":394,"column_start":40,"column_end":53},"alias_span":null,"name":"CheckerErrors","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1818},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":17587,"byte_end":17606,"line_start":412,"line_end":412,"column_start":25,"column_end":44},"alias_span":null,"name":"BacktrackingOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2746},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":17636,"byte_end":17653,"line_start":413,"line_end":413,"column_start":29,"column_end":46},"alias_span":null,"name":"LinearScanOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2874},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":25966,"byte_end":25976,"line_start":614,"line_end":614,"column_start":26,"column_end":36},"alias_span":null,"name":"IRSnapshot","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":0,"byte_end":25977,"line_start":1,"line_end":614,"column_start":1,"column_end":37},"name":"","qualname":"::","value":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":56},{"krate":0,"index":118},{"krate":0,"index":219},{"krate":0,"index":235},{"krate":0,"index":296},{"krate":0,"index":343},{"krate":0,"index":379},{"krate":0,"index":497},{"krate":0,"index":542},{"krate":0,"index":572},{"krate":0,"index":637},{"krate":0,"index":988},{"krate":0,"index":1037},{"krate":0,"index":1445},{"krate":0,"index":1489},{"krate":0,"index":1527},{"krate":0,"index":1593},{"krate":0,"index":1653},{"krate":0,"index":1654},{"krate":0,"index":1655},{"krate":0,"index":1656},{"krate":0,"index":1657},{"krate":0,"index":1658},{"krate":0,"index":1659},{"krate":0,"index":1660},{"krate":0,"index":1661},{"krate":0,"index":1662},{"krate":0,"index":1663},{"krate":0,"index":1664},{"krate":0,"index":1665},{"krate":0,"index":1666},{"krate":0,"index":1667},{"krate":0,"index":1668},{"krate":0,"index":1669},{"krate":0,"index":1670},{"krate":0,"index":1671},{"krate":0,"index":1672},{"krate":0,"index":1673},{"krate":0,"index":1677},{"krate":0,"index":1678},{"krate":0,"index":1679},{"krate":0,"index":1680},{"krate":0,"index":1681},{"krate":0,"index":1682},{"krate":0,"index":1707},{"krate":0,"index":2979},{"krate":0,"index":2993},{"krate":0,"index":2992},{"krate":0,"index":2990},{"krate":0,"index":2987},{"krate":0,"index":2988},{"krate":0,"index":2984},{"krate":0,"index":2985},{"krate":0,"index":1717},{"krate":0,"index":1718},{"krate":0,"index":1719},{"krate":0,"index":1720},{"krate":0,"index":2995},{"krate":0,"index":3013},{"krate":0,"index":3011},{"krate":0,"index":1721},{"krate":0,"index":1723},{"krate":0,"index":1724},{"krate":0,"index":3015},{"krate":0,"index":3022},{"krate":0,"index":1725},{"krate":0,"index":3024},{"krate":0,"index":3027},{"krate":0,"index":1727},{"krate":0,"index":1729},{"krate":0,"index":1731},{"krate":0,"index":1735},{"krate":0,"index":1737},{"krate":0,"index":1739}],"decl_id":null,"docs":" Main file / top-level module for regalloc library.","sig":null,"attributes":[{"value":"! Main file / top-level module for regalloc library.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":0,"byte_end":54,"line_start":1,"line_end":1,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":55,"byte_end":58,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! We have tried hard to make the library's interface as simple as possible,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":59,"byte_end":136,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"! yet flexible enough that the allocators it implements can provide good","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":137,"byte_end":211,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"! quality allocations in reasonable time.  Nevertheless, there is still","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":212,"byte_end":285,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"! significant semantic complexity in parts of the interface.  If you intend","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":286,"byte_end":363,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"! to use this library in your own code, you would be well advised to read","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":364,"byte_end":439,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"! the comments in this file very carefully.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":440,"byte_end":485,"line_start":8,"line_end":8,"column_start":1,"column_end":46}}]},{"kind":"StructVariant","id":{"krate":0,"index":1741},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/analysis_main.rs","byte_start":27172,"byte_end":27184,"line_start":29,"line_end":29,"column_start":5,"column_end":17},"name":"CriticalEdge","qualname":"::analysis_main::AnalysisError::CriticalEdge","value":"AnalysisError::CriticalEdge { from, to }","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" A critical edge from \"from\" to \"to\" has been found, and should have been\n removed by the caller in the first place.\n","sig":null,"attributes":[{"value":"/ A critical edge from \"from\" to \"to\" has been found, and should have been","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/analysis_main.rs","byte_start":27041,"byte_end":27117,"line_start":27,"line_end":27,"column_start":5,"column_end":81}},{"value":"/ removed by the caller in the first place.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/analysis_main.rs","byte_start":27122,"byte_end":27167,"line_start":28,"line_end":28,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1744},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/analysis_main.rs","byte_start":27328,"byte_end":27345,"line_start":33,"line_end":33,"column_start":5,"column_end":22},"name":"EntryLiveinValues","qualname":"::analysis_main::AnalysisError::EntryLiveinValues","value":"AnalysisError::EntryLiveinValues","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" Some values in the entry block are live in to the function, but are not\n declared as such.\n","sig":null,"attributes":[{"value":"/ Some values in the entry block are live in to the function, but are not","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/analysis_main.rs","byte_start":27222,"byte_end":27297,"line_start":31,"line_end":31,"column_start":5,"column_end":80}},{"value":"/ declared as such.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/analysis_main.rs","byte_start":27302,"byte_end":27323,"line_start":32,"line_end":32,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1746},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/analysis_main.rs","byte_start":27929,"byte_end":27943,"line_start":43,"line_end":43,"column_start":5,"column_end":19},"name":"IllegalRealReg","qualname":"::analysis_main::AnalysisError::IllegalRealReg","value":"AnalysisError::IllegalRealReg(RealReg)","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" The incoming code has an explicit or implicit mention (use, def or mod)\n of a real register, which either (1) isn't listed in the universe at\n all, or (2) is one of the `suggested_scratch` registers in the universe.\n (1) isn't allowed because the client must mention *all* real registers\n in the universe.  (2) isn't allowed because the client promises to us\n that the `suggested_scratch` registers really are completely unused in\n the incoming code, so that the allocator can use them at literally any\n point it wants.\n","sig":null,"attributes":[{"value":"/ The incoming code has an explicit or implicit mention (use, def or mod)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/analysis_main.rs","byte_start":27352,"byte_end":27427,"line_start":35,"line_end":35,"column_start":5,"column_end":80}},{"value":"/ of a real register, which either (1) isn't listed in the universe at","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/analysis_main.rs","byte_start":27432,"byte_end":27504,"line_start":36,"line_end":36,"column_start":5,"column_end":77}},{"value":"/ all, or (2) is one of the `suggested_scratch` registers in the universe.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/analysis_main.rs","byte_start":27509,"byte_end":27585,"line_start":37,"line_end":37,"column_start":5,"column_end":81}},{"value":"/ (1) isn't allowed because the client must mention *all* real registers","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/analysis_main.rs","byte_start":27590,"byte_end":27664,"line_start":38,"line_end":38,"column_start":5,"column_end":79}},{"value":"/ in the universe.  (2) isn't allowed because the client promises to us","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/analysis_main.rs","byte_start":27669,"byte_end":27742,"line_start":39,"line_end":39,"column_start":5,"column_end":78}},{"value":"/ that the `suggested_scratch` registers really are completely unused in","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/analysis_main.rs","byte_start":27747,"byte_end":27821,"line_start":40,"line_end":40,"column_start":5,"column_end":79}},{"value":"/ the incoming code, so that the allocator can use them at literally any","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/analysis_main.rs","byte_start":27826,"byte_end":27900,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/ point it wants.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/analysis_main.rs","byte_start":27905,"byte_end":27924,"line_start":42,"line_end":42,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1749},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/analysis_main.rs","byte_start":27995,"byte_end":28012,"line_start":46,"line_end":46,"column_start":5,"column_end":22},"name":"UnreachableBlocks","qualname":"::analysis_main::AnalysisError::UnreachableBlocks","value":"AnalysisError::UnreachableBlocks","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" At least one block is dead.\n","sig":null,"attributes":[{"value":"/ At least one block is dead.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/analysis_main.rs","byte_start":27959,"byte_end":27990,"line_start":45,"line_end":45,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1751},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/analysis_main.rs","byte_start":28178,"byte_end":28206,"line_start":50,"line_end":50,"column_start":5,"column_end":33},"name":"ImplementationLimitsExceeded","qualname":"::analysis_main::AnalysisError::ImplementationLimitsExceeded","value":"AnalysisError::ImplementationLimitsExceeded","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" Implementation limits exceeded.  The incoming function is too big.  It\n may contain at most 1 million basic blocks and 16 million instructions.\n","sig":null,"attributes":[{"value":"/ Implementation limits exceeded.  The incoming function is too big.  It","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/analysis_main.rs","byte_start":28019,"byte_end":28093,"line_start":48,"line_end":48,"column_start":5,"column_end":79}},{"value":"/ may contain at most 1 million basic blocks and 16 million instructions.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/analysis_main.rs","byte_start":28098,"byte_end":28173,"line_start":49,"line_end":49,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1753},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/analysis_main.rs","byte_start":28321,"byte_end":28340,"line_start":54,"line_end":54,"column_start":5,"column_end":24},"name":"LSRACantDoStackmaps","qualname":"::analysis_main::AnalysisError::LSRACantDoStackmaps","value":"AnalysisError::LSRACantDoStackmaps","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":" Currently LSRA can't generate stackmaps, but the client has requested LSRA *and*\n stackmaps.\n","sig":null,"attributes":[{"value":"/ Currently LSRA can't generate stackmaps, but the client has requested LSRA *and*","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/analysis_main.rs","byte_start":28213,"byte_end":28297,"line_start":52,"line_end":52,"column_start":5,"column_end":89}},{"value":"/ stackmaps.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/analysis_main.rs","byte_start":28302,"byte_end":28316,"line_start":53,"line_end":53,"column_start":5,"column_end":19}}]},{"kind":"Enum","id":{"krate":0,"index":1740},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/analysis_main.rs","byte_start":27021,"byte_end":27034,"line_start":26,"line_end":26,"column_start":10,"column_end":23},"name":"AnalysisError","qualname":"::analysis_main::AnalysisError","value":"pub enum AnalysisError {\n\n    /// A critical edge from \"from\" to \"to\" has been found, and should have been\n    /// removed by the caller in the first place.\n    CriticalEdge {\n        from: BlockIx,\n        to: BlockIx,\n    },\n\n    /// Some values in the entry block are live in to the function, but are not\n    /// declared as such.\n    EntryLiveinValues,\n\n    /// The incoming code has an explicit or implicit mention (use, def or mod)\n    /// of a real register, which either (1) isn't listed in the universe at\n    /// all, or (2) is one of the `suggested_scratch` registers in the universe.\n    /// (1) isn't allowed because the client must mention *all* real registers\n    /// in the universe.  (2) isn't allowed because the client promises to us\n    /// that the `suggested_scratch` registers really are completely unused in\n    /// the incoming code, so that the allocator can use them at literally any\n    /// point it wants.\n    IllegalRealReg(RealReg),\n\n    /// At least one block is dead.\n    UnreachableBlocks,\n\n    /// Implementation limits exceeded.  The incoming function is too big.  It\n    /// may contain at most 1 million basic blocks and 16 million instructions.\n    ImplementationLimitsExceeded,\n\n    /// Currently LSRA can't generate stackmaps, but the client has requested LSRA *and*\n    /// stackmaps.\n    LSRACantDoStackmaps,\n}","parent":null,"children":[{"krate":0,"index":1741},{"krate":0,"index":1744},{"krate":0,"index":1746},{"krate":0,"index":1749},{"krate":0,"index":1751},{"krate":0,"index":1753}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1818},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_main.rs","byte_start":219987,"byte_end":220006,"line_start":32,"line_end":32,"column_start":12,"column_end":31},"name":"BacktrackingOptions","qualname":"::bt_main::BacktrackingOptions","value":"BacktrackingOptions { request_block_annotations }","parent":null,"children":[{"krate":0,"index":1819}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1819},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_main.rs","byte_start":220083,"byte_end":220108,"line_start":34,"line_end":34,"column_start":9,"column_end":34},"name":"request_block_annotations","qualname":"::bt_main::BacktrackingOptions::request_block_annotations","value":"bool","parent":{"krate":0,"index":1818},"children":[],"decl_id":null,"docs":" Should the register allocator generate block annotations?\n","sig":null,"attributes":[{"value":"/ Should the register allocator generate block annotations?","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_main.rs","byte_start":220013,"byte_end":220074,"line_start":33,"line_end":33,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1862},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/checker.rs","byte_start":328962,"byte_end":328975,"line_start":74,"line_end":74,"column_start":12,"column_end":25},"name":"CheckerErrors","qualname":"::checker::CheckerErrors","value":"CheckerErrors {  }","parent":null,"children":[{"krate":0,"index":1863}],"decl_id":null,"docs":" A set of errors detected by the regalloc checker.\n","sig":null,"attributes":[{"value":"/ A set of errors detected by the regalloc checker.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/checker.rs","byte_start":328873,"byte_end":328926,"line_start":72,"line_end":72,"column_start":1,"column_end":54}}]},{"kind":"StructVariant","id":{"krate":0,"index":1869},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/checker.rs","byte_start":329117,"byte_end":329140,"line_start":81,"line_end":81,"column_start":5,"column_end":28},"name":"MissingAllocationForReg","qualname":"::checker::CheckerError::MissingAllocationForReg","value":"CheckerError::MissingAllocationForReg { reg, inst }","parent":{"krate":0,"index":1868},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1872},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/checker.rs","byte_start":329201,"byte_end":329218,"line_start":85,"line_end":85,"column_start":5,"column_end":22},"name":"UnknownValueInReg","qualname":"::checker::CheckerError::UnknownValueInReg","value":"CheckerError::UnknownValueInReg { real_reg, inst }","parent":{"krate":0,"index":1868},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1875},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/checker.rs","byte_start":329281,"byte_end":329300,"line_start":89,"line_end":89,"column_start":5,"column_end":24},"name":"IncorrectValueInReg","qualname":"::checker::CheckerError::IncorrectValueInReg","value":"CheckerError::IncorrectValueInReg { actual, expected, real_reg, inst }","parent":{"krate":0,"index":1868},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1868},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/checker.rs","byte_start":329098,"byte_end":329110,"line_start":80,"line_end":80,"column_start":10,"column_end":22},"name":"CheckerError","qualname":"::checker::CheckerError","value":"pub enum CheckerError {\n    MissingAllocationForReg {\n        reg: VirtualReg,\n        inst: InstIx,\n    },\n    UnknownValueInReg {\n        real_reg: RealReg,\n        inst: InstIx,\n    },\n    IncorrectValueInReg {\n        actual: Reg,\n        expected: Reg,\n        real_reg: RealReg,\n        inst: InstIx,\n    },\n}","parent":null,"children":[{"krate":0,"index":1869},{"krate":0,"index":1872},{"krate":0,"index":1875}],"decl_id":null,"docs":" A single error detected by the regalloc checker.\n","sig":null,"attributes":[{"value":"/ A single error detected by the regalloc checker.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/checker.rs","byte_start":329012,"byte_end":329064,"line_start":78,"line_end":78,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":656},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":345983,"byte_end":345986,"line_start":33,"line_end":33,"column_start":10,"column_end":13},"name":"Map","qualname":"::data_structures::Map","value":"FxHashMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1945},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":346250,"byte_end":346253,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"Set","qualname":"::data_structures::Set","value":"Set {  }","parent":null,"children":[{"krate":0,"index":1947}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":346382,"byte_end":346387,"line_start":47,"line_end":47,"column_start":12,"column_end":17},"name":"empty","qualname":"<Set<T>>::empty","value":"pub fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":346354,"byte_end":346370,"line_start":46,"line_end":46,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":346508,"byte_end":346512,"line_start":54,"line_end":54,"column_start":12,"column_end":16},"name":"unit","qualname":"<Set<T>>::unit","value":"pub fn unit(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":346480,"byte_end":346496,"line_start":53,"line_end":53,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":346640,"byte_end":346643,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"two","qualname":"<Set<T>>::two","value":"pub fn two(T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":346612,"byte_end":346628,"line_start":60,"line_end":60,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":346808,"byte_end":346812,"line_start":69,"line_end":69,"column_start":12,"column_end":16},"name":"card","qualname":"<Set<T>>::card","value":"pub fn card(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":346780,"byte_end":346796,"line_start":68,"line_end":68,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":346893,"byte_end":346899,"line_start":74,"line_end":74,"column_start":12,"column_end":18},"name":"insert","qualname":"<Set<T>>::insert","value":"pub fn insert(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":346865,"byte_end":346881,"line_start":73,"line_end":73,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":346992,"byte_end":346998,"line_start":79,"line_end":79,"column_start":12,"column_end":18},"name":"delete","qualname":"<Set<T>>::delete","value":"pub fn delete(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":346964,"byte_end":346980,"line_start":78,"line_end":78,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":347092,"byte_end":347100,"line_start":84,"line_end":84,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Set<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":347064,"byte_end":347080,"line_start":83,"line_end":83,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":347185,"byte_end":347193,"line_start":89,"line_end":89,"column_start":12,"column_end":20},"name":"contains","qualname":"<Set<T>>::contains","value":"pub fn contains(&Self, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":347157,"byte_end":347173,"line_start":88,"line_end":88,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":347292,"byte_end":347301,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"intersect","qualname":"<Set<T>>::intersect","value":"pub fn intersect(&mut Self, &Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":347264,"byte_end":347280,"line_start":93,"line_end":93,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":347580,"byte_end":347585,"line_start":105,"line_end":105,"column_start":12,"column_end":17},"name":"union","qualname":"<Set<T>>::union","value":"pub fn union(&mut Self, &Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":347552,"byte_end":347568,"line_start":104,"line_end":104,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":347737,"byte_end":347743,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"name":"remove","qualname":"<Set<T>>::remove","value":"pub fn remove(&mut Self, &Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":347709,"byte_end":347725,"line_start":111,"line_end":111,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":347894,"byte_end":347904,"line_start":119,"line_end":119,"column_start":12,"column_end":22},"name":"intersects","qualname":"<Set<T>>::intersects","value":"pub fn intersects(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":347866,"byte_end":347882,"line_start":118,"line_end":118,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":348017,"byte_end":348029,"line_start":124,"line_end":124,"column_start":12,"column_end":24},"name":"is_subset_of","qualname":"<Set<T>>::is_subset_of","value":"pub fn is_subset_of(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":347989,"byte_end":348005,"line_start":123,"line_end":123,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":348139,"byte_end":348145,"line_start":129,"line_end":129,"column_start":12,"column_end":18},"name":"to_vec","qualname":"<Set<T>>::to_vec","value":"pub fn to_vec(&Self) -> Vec<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":348111,"byte_end":348127,"line_start":128,"line_end":128,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":348408,"byte_end":348416,"line_start":140,"line_end":140,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<Set<T>>::from_vec","value":"pub fn from_vec(Vec<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":348380,"byte_end":348396,"line_start":139,"line_end":139,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":348592,"byte_end":348598,"line_start":149,"line_end":149,"column_start":12,"column_end":18},"name":"equals","qualname":"<Set<T>>::equals","value":"pub fn equals(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":348564,"byte_end":348580,"line_start":148,"line_end":148,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":348699,"byte_end":348705,"line_start":154,"line_end":154,"column_start":12,"column_end":18},"name":"retain","qualname":"<Set<T>>::retain","value":"pub fn retain<F>(&mut Self, F) where F: FnMut(&T) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":348671,"byte_end":348687,"line_start":153,"line_end":153,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":348838,"byte_end":348841,"line_start":162,"line_end":162,"column_start":12,"column_end":15},"name":"map","qualname":"<Set<T>>::map","value":"pub fn map<F, U>(&Self, F) -> Set<U> where F: Fn(&T) -> U, U: Eq + Ord +\nHash + Copy + fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":348810,"byte_end":348826,"line_start":161,"line_end":161,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":349073,"byte_end":349083,"line_start":173,"line_end":173,"column_start":12,"column_end":22},"name":"filter_map","qualname":"<Set<T>>::filter_map","value":"pub fn filter_map<F, U>(&Self, F) -> Set<U> where F: Fn(&T) -> Option<U>,\nU: Eq + Ord + Hash + Copy + fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":349045,"byte_end":349061,"line_start":172,"line_end":172,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":349309,"byte_end":349314,"line_start":183,"line_end":183,"column_start":12,"column_end":17},"name":"clear","qualname":"<Set<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":689},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":350152,"byte_end":350159,"line_start":208,"line_end":208,"column_start":12,"column_end":19},"name":"SetIter","qualname":"::data_structures::SetIter","value":"SetIter {  }","parent":null,"children":[{"krate":0,"index":692}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":350265,"byte_end":350269,"line_start":212,"line_end":212,"column_start":12,"column_end":16},"name":"iter","qualname":"<Set<T>>::iter","value":"pub fn iter(&Self) -> SetIter<, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":701},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":351021,"byte_end":351025,"line_start":239,"line_end":239,"column_start":11,"column_end":15},"name":"Zero","qualname":"::data_structures::Zero","value":"Zero","parent":null,"children":[{"krate":0,"index":702}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":351035,"byte_end":351039,"line_start":240,"line_end":240,"column_start":8,"column_end":12},"name":"zero","qualname":"::data_structures::Zero::zero","value":"pub fn zero() -> Self","parent":{"krate":0,"index":701},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":703},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":351064,"byte_end":351069,"line_start":243,"line_end":243,"column_start":11,"column_end":16},"name":"PlusN","qualname":"::data_structures::PlusN","value":"PlusN","parent":null,"children":[{"krate":0,"index":704}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":351079,"byte_end":351085,"line_start":244,"line_end":244,"column_start":8,"column_end":14},"name":"plus_n","qualname":"::data_structures::PlusN::plus_n","value":"pub fn plus_n(&Self, usize) -> Self","parent":{"krate":0,"index":703},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1951},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":351219,"byte_end":351224,"line_start":249,"line_end":249,"column_start":12,"column_end":17},"name":"Range","qualname":"::data_structures::Range","value":"Range {  }","parent":null,"children":[{"krate":0,"index":1953},{"krate":0,"index":1954}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":351608,"byte_end":351611,"line_start":267,"line_end":267,"column_start":12,"column_end":15},"name":"new","qualname":"<Range<T>>::new","value":"pub fn new(T, usize) -> Range<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a new range object.\n","sig":null,"attributes":[{"value":"/ Create a new range object.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":351566,"byte_end":351596,"line_start":266,"line_end":266,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":351700,"byte_end":351705,"line_start":271,"line_end":271,"column_start":12,"column_end":17},"name":"start","qualname":"<Range<T>>::start","value":"pub fn start(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":351757,"byte_end":351762,"line_start":275,"line_end":275,"column_start":12,"column_end":17},"name":"first","qualname":"<Range<T>>::first","value":"pub fn first(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":351849,"byte_end":351853,"line_start":280,"line_end":280,"column_start":12,"column_end":16},"name":"last","qualname":"<Range<T>>::last","value":"pub fn last(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":351963,"byte_end":351973,"line_start":285,"line_end":285,"column_start":12,"column_end":22},"name":"last_plus1","qualname":"<Range<T>>::last_plus1","value":"pub fn last_plus1(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":352046,"byte_end":352049,"line_start":289,"line_end":289,"column_start":12,"column_end":15},"name":"len","qualname":"<Range<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":352103,"byte_end":352111,"line_start":293,"line_end":293,"column_start":12,"column_end":20},"name":"contains","qualname":"<Range<T>>::contains","value":"pub fn contains(&Self, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":719},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":352214,"byte_end":352224,"line_start":298,"line_end":298,"column_start":12,"column_end":22},"name":"MyIterator","qualname":"::data_structures::MyIterator","value":"MyIterator {  }","parent":null,"children":[{"krate":0,"index":721},{"krate":0,"index":722}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":727},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":352844,"byte_end":352854,"line_start":319,"line_end":319,"column_start":12,"column_end":22},"name":"TypedIxVec","qualname":"::data_structures::TypedIxVec","value":"TypedIxVec {  }","parent":null,"children":[{"krate":0,"index":730},{"krate":0,"index":731}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":353042,"byte_end":353045,"line_start":329,"line_end":329,"column_start":12,"column_end":15},"name":"new","qualname":"<TypedIxVec<TyIx, Ty>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":353169,"byte_end":353177,"line_start":335,"line_end":335,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<TypedIxVec<TyIx, Ty>>::from_vec","value":"pub fn from_vec(Vec<Ty>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":353301,"byte_end":353307,"line_start":341,"line_end":341,"column_start":12,"column_end":18},"name":"append","qualname":"<TypedIxVec<TyIx, Ty>>::append","value":"pub fn append(&mut Self, &mut TypedIxVec<TyIx, Ty>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":353454,"byte_end":353458,"line_start":345,"line_end":345,"column_start":12,"column_end":16},"name":"iter","qualname":"<TypedIxVec<TyIx, Ty>>::iter","value":"pub fn iter(&Self) -> Iter<, Ty>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":353521,"byte_end":353529,"line_start":348,"line_end":348,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<TypedIxVec<TyIx, Ty>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, Ty>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":353603,"byte_end":353606,"line_start":351,"line_end":351,"column_start":12,"column_end":15},"name":"len","qualname":"<TypedIxVec<TyIx, Ty>>::len","value":"pub fn len(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":353711,"byte_end":353715,"line_start":355,"line_end":355,"column_start":12,"column_end":16},"name":"push","qualname":"<TypedIxVec<TyIx, Ty>>::push","value":"pub fn push(&mut Self, Ty)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":353826,"byte_end":353832,"line_start":359,"line_end":359,"column_start":12,"column_end":18},"name":"resize","qualname":"<TypedIxVec<TyIx, Ty>>::resize","value":"pub fn resize(&mut Self, u32, Ty)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":353938,"byte_end":353945,"line_start":362,"line_end":362,"column_start":12,"column_end":19},"name":"reserve","qualname":"<TypedIxVec<TyIx, Ty>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":354033,"byte_end":354038,"line_start":365,"line_end":365,"column_start":12,"column_end":17},"name":"elems","qualname":"<TypedIxVec<TyIx, Ty>>::elems","value":"pub fn elems(&Self) -> &[Ty]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":354096,"byte_end":354105,"line_start":368,"line_end":368,"column_start":12,"column_end":21},"name":"elems_mut","qualname":"<TypedIxVec<TyIx, Ty>>::elems_mut","value":"pub fn elems_mut(&mut Self) -> &mut [Ty]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":354175,"byte_end":354180,"line_start":371,"line_end":371,"column_start":12,"column_end":17},"name":"range","qualname":"<TypedIxVec<TyIx, Ty>>::range","value":"pub fn range(&Self) -> Range<TyIx>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":354276,"byte_end":354282,"line_start":374,"line_end":374,"column_start":12,"column_end":18},"name":"remove","qualname":"<TypedIxVec<TyIx, Ty>>::remove","value":"pub fn remove(&mut Self, TyIx) -> Ty","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":354375,"byte_end":354382,"line_start":377,"line_end":377,"column_start":12,"column_end":19},"name":"sort_by","qualname":"<TypedIxVec<TyIx, Ty>>::sort_by","value":"pub fn sort_by<F: FnMut(&Ty, &Ty) -> Ordering>(&mut Self, F)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":354491,"byte_end":354507,"line_start":380,"line_end":380,"column_start":12,"column_end":28},"name":"sort_unstable_by","qualname":"<TypedIxVec<TyIx, Ty>>::sort_unstable_by","value":"pub fn sort_unstable_by<F: FnMut(&Ty, &Ty) -> Ordering>(&mut Self, F)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":354625,"byte_end":354630,"line_start":383,"line_end":383,"column_start":12,"column_end":17},"name":"clear","qualname":"<TypedIxVec<TyIx, Ty>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1980},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":358777,"byte_end":358783,"line_start":521,"line_end":521,"column_start":23,"column_end":29},"name":"InstIx","qualname":"::data_structures::InstIx::InstIx","value":"InstIx::InstIx(u32)","parent":{"krate":0,"index":1979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1979},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":358777,"byte_end":358783,"line_start":521,"line_end":521,"column_start":23,"column_end":29},"name":"InstIx","qualname":"::data_structures::InstIx","value":"pub enum InstIx { InstIx(u32), }","parent":null,"children":[{"krate":0,"index":1980}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2024},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":358820,"byte_end":358827,"line_start":523,"line_end":523,"column_start":23,"column_end":30},"name":"BlockIx","qualname":"::data_structures::BlockIx::BlockIx","value":"BlockIx::BlockIx(u32)","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2023},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":358820,"byte_end":358827,"line_start":523,"line_end":523,"column_start":23,"column_end":30},"name":"BlockIx","qualname":"::data_structures::BlockIx","value":"pub enum BlockIx { BlockIx(u32), }","parent":null,"children":[{"krate":0,"index":2024}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2181},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":359859,"byte_end":359862,"line_start":549,"line_end":549,"column_start":5,"column_end":8},"name":"I32","qualname":"::data_structures::RegClass::I32","value":"RegClass::I32","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2184},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":359872,"byte_end":359875,"line_start":550,"line_end":550,"column_start":5,"column_end":8},"name":"F32","qualname":"::data_structures::RegClass::F32","value":"RegClass::F32","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2187},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":359885,"byte_end":359888,"line_start":551,"line_end":551,"column_start":5,"column_end":8},"name":"I64","qualname":"::data_structures::RegClass::I64","value":"RegClass::I64","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2190},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":359898,"byte_end":359901,"line_start":552,"line_end":552,"column_start":5,"column_end":8},"name":"F64","qualname":"::data_structures::RegClass::F64","value":"RegClass::F64","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2193},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":359911,"byte_end":359915,"line_start":553,"line_end":553,"column_start":5,"column_end":9},"name":"V128","qualname":"::data_structures::RegClass::V128","value":"RegClass::V128","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2196},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":359925,"byte_end":359932,"line_start":554,"line_end":554,"column_start":5,"column_end":12},"name":"INVALID","qualname":"::data_structures::RegClass::INVALID","value":"RegClass::INVALID","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2180},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":359844,"byte_end":359852,"line_start":548,"line_end":548,"column_start":10,"column_end":18},"name":"RegClass","qualname":"::data_structures::RegClass","value":"pub enum RegClass { I32 = , F32 = , I64 = , F64 = , V128 = , INVALID = , }","parent":null,"children":[{"krate":0,"index":2181},{"krate":0,"index":2184},{"krate":0,"index":2187},{"krate":0,"index":2190},{"krate":0,"index":2193},{"krate":0,"index":2196}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":771},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":360075,"byte_end":360090,"line_start":559,"line_end":559,"column_start":11,"column_end":26},"name":"NUM_REG_CLASSES","qualname":"::data_structures::NUM_REG_CLASSES","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The number of register classes that exist.\n N.B.: must be <= 7 (fit into 3 bits) for 32-bit VReg/RReg packed format!\n","sig":null,"attributes":[{"value":"/ The number of register classes that exist.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":359941,"byte_end":359987,"line_start":557,"line_end":557,"column_start":1,"column_end":47}},{"value":"/ N.B.: must be <= 7 (fit into 3 bits) for 32-bit VReg/RReg packed format!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":359988,"byte_end":360064,"line_start":558,"line_end":558,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":773},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":360202,"byte_end":360211,"line_start":564,"line_end":564,"column_start":12,"column_end":21},"name":"rc_to_u32","qualname":"<RegClass>::rc_to_u32","value":"pub fn rc_to_u32(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Convert a register class to a u32 index.\n","sig":null,"attributes":[{"value":"/ Convert a register class to a u32 index.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":360124,"byte_end":360168,"line_start":562,"line_end":562,"column_start":5,"column_end":49}},{"value":"inline(always)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":360173,"byte_end":360190,"line_start":563,"line_end":563,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":360337,"byte_end":360348,"line_start":569,"line_end":569,"column_start":12,"column_end":23},"name":"rc_to_usize","qualname":"<RegClass>::rc_to_usize","value":"pub fn rc_to_usize(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Convert a register class to a usize index.\n","sig":null,"attributes":[{"value":"/ Convert a register class to a usize index.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":360257,"byte_end":360303,"line_start":567,"line_end":567,"column_start":5,"column_end":51}},{"value":"inline(always)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":360308,"byte_end":360325,"line_start":568,"line_end":568,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":360474,"byte_end":360485,"line_start":574,"line_end":574,"column_start":12,"column_end":23},"name":"rc_from_u32","qualname":"<RegClass>::rc_from_u32","value":"pub fn rc_from_u32(u32) -> RegClass","parent":null,"children":[],"decl_id":null,"docs":" Construct a register class from a u32.\n","sig":null,"attributes":[{"value":"/ Construct a register class from a u32.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":360398,"byte_end":360440,"line_start":572,"line_end":572,"column_start":5,"column_end":47}},{"value":"inline(always)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":360445,"byte_end":360462,"line_start":573,"line_end":573,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":360767,"byte_end":360777,"line_start":585,"line_end":585,"column_start":12,"column_end":22},"name":"short_name","qualname":"<RegClass>::short_name","value":"pub fn short_name(Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":777},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":361087,"byte_end":361096,"line_start":596,"line_end":596,"column_start":12,"column_end":21},"name":"long_name","qualname":"<RegClass>::long_name","value":"pub fn long_name(Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2210},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":362926,"byte_end":362929,"line_start":641,"line_end":641,"column_start":12,"column_end":15},"name":"Reg","qualname":"::data_structures::Reg","value":"Reg {  }","parent":null,"children":[{"krate":0,"index":2211}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":363033,"byte_end":363043,"line_start":649,"line_end":649,"column_start":12,"column_end":22},"name":"is_virtual","qualname":"<Reg>::is_virtual","value":"pub fn is_virtual(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":363004,"byte_end":363021,"line_start":648,"line_end":648,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":781},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":363157,"byte_end":363164,"line_start":653,"line_end":653,"column_start":12,"column_end":19},"name":"is_real","qualname":"<Reg>::is_real","value":"pub fn is_real(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":363128,"byte_end":363145,"line_start":652,"line_end":652,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":363256,"byte_end":363264,"line_start":656,"line_end":656,"column_start":12,"column_end":20},"name":"new_real","qualname":"<Reg>::new_real","value":"pub fn new_real(RegClass, u8, u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":783},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":363448,"byte_end":363459,"line_start":660,"line_end":660,"column_start":12,"column_end":23},"name":"new_virtual","qualname":"<Reg>::new_virtual","value":"pub fn new_virtual(RegClass, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":363700,"byte_end":363707,"line_start":667,"line_end":667,"column_start":12,"column_end":19},"name":"invalid","qualname":"<Reg>::invalid","value":"pub fn invalid() -> Reg","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":785},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":363792,"byte_end":363802,"line_start":671,"line_end":671,"column_start":12,"column_end":22},"name":"is_invalid","qualname":"<Reg>::is_invalid","value":"pub fn is_invalid(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":363763,"byte_end":363780,"line_start":670,"line_end":670,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":363891,"byte_end":363899,"line_start":675,"line_end":675,"column_start":12,"column_end":20},"name":"is_valid","qualname":"<Reg>::is_valid","value":"pub fn is_valid(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":363862,"byte_end":363879,"line_start":674,"line_end":674,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":363960,"byte_end":363981,"line_start":678,"line_end":678,"column_start":12,"column_end":33},"name":"is_virtual_or_invalid","qualname":"<Reg>::is_virtual_or_invalid","value":"pub fn is_virtual_or_invalid(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":364062,"byte_end":364080,"line_start":681,"line_end":681,"column_start":12,"column_end":30},"name":"is_real_or_invalid","qualname":"<Reg>::is_real_or_invalid","value":"pub fn is_real_or_invalid(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":364180,"byte_end":364189,"line_start":685,"line_end":685,"column_start":12,"column_end":21},"name":"get_class","qualname":"<Reg>::get_class","value":"pub fn get_class(Self) -> RegClass","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":364151,"byte_end":364168,"line_start":684,"line_end":684,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":364344,"byte_end":364353,"line_start":690,"line_end":690,"column_start":12,"column_end":21},"name":"get_index","qualname":"<Reg>::get_index","value":"pub fn get_index(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":364315,"byte_end":364332,"line_start":689,"line_end":689,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":364725,"byte_end":364738,"line_start":701,"line_end":701,"column_start":12,"column_end":25},"name":"get_index_u32","qualname":"<Reg>::get_index_u32","value":"pub fn get_index_u32(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":364696,"byte_end":364713,"line_start":700,"line_end":700,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":364948,"byte_end":364963,"line_start":709,"line_end":709,"column_start":12,"column_end":27},"name":"get_hw_encoding","qualname":"<Reg>::get_hw_encoding","value":"pub fn get_hw_encoding(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":365220,"byte_end":365234,"line_start":717,"line_end":717,"column_start":12,"column_end":26},"name":"as_virtual_reg","qualname":"<Reg>::as_virtual_reg","value":"pub fn as_virtual_reg(Self) -> Option<VirtualReg>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":365458,"byte_end":365469,"line_start":725,"line_end":725,"column_start":12,"column_end":23},"name":"as_real_reg","qualname":"<Reg>::as_real_reg","value":"pub fn as_real_reg(Self) -> Option<RealReg>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":365681,"byte_end":365694,"line_start":733,"line_end":733,"column_start":12,"column_end":25},"name":"show_with_rru","qualname":"<Reg>::show_with_rru","value":"pub fn show_with_rru(Self, &RealRegUniverse) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2233},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":366705,"byte_end":366712,"line_start":766,"line_end":766,"column_start":12,"column_end":19},"name":"RealReg","qualname":"::data_structures::RealReg","value":"RealReg {  }","parent":null,"children":[{"krate":0,"index":2234}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":366775,"byte_end":366786,"line_start":770,"line_end":770,"column_start":12,"column_end":23},"name":"to_real_reg","qualname":"<Reg>::to_real_reg","value":"pub fn to_real_reg(Self) -> RealReg","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":366999,"byte_end":367008,"line_start":779,"line_end":779,"column_start":12,"column_end":21},"name":"get_class","qualname":"<RealReg>::get_class","value":"pub fn get_class(Self) -> RegClass","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":367075,"byte_end":367084,"line_start":782,"line_end":782,"column_start":12,"column_end":21},"name":"get_index","qualname":"<RealReg>::get_index","value":"pub fn get_index(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":367148,"byte_end":367163,"line_start":785,"line_end":785,"column_start":12,"column_end":27},"name":"get_hw_encoding","qualname":"<RealReg>::get_hw_encoding","value":"pub fn get_hw_encoding(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":367242,"byte_end":367248,"line_start":788,"line_end":788,"column_start":12,"column_end":18},"name":"to_reg","qualname":"<RealReg>::to_reg","value":"pub fn to_reg(Self) -> Reg","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":367298,"byte_end":367305,"line_start":791,"line_end":791,"column_start":12,"column_end":19},"name":"invalid","qualname":"<RealReg>::invalid","value":"pub fn invalid() -> RealReg","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":367399,"byte_end":367407,"line_start":796,"line_end":796,"column_start":12,"column_end":20},"name":"is_valid","qualname":"<RealReg>::is_valid","value":"pub fn is_valid(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":367469,"byte_end":367479,"line_start":799,"line_end":799,"column_start":12,"column_end":22},"name":"is_invalid","qualname":"<RealReg>::is_invalid","value":"pub fn is_invalid(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":367543,"byte_end":367554,"line_start":802,"line_end":802,"column_start":12,"column_end":23},"name":"maybe_valid","qualname":"<RealReg>::maybe_valid","value":"pub fn maybe_valid(Self) -> Option<RealReg>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2256},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":367977,"byte_end":367987,"line_start":818,"line_end":818,"column_start":12,"column_end":22},"name":"VirtualReg","qualname":"::data_structures::VirtualReg","value":"VirtualReg {  }","parent":null,"children":[{"krate":0,"index":2257}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":368053,"byte_end":368067,"line_start":822,"line_end":822,"column_start":12,"column_end":26},"name":"to_virtual_reg","qualname":"<Reg>::to_virtual_reg","value":"pub fn to_virtual_reg(Self) -> VirtualReg","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":368289,"byte_end":368298,"line_start":831,"line_end":831,"column_start":12,"column_end":21},"name":"get_class","qualname":"<VirtualReg>::get_class","value":"pub fn get_class(Self) -> RegClass","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":815},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":368365,"byte_end":368374,"line_start":834,"line_end":834,"column_start":12,"column_end":21},"name":"get_index","qualname":"<VirtualReg>::get_index","value":"pub fn get_index(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":368438,"byte_end":368444,"line_start":837,"line_end":837,"column_start":12,"column_end":18},"name":"to_reg","qualname":"<VirtualReg>::to_reg","value":"pub fn to_reg(Self) -> Reg","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":817},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":368494,"byte_end":368501,"line_start":840,"line_end":840,"column_start":12,"column_end":19},"name":"invalid","qualname":"<VirtualReg>::invalid","value":"pub fn invalid() -> VirtualReg","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":368601,"byte_end":368609,"line_start":845,"line_end":845,"column_start":12,"column_end":20},"name":"is_valid","qualname":"<VirtualReg>::is_valid","value":"pub fn is_valid(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":819},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":368671,"byte_end":368681,"line_start":848,"line_end":848,"column_start":12,"column_end":22},"name":"is_invalid","qualname":"<VirtualReg>::is_invalid","value":"pub fn is_invalid(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":820},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":368745,"byte_end":368756,"line_start":851,"line_end":851,"column_start":12,"column_end":23},"name":"maybe_valid","qualname":"<VirtualReg>::maybe_valid","value":"pub fn maybe_valid(Self) -> Option<VirtualReg>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":369169,"byte_end":369179,"line_start":868,"line_end":868,"column_start":12,"column_end":22},"name":"apply_uses","qualname":"<Reg>::apply_uses","value":"pub fn apply_uses<RUM: RegUsageMapper>(&mut Self, &RUM)","parent":null,"children":[],"decl_id":null,"docs":" Apply a vreg-rreg mapping to a Reg.  This is used for registers used in\n a read-role.\n","sig":null,"attributes":[{"value":"/ Apply a vreg-rreg mapping to a Reg.  This is used for registers used in","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":369061,"byte_end":369136,"line_start":866,"line_end":866,"column_start":5,"column_end":80}},{"value":"/ a read-role.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":369141,"byte_end":369157,"line_start":867,"line_end":867,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":827},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":369397,"byte_end":369407,"line_start":874,"line_end":874,"column_start":12,"column_end":22},"name":"apply_defs","qualname":"<Reg>::apply_defs","value":"pub fn apply_defs<RUM: RegUsageMapper>(&mut Self, &RUM)","parent":null,"children":[],"decl_id":null,"docs":" Apply a vreg-rreg mapping to a Reg.  This is used for registers used in\n a write-role.\n","sig":null,"attributes":[{"value":"/ Apply a vreg-rreg mapping to a Reg.  This is used for registers used in","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":369288,"byte_end":369363,"line_start":872,"line_end":872,"column_start":5,"column_end":80}},{"value":"/ a write-role.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":369368,"byte_end":369385,"line_start":873,"line_end":873,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":369626,"byte_end":369636,"line_start":880,"line_end":880,"column_start":12,"column_end":22},"name":"apply_mods","qualname":"<Reg>::apply_mods","value":"pub fn apply_mods<RUM: RegUsageMapper>(&mut Self, &RUM)","parent":null,"children":[],"decl_id":null,"docs":" Apply a vreg-rreg mapping to a Reg.  This is used for registers used in\n a modify-role.\n","sig":null,"attributes":[{"value":"/ Apply a vreg-rreg mapping to a Reg.  This is used for registers used in","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":369516,"byte_end":369591,"line_start":878,"line_end":878,"column_start":5,"column_end":80}},{"value":"/ a modify-role.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":369596,"byte_end":369614,"line_start":879,"line_end":879,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":2279},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":371347,"byte_end":371355,"line_start":916,"line_end":916,"column_start":12,"column_end":20},"name":"Writable","qualname":"::data_structures::Writable","value":"Writable {  }","parent":null,"children":[{"krate":0,"index":2281}],"decl_id":null,"docs":" A \"writable register\". This is a zero-cost wrapper that can be used to\n create a distinction, at the Rust type level, between a plain \"register\"\n and a \"writable register\".","sig":null,"attributes":[{"value":"/ A \"writable register\". This is a zero-cost wrapper that can be used to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":370132,"byte_end":370206,"line_start":896,"line_end":896,"column_start":1,"column_end":75}},{"value":"/ create a distinction, at the Rust type level, between a plain \"register\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":370207,"byte_end":370283,"line_start":897,"line_end":897,"column_start":1,"column_end":77}},{"value":"/ and a \"writable register\".","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":370284,"byte_end":370314,"line_start":898,"line_end":898,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":370315,"byte_end":370318,"line_start":899,"line_end":899,"column_start":1,"column_end":4}},{"value":"/ There is nothing that ensures that Writable<..> is only wrapped around Reg","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":370319,"byte_end":370397,"line_start":900,"line_end":900,"column_start":1,"column_end":79}},{"value":"/ and its variants (`RealReg`, `VirtualReg`).  That however is its intended","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":370398,"byte_end":370475,"line_start":901,"line_end":901,"column_start":1,"column_end":78}},{"value":"/ and currently its only use.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":370476,"byte_end":370507,"line_start":902,"line_end":902,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":370508,"byte_end":370511,"line_start":903,"line_end":903,"column_start":1,"column_end":4}},{"value":"/ Writable<..> can be used by the client to ensure that, internally, it only","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":370512,"byte_end":370590,"line_start":904,"line_end":904,"column_start":1,"column_end":79}},{"value":"/ generates instructions that write to registers that should be written. The","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":370591,"byte_end":370669,"line_start":905,"line_end":905,"column_start":1,"column_end":79}},{"value":"/ `InstRegUses` below, which must be implemented for every instruction,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":370670,"byte_end":370743,"line_start":906,"line_end":906,"column_start":1,"column_end":74}},{"value":"/ requires a `Writable<Reg>` (not just `Reg`) in its `defined` and","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":370744,"byte_end":370812,"line_start":907,"line_end":907,"column_start":1,"column_end":69}},{"value":"/ `modified` sets. While we cannot hide the constructor for `Writable<..>`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":370813,"byte_end":370889,"line_start":908,"line_end":908,"column_start":1,"column_end":77}},{"value":"/ from certain parts of the client while exposing it to others, the client","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":370890,"byte_end":370966,"line_start":909,"line_end":909,"column_start":1,"column_end":77}},{"value":"/ *can* adopt conventions to e.g. only ever call the Writable<..>","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":370967,"byte_end":371034,"line_start":910,"line_end":910,"column_start":1,"column_end":68}},{"value":"/ constructor from its central vreg-management logic, and decide that any","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":371035,"byte_end":371110,"line_start":911,"line_end":911,"column_start":1,"column_end":76}},{"value":"/ invocation of this constructor in a machine backend (for example) is an","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":371111,"byte_end":371186,"line_start":912,"line_end":912,"column_start":1,"column_end":76}},{"value":"/ error.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":371187,"byte_end":371197,"line_start":913,"line_end":913,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":371736,"byte_end":371744,"line_start":924,"line_end":924,"column_start":12,"column_end":20},"name":"from_reg","qualname":"<Writable<R>>::from_reg","value":"pub fn from_reg(R) -> Writable<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a Writable<R> from an R. The client should carefully audit where\n it calls this constructor to ensure correctness (see `Writable<..>`\n struct documentation).\n","sig":null,"attributes":[{"value":"/ Create a Writable<R> from an R. The client should carefully audit where","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":371542,"byte_end":371617,"line_start":921,"line_end":921,"column_start":5,"column_end":80}},{"value":"/ it calls this constructor to ensure correctness (see `Writable<..>`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":371622,"byte_end":371693,"line_start":922,"line_end":922,"column_start":5,"column_end":76}},{"value":"/ struct documentation).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":371698,"byte_end":371724,"line_start":923,"line_end":923,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":371840,"byte_end":371846,"line_start":929,"line_end":929,"column_start":12,"column_end":18},"name":"to_reg","qualname":"<Writable<R>>::to_reg","value":"pub fn to_reg(&Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Get the inner Reg.\n","sig":null,"attributes":[{"value":"/ Get the inner Reg.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":371806,"byte_end":371828,"line_start":928,"line_end":928,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":371896,"byte_end":371899,"line_start":933,"line_end":933,"column_start":12,"column_end":15},"name":"map","qualname":"<Writable<R>>::map","value":"pub fn map<F, U>(&Self, F) -> Writable<U> where F: Fn(R) -> U, U: Copy +\nClone + PartialEq + Eq + Hash + PartialOrd + Ord + fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2316},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":372170,"byte_end":372179,"line_start":944,"line_end":944,"column_start":5,"column_end":14},"name":"SpillSlot","qualname":"::data_structures::SpillSlot::SpillSlot","value":"SpillSlot::SpillSlot(u32)","parent":{"krate":0,"index":2315},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2315},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":372154,"byte_end":372163,"line_start":943,"line_end":943,"column_start":10,"column_end":19},"name":"SpillSlot","qualname":"::data_structures::SpillSlot","value":"pub enum SpillSlot { SpillSlot(u32), }","parent":null,"children":[{"krate":0,"index":2316}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":372238,"byte_end":372241,"line_start":948,"line_end":948,"column_start":12,"column_end":15},"name":"new","qualname":"<SpillSlot>::new","value":"pub fn new(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":372209,"byte_end":372226,"line_start":947,"line_end":947,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":372331,"byte_end":372334,"line_start":952,"line_end":952,"column_start":12,"column_end":15},"name":"get","qualname":"<SpillSlot>::get","value":"pub fn get(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":372302,"byte_end":372319,"line_start":951,"line_end":951,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":372462,"byte_end":372471,"line_start":958,"line_end":958,"column_start":12,"column_end":21},"name":"get_usize","qualname":"<SpillSlot>::get_usize","value":"pub fn get_usize(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":372433,"byte_end":372450,"line_start":957,"line_end":957,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":372534,"byte_end":372542,"line_start":961,"line_end":961,"column_start":12,"column_end":20},"name":"round_up","qualname":"<SpillSlot>::round_up","value":"pub fn round_up(Self, u32) -> SpillSlot","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":372706,"byte_end":372709,"line_start":965,"line_end":965,"column_start":12,"column_end":15},"name":"inc","qualname":"<SpillSlot>::inc","value":"pub fn inc(Self, u32) -> SpillSlot","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":850},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":373317,"byte_end":373334,"line_start":982,"line_end":982,"column_start":12,"column_end":29},"name":"RegUsageCollector","qualname":"::data_structures::RegUsageCollector","value":"RegUsageCollector { reg_vecs }","parent":null,"children":[{"krate":0,"index":852}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":852},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":373349,"byte_end":373357,"line_start":983,"line_end":983,"column_start":9,"column_end":17},"name":"reg_vecs","qualname":"::data_structures::RegUsageCollector::reg_vecs","value":"&'a mut data_structures::RegVecs","parent":{"krate":0,"index":850},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":373423,"byte_end":373426,"line_start":987,"line_end":987,"column_start":12,"column_end":15},"name":"new","qualname":"<RegUsageCollector>::new","value":"pub fn new(&'a mut RegVecs) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":373507,"byte_end":373514,"line_start":990,"line_end":990,"column_start":12,"column_end":19},"name":"add_use","qualname":"<RegUsageCollector>::add_use","value":"pub fn add_use(&mut Self, Reg)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":857},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":373589,"byte_end":373597,"line_start":993,"line_end":993,"column_start":12,"column_end":20},"name":"add_uses","qualname":"<RegUsageCollector>::add_uses","value":"pub fn add_uses(&mut Self, &[Reg])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":373690,"byte_end":373697,"line_start":996,"line_end":996,"column_start":12,"column_end":19},"name":"add_def","qualname":"<RegUsageCollector>::add_def","value":"pub fn add_def(&mut Self, Writable<Reg>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":373791,"byte_end":373799,"line_start":999,"line_end":999,"column_start":12,"column_end":20},"name":"add_defs","qualname":"<RegUsageCollector>::add_defs","value":"pub fn add_defs(&mut Self, &[Writable<Reg>])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":373985,"byte_end":373992,"line_start":1005,"line_end":1005,"column_start":12,"column_end":19},"name":"add_mod","qualname":"<RegUsageCollector>::add_mod","value":"pub fn add_mod(&mut Self, Writable<Reg>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":374086,"byte_end":374094,"line_start":1008,"line_end":1008,"column_start":12,"column_end":20},"name":"add_mods","qualname":"<RegUsageCollector>::add_mods","value":"pub fn add_mods(&mut Self, &[Writable<Reg>])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":374425,"byte_end":374465,"line_start":1017,"line_end":1017,"column_start":12,"column_end":52},"name":"get_use_def_mod_vecs_test_framework_only","qualname":"<RegUsageCollector>::get_use_def_mod_vecs_test_framework_only","value":"pub fn get_use_def_mod_vecs_test_framework_only(&Self)\n-> (Vec<Reg>, Vec<Reg>, Vec<Reg>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":374667,"byte_end":374705,"line_start":1025,"line_end":1025,"column_start":12,"column_end":50},"name":"get_empty_reg_vecs_test_framework_only","qualname":"<RegUsageCollector>::get_empty_reg_vecs_test_framework_only","value":"pub fn get_empty_reg_vecs_test_framework_only(bool) -> RegVecs","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2332},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":375195,"byte_end":375202,"line_start":1038,"line_end":1038,"column_start":12,"column_end":19},"name":"RegVecs","qualname":"::data_structures::RegVecs","value":"RegVecs { uses, defs, mods }","parent":null,"children":[{"krate":0,"index":2333},{"krate":0,"index":2334},{"krate":0,"index":2335},{"krate":0,"index":2336}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2333},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":375213,"byte_end":375217,"line_start":1039,"line_end":1039,"column_start":9,"column_end":13},"name":"uses","qualname":"::data_structures::RegVecs::uses","value":"std::vec::Vec<data_structures::Reg>","parent":{"krate":0,"index":2332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2334},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":375237,"byte_end":375241,"line_start":1040,"line_end":1040,"column_start":9,"column_end":13},"name":"defs","qualname":"::data_structures::RegVecs::defs","value":"std::vec::Vec<data_structures::Reg>","parent":{"krate":0,"index":2332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2335},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":375261,"byte_end":375265,"line_start":1041,"line_end":1041,"column_start":9,"column_end":13},"name":"mods","qualname":"::data_structures::RegVecs::mods","value":"std::vec::Vec<data_structures::Reg>","parent":{"krate":0,"index":2332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":375327,"byte_end":375330,"line_start":1046,"line_end":1046,"column_start":12,"column_end":15},"name":"new","qualname":"<RegVecs>::new","value":"pub fn new(bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":375501,"byte_end":375513,"line_start":1054,"line_end":1054,"column_start":12,"column_end":24},"name":"is_sanitized","qualname":"<RegVecs>::is_sanitized","value":"pub fn is_sanitized(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":375571,"byte_end":375584,"line_start":1057,"line_end":1057,"column_start":12,"column_end":25},"name":"set_sanitized","qualname":"<RegVecs>::set_sanitized","value":"pub fn set_sanitized(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":375668,"byte_end":375673,"line_start":1060,"line_end":1060,"column_start":12,"column_end":17},"name":"clear","qualname":"<RegVecs>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2357},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":379857,"byte_end":379872,"line_start":1189,"line_end":1189,"column_start":12,"column_end":27},"name":"RealRegUniverse","qualname":"::data_structures::RealRegUniverse","value":"RealRegUniverse { regs, allocable, allocable_by_class }","parent":null,"children":[{"krate":0,"index":2358},{"krate":0,"index":2359},{"krate":0,"index":2360}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2358},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":380126,"byte_end":380130,"line_start":1194,"line_end":1194,"column_start":9,"column_end":13},"name":"regs","qualname":"::data_structures::RealRegUniverse::regs","value":"std::vec::Vec<(data_structures::RealReg, std::string::String)>","parent":{"krate":0,"index":2357},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2359},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":380294,"byte_end":380303,"line_start":1198,"line_end":1198,"column_start":9,"column_end":18},"name":"allocable","qualname":"::data_structures::RealRegUniverse::allocable","value":"usize","parent":{"krate":0,"index":2357},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2360},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":380781,"byte_end":380799,"line_start":1206,"line_end":1206,"column_start":9,"column_end":27},"name":"allocable_by_class","qualname":"::data_structures::RealRegUniverse::allocable_by_class","value":"[std::option::Option<data_structures::RegClassInfo>; _]","parent":{"krate":0,"index":2357},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2366},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":381028,"byte_end":381040,"line_start":1212,"line_end":1212,"column_start":12,"column_end":24},"name":"RegClassInfo","qualname":"::data_structures::RegClassInfo","value":"RegClassInfo { first, last, suggested_scratch }","parent":null,"children":[{"krate":0,"index":2367},{"krate":0,"index":2368},{"krate":0,"index":2369}],"decl_id":null,"docs":" Information about a single register class in the `RealRegUniverse`.\n","sig":null,"attributes":[{"value":"/ Information about a single register class in the `RealRegUniverse`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":380845,"byte_end":380916,"line_start":1209,"line_end":1209,"column_start":1,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":2367},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":381953,"byte_end":381958,"line_start":1232,"line_end":1232,"column_start":9,"column_end":14},"name":"first","qualname":"::data_structures::RegClassInfo::first","value":"usize","parent":{"krate":0,"index":2366},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2368},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":381975,"byte_end":381979,"line_start":1233,"line_end":1233,"column_start":9,"column_end":13},"name":"last","qualname":"::data_structures::RegClassInfo::last","value":"usize","parent":{"krate":0,"index":2366},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2369},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":382357,"byte_end":382374,"line_start":1240,"line_end":1240,"column_start":9,"column_end":26},"name":"suggested_scratch","qualname":"::data_structures::RegClassInfo::suggested_scratch","value":"std::option::Option<usize>","parent":{"krate":0,"index":2366},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":382461,"byte_end":382465,"line_start":1245,"line_end":1245,"column_start":12,"column_end":16},"name":"show","qualname":"<RealRegUniverse>::show","value":"pub fn show(&Self) -> Vec<String>","parent":null,"children":[],"decl_id":null,"docs":" Show it in a pretty way.\n","sig":null,"attributes":[{"value":"/ Show it in a pretty way.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":382421,"byte_end":382449,"line_start":1244,"line_end":1244,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":384181,"byte_end":384194,"line_start":1288,"line_end":1288,"column_start":12,"column_end":25},"name":"check_is_sane","qualname":"<RealRegUniverse>::check_is_sane","value":"pub fn check_is_sane(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Check that the given universe satisfies various invariants, and panic\n if not.  All the invariants are important.\n","sig":null,"attributes":[{"value":"/ Check that the given universe satisfies various invariants, and panic","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":384045,"byte_end":384118,"line_start":1286,"line_end":1286,"column_start":5,"column_end":78}},{"value":"/ if not.  All the invariants are important.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":384123,"byte_end":384169,"line_start":1287,"line_end":1287,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":2746},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/mod.rs","byte_start":449133,"byte_end":449150,"line_start":80,"line_end":80,"column_start":12,"column_end":29},"name":"LinearScanOptions","qualname":"::linear_scan::LinearScanOptions","value":"LinearScanOptions {  }","parent":null,"children":[{"krate":0,"index":2747},{"krate":0,"index":2748},{"krate":0,"index":2749},{"krate":0,"index":2750},{"krate":0,"index":2751}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2854},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/snapshot.rs","byte_start":590524,"byte_end":590530,"line_start":31,"line_end":31,"column_start":12,"column_end":18},"name":"IRInst","qualname":"::snapshot::IRInst","value":"IRInst {  }","parent":null,"children":[{"krate":0,"index":2855},{"krate":0,"index":2856},{"krate":0,"index":2857},{"krate":0,"index":2858}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2863},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/snapshot.rs","byte_start":590748,"byte_end":590758,"line_start":40,"line_end":40,"column_start":12,"column_end":22},"name":"IRFunction","qualname":"::snapshot::IRFunction","value":"IRFunction {  }","parent":null,"children":[{"krate":0,"index":2864},{"krate":0,"index":2865},{"krate":0,"index":2866},{"krate":0,"index":2867},{"krate":0,"index":2868},{"krate":0,"index":2869},{"krate":0,"index":2870},{"krate":0,"index":2871}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2874},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/snapshot.rs","byte_start":591127,"byte_end":591137,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"IRSnapshot","qualname":"::snapshot::IRSnapshot","value":"IRSnapshot {  }","parent":null,"children":[{"krate":0,"index":2875},{"krate":0,"index":2876}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1498},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/snapshot.rs","byte_start":592133,"byte_end":592146,"line_start":89,"line_end":89,"column_start":12,"column_end":25},"name":"from_function","qualname":"<IRSnapshot>::from_function","value":"pub fn from_function<F: Function>(&F, &RealRegUniverse) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1502},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/snapshot.rs","byte_start":594557,"byte_end":594565,"line_start":160,"line_end":160,"column_start":12,"column_end":20},"name":"allocate","qualname":"<IRSnapshot>::allocate","value":"pub fn allocate(&mut Self, Options)\n-> Result<RegAllocResult<IRFunction>, RegAllocError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1539},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/sparse_set.rs","byte_start":600001,"byte_end":600005,"line_start":24,"line_end":24,"column_start":10,"column_end":14},"name":"Item","qualname":"::sparse_set::Array::Item","value":"type Item;","parent":{"krate":0,"index":1538},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1673},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":6886,"byte_end":6900,"line_start":159,"line_end":159,"column_start":11,"column_end":25},"name":"RegUsageMapper","qualname":"::RegUsageMapper","value":"RegUsageMapper: fmt::Debug","parent":null,"children":[{"krate":0,"index":1674},{"krate":0,"index":1675},{"krate":0,"index":1676}],"decl_id":null,"docs":" A trait for providing mapping results for a given instruction.","sig":null,"attributes":[{"value":"/ A trait for providing mapping results for a given instruction.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":6540,"byte_end":6606,"line_start":154,"line_end":154,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":6607,"byte_end":6610,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ This provides virtual to real register mappings for every mention in an instruction: use, mod","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":6611,"byte_end":6708,"line_start":156,"line_end":156,"column_start":1,"column_end":98}},{"value":"/ or def. The main purpose of this trait is to be used when re-writing the instruction stream","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":6709,"byte_end":6804,"line_start":157,"line_end":157,"column_start":1,"column_end":96}},{"value":"/ after register allocation happened; see also `Function::map_regs`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":6805,"byte_end":6875,"line_start":158,"line_end":158,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1674},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":7038,"byte_end":7045,"line_start":162,"line_end":162,"column_start":8,"column_end":15},"name":"get_use","qualname":"::RegUsageMapper::get_use","value":"pub fn get_use(&Self, VirtualReg) -> Option<RealReg>","parent":{"krate":0,"index":1673},"children":[],"decl_id":null,"docs":" Return the `RealReg` if mapped, or `None`, for `vreg` occuring as a use\n on the current instruction.\n","sig":null,"attributes":[{"value":"/ Return the `RealReg` if mapped, or `None`, for `vreg` occuring as a use","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":6919,"byte_end":6994,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ on the current instruction.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":6999,"byte_end":7030,"line_start":161,"line_end":161,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1675},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":7215,"byte_end":7222,"line_start":166,"line_end":166,"column_start":8,"column_end":15},"name":"get_def","qualname":"::RegUsageMapper::get_def","value":"pub fn get_def(&Self, VirtualReg) -> Option<RealReg>","parent":{"krate":0,"index":1673},"children":[],"decl_id":null,"docs":" Return the `RealReg` if mapped, or `None`, for `vreg` occuring as a def\n on the current instruction.\n","sig":null,"attributes":[{"value":"/ Return the `RealReg` if mapped, or `None`, for `vreg` occuring as a def","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":7096,"byte_end":7171,"line_start":164,"line_end":164,"column_start":5,"column_end":80}},{"value":"/ on the current instruction.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":7176,"byte_end":7207,"line_start":165,"line_end":165,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1676},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":7394,"byte_end":7401,"line_start":170,"line_end":170,"column_start":8,"column_end":15},"name":"get_mod","qualname":"::RegUsageMapper::get_mod","value":"pub fn get_mod(&Self, VirtualReg) -> Option<RealReg>","parent":{"krate":0,"index":1673},"children":[],"decl_id":null,"docs":" Return the `RealReg` if mapped, or `None`, for a `vreg` occuring as a\n mod on the current instruction.\n","sig":null,"attributes":[{"value":"/ Return the `RealReg` if mapped, or `None`, for a `vreg` occuring as a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":7273,"byte_end":7346,"line_start":168,"line_end":168,"column_start":5,"column_end":78}},{"value":"/ mod on the current instruction.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":7351,"byte_end":7386,"line_start":169,"line_end":169,"column_start":5,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":1682},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":7773,"byte_end":7781,"line_start":181,"line_end":181,"column_start":11,"column_end":19},"name":"Function","qualname":"::Function","value":"Function","parent":null,"children":[{"krate":0,"index":1683},{"krate":0,"index":1684},{"krate":0,"index":1685},{"krate":0,"index":1686},{"krate":0,"index":1687},{"krate":0,"index":1688},{"krate":0,"index":1689},{"krate":0,"index":1690},{"krate":0,"index":1691},{"krate":0,"index":1692},{"krate":0,"index":1693},{"krate":0,"index":1694},{"krate":0,"index":1695},{"krate":0,"index":1697},{"krate":0,"index":1698},{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1701},{"krate":0,"index":1702},{"krate":0,"index":1703},{"krate":0,"index":1704},{"krate":0,"index":1705},{"krate":0,"index":1706}],"decl_id":null,"docs":" A trait defined by the regalloc client to provide access to its\n machine-instruction / CFG representation.\n","sig":null,"attributes":[{"value":"/ A trait defined by the regalloc client to provide access to its","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":7649,"byte_end":7716,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/ machine-instruction / CFG representation.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":7717,"byte_end":7762,"line_start":180,"line_end":180,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":1683},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":7893,"byte_end":7897,"line_start":184,"line_end":184,"column_start":10,"column_end":14},"name":"Inst","qualname":"::Function::Inst","value":"type Inst: Clone + fmt::Debug;","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Regalloc is parameterized on F: Function and so can use the projected\n type F::Inst.\n","sig":null,"attributes":[{"value":"/ Regalloc is parameterized on F: Function and so can use the projected","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":7788,"byte_end":7861,"line_start":182,"line_end":182,"column_start":5,"column_end":78}},{"value":"/ type F::Inst.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":7866,"byte_end":7883,"line_start":183,"line_end":183,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1684},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":8054,"byte_end":8059,"line_start":191,"line_end":191,"column_start":8,"column_end":13},"name":"insns","qualname":"::Function::insns","value":"pub fn insns(&Self) -> &[Self::Inst]","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Allow access to the underlying vector of instructions.\n","sig":null,"attributes":[{"value":"/ Allow access to the underlying vector of instructions.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":7988,"byte_end":8046,"line_start":190,"line_end":190,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1685},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":8151,"byte_end":8163,"line_start":194,"line_end":194,"column_start":8,"column_end":20},"name":"insn_indices","qualname":"::Function::insn_indices","value":"pub fn insn_indices(&Self) -> Range<InstIx>","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Get all instruction indices as an iterable range.\n","sig":null,"attributes":[{"value":"/ Get all instruction indices as an iterable range.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":8090,"byte_end":8143,"line_start":193,"line_end":193,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1686},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":8330,"byte_end":8339,"line_start":199,"line_end":199,"column_start":8,"column_end":17},"name":"insns_mut","qualname":"::Function::insns_mut","value":"pub fn insns_mut(&mut Self) -> &mut [Self::Inst]","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Allow mutable access to the underlying vector of instructions.\n","sig":null,"attributes":[{"value":"/ Allow mutable access to the underlying vector of instructions.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":8256,"byte_end":8322,"line_start":198,"line_end":198,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1687},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":8439,"byte_end":8447,"line_start":202,"line_end":202,"column_start":8,"column_end":16},"name":"get_insn","qualname":"::Function::get_insn","value":"pub fn get_insn(&Self, InstIx) -> &Self::Inst","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Get an instruction with a type-safe InstIx index.\n","sig":null,"attributes":[{"value":"/ Get an instruction with a type-safe InstIx index.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":8378,"byte_end":8431,"line_start":201,"line_end":201,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1688},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":8587,"byte_end":8599,"line_start":206,"line_end":206,"column_start":8,"column_end":20},"name":"get_insn_mut","qualname":"::Function::get_insn_mut","value":"pub fn get_insn_mut(&mut Self, InstIx) -> &mut Self::Inst","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Get a mutable borrow of an instruction with the given type-safe InstIx\n index.\n","sig":null,"attributes":[{"value":"/ Get a mutable borrow of an instruction with the given type-safe InstIx","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":8490,"byte_end":8564,"line_start":204,"line_end":204,"column_start":5,"column_end":79}},{"value":"/ index.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":8569,"byte_end":8579,"line_start":205,"line_end":205,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1689},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":8719,"byte_end":8725,"line_start":209,"line_end":209,"column_start":8,"column_end":14},"name":"blocks","qualname":"::Function::blocks","value":"pub fn blocks(&Self) -> Range<BlockIx>","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Allow iteration over basic blocks (in instruction order).\n","sig":null,"attributes":[{"value":"/ Allow iteration over basic blocks (in instruction order).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":8650,"byte_end":8711,"line_start":208,"line_end":208,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1690},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":8802,"byte_end":8813,"line_start":212,"line_end":212,"column_start":8,"column_end":19},"name":"entry_block","qualname":"::Function::entry_block","value":"pub fn entry_block(&Self) -> BlockIx","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Get the index of the entry block.\n","sig":null,"attributes":[{"value":"/ Get the index of the entry block.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":8757,"byte_end":8794,"line_start":211,"line_end":211,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1691},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":8915,"byte_end":8926,"line_start":215,"line_end":215,"column_start":8,"column_end":19},"name":"block_insns","qualname":"::Function::block_insns","value":"pub fn block_insns(&Self, BlockIx) -> Range<InstIx>","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Provide the range of instruction indices contained in each block.\n","sig":null,"attributes":[{"value":"/ Provide the range of instruction indices contained in each block.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":8838,"byte_end":8907,"line_start":214,"line_end":214,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1692},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":9022,"byte_end":9033,"line_start":218,"line_end":218,"column_start":8,"column_end":19},"name":"block_succs","qualname":"::Function::block_succs","value":"pub fn block_succs(&Self, BlockIx) -> Cow<, [BlockIx]>","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Get CFG successors for a given block.\n","sig":null,"attributes":[{"value":"/ Get CFG successors for a given block.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":8973,"byte_end":9014,"line_start":217,"line_end":217,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1693},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":9150,"byte_end":9156,"line_start":221,"line_end":221,"column_start":8,"column_end":14},"name":"is_ret","qualname":"::Function::is_ret","value":"pub fn is_ret(&Self, InstIx) -> bool","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Determine whether an instruction is a return instruction.\n","sig":null,"attributes":[{"value":"/ Determine whether an instruction is a return instruction.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":9081,"byte_end":9142,"line_start":220,"line_end":220,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1694},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":9395,"byte_end":9403,"line_start":229,"line_end":229,"column_start":8,"column_end":16},"name":"get_regs","qualname":"::Function::get_regs","value":"pub fn get_regs(&Self::Inst, &mut RegUsageCollector)","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Add to `collector` the used, defined, and modified registers for an\n instruction.\n","sig":null,"attributes":[{"value":"/ Add to `collector` the used, defined, and modified registers for an","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":9295,"byte_end":9366,"line_start":227,"line_end":227,"column_start":5,"column_end":76}},{"value":"/ instruction.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":9371,"byte_end":9387,"line_start":228,"line_end":228,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1695},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":10131,"byte_end":10139,"line_start":241,"line_end":241,"column_start":8,"column_end":16},"name":"map_regs","qualname":"::Function::map_regs","value":"pub fn map_regs<RUM: RegUsageMapper>(&mut Self::Inst, &RUM)","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Map each register slot through a virtual-to-real mapping indexed\n by virtual register. The two separate maps in `maps.pre` and\n `maps.post` provide the mapping to use for uses (which semantically\n occur just prior to the instruction's effect) and defs (which\n semantically occur just after the instruction's effect). Regs that were\n \"modified\" can use either map; the vreg should be the same in both.","sig":null,"attributes":[{"value":"/ Map each register slot through a virtual-to-real mapping indexed","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":9464,"byte_end":9532,"line_start":231,"line_end":231,"column_start":5,"column_end":73}},{"value":"/ by virtual register. The two separate maps in `maps.pre` and","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":9537,"byte_end":9601,"line_start":232,"line_end":232,"column_start":5,"column_end":69}},{"value":"/ `maps.post` provide the mapping to use for uses (which semantically","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":9606,"byte_end":9677,"line_start":233,"line_end":233,"column_start":5,"column_end":76}},{"value":"/ occur just prior to the instruction's effect) and defs (which","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":9682,"byte_end":9747,"line_start":234,"line_end":234,"column_start":5,"column_end":70}},{"value":"/ semantically occur just after the instruction's effect). Regs that were","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":9752,"byte_end":9827,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ \"modified\" can use either map; the vreg should be the same in both.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":9832,"byte_end":9903,"line_start":236,"line_end":236,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":9908,"byte_end":9911,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that this does not take a `self`, because we want to allow the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":9916,"byte_end":9987,"line_start":238,"line_end":238,"column_start":5,"column_end":76}},{"value":"/ regalloc to have a mutable borrow of an insn (which borrows the whole","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":9992,"byte_end":10065,"line_start":239,"line_end":239,"column_start":5,"column_end":78}},{"value":"/ Function in turn) outstanding while calling this.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":10070,"byte_end":10123,"line_start":240,"line_end":240,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1697},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":10285,"byte_end":10292,"line_start":244,"line_end":244,"column_start":8,"column_end":15},"name":"is_move","qualname":"::Function::is_move","value":"pub fn is_move(&Self, &Self::Inst) -> Option<(Writable<Reg>, Reg)>","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Allow the regalloc to query whether this is a move. Returns (dst, src).\n","sig":null,"attributes":[{"value":"/ Allow the regalloc to query whether this is a move. Returns (dst, src).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":10202,"byte_end":10277,"line_start":243,"line_end":243,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1698},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":10617,"byte_end":10630,"line_start":249,"line_end":249,"column_start":8,"column_end":21},"name":"get_num_vregs","qualname":"::Function::get_num_vregs","value":"pub fn get_num_vregs(&Self) -> usize","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Get the precise number of `VirtualReg` in use in this function, to allow preallocating data\n structures. This number *must* be a correct lower-bound, otherwise invalid index failures\n may happen; it is of course better if it is exact.\n","sig":null,"attributes":[{"value":"/ Get the precise number of `VirtualReg` in use in this function, to allow preallocating data","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":10357,"byte_end":10452,"line_start":246,"line_end":246,"column_start":5,"column_end":100}},{"value":"/ structures. This number *must* be a correct lower-bound, otherwise invalid index failures","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":10457,"byte_end":10550,"line_start":247,"line_end":247,"column_start":5,"column_end":98}},{"value":"/ may happen; it is of course better if it is exact.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":10555,"byte_end":10609,"line_start":248,"line_end":248,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1699},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":11407,"byte_end":11425,"line_start":266,"line_end":266,"column_start":8,"column_end":26},"name":"get_spillslot_size","qualname":"::Function::get_spillslot_size","value":"pub fn get_spillslot_size(&Self, RegClass, VirtualReg) -> u32","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" How many logical spill slots does the given regclass require?  E.g., on a\n 64-bit machine, spill slots may nominally be 64-bit words, but a 128-bit\n vector value will require two slots.  The regalloc will always align on\n this size.","sig":null,"attributes":[{"value":"/ How many logical spill slots does the given regclass require?  E.g., on a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":10720,"byte_end":10797,"line_start":255,"line_end":255,"column_start":5,"column_end":82}},{"value":"/ 64-bit machine, spill slots may nominally be 64-bit words, but a 128-bit","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":10802,"byte_end":10878,"line_start":256,"line_end":256,"column_start":5,"column_end":81}},{"value":"/ vector value will require two slots.  The regalloc will always align on","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":10883,"byte_end":10958,"line_start":257,"line_end":257,"column_start":5,"column_end":80}},{"value":"/ this size.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":10963,"byte_end":10977,"line_start":258,"line_end":258,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":10982,"byte_end":10985,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This passes the associated virtual register to the client as well,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":10990,"byte_end":11060,"line_start":260,"line_end":260,"column_start":5,"column_end":75}},{"value":"/ because the way in which we spill a real register may depend on the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":11065,"byte_end":11136,"line_start":261,"line_end":261,"column_start":5,"column_end":76}},{"value":"/ value that we are using it for. E.g., if a machine has V128 registers","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":11141,"byte_end":11214,"line_start":262,"line_end":262,"column_start":5,"column_end":78}},{"value":"/ but we also use them for F32 and F64 values, we may use a different","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":11219,"byte_end":11290,"line_start":263,"line_end":263,"column_start":5,"column_end":76}},{"value":"/ store-slot size and smaller-operand store/load instructions for an F64","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":11295,"byte_end":11369,"line_start":264,"line_end":264,"column_start":5,"column_end":79}},{"value":"/ than for a true V128.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":11374,"byte_end":11399,"line_start":265,"line_end":265,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1700},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":11974,"byte_end":11983,"line_start":274,"line_end":274,"column_start":8,"column_end":17},"name":"gen_spill","qualname":"::Function::gen_spill","value":"pub fn gen_spill(&Self, SpillSlot, RealReg, Option<VirtualReg>) -> Self::Inst","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Generate a spill instruction for insertion into the instruction\n sequence. The associated virtual register (whose value is being spilled)\n is passed, if it exists, so that the client may make decisions about the\n instruction to generate based on the type of value in question.  Because\n the register allocator will insert spill instructions at arbitrary points,\n the returned instruction here must not modify the machine's condition codes.\n","sig":null,"attributes":[{"value":"/ Generate a spill instruction for insertion into the instruction","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":11488,"byte_end":11555,"line_start":268,"line_end":268,"column_start":5,"column_end":72}},{"value":"/ sequence. The associated virtual register (whose value is being spilled)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":11560,"byte_end":11636,"line_start":269,"line_end":269,"column_start":5,"column_end":81}},{"value":"/ is passed, if it exists, so that the client may make decisions about the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":11641,"byte_end":11717,"line_start":270,"line_end":270,"column_start":5,"column_end":81}},{"value":"/ instruction to generate based on the type of value in question.  Because","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":11722,"byte_end":11798,"line_start":271,"line_end":271,"column_start":5,"column_end":81}},{"value":"/ the register allocator will insert spill instructions at arbitrary points,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":11803,"byte_end":11881,"line_start":272,"line_end":272,"column_start":5,"column_end":83}},{"value":"/ the returned instruction here must not modify the machine's condition codes.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":11886,"byte_end":11966,"line_start":273,"line_end":273,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1701},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":12397,"byte_end":12407,"line_start":285,"line_end":285,"column_start":8,"column_end":18},"name":"gen_reload","qualname":"::Function::gen_reload","value":"pub fn gen_reload(&Self, Writable<RealReg>, SpillSlot, Option<VirtualReg>)\n-> Self::Inst","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Generate a reload instruction for insertion into the instruction\n sequence. The associated virtual register (whose value is being loaded)\n is passed as well, if it exists.  The returned instruction must not modify\n the machine's condition codes.\n","sig":null,"attributes":[{"value":"/ Generate a reload instruction for insertion into the instruction","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":12119,"byte_end":12187,"line_start":281,"line_end":281,"column_start":5,"column_end":73}},{"value":"/ sequence. The associated virtual register (whose value is being loaded)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":12192,"byte_end":12267,"line_start":282,"line_end":282,"column_start":5,"column_end":80}},{"value":"/ is passed as well, if it exists.  The returned instruction must not modify","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":12272,"byte_end":12350,"line_start":283,"line_end":283,"column_start":5,"column_end":83}},{"value":"/ the machine's condition codes.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":12355,"byte_end":12389,"line_start":284,"line_end":284,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1702},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":12786,"byte_end":12794,"line_start":295,"line_end":295,"column_start":8,"column_end":16},"name":"gen_move","qualname":"::Function::gen_move","value":"pub fn gen_move(&Self, Writable<RealReg>, RealReg, VirtualReg) -> Self::Inst","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Generate a register-to-register move for insertion into the instruction\n sequence. The associated virtual register is passed as well.  The\n returned instruction must not modify the machine's condition codes.\n","sig":null,"attributes":[{"value":"/ Generate a register-to-register move for insertion into the instruction","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":12553,"byte_end":12628,"line_start":292,"line_end":292,"column_start":5,"column_end":80}},{"value":"/ sequence. The associated virtual register is passed as well.  The","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":12633,"byte_end":12702,"line_start":293,"line_end":293,"column_start":5,"column_end":74}},{"value":"/ returned instruction must not modify the machine's condition codes.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":12707,"byte_end":12778,"line_start":294,"line_end":294,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1703},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":13002,"byte_end":13018,"line_start":303,"line_end":303,"column_start":8,"column_end":24},"name":"gen_zero_len_nop","qualname":"::Function::gen_zero_len_nop","value":"pub fn gen_zero_len_nop(&Self) -> Self::Inst","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Generate an instruction which is a no-op and has zero length.\n","sig":null,"attributes":[{"value":"/ Generate an instruction which is a no-op and has zero length.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":12929,"byte_end":12994,"line_start":302,"line_end":302,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1704},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":13660,"byte_end":13679,"line_start":316,"line_end":316,"column_start":8,"column_end":27},"name":"maybe_direct_reload","qualname":"::Function::maybe_direct_reload","value":"pub fn maybe_direct_reload(&Self, &Self::Inst, VirtualReg, SpillSlot)\n-> Option<Self::Inst>","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Try to alter an existing instruction to use a value directly in a\n spillslot (accessing memory directly) instead of the given register. May\n be useful on ISAs that have mem/reg ops, like x86.","sig":null,"attributes":[{"value":"/ Try to alter an existing instruction to use a value directly in a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":13046,"byte_end":13115,"line_start":305,"line_end":305,"column_start":5,"column_end":74}},{"value":"/ spillslot (accessing memory directly) instead of the given register. May","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":13120,"byte_end":13196,"line_start":306,"line_end":306,"column_start":5,"column_end":81}},{"value":"/ be useful on ISAs that have mem/reg ops, like x86.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":13201,"byte_end":13255,"line_start":307,"line_end":307,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":13260,"byte_end":13263,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ Note that this is not *quite* just fusing a load with the op; if the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":13268,"byte_end":13340,"line_start":309,"line_end":309,"column_start":5,"column_end":77}},{"value":"/ value is def'd or modified, it should be written back to the spill slot","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":13345,"byte_end":13420,"line_start":310,"line_end":310,"column_start":5,"column_end":80}},{"value":"/ as well. In other words, it is just using the spillslot as if it were a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":13425,"byte_end":13500,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ real register, for reads and/or writes.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":13505,"byte_end":13548,"line_start":312,"line_end":312,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":13553,"byte_end":13556,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ FIXME JRS 2020Feb06: state precisely the constraints on condition code","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":13561,"byte_end":13635,"line_start":314,"line_end":314,"column_start":5,"column_end":79}},{"value":"/ changes.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":13640,"byte_end":13652,"line_start":315,"line_end":315,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1705},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":14249,"byte_end":14261,"line_start":331,"line_end":331,"column_start":8,"column_end":20},"name":"func_liveins","qualname":"::Function::func_liveins","value":"pub fn func_liveins(&Self) -> Set<RealReg>","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Return the set of registers that should be considered live at the\n beginning of the function. This is semantically equivalent to an\n instruction at the top of the entry block def'ing all registers in this\n set.\n","sig":null,"attributes":[{"value":"/ Return the set of registers that should be considered live at the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":14006,"byte_end":14075,"line_start":327,"line_end":327,"column_start":5,"column_end":74}},{"value":"/ beginning of the function. This is semantically equivalent to an","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":14080,"byte_end":14148,"line_start":328,"line_end":328,"column_start":5,"column_end":73}},{"value":"/ instruction at the top of the entry block def'ing all registers in this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":14153,"byte_end":14228,"line_start":329,"line_end":329,"column_start":5,"column_end":80}},{"value":"/ set.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":14233,"byte_end":14241,"line_start":330,"line_end":330,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":1706},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":14564,"byte_end":14577,"line_start":337,"line_end":337,"column_start":8,"column_end":21},"name":"func_liveouts","qualname":"::Function::func_liveouts","value":"pub fn func_liveouts(&Self) -> Set<RealReg>","parent":{"krate":0,"index":1682},"children":[],"decl_id":null,"docs":" Return the set of registers that should be considered live at the\n end of the function (after every return instruction). This is\n semantically equivalent to an instruction at each block with no successors\n that uses each of these registers.\n","sig":null,"attributes":[{"value":"/ Return the set of registers that should be considered live at the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":14291,"byte_end":14360,"line_start":333,"line_end":333,"column_start":5,"column_end":74}},{"value":"/ end of the function (after every return instruction). This is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":14365,"byte_end":14430,"line_start":334,"line_end":334,"column_start":5,"column_end":70}},{"value":"/ semantically equivalent to an instruction at each block with no successors","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":14435,"byte_end":14513,"line_start":335,"line_end":335,"column_start":5,"column_end":83}},{"value":"/ that uses each of these registers.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":14518,"byte_end":14556,"line_start":336,"line_end":336,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1707},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":14687,"byte_end":14701,"line_start":341,"line_end":341,"column_start":12,"column_end":26},"name":"RegAllocResult","qualname":"::RegAllocResult","value":"RegAllocResult { insns, target_map, orig_insn_map, clobbered_registers, num_spill_slots, block_annotations, stackmaps, new_safepoint_insns }","parent":null,"children":[{"krate":0,"index":1709},{"krate":0,"index":1710},{"krate":0,"index":1711},{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1714},{"krate":0,"index":1715},{"krate":0,"index":1716}],"decl_id":null,"docs":" The result of register allocation.  Note that allocation can fail!\n","sig":null,"attributes":[{"value":"/ The result of register allocation.  Note that allocation can fail!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":14605,"byte_end":14675,"line_start":340,"line_end":340,"column_start":1,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1709},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":14902,"byte_end":14907,"line_start":345,"line_end":345,"column_start":9,"column_end":14},"name":"insns","qualname":"::RegAllocResult::insns","value":"std::vec::Vec<<F as Function>::Inst>","parent":{"krate":0,"index":1707},"children":[],"decl_id":null,"docs":" A new sequence of instructions with all register slots filled with real\n registers, and spills/fills/moves possibly inserted (and unneeded moves\n elided).\n","sig":null,"attributes":[{"value":"/ A new sequence of instructions with all register slots filled with real","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":14721,"byte_end":14796,"line_start":342,"line_end":342,"column_start":5,"column_end":80}},{"value":"/ registers, and spills/fills/moves possibly inserted (and unneeded moves","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":14801,"byte_end":14876,"line_start":343,"line_end":343,"column_start":5,"column_end":80}},{"value":"/ elided).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":14881,"byte_end":14893,"line_start":344,"line_end":344,"column_start":5,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":1710},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":15129,"byte_end":15139,"line_start":350,"line_end":350,"column_start":9,"column_end":19},"name":"target_map","qualname":"::RegAllocResult::target_map","value":"data_structures::TypedIxVec<data_structures::BlockIx, data_structures::InstIx>","parent":{"krate":0,"index":1707},"children":[],"decl_id":null,"docs":" Basic-block start indices for the new instruction list, indexed by the\n original basic block indices. May be used by the client to, e.g., remap\n branch targets appropriately.\n","sig":null,"attributes":[{"value":"/ Basic-block start indices for the new instruction list, indexed by the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":14928,"byte_end":15002,"line_start":347,"line_end":347,"column_start":5,"column_end":79}},{"value":"/ original basic block indices. May be used by the client to, e.g., remap","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":15007,"byte_end":15082,"line_start":348,"line_end":348,"column_start":5,"column_end":80}},{"value":"/ branch targets appropriately.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":15087,"byte_end":15120,"line_start":349,"line_end":349,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":1711},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":15648,"byte_end":15661,"line_start":360,"line_end":360,"column_start":9,"column_end":22},"name":"orig_insn_map","qualname":"::RegAllocResult::orig_insn_map","value":"data_structures::TypedIxVec<data_structures::InstIx, data_structures::InstIx>","parent":{"krate":0,"index":1707},"children":[],"decl_id":null,"docs":" Full mapping from new instruction indices to original instruction\n indices. May be needed by the client to, for example, update metadata\n such as debug/source-location info as the instructions are spliced\n and reordered.","sig":null,"attributes":[{"value":"/ Full mapping from new instruction indices to original instruction","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":15175,"byte_end":15244,"line_start":352,"line_end":352,"column_start":5,"column_end":74}},{"value":"/ indices. May be needed by the client to, for example, update metadata","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":15249,"byte_end":15322,"line_start":353,"line_end":353,"column_start":5,"column_end":78}},{"value":"/ such as debug/source-location info as the instructions are spliced","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":15327,"byte_end":15397,"line_start":354,"line_end":354,"column_start":5,"column_end":75}},{"value":"/ and reordered.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":15402,"byte_end":15420,"line_start":355,"line_end":355,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":15425,"byte_end":15428,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ Each entry is an `InstIx`, but may be `InstIx::invalid_value()` if the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":15433,"byte_end":15507,"line_start":357,"line_end":357,"column_start":5,"column_end":79}},{"value":"/ new instruction at this new index was inserted by the allocator","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":15512,"byte_end":15579,"line_start":358,"line_end":358,"column_start":5,"column_end":72}},{"value":"/ (i.e., if it is a load, spill or move instruction).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":15584,"byte_end":15639,"line_start":359,"line_end":359,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1712},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":16098,"byte_end":16117,"line_start":367,"line_end":367,"column_start":9,"column_end":28},"name":"clobbered_registers","qualname":"::RegAllocResult::clobbered_registers","value":"data_structures::Set<data_structures::RealReg>","parent":{"krate":0,"index":1707},"children":[],"decl_id":null,"docs":" Which real registers were overwritten? This will contain all real regs\n that appear as defs or modifies in register slots of the output\n instruction list.  This will only list registers that are available to\n the allocator.  If one of the instructions clobbers a register which\n isn't available to the allocator, it won't be mentioned here.\n","sig":null,"attributes":[{"value":"/ Which real registers were overwritten? This will contain all real regs","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":15717,"byte_end":15791,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"/ that appear as defs or modifies in register slots of the output","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":15796,"byte_end":15863,"line_start":363,"line_end":363,"column_start":5,"column_end":72}},{"value":"/ instruction list.  This will only list registers that are available to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":15868,"byte_end":15942,"line_start":364,"line_end":364,"column_start":5,"column_end":79}},{"value":"/ the allocator.  If one of the instructions clobbers a register which","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":15947,"byte_end":16019,"line_start":365,"line_end":365,"column_start":5,"column_end":77}},{"value":"/ isn't available to the allocator, it won't be mentioned here.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":16024,"byte_end":16089,"line_start":366,"line_end":366,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":1713},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":16182,"byte_end":16197,"line_start":370,"line_end":370,"column_start":9,"column_end":24},"name":"num_spill_slots","qualname":"::RegAllocResult::num_spill_slots","value":"u32","parent":{"krate":0,"index":1707},"children":[],"decl_id":null,"docs":" How many spill slots were used?\n","sig":null,"attributes":[{"value":"/ How many spill slots were used?","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":16138,"byte_end":16173,"line_start":369,"line_end":369,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1714},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":16439,"byte_end":16456,"line_start":375,"line_end":375,"column_start":9,"column_end":26},"name":"block_annotations","qualname":"::RegAllocResult::block_annotations","value":"std::option::Option<data_structures::TypedIxVec<data_structures::BlockIx, std::vec::Vec<std::string::String>>>","parent":{"krate":0,"index":1707},"children":[],"decl_id":null,"docs":" Block annotation strings, for debugging.  Requires requesting in the\n call to `allocate_registers`.  Creating of these annotations is\n potentially expensive, so don't request them if you don't need them.\n","sig":null,"attributes":[{"value":"/ Block annotation strings, for debugging.  Requires requesting in the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":16209,"byte_end":16281,"line_start":372,"line_end":372,"column_start":5,"column_end":77}},{"value":"/ call to `allocate_registers`.  Creating of these annotations is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":16286,"byte_end":16353,"line_start":373,"line_end":373,"column_start":5,"column_end":72}},{"value":"/ potentially expensive, so don't request them if you don't need them.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":16358,"byte_end":16430,"line_start":374,"line_end":374,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":1715},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":16640,"byte_end":16649,"line_start":379,"line_end":379,"column_start":9,"column_end":18},"name":"stackmaps","qualname":"::RegAllocResult::stackmaps","value":"std::vec::Vec<std::vec::Vec<data_structures::SpillSlot>>","parent":{"krate":0,"index":1707},"children":[],"decl_id":null,"docs":" If stackmap support was requested: one stackmap for each of the safepoint instructions\n declared.  Otherwise empty.\n","sig":null,"attributes":[{"value":"/ If stackmap support was requested: one stackmap for each of the safepoint instructions","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":16505,"byte_end":16595,"line_start":377,"line_end":377,"column_start":5,"column_end":95}},{"value":"/ declared.  Otherwise empty.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":16600,"byte_end":16631,"line_start":378,"line_end":378,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":1716},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":16873,"byte_end":16892,"line_start":383,"line_end":383,"column_start":9,"column_end":28},"name":"new_safepoint_insns","qualname":"::RegAllocResult::new_safepoint_insns","value":"std::vec::Vec<data_structures::InstIx>","parent":{"krate":0,"index":1707},"children":[],"decl_id":null,"docs":" If stackmap support was requested: one InstIx for each safepoint instruction declared,\n indicating the corresponding location in the final instruction stream.  Otherwise empty.\n","sig":null,"attributes":[{"value":"/ If stackmap support was requested: one InstIx for each safepoint instruction declared,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":16677,"byte_end":16767,"line_start":381,"line_end":381,"column_start":5,"column_end":95}},{"value":"/ indicating the corresponding location in the final instruction stream.  Otherwise empty.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":16772,"byte_end":16864,"line_start":382,"line_end":382,"column_start":5,"column_end":97}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2980},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":17046,"byte_end":17058,"line_start":389,"line_end":389,"column_start":5,"column_end":17},"name":"Backtracking","qualname":"::AlgorithmWithDefaults::Backtracking","value":"AlgorithmWithDefaults::Backtracking","parent":{"krate":0,"index":2979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2982},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":17064,"byte_end":17074,"line_start":390,"line_end":390,"column_start":5,"column_end":15},"name":"LinearScan","qualname":"::AlgorithmWithDefaults::LinearScan","value":"AlgorithmWithDefaults::LinearScan","parent":{"krate":0,"index":2979},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2979},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":17018,"byte_end":17039,"line_start":388,"line_end":388,"column_start":10,"column_end":31},"name":"AlgorithmWithDefaults","qualname":"::AlgorithmWithDefaults","value":"pub enum AlgorithmWithDefaults { Backtracking, LinearScan, }","parent":null,"children":[{"krate":0,"index":2980},{"krate":0,"index":2982}],"decl_id":null,"docs":" A choice of register allocation algorithm to run.\n","sig":null,"attributes":[{"value":"/ A choice of register allocation algorithm to run.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":16910,"byte_end":16963,"line_start":386,"line_end":386,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2996},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":17275,"byte_end":17289,"line_start":399,"line_end":399,"column_start":5,"column_end":19},"name":"OutOfRegisters","qualname":"::RegAllocError::OutOfRegisters","value":"RegAllocError::OutOfRegisters(RegClass)","parent":{"krate":0,"index":2995},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2999},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":17305,"byte_end":17331,"line_start":400,"line_end":400,"column_start":5,"column_end":31},"name":"MissingSuggestedScratchReg","qualname":"::RegAllocError::MissingSuggestedScratchReg","value":"RegAllocError::MissingSuggestedScratchReg(RegClass)","parent":{"krate":0,"index":2995},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3002},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":17347,"byte_end":17355,"line_start":401,"line_end":401,"column_start":5,"column_end":13},"name":"Analysis","qualname":"::RegAllocError::Analysis","value":"RegAllocError::Analysis(AnalysisError)","parent":{"krate":0,"index":2995},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3005},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":17376,"byte_end":17386,"line_start":402,"line_end":402,"column_start":5,"column_end":15},"name":"RegChecker","qualname":"::RegAllocError::RegChecker","value":"RegAllocError::RegChecker(CheckerErrors)","parent":{"krate":0,"index":2995},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3008},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":17407,"byte_end":17412,"line_start":403,"line_end":403,"column_start":5,"column_end":10},"name":"Other","qualname":"::RegAllocError::Other","value":"RegAllocError::Other(String)","parent":{"krate":0,"index":2995},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2995},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":17255,"byte_end":17268,"line_start":398,"line_end":398,"column_start":10,"column_end":23},"name":"RegAllocError","qualname":"::RegAllocError","value":"pub enum RegAllocError {\n    OutOfRegisters(RegClass),\n    MissingSuggestedScratchReg(RegClass),\n    Analysis(AnalysisError),\n    RegChecker(CheckerErrors),\n    Other(String),\n}","parent":null,"children":[{"krate":0,"index":2996},{"krate":0,"index":2999},{"krate":0,"index":3002},{"krate":0,"index":3005},{"krate":0,"index":3008}],"decl_id":null,"docs":" An error from the register allocator.\n","sig":null,"attributes":[{"value":"/ An error from the register allocator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":17180,"byte_end":17221,"line_start":396,"line_end":396,"column_start":1,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3016},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":17698,"byte_end":17708,"line_start":417,"line_end":417,"column_start":5,"column_end":15},"name":"LinearScan","qualname":"::Algorithm::LinearScan","value":"Algorithm::LinearScan(LinearScanOptions)","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3019},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":17733,"byte_end":17745,"line_start":418,"line_end":418,"column_start":5,"column_end":17},"name":"Backtracking","qualname":"::Algorithm::Backtracking","value":"Algorithm::Backtracking(BacktrackingOptions)","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3015},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":17682,"byte_end":17691,"line_start":416,"line_end":416,"column_start":10,"column_end":19},"name":"Algorithm","qualname":"::Algorithm","value":"pub enum Algorithm {\n    LinearScan(LinearScanOptions),\n    Backtracking(BacktrackingOptions),\n}","parent":null,"children":[{"krate":0,"index":3016},{"krate":0,"index":3019}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3024},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":18126,"byte_end":18133,"line_start":432,"line_end":432,"column_start":12,"column_end":19},"name":"Options","qualname":"::Options","value":"Options { run_checker, algorithm }","parent":null,"children":[{"krate":0,"index":3025},{"krate":0,"index":3026}],"decl_id":null,"docs":" Tweakable options shared by all the allocators.\n","sig":null,"attributes":[{"value":"/ Tweakable options shared by all the allocators.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":18046,"byte_end":18097,"line_start":430,"line_end":430,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3025},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":18291,"byte_end":18302,"line_start":435,"line_end":435,"column_start":9,"column_end":20},"name":"run_checker","qualname":"::Options::run_checker","value":"bool","parent":{"krate":0,"index":3024},"children":[],"decl_id":null,"docs":" Should the register allocator check that its results are valid? This adds runtime to the\n compiler, so this is disabled by default.\n","sig":null,"attributes":[{"value":"/ Should the register allocator check that its results are valid? This adds runtime to the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":18140,"byte_end":18232,"line_start":433,"line_end":433,"column_start":5,"column_end":97}},{"value":"/ compiler, so this is disabled by default.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":18237,"byte_end":18282,"line_start":434,"line_end":434,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":3026},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":18488,"byte_end":18497,"line_start":439,"line_end":439,"column_start":9,"column_end":18},"name":"algorithm","qualname":"::Options::algorithm","value":"Algorithm","parent":{"krate":0,"index":3024},"children":[],"decl_id":null,"docs":" Which algorithm should be used for register allocation? By default, selects backtracking,\n which is slower to compile but creates code of better quality.\n","sig":null,"attributes":[{"value":"/ Which algorithm should be used for register allocation? By default, selects backtracking,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":18315,"byte_end":18408,"line_start":437,"line_end":437,"column_start":5,"column_end":98}},{"value":"/ which is slower to compile but creates code of better quality.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":18413,"byte_end":18479,"line_start":438,"line_end":438,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":1731},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":19024,"byte_end":19043,"line_start":462,"line_end":462,"column_start":12,"column_end":31},"name":"StackmapRequestInfo","qualname":"::StackmapRequestInfo","value":"StackmapRequestInfo { reftype_class, reftyped_vregs, safepoint_insns }","parent":null,"children":[{"krate":0,"index":1732},{"krate":0,"index":1733},{"krate":0,"index":1734}],"decl_id":null,"docs":" A structure with which callers can request stackmap information.\n","sig":null,"attributes":[{"value":"/ A structure with which callers can request stackmap information.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":18944,"byte_end":19012,"line_start":461,"line_end":461,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1732},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":19220,"byte_end":19233,"line_start":465,"line_end":465,"column_start":9,"column_end":22},"name":"reftype_class","qualname":"::StackmapRequestInfo::reftype_class","value":"data_structures::RegClass","parent":{"krate":0,"index":1731},"children":[],"decl_id":null,"docs":" The register class that holds reftypes.  This may only be RegClass::I32 or\n RegClass::I64, and it must equal the word size of the target architecture.\n","sig":null,"attributes":[{"value":"/ The register class that holds reftypes.  This may only be RegClass::I32 or","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":19050,"byte_end":19128,"line_start":463,"line_end":463,"column_start":5,"column_end":83}},{"value":"/ RegClass::I64, and it must equal the word size of the target architecture.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":19133,"byte_end":19211,"line_start":464,"line_end":464,"column_start":5,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":1733},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":19437,"byte_end":19451,"line_start":469,"line_end":469,"column_start":9,"column_end":23},"name":"reftyped_vregs","qualname":"::StackmapRequestInfo::reftyped_vregs","value":"std::vec::Vec<data_structures::VirtualReg>","parent":{"krate":0,"index":1731},"children":[],"decl_id":null,"docs":" The virtual regs that hold reftyped values.  These must be provided in ascending order\n of register index and be duplicate-free.  They must have class `reftype_class`.\n","sig":null,"attributes":[{"value":"/ The virtual regs that hold reftyped values.  These must be provided in ascending order","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":19250,"byte_end":19340,"line_start":467,"line_end":467,"column_start":5,"column_end":95}},{"value":"/ of register index and be duplicate-free.  They must have class `reftype_class`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":19345,"byte_end":19428,"line_start":468,"line_end":468,"column_start":5,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":1734},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":20129,"byte_end":20144,"line_start":478,"line_end":478,"column_start":9,"column_end":24},"name":"safepoint_insns","qualname":"::StackmapRequestInfo::safepoint_insns","value":"std::vec::Vec<data_structures::InstIx>","parent":{"krate":0,"index":1731},"children":[],"decl_id":null,"docs":" The indices of instructions for which the allocator will construct stackmaps.  These\n must be provided in ascending order and be duplicate-free.  The specified instructions\n may not be coalescable move instructions (as the allocator may remove those) and they\n may not modify any register carrying a reftyped value (they may \"def\" or \"use\" them,\n though).  The reason is that, at a safepoint, the client's garbage collector may change\n the values of all live references, so it would be meaningless for a safepoint\n instruction also to attempt to do that -- we'd end up with two competing new values.\n","sig":null,"attributes":[{"value":"/ The indices of instructions for which the allocator will construct stackmaps.  These","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":19475,"byte_end":19563,"line_start":471,"line_end":471,"column_start":5,"column_end":93}},{"value":"/ must be provided in ascending order and be duplicate-free.  The specified instructions","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":19568,"byte_end":19658,"line_start":472,"line_end":472,"column_start":5,"column_end":95}},{"value":"/ may not be coalescable move instructions (as the allocator may remove those) and they","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":19663,"byte_end":19752,"line_start":473,"line_end":473,"column_start":5,"column_end":94}},{"value":"/ may not modify any register carrying a reftyped value (they may \"def\" or \"use\" them,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":19757,"byte_end":19845,"line_start":474,"line_end":474,"column_start":5,"column_end":93}},{"value":"/ though).  The reason is that, at a safepoint, the client's garbage collector may change","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":19850,"byte_end":19941,"line_start":475,"line_end":475,"column_start":5,"column_end":96}},{"value":"/ the values of all live references, so it would be meaningless for a safepoint","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":19946,"byte_end":20027,"line_start":476,"line_end":476,"column_start":5,"column_end":86}},{"value":"/ instruction also to attempt to do that -- we'd end up with two competing new values.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":20032,"byte_end":20120,"line_start":477,"line_end":477,"column_start":5,"column_end":93}}]},{"kind":"Function","id":{"krate":0,"index":1735},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":21063,"byte_end":21091,"line_start":496,"line_end":496,"column_start":8,"column_end":36},"name":"allocate_registers_with_opts","qualname":"::allocate_registers_with_opts","value":"pub fn allocate_registers_with_opts<F: Function>(&mut F, &RealRegUniverse,\n                                                 Option<&StackmapRequestInfo>,\n                                                 Options)\n-> Result<RegAllocResult<F>, RegAllocError>","parent":null,"children":[],"decl_id":null,"docs":" Allocate registers for a function's code, given a universe of real registers that we are\n allowed to use.  Optionally, stackmap support may be requested.","sig":null,"attributes":[{"value":"/ Allocate registers for a function's code, given a universe of real registers that we are","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":20162,"byte_end":20254,"line_start":481,"line_end":481,"column_start":1,"column_end":93}},{"value":"/ allowed to use.  Optionally, stackmap support may be requested.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":20255,"byte_end":20322,"line_start":482,"line_end":482,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":20323,"byte_end":20326,"line_start":483,"line_end":483,"column_start":1,"column_end":4}},{"value":"/ The control flow graph must not contain any critical edges, that is, any edge coming from a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":20327,"byte_end":20422,"line_start":484,"line_end":484,"column_start":1,"column_end":96}},{"value":"/ block with multiple successors must not flow into a block with multiple predecessors. The","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":20423,"byte_end":20516,"line_start":485,"line_end":485,"column_start":1,"column_end":94}},{"value":"/ embedder must have split critical edges before handing over the function to this function.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":20517,"byte_end":20611,"line_start":486,"line_end":486,"column_start":1,"column_end":95}},{"value":"/ Otherwise, an error will be returned.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":20612,"byte_end":20653,"line_start":487,"line_end":487,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":20654,"byte_end":20657,"line_start":488,"line_end":488,"column_start":1,"column_end":4}},{"value":"/ Allocation may succeed, returning a `RegAllocResult` with the new instruction sequence, or","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":20658,"byte_end":20752,"line_start":489,"line_end":489,"column_start":1,"column_end":95}},{"value":"/ it may fail, returning an error.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":20753,"byte_end":20789,"line_start":490,"line_end":490,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":20790,"byte_end":20793,"line_start":491,"line_end":491,"column_start":1,"column_end":4}},{"value":"/ Runtime options can be passed to the allocators, through the use of [Options] for options","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":20794,"byte_end":20887,"line_start":492,"line_end":492,"column_start":1,"column_end":94}},{"value":"/ common to all the backends. The choice of algorithm is done by passing a given [Algorithm]","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":20888,"byte_end":20982,"line_start":493,"line_end":493,"column_start":1,"column_end":95}},{"value":"/ instance, with options tailored for each algorithm.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":20983,"byte_end":21038,"line_start":494,"line_end":494,"column_start":1,"column_end":56}},{"value":"inline(never)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":21039,"byte_end":21055,"line_start":495,"line_end":495,"column_start":1,"column_end":17}}]},{"kind":"Function","id":{"krate":0,"index":1737},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":25258,"byte_end":25276,"line_start":596,"line_end":596,"column_start":8,"column_end":26},"name":"allocate_registers","qualname":"::allocate_registers","value":"pub fn allocate_registers<F: Function>(&mut F, &RealRegUniverse,\n                                       Option<&StackmapRequestInfo>,\n                                       AlgorithmWithDefaults)\n-> Result<RegAllocResult<F>, RegAllocError>","parent":null,"children":[],"decl_id":null,"docs":" Allocate registers for a function's code, given a universe of real registers that we are\n allowed to use.","sig":null,"attributes":[{"value":"/ Allocate registers for a function's code, given a universe of real registers that we are","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":24531,"byte_end":24623,"line_start":582,"line_end":582,"column_start":1,"column_end":93}},{"value":"/ allowed to use.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":24624,"byte_end":24643,"line_start":583,"line_end":583,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":24644,"byte_end":24647,"line_start":584,"line_end":584,"column_start":1,"column_end":4}},{"value":"/ The control flow graph must not contain any critical edges, that is, any edge coming from a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":24648,"byte_end":24743,"line_start":585,"line_end":585,"column_start":1,"column_end":96}},{"value":"/ block with multiple successors must not flow into a block with multiple predecessors. The","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":24744,"byte_end":24837,"line_start":586,"line_end":586,"column_start":1,"column_end":94}},{"value":"/ embedder must have split critical edges before handing over the function to this function.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":24838,"byte_end":24932,"line_start":587,"line_end":587,"column_start":1,"column_end":95}},{"value":"/ Otherwise, an error will be returned.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":24933,"byte_end":24974,"line_start":588,"line_end":588,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":24975,"byte_end":24978,"line_start":589,"line_end":589,"column_start":1,"column_end":4}},{"value":"/ Allocate may succeed, returning a `RegAllocResult` with the new instruction sequence, or it may","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":24979,"byte_end":25078,"line_start":590,"line_end":590,"column_start":1,"column_end":100}},{"value":"/ fail, returning an error.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":25079,"byte_end":25108,"line_start":591,"line_end":591,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":25109,"byte_end":25112,"line_start":592,"line_end":592,"column_start":1,"column_end":4}},{"value":"/ This is a convenient function that uses standard options for the allocator, according to the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":25113,"byte_end":25209,"line_start":593,"line_end":593,"column_start":1,"column_end":97}},{"value":"/ selected algorithm.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":25210,"byte_end":25233,"line_start":594,"line_end":594,"column_start":1,"column_end":24}},{"value":"inline(never)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":25234,"byte_end":25250,"line_start":595,"line_end":595,"column_start":1,"column_end":17}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/analysis_main.rs","byte_start":28363,"byte_end":28376,"line_start":57,"line_end":57,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/analysis_control_flow.rs","byte_start":39024,"byte_end":39042,"line_start":33,"line_end":33,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/analysis_control_flow.rs","byte_start":61214,"byte_end":61221,"line_start":651,"line_end":651,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/analysis_data_flow.rs","byte_start":95084,"byte_end":95098,"line_start":799,"line_end":799,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/avl_tree.rs","byte_start":149423,"byte_end":149430,"line_start":26,"line_end":26,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/avl_tree.rs","byte_start":150610,"byte_end":150617,"line_start":60,"line_end":60,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/avl_tree.rs","byte_start":154396,"byte_end":154403,"line_start":159,"line_end":159,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/avl_tree.rs","byte_start":178940,"byte_end":178951,"line_start":733,"line_end":733,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/avl_tree.rs","byte_start":179599,"byte_end":179610,"line_start":757,"line_end":757,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/avl_tree.rs","byte_start":180183,"byte_end":180190,"line_start":776,"line_end":776,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_coalescing_analysis.rs","byte_start":199628,"byte_end":199632,"line_start":107,"line_end":107,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_coalescing_analysis.rs","byte_start":199901,"byte_end":199915,"line_start":117,"line_end":117,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_commitment_map.rs","byte_start":213826,"byte_end":213845,"line_start":45,"line_end":45,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_commitment_map.rs","byte_start":213952,"byte_end":213971,"line_start":50,"line_end":50,"column_start":20,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_commitment_map.rs","byte_start":214155,"byte_end":214174,"line_start":56,"line_end":56,"column_start":21,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_commitment_map.rs","byte_start":214380,"byte_end":214399,"line_start":62,"line_end":62,"column_start":21,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_commitment_map.rs","byte_start":214976,"byte_end":214989,"line_start":79,"line_end":79,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_commitment_map.rs","byte_start":215132,"byte_end":215145,"line_start":86,"line_end":86,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":374},{"krate":0,"index":376},{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_main.rs","byte_start":220145,"byte_end":220164,"line_start":37,"line_end":37,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_main.rs","byte_start":220294,"byte_end":220313,"line_start":45,"line_end":45,"column_start":21,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_main.rs","byte_start":221252,"byte_end":221262,"line_start":72,"line_end":72,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_main.rs","byte_start":228018,"byte_end":228028,"line_start":242,"line_end":242,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":463},{"krate":0,"index":468},{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_main.rs","byte_start":242811,"byte_end":242821,"line_start":609,"line_end":609,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_main.rs","byte_start":244108,"byte_end":244120,"line_start":641,"line_end":641,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_spillslot_allocator.rs","byte_start":298801,"byte_end":298820,"line_start":41,"line_end":41,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_spillslot_allocator.rs","byte_start":299784,"byte_end":299800,"line_start":65,"line_end":65,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_spillslot_allocator.rs","byte_start":305141,"byte_end":305159,"line_start":204,"line_end":204,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":539},{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_vlr_priority_queue.rs","byte_start":322575,"byte_end":322596,"line_start":71,"line_end":71,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_vlr_priority_queue.rs","byte_start":322811,"byte_end":322832,"line_start":81,"line_end":81,"column_start":20,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_vlr_priority_queue.rs","byte_start":322967,"byte_end":322988,"line_start":86,"line_end":86,"column_start":13,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_vlr_priority_queue.rs","byte_start":323012,"byte_end":323033,"line_start":87,"line_end":87,"column_start":21,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_vlr_priority_queue.rs","byte_start":323149,"byte_end":323170,"line_start":92,"line_end":92,"column_start":14,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_vlr_priority_queue.rs","byte_start":323897,"byte_end":323914,"line_start":112,"line_end":112,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/checker.rs","byte_start":330144,"byte_end":330156,"line_start":114,"line_end":114,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/checker.rs","byte_start":330238,"byte_end":330250,"line_start":120,"line_end":120,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/checker.rs","byte_start":331066,"byte_end":331078,"line_start":143,"line_end":143,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/checker.rs","byte_start":331537,"byte_end":331549,"line_start":163,"line_end":163,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/checker.rs","byte_start":337452,"byte_end":337459,"line_start":339,"line_end":339,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/checker.rs","byte_start":342710,"byte_end":342724,"line_start":487,"line_end":487,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":633},{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":346341,"byte_end":346344,"line_start":45,"line_end":45,"column_start":46,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":679},{"krate":0,"index":682},{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":349423,"byte_end":349426,"line_start":188,"line_end":188,"column_start":61,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":350245,"byte_end":350248,"line_start":211,"line_end":211,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":350393,"byte_end":350400,"line_start":218,"line_end":218,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":699},{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":351315,"byte_end":351320,"line_start":254,"line_end":254,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":351551,"byte_end":351556,"line_start":265,"line_end":265,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":352314,"byte_end":352324,"line_start":302,"line_end":302,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":725},{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":352933,"byte_end":352943,"line_start":324,"line_end":324,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":750},{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":354710,"byte_end":354720,"line_start":388,"line_end":388,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":756},{"krate":0,"index":757}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":354902,"byte_end":354912,"line_start":398,"line_end":398,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":355079,"byte_end":355089,"line_start":407,"line_end":407,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":765}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":359052,"byte_end":359062,"line_start":531,"line_end":531,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":360109,"byte_end":360117,"line_start":561,"line_end":561,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":362994,"byte_end":362997,"line_start":647,"line_end":647,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":366014,"byte_end":366017,"line_start":744,"line_end":744,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":366736,"byte_end":366739,"line_start":769,"line_end":769,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":366978,"byte_end":366985,"line_start":778,"line_end":778,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":367717,"byte_end":367724,"line_start":810,"line_end":810,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":368011,"byte_end":368014,"line_start":821,"line_end":821,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":368265,"byte_end":368275,"line_start":830,"line_end":830,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":368925,"byte_end":368935,"line_start":859,"line_end":859,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":822}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":369051,"byte_end":369054,"line_start":865,"line_end":865,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":824},{"krate":0,"index":827},{"krate":0,"index":830},{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":371524,"byte_end":371532,"line_start":920,"line_end":920,"column_start":79,"column_end":87},"value":"","parent":null,"children":[{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":372193,"byte_end":372202,"line_start":946,"line_end":946,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":372822,"byte_end":372831,"line_start":969,"line_end":969,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":373388,"byte_end":373405,"line_start":986,"line_end":986,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":375306,"byte_end":375313,"line_start":1045,"line_end":1045,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":376340,"byte_end":376352,"line_start":1083,"line_end":1083,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":870}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":376948,"byte_end":376964,"line_start":1106,"line_end":1106,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":377921,"byte_end":377928,"line_start":1134,"line_end":1134,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":879},{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":378223,"byte_end":378239,"line_start":1149,"line_end":1149,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":382399,"byte_end":382414,"line_start":1243,"line_end":1243,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":884},{"krate":0,"index":885}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":389393,"byte_end":389398,"line_start":1415,"line_end":1415,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":390028,"byte_end":390033,"line_start":1445,"line_end":1445,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":391179,"byte_end":391188,"line_start":1477,"line_end":1477,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":393023,"byte_end":393032,"line_start":1546,"line_end":1546,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":909}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":394991,"byte_end":395000,"line_start":1595,"line_end":1595,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":395140,"byte_end":395149,"line_start":1601,"line_end":1601,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":397093,"byte_end":397102,"line_start":1661,"line_end":1661,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":919}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":397937,"byte_end":397950,"line_start":1680,"line_end":1680,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":400110,"byte_end":400126,"line_start":1726,"line_end":1726,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":923}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":400817,"byte_end":400835,"line_start":1749,"line_end":1749,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":925}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":400944,"byte_end":400962,"line_start":1755,"line_end":1755,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":930},{"krate":0,"index":932},{"krate":0,"index":934}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":403356,"byte_end":403372,"line_start":1824,"line_end":1824,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":937}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":403478,"byte_end":403494,"line_start":1830,"line_end":1830,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":939},{"krate":0,"index":941},{"krate":0,"index":943},{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":406256,"byte_end":406265,"line_start":1907,"line_end":1907,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":406496,"byte_end":406505,"line_start":1916,"line_end":1916,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":411036,"byte_end":411045,"line_start":2034,"line_end":2034,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":958}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":411304,"byte_end":411313,"line_start":2046,"line_end":2046,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":960}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":412179,"byte_end":412191,"line_start":2074,"line_end":2074,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":412330,"byte_end":412342,"line_start":2080,"line_end":2080,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":415348,"byte_end":415355,"line_start":2151,"line_end":2151,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":416450,"byte_end":416457,"line_start":2192,"line_end":2192,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":987}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/inst_stream.rs","byte_start":425054,"byte_end":425066,"line_start":34,"line_end":34,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1012},{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/inst_stream.rs","byte_start":428727,"byte_end":428735,"line_start":136,"line_end":136,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1016}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/inst_stream.rs","byte_start":429421,"byte_end":429433,"line_start":159,"line_end":159,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1018},{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/inst_stream.rs","byte_start":430021,"byte_end":430044,"line_start":181,"line_end":181,"column_start":6,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/analysis.rs","byte_start":470843,"byte_end":470852,"line_start":24,"line_end":24,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1116}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/analysis.rs","byte_start":470989,"byte_end":470998,"line_start":30,"line_end":30,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1118},{"krate":0,"index":1120}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/assign_registers.rs","byte_start":504228,"byte_end":504237,"line_start":35,"line_end":35,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1196}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/assign_registers.rs","byte_start":505041,"byte_end":505056,"line_start":56,"line_end":56,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1201},{"krate":0,"index":1202},{"krate":0,"index":1203}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/assign_registers.rs","byte_start":512060,"byte_end":512075,"line_start":259,"line_end":259,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/assign_registers.rs","byte_start":513365,"byte_end":513384,"line_start":305,"line_end":305,"column_start":43,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1223},{"krate":0,"index":1224}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/assign_registers.rs","byte_start":513838,"byte_end":513853,"line_start":322,"line_end":322,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1227},{"krate":0,"index":1228}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/assign_registers.rs","byte_start":514268,"byte_end":514283,"line_start":334,"line_end":334,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1231}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/assign_registers.rs","byte_start":514956,"byte_end":514969,"line_start":355,"line_end":355,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1238}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/assign_registers.rs","byte_start":515896,"byte_end":515909,"line_start":384,"line_end":384,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1244}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/assign_registers.rs","byte_start":516026,"byte_end":516039,"line_start":390,"line_end":390,"column_start":18,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/assign_registers.rs","byte_start":516069,"byte_end":516082,"line_start":392,"line_end":392,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1247}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/assign_registers.rs","byte_start":516375,"byte_end":516388,"line_start":401,"line_end":401,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1249}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/assign_registers.rs","byte_start":516582,"byte_end":516600,"line_start":412,"line_end":412,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1255}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/assign_registers.rs","byte_start":518047,"byte_end":518052,"line_start":459,"line_end":459,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1275}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/resolve_moves.rs","byte_start":551798,"byte_end":551807,"line_start":186,"line_end":186,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1342}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/resolve_moves.rs","byte_start":565011,"byte_end":565022,"line_start":558,"line_end":558,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1355}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/resolve_moves.rs","byte_start":565269,"byte_end":565275,"line_start":572,"line_end":572,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1363}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/resolve_moves.rs","byte_start":565673,"byte_end":565679,"line_start":585,"line_end":585,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/mod.rs","byte_start":448143,"byte_end":448153,"line_start":45,"line_end":45,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1376}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/mod.rs","byte_start":449323,"byte_end":449340,"line_start":88,"line_end":88,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1378}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/mod.rs","byte_start":450460,"byte_end":450477,"line_start":120,"line_end":120,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1380}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/mod.rs","byte_start":450834,"byte_end":450839,"line_start":134,"line_end":134,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1383}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/mod.rs","byte_start":451059,"byte_end":451072,"line_start":146,"line_end":146,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1385}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/mod.rs","byte_start":451859,"byte_end":451874,"line_start":178,"line_end":178,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1387}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/mod.rs","byte_start":452243,"byte_end":452258,"line_start":192,"line_end":192,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1389},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/mod.rs","byte_start":453191,"byte_end":453198,"line_start":228,"line_end":228,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1394}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/mod.rs","byte_start":453748,"byte_end":453755,"line_start":252,"line_end":252,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402},{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/mod.rs","byte_start":454608,"byte_end":454616,"line_start":299,"line_end":299,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1409},{"krate":0,"index":1410},{"krate":0,"index":1411}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/mod.rs","byte_start":455104,"byte_end":455112,"line_start":320,"line_end":320,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1413}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/mod.rs","byte_start":455521,"byte_end":455530,"line_start":336,"line_end":336,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1418},{"krate":0,"index":1419},{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1424}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/reg_maps.rs","byte_start":577290,"byte_end":577310,"line_start":26,"line_end":26,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1453},{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1458},{"krate":0,"index":1459},{"krate":0,"index":1460},{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1464}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/reg_maps.rs","byte_start":581841,"byte_end":581861,"line_start":145,"line_end":145,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1468},{"krate":0,"index":1470},{"krate":0,"index":1473}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/reg_maps.rs","byte_start":588220,"byte_end":588241,"line_start":310,"line_end":310,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1480},{"krate":0,"index":1483},{"krate":0,"index":1484}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/reg_maps.rs","byte_start":589031,"byte_end":589052,"line_start":335,"line_end":335,"column_start":25,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":1488}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/snapshot.rs","byte_start":591205,"byte_end":591215,"line_start":58,"line_end":58,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1494},{"krate":0,"index":1498},{"krate":0,"index":1502}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/snapshot.rs","byte_start":594842,"byte_end":594852,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":1512},{"krate":0,"index":1513},{"krate":0,"index":1514},{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1523},{"krate":0,"index":1524},{"krate":0,"index":1525},{"krate":0,"index":1526}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/sparse_set.rs","byte_start":600701,"byte_end":600711,"line_start":50,"line_end":50,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1553},{"krate":0,"index":1554}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/sparse_set.rs","byte_start":605572,"byte_end":605582,"line_start":194,"line_end":194,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1559},{"krate":0,"index":1560},{"krate":0,"index":1561},{"krate":0,"index":1562},{"krate":0,"index":1563},{"krate":0,"index":1564},{"krate":0,"index":1565},{"krate":0,"index":1566},{"krate":0,"index":1567},{"krate":0,"index":1568},{"krate":0,"index":1569}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/sparse_set.rs","byte_start":619223,"byte_end":619233,"line_start":572,"line_end":572,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1572}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/sparse_set.rs","byte_start":620074,"byte_end":620084,"line_start":596,"line_end":596,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1575}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/sparse_set.rs","byte_start":620842,"byte_end":620852,"line_start":626,"line_end":626,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1587}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/sparse_set.rs","byte_start":621254,"byte_end":621268,"line_start":640,"line_end":640,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1591},{"krate":0,"index":1592}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/union_find.rs","byte_start":632189,"byte_end":632198,"line_start":83,"line_end":83,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1609},{"krate":0,"index":1610},{"krate":0,"index":1611},{"krate":0,"index":1612}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/union_find.rs","byte_start":640124,"byte_end":640133,"line_start":275,"line_end":275,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1621}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/union_find.rs","byte_start":647302,"byte_end":647323,"line_start":430,"line_end":430,"column_start":20,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1624}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/union_find.rs","byte_start":648862,"byte_end":648883,"line_start":468,"line_end":468,"column_start":20,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1632}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/union_find.rs","byte_start":649685,"byte_end":649713,"line_start":485,"line_end":485,"column_start":37,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1637},{"krate":0,"index":1638}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/union_find.rs","byte_start":650499,"byte_end":650520,"line_start":511,"line_end":511,"column_start":20,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1646}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/union_find.rs","byte_start":650761,"byte_end":650791,"line_start":520,"line_end":520,"column_start":37,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1651},{"krate":0,"index":1652}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":17447,"byte_end":17460,"line_start":406,"line_end":406,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1722}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":17791,"byte_end":17800,"line_start":421,"line_end":421,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1726}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":18539,"byte_end":18546,"line_start":442,"line_end":442,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1728}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":18730,"byte_end":18737,"line_start":451,"line_end":451,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1730}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/analysis_main.rs","byte_start":28363,"byte_end":28376,"line_start":57,"line_end":57,"column_start":19,"column_end":32},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1740},"to":{"krate":5,"index":3761}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/analysis_control_flow.rs","byte_start":39024,"byte_end":39042,"line_start":33,"line_end":33,"column_start":6,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":71},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/analysis_control_flow.rs","byte_start":61214,"byte_end":61221,"line_start":651,"line_end":651,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/analysis_data_flow.rs","byte_start":95084,"byte_end":95098,"line_start":799,"line_end":799,"column_start":21,"column_end":35},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1759},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/avl_tree.rs","byte_start":149423,"byte_end":149430,"line_start":26,"line_end":26,"column_start":9,"column_end":16},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1780},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/avl_tree.rs","byte_start":150610,"byte_end":150617,"line_start":60,"line_end":60,"column_start":16,"column_end":23},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/avl_tree.rs","byte_start":154396,"byte_end":154403,"line_start":159,"line_end":159,"column_start":29,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/avl_tree.rs","byte_start":178940,"byte_end":178951,"line_start":733,"line_end":733,"column_start":17,"column_end":28},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/avl_tree.rs","byte_start":179599,"byte_end":179610,"line_start":757,"line_end":757,"column_start":36,"column_end":47},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":266},"to":{"krate":2,"index":4984}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/avl_tree.rs","byte_start":180183,"byte_end":180190,"line_start":776,"line_end":776,"column_start":29,"column_end":36},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_coalescing_analysis.rs","byte_start":199628,"byte_end":199632,"line_start":107,"line_end":107,"column_start":6,"column_end":10},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1802},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_coalescing_analysis.rs","byte_start":199901,"byte_end":199915,"line_start":117,"line_end":117,"column_start":20,"column_end":34},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2111},"to":{"krate":0,"index":1595}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_commitment_map.rs","byte_start":213826,"byte_end":213845,"line_start":45,"line_end":45,"column_start":6,"column_end":25},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_commitment_map.rs","byte_start":213952,"byte_end":213971,"line_start":50,"line_end":50,"column_start":20,"column_end":39},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1813},"to":{"krate":2,"index":1648}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_commitment_map.rs","byte_start":214155,"byte_end":214174,"line_start":56,"line_end":56,"column_start":21,"column_end":40},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1813},"to":{"krate":2,"index":1685}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_commitment_map.rs","byte_start":214380,"byte_end":214399,"line_start":62,"line_end":62,"column_start":21,"column_end":40},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1813},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_commitment_map.rs","byte_start":214976,"byte_end":214989,"line_start":79,"line_end":79,"column_start":21,"column_end":34},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":366},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_commitment_map.rs","byte_start":215132,"byte_end":215145,"line_start":86,"line_end":86,"column_start":6,"column_end":19},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_main.rs","byte_start":220145,"byte_end":220164,"line_start":37,"line_end":37,"column_start":27,"column_end":46},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1818},"to":{"krate":2,"index":1910}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_main.rs","byte_start":220294,"byte_end":220313,"line_start":45,"line_end":45,"column_start":21,"column_end":40},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1818},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_main.rs","byte_start":221252,"byte_end":221262,"line_start":72,"line_end":72,"column_start":6,"column_end":16},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_main.rs","byte_start":228018,"byte_end":228028,"line_start":242,"line_end":242,"column_start":6,"column_end":16},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_main.rs","byte_start":242811,"byte_end":242821,"line_start":609,"line_end":609,"column_start":21,"column_end":31},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1822},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_main.rs","byte_start":244108,"byte_end":244120,"line_start":641,"line_end":641,"column_start":21,"column_end":33},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1835},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_spillslot_allocator.rs","byte_start":298801,"byte_end":298820,"line_start":41,"line_end":41,"column_start":6,"column_end":25},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1843},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_spillslot_allocator.rs","byte_start":299784,"byte_end":299800,"line_start":65,"line_end":65,"column_start":6,"column_end":22},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":514},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_spillslot_allocator.rs","byte_start":305141,"byte_end":305159,"line_start":204,"line_end":204,"column_start":6,"column_end":24},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":531},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_vlr_priority_queue.rs","byte_start":322575,"byte_end":322596,"line_start":71,"line_end":71,"column_start":6,"column_end":27},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_vlr_priority_queue.rs","byte_start":322811,"byte_end":322832,"line_start":81,"line_end":81,"column_start":20,"column_end":41},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":549},"to":{"krate":2,"index":1648}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_vlr_priority_queue.rs","byte_start":322967,"byte_end":322988,"line_start":86,"line_end":86,"column_start":13,"column_end":34},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":549},"to":{"krate":2,"index":1653}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_vlr_priority_queue.rs","byte_start":323012,"byte_end":323033,"line_start":87,"line_end":87,"column_start":21,"column_end":42},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":549},"to":{"krate":2,"index":1685}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_vlr_priority_queue.rs","byte_start":323149,"byte_end":323170,"line_start":92,"line_end":92,"column_start":14,"column_end":35},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":549},"to":{"krate":2,"index":1674}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/bt_vlr_priority_queue.rs","byte_start":323897,"byte_end":323914,"line_start":112,"line_end":112,"column_start":6,"column_end":23},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":562},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/checker.rs","byte_start":330144,"byte_end":330156,"line_start":114,"line_end":114,"column_start":18,"column_end":30},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1884},"to":{"krate":2,"index":1910}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/checker.rs","byte_start":330238,"byte_end":330250,"line_start":120,"line_end":120,"column_start":6,"column_end":18},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1884},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/checker.rs","byte_start":331066,"byte_end":331078,"line_start":143,"line_end":143,"column_start":18,"column_end":30},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1904},"to":{"krate":2,"index":1910}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/checker.rs","byte_start":331537,"byte_end":331549,"line_start":163,"line_end":163,"column_start":6,"column_end":18},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1904},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/checker.rs","byte_start":337452,"byte_end":337459,"line_start":339,"line_end":339,"column_start":6,"column_end":13},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/checker.rs","byte_start":342710,"byte_end":342724,"line_start":487,"line_end":487,"column_start":6,"column_end":20},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":626},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":346341,"byte_end":346344,"line_start":45,"line_end":45,"column_start":46,"column_end":49},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1945},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":349423,"byte_end":349426,"line_start":188,"line_end":188,"column_start":61,"column_end":64},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1945},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":350245,"byte_end":350248,"line_start":211,"line_end":211,"column_start":20,"column_end":23},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1945},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":350393,"byte_end":350400,"line_start":218,"line_end":218,"column_start":26,"column_end":33},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":689},"to":{"krate":2,"index":4984}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":351315,"byte_end":351320,"line_start":254,"line_end":254,"column_start":53,"column_end":58},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1951},"to":{"krate":2,"index":4894}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":351551,"byte_end":351556,"line_start":265,"line_end":265,"column_start":34,"column_end":39},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1951},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":352314,"byte_end":352324,"line_start":302,"line_end":302,"column_start":49,"column_end":59},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":719},"to":{"krate":2,"index":4984}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":352933,"byte_end":352943,"line_start":324,"line_end":324,"column_start":16,"column_end":26},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":727},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":354710,"byte_end":354720,"line_start":388,"line_end":388,"column_start":32,"column_end":42},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":727},"to":{"krate":2,"index":2174}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":354902,"byte_end":354912,"line_start":398,"line_end":398,"column_start":35,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":727},"to":{"krate":2,"index":2178}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":355079,"byte_end":355089,"line_start":407,"line_end":407,"column_start":26,"column_end":36},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":727},"to":{"krate":2,"index":1620}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":359052,"byte_end":359062,"line_start":531,"line_end":531,"column_start":43,"column_end":53},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":727},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":360109,"byte_end":360117,"line_start":561,"line_end":561,"column_start":6,"column_end":14},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":362994,"byte_end":362997,"line_start":647,"line_end":647,"column_start":6,"column_end":9},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":366014,"byte_end":366017,"line_start":744,"line_end":744,"column_start":21,"column_end":24},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2210},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":366736,"byte_end":366739,"line_start":769,"line_end":769,"column_start":6,"column_end":9},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":366978,"byte_end":366985,"line_start":778,"line_end":778,"column_start":6,"column_end":13},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":2233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":367717,"byte_end":367724,"line_start":810,"line_end":810,"column_start":21,"column_end":28},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2233},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":368011,"byte_end":368014,"line_start":821,"line_end":821,"column_start":6,"column_end":9},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":368265,"byte_end":368275,"line_start":830,"line_end":830,"column_start":6,"column_end":16},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":368925,"byte_end":368935,"line_start":859,"line_end":859,"column_start":21,"column_end":31},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2256},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":369051,"byte_end":369054,"line_start":865,"line_end":865,"column_start":6,"column_end":9},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":2210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":371524,"byte_end":371532,"line_start":920,"line_end":920,"column_start":79,"column_end":87},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":372193,"byte_end":372202,"line_start":946,"line_end":946,"column_start":6,"column_end":15},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2315},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":372822,"byte_end":372831,"line_start":969,"line_end":969,"column_start":21,"column_end":30},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":2315},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":373388,"byte_end":373405,"line_start":986,"line_end":986,"column_start":10,"column_end":27},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":850},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":375306,"byte_end":375313,"line_start":1045,"line_end":1045,"column_start":6,"column_end":13},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":2332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":376340,"byte_end":376352,"line_start":1083,"line_end":1083,"column_start":6,"column_end":18},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":376948,"byte_end":376964,"line_start":1106,"line_end":1106,"column_start":6,"column_end":22},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":871},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":377921,"byte_end":377928,"line_start":1134,"line_end":1134,"column_start":6,"column_end":13},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":378223,"byte_end":378239,"line_start":1149,"line_end":1149,"column_start":6,"column_end":22},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":871},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":382399,"byte_end":382414,"line_start":1243,"line_end":1243,"column_start":6,"column_end":21},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":389393,"byte_end":389398,"line_start":1415,"line_end":1415,"column_start":6,"column_end":11},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":390028,"byte_end":390033,"line_start":1445,"line_end":1445,"column_start":21,"column_end":26},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2375},"to":{"krate":2,"index":1685}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":391179,"byte_end":391188,"line_start":1477,"line_end":1477,"column_start":6,"column_end":15},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":393023,"byte_end":393032,"line_start":1546,"line_end":1546,"column_start":21,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2402},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":394991,"byte_end":395000,"line_start":1595,"line_end":1595,"column_start":21,"column_end":30},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2425},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":395140,"byte_end":395149,"line_start":1601,"line_end":1601,"column_start":6,"column_end":15},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":397093,"byte_end":397102,"line_start":1661,"line_end":1661,"column_start":6,"column_end":15},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":397937,"byte_end":397950,"line_start":1680,"line_end":1680,"column_start":21,"column_end":34},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2452},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":400110,"byte_end":400126,"line_start":1726,"line_end":1726,"column_start":21,"column_end":37},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2477},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":400817,"byte_end":400835,"line_start":1749,"line_end":1749,"column_start":21,"column_end":39},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2487},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":400944,"byte_end":400962,"line_start":1755,"line_end":1755,"column_start":6,"column_end":24},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":403356,"byte_end":403372,"line_start":1824,"line_end":1824,"column_start":21,"column_end":37},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2492},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":403478,"byte_end":403494,"line_start":1830,"line_end":1830,"column_start":6,"column_end":22},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":406256,"byte_end":406265,"line_start":1907,"line_end":1907,"column_start":21,"column_end":30},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2497},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":406496,"byte_end":406505,"line_start":1916,"line_end":1916,"column_start":6,"column_end":15},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":411036,"byte_end":411045,"line_start":2034,"line_end":2034,"column_start":21,"column_end":30},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2506},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":411304,"byte_end":411313,"line_start":2046,"line_end":2046,"column_start":6,"column_end":15},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2506},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":412179,"byte_end":412191,"line_start":2074,"line_end":2074,"column_start":6,"column_end":18},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2512},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":412330,"byte_end":412342,"line_start":2080,"line_end":2080,"column_start":21,"column_end":33},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2512},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":415348,"byte_end":415355,"line_start":2151,"line_end":2151,"column_start":6,"column_end":13},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2522},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/data_structures.rs","byte_start":416450,"byte_end":416457,"line_start":2192,"line_end":2192,"column_start":21,"column_end":28},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2522},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/inst_stream.rs","byte_start":425054,"byte_end":425066,"line_start":34,"line_end":34,"column_start":6,"column_end":18},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2545},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/inst_stream.rs","byte_start":428727,"byte_end":428735,"line_start":136,"line_end":136,"column_start":6,"column_end":14},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2562},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/inst_stream.rs","byte_start":429421,"byte_end":429433,"line_start":159,"line_end":159,"column_start":6,"column_end":18},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2596},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/inst_stream.rs","byte_start":430021,"byte_end":430044,"line_start":181,"line_end":181,"column_start":6,"column_end":29},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1020},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/analysis.rs","byte_start":470843,"byte_end":470852,"line_start":24,"line_end":24,"column_start":21,"column_end":30},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2623},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/analysis.rs","byte_start":470989,"byte_end":470998,"line_start":30,"line_end":30,"column_start":6,"column_end":15},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2623},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/assign_registers.rs","byte_start":504228,"byte_end":504237,"line_start":35,"line_end":35,"column_start":21,"column_end":30},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2656},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/assign_registers.rs","byte_start":505041,"byte_end":505056,"line_start":56,"line_end":56,"column_start":6,"column_end":21},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/assign_registers.rs","byte_start":512060,"byte_end":512075,"line_start":259,"line_end":259,"column_start":15,"column_end":30},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2670},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/assign_registers.rs","byte_start":513365,"byte_end":513384,"line_start":305,"line_end":305,"column_start":43,"column_end":62},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1215},"to":{"krate":2,"index":4984}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/assign_registers.rs","byte_start":513838,"byte_end":513853,"line_start":322,"line_end":322,"column_start":38,"column_end":53},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2670},"to":{"krate":2,"index":2174}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/assign_registers.rs","byte_start":514268,"byte_end":514283,"line_start":334,"line_end":334,"column_start":41,"column_end":56},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2670},"to":{"krate":2,"index":2178}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/assign_registers.rs","byte_start":514956,"byte_end":514969,"line_start":355,"line_end":355,"column_start":6,"column_end":19},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1232},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/assign_registers.rs","byte_start":515896,"byte_end":515909,"line_start":384,"line_end":384,"column_start":25,"column_end":38},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1239},"to":{"krate":2,"index":1648}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/assign_registers.rs","byte_start":516026,"byte_end":516039,"line_start":390,"line_end":390,"column_start":18,"column_end":31},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1239},"to":{"krate":2,"index":1653}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/assign_registers.rs","byte_start":516069,"byte_end":516082,"line_start":392,"line_end":392,"column_start":26,"column_end":39},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1239},"to":{"krate":2,"index":1685}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/assign_registers.rs","byte_start":516375,"byte_end":516388,"line_start":401,"line_end":401,"column_start":19,"column_end":32},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1239},"to":{"krate":2,"index":1674}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/assign_registers.rs","byte_start":516582,"byte_end":516600,"line_start":412,"line_end":412,"column_start":6,"column_end":24},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/assign_registers.rs","byte_start":518047,"byte_end":518052,"line_start":459,"line_end":459,"column_start":23,"column_end":28},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/resolve_moves.rs","byte_start":551798,"byte_end":551807,"line_start":186,"line_end":186,"column_start":6,"column_end":15},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2689},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/resolve_moves.rs","byte_start":565011,"byte_end":565022,"line_start":558,"line_end":558,"column_start":6,"column_end":17},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2700},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/resolve_moves.rs","byte_start":565269,"byte_end":565275,"line_start":572,"line_end":572,"column_start":21,"column_end":27},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1356},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/resolve_moves.rs","byte_start":565673,"byte_end":565679,"line_start":585,"line_end":585,"column_start":6,"column_end":12},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/mod.rs","byte_start":448143,"byte_end":448153,"line_start":45,"line_end":45,"column_start":15,"column_end":25},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2713},"to":{"krate":2,"index":2117}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/mod.rs","byte_start":449323,"byte_end":449340,"line_start":88,"line_end":88,"column_start":27,"column_end":44},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2746},"to":{"krate":2,"index":1910}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/mod.rs","byte_start":450460,"byte_end":450477,"line_start":120,"line_end":120,"column_start":21,"column_end":38},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2746},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/mod.rs","byte_start":450834,"byte_end":450839,"line_start":134,"line_end":134,"column_start":21,"column_end":26},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2754},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/mod.rs","byte_start":451059,"byte_end":451072,"line_start":146,"line_end":146,"column_start":23,"column_end":36},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2767},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/mod.rs","byte_start":451859,"byte_end":451874,"line_start":178,"line_end":178,"column_start":23,"column_end":38},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2772},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/mod.rs","byte_start":452243,"byte_end":452258,"line_start":192,"line_end":192,"column_start":6,"column_end":21},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2772},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/mod.rs","byte_start":453191,"byte_end":453198,"line_start":228,"line_end":228,"column_start":21,"column_end":28},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2784},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/mod.rs","byte_start":453748,"byte_end":453755,"line_start":252,"line_end":252,"column_start":6,"column_end":13},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2784},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/mod.rs","byte_start":454608,"byte_end":454616,"line_start":299,"line_end":299,"column_start":6,"column_end":14},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2808},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/mod.rs","byte_start":455104,"byte_end":455112,"line_start":320,"line_end":320,"column_start":23,"column_end":31},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2808},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/linear_scan/mod.rs","byte_start":455521,"byte_end":455530,"line_start":336,"line_end":336,"column_start":6,"column_end":15},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1414},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/reg_maps.rs","byte_start":577290,"byte_end":577310,"line_start":26,"line_end":26,"column_start":6,"column_end":26},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2822},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/reg_maps.rs","byte_start":581841,"byte_end":581861,"line_start":145,"line_end":145,"column_start":25,"column_end":45},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2822},"to":{"krate":0,"index":1673}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/reg_maps.rs","byte_start":588220,"byte_end":588241,"line_start":310,"line_end":310,"column_start":6,"column_end":27},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/reg_maps.rs","byte_start":589031,"byte_end":589052,"line_start":335,"line_end":335,"column_start":25,"column_end":46},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2828},"to":{"krate":0,"index":1673}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/snapshot.rs","byte_start":591205,"byte_end":591215,"line_start":58,"line_end":58,"column_start":6,"column_end":16},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2874},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/snapshot.rs","byte_start":594842,"byte_end":594852,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2863},"to":{"krate":0,"index":1682}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/sparse_set.rs","byte_start":600701,"byte_end":600711,"line_start":50,"line_end":50,"column_start":9,"column_end":19},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1542},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/sparse_set.rs","byte_start":605572,"byte_end":605582,"line_start":194,"line_end":194,"column_start":9,"column_end":19},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1542},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/sparse_set.rs","byte_start":619223,"byte_end":619233,"line_start":572,"line_end":572,"column_start":24,"column_end":34},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/sparse_set.rs","byte_start":620074,"byte_end":620084,"line_start":596,"line_end":596,"column_start":19,"column_end":29},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1542},"to":{"krate":2,"index":1620}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/sparse_set.rs","byte_start":620842,"byte_end":620852,"line_start":626,"line_end":626,"column_start":16,"column_end":26},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1542},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/sparse_set.rs","byte_start":621254,"byte_end":621268,"line_start":640,"line_end":640,"column_start":33,"column_end":47},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1576},"to":{"krate":2,"index":4984}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/union_find.rs","byte_start":632189,"byte_end":632198,"line_start":83,"line_end":83,"column_start":20,"column_end":29},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/union_find.rs","byte_start":640124,"byte_end":640133,"line_start":275,"line_end":275,"column_start":20,"column_end":29},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/union_find.rs","byte_start":647302,"byte_end":647323,"line_start":430,"line_end":430,"column_start":20,"column_end":41},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1614},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/union_find.rs","byte_start":648862,"byte_end":648883,"line_start":468,"line_end":468,"column_start":20,"column_end":41},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1614},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/union_find.rs","byte_start":649685,"byte_end":649713,"line_start":485,"line_end":485,"column_start":37,"column_end":65},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1625},"to":{"krate":2,"index":4984}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/union_find.rs","byte_start":650499,"byte_end":650520,"line_start":511,"line_end":511,"column_start":20,"column_end":41},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1614},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/union_find.rs","byte_start":650761,"byte_end":650791,"line_start":520,"line_end":520,"column_start":37,"column_end":67},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1639},"to":{"krate":2,"index":4984}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":6907,"byte_end":6912,"line_start":159,"line_end":159,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":6198},"to":{"krate":0,"index":1673}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":17447,"byte_end":17460,"line_start":406,"line_end":406,"column_start":23,"column_end":36},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":2995},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":17791,"byte_end":17800,"line_start":421,"line_end":421,"column_start":21,"column_end":30},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":3015},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":18539,"byte_end":18546,"line_start":442,"line_end":442,"column_start":27,"column_end":34},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":3024},"to":{"krate":2,"index":1910}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/regalloc-0.0.27/src/lib.rs","byte_start":18730,"byte_end":18737,"line_start":451,"line_end":451,"column_start":21,"column_end":28},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":3024},"to":{"krate":2,"index":6198}}]}