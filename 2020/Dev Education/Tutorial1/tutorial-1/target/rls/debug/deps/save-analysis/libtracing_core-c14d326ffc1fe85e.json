{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16","program":"/home/alansky/.rustup/toolchains/nightly-2020-07-02-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tracing_core","--edition=2018","/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"std\"","-C","metadata=c14d326ffc1fe85e","-C","extra-filename=-c14d326ffc1fe85e","--out-dir","/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps","-L","dependency=/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps","--extern","lazy_static=/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps/liblazy_static-b2c940d7bd864b5c.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/alansky/.rustup/toolchains/nightly-2020-07-02-x86_64-unknown-linux-gnu"],"output":"/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps/libtracing_core-c14d326ffc1fe85e.rmeta"},"prelude":{"crate_id":{"name":"tracing_core","disambiguator":[5479940586596406954,7016518149327033342]},"crate_root":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src","external_crates":[{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15171822389981698586,9596930288317159773]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[309489290393175025,9116230521283433112]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4391997853131671271,2752570053062459009]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[680011651820151502,5018330578075825921]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4249137077638888796,17834651879708154657]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[13082819734751436340,16140962863799451331]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8371738565553744270,17943531712744420027]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17468180561489458258,7285327718060701271]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[14551538593801126895,13478667531910088620]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[16022708609364593127,529027819734980321]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[18024135037275500963,3187671833432925572]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5194268306266264186,14551347693776345482]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[18097577876301876973,855323625195415836]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[5106557709654100294,13294098602154984522]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","num":15,"id":{"name":"lazy_static","disambiguator":[15176842081764420185,10336459146544918906]}}],"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":0,"byte_end":8568,"line_start":1,"line_end":279,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":1,"index":5164},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":8117,"byte_end":8121,"line_start":253,"line_end":253,"column_start":23,"column_end":27},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":32},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":8325,"byte_end":8333,"line_start":267,"line_end":267,"column_start":15,"column_end":23},"alias_span":null,"name":"Callsite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":607},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":8351,"byte_end":8359,"line_start":268,"line_end":268,"column_start":17,"column_end":25},"alias_span":null,"name":"Dispatch","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":624},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":8372,"byte_end":8377,"line_start":269,"line_end":269,"column_start":12,"column_end":17},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":632},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":8390,"byte_end":8395,"line_start":270,"line_end":270,"column_start":12,"column_end":17},"alias_span":null,"name":"Field","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":873},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":8412,"byte_end":8417,"line_start":271,"line_end":271,"column_start":16,"column_end":21},"alias_span":null,"name":"Level","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":887},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":8419,"byte_end":8430,"line_start":271,"line_end":271,"column_start":23,"column_end":34},"alias_span":null,"name":"LevelFilter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":365},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":8432,"byte_end":8440,"line_start":271,"line_end":271,"column_start":36,"column_end":44},"alias_span":null,"name":"Metadata","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":548},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":8459,"byte_end":8469,"line_start":272,"line_end":272,"column_start":17,"column_end":27},"alias_span":null,"name":"Subscriber","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":859},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":8500,"byte_end":8504,"line_start":275,"line_end":275,"column_start":26,"column_end":30},"alias_span":null,"name":"Kind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1010},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":8518,"byte_end":8526,"line_start":275,"line_end":275,"column_start":44,"column_end":52},"alias_span":null,"name":"Interest","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":0,"byte_end":8568,"line_start":1,"line_end":279,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":46},{"krate":0,"index":166},{"krate":0,"index":188},{"krate":0,"index":354},{"krate":0,"index":483},{"krate":0,"index":485},{"krate":0,"index":537},{"krate":0,"index":539},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589}],"decl_id":null,"docs":" Core primitives for `tracing`.","sig":null,"attributes":[{"value":"! Core primitives for `tracing`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":0,"byte_end":34,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":35,"byte_end":38,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! [`tracing`] is a framework for instrumenting Rust programs to collect","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":39,"byte_end":112,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"! structured, event-based diagnostic information. This crate defines the core","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":113,"byte_end":192,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"! primitives of `tracing`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":193,"byte_end":221,"line_start":5,"line_end":5,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":222,"byte_end":225,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! This crate provides:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":226,"byte_end":250,"line_start":7,"line_end":7,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":251,"byte_end":254,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! * [`span::Id`] identifies a span within the execution of a program.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":255,"byte_end":326,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":327,"byte_end":330,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! * [`Event`] represents a single event within a trace.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":331,"byte_end":388,"line_start":11,"line_end":11,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":389,"byte_end":392,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! * [`Subscriber`], the trait implemented to collect trace data.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":393,"byte_end":459,"line_start":13,"line_end":13,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":460,"byte_end":463,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! * [`Metadata`] and [`Callsite`] provide information describing spans and","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":464,"byte_end":540,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"!   `Event`s.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":541,"byte_end":556,"line_start":16,"line_end":16,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":557,"byte_end":560,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! * [`Field`], [`FieldSet`], [`Value`], and [`ValueSet`] represent the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":561,"byte_end":633,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"!   structured data attached to a span.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":634,"byte_end":675,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":676,"byte_end":679,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! * [`Dispatch`] allows spans and events to be dispatched to `Subscriber`s.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":680,"byte_end":757,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":758,"byte_end":761,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! In addition, it defines the global callsite registry and per-thread current","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":762,"byte_end":841,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"! dispatcher which other components of the tracing system rely on.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":842,"byte_end":910,"line_start":24,"line_end":24,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":911,"byte_end":914,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! *Compiler support: [requires `rustc` 1.40+][msrv]*","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":915,"byte_end":969,"line_start":26,"line_end":26,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":970,"byte_end":973,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! [msrv]: #supported-rust-versions","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":974,"byte_end":1010,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":1011,"byte_end":1014,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! ## Usage","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":1015,"byte_end":1027,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":1028,"byte_end":1031,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! Application authors will typically not use this crate directly. Instead,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":1032,"byte_end":1108,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"! they will use the [`tracing`] crate, which provides a much more","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":1109,"byte_end":1176,"line_start":33,"line_end":33,"column_start":1,"column_end":68}},{"value":"! fully-featured API. However, this crate's API will change very infrequently,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":1177,"byte_end":1257,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"! so it may be used when dependencies must be very stable.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":1258,"byte_end":1318,"line_start":35,"line_end":35,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":1319,"byte_end":1322,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"! `Subscriber` implementations may depend on `tracing-core` rather than","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":1323,"byte_end":1396,"line_start":37,"line_end":37,"column_start":1,"column_end":74}},{"value":"! `tracing`, as the additional APIs provided by `tracing` are primarily useful","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":1397,"byte_end":1477,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"! for instrumenting libraries and applications, and are generally not","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":1478,"byte_end":1549,"line_start":39,"line_end":39,"column_start":1,"column_end":72}},{"value":"! necessary for `Subscriber` implementations.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":1550,"byte_end":1597,"line_start":40,"line_end":40,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":1598,"byte_end":1601,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! The [`tokio-rs/tracing`] repository contains less stable crates designed to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":1602,"byte_end":1681,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"! be used with the `tracing` ecosystem. It includes a collection of","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":1682,"byte_end":1751,"line_start":43,"line_end":43,"column_start":1,"column_end":70}},{"value":"! `Subscriber` implementations, as well as utility and adapter crates.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":1752,"byte_end":1824,"line_start":44,"line_end":44,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":1825,"byte_end":1828,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"! ### Crate Feature Flags","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":1829,"byte_end":1856,"line_start":46,"line_end":46,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":1857,"byte_end":1860,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! The following crate feature flags are available:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":1861,"byte_end":1913,"line_start":48,"line_end":48,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":1914,"byte_end":1917,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"! * `std`: Depend on the Rust standard library (enabled by default).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":1918,"byte_end":1988,"line_start":50,"line_end":50,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":1989,"byte_end":1992,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"!   `no_std` users may disable this feature with `default-features = false`:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":1993,"byte_end":2071,"line_start":52,"line_end":52,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":2072,"byte_end":2075,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"!   ```toml","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":2076,"byte_end":2089,"line_start":54,"line_end":54,"column_start":1,"column_end":14}},{"value":"!   [dependencies]","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":2090,"byte_end":2110,"line_start":55,"line_end":55,"column_start":1,"column_end":21}},{"value":"!   tracing-core = { version = \"0.1.16\", default-features = false }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":2111,"byte_end":2180,"line_start":56,"line_end":56,"column_start":1,"column_end":70}},{"value":"!   ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":2181,"byte_end":2190,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":2191,"byte_end":2194,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"!   **Note**:`tracing-core`'s `no_std` support requires `liballoc`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":2195,"byte_end":2264,"line_start":59,"line_end":59,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":2265,"byte_end":2268,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"! ## Supported Rust Versions","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":2269,"byte_end":2299,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":2300,"byte_end":2303,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! Tracing is built against the latest stable release. The minimum supported","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":2304,"byte_end":2381,"line_start":63,"line_end":63,"column_start":1,"column_end":78}},{"value":"! version is 1.40. The current Tracing version is not guaranteed to build on","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":2382,"byte_end":2460,"line_start":64,"line_end":64,"column_start":1,"column_end":79}},{"value":"! Rust versions earlier than the minimum supported version.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":2461,"byte_end":2522,"line_start":65,"line_end":65,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":2523,"byte_end":2526,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"! Tracing follows the same compiler support policies as the rest of the Tokio","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":2527,"byte_end":2606,"line_start":67,"line_end":67,"column_start":1,"column_end":80}},{"value":"! project. The current stable Rust compiler and the three most recent minor","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":2607,"byte_end":2684,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"! versions before it will always be supported. For example, if the current","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":2685,"byte_end":2761,"line_start":69,"line_end":69,"column_start":1,"column_end":77}},{"value":"! stable compiler version is 1.45, the minimum supported version will not be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":2762,"byte_end":2840,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"! increased past 1.42, three minor versions prior. Increasing the minimum","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":2841,"byte_end":2916,"line_start":71,"line_end":71,"column_start":1,"column_end":76}},{"value":"! supported compiler version is not considered a semver breaking change as","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":2917,"byte_end":2993,"line_start":72,"line_end":72,"column_start":1,"column_end":77}},{"value":"! long as doing so complies with this policy.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":2994,"byte_end":3041,"line_start":73,"line_end":73,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":3042,"byte_end":3045,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":3046,"byte_end":3049,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! [`span::Id`]: span/struct.Id.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":3050,"byte_end":3087,"line_start":76,"line_end":76,"column_start":1,"column_end":38}},{"value":"! [`Event`]: event/struct.Event.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":3088,"byte_end":3126,"line_start":77,"line_end":77,"column_start":1,"column_end":39}},{"value":"! [`Subscriber`]: subscriber/trait.Subscriber.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":3127,"byte_end":3179,"line_start":78,"line_end":78,"column_start":1,"column_end":53}},{"value":"! [`Metadata`]: metadata/struct.Metadata.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":3180,"byte_end":3227,"line_start":79,"line_end":79,"column_start":1,"column_end":48}},{"value":"! [`Callsite`]: callsite/trait.Callsite.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":3228,"byte_end":3274,"line_start":80,"line_end":80,"column_start":1,"column_end":47}},{"value":"! [`Field`]: field/struct.Field.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":3275,"byte_end":3313,"line_start":81,"line_end":81,"column_start":1,"column_end":39}},{"value":"! [`FieldSet`]: field/struct.FieldSet.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":3314,"byte_end":3358,"line_start":82,"line_end":82,"column_start":1,"column_end":45}},{"value":"! [`Value`]: field/trait.Value.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":3359,"byte_end":3396,"line_start":83,"line_end":83,"column_start":1,"column_end":38}},{"value":"! [`ValueSet`]: field/struct.ValueSet.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":3397,"byte_end":3441,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"! [`Dispatch`]: dispatcher/struct.Dispatch.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":3442,"byte_end":3491,"line_start":85,"line_end":85,"column_start":1,"column_end":50}},{"value":"! [`tokio-rs/tracing`]: https://github.com/tokio-rs/tracing","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":3492,"byte_end":3553,"line_start":86,"line_end":86,"column_start":1,"column_end":62}},{"value":"! [`tracing`]: https://crates.io/crates/tracing","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":3554,"byte_end":3603,"line_start":87,"line_end":87,"column_start":1,"column_end":50}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub, bad_style, const_err, dead_code, improper_ctypes,\n       non_shorthand_field_patterns, no_mangle_generic_items,\n       overflowing_literals, path_statements, patterns_in_fns_without_body,\n       private_in_public, unconditional_recursion, unused, unused_allocation,\n       unused_comparisons, unused_parens, while_true)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":3937,"byte_end":4399,"line_start":95,"line_end":116,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":7},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"callsite","qualname":"::callsite","value":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":1046},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":591},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":599},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":32},{"krate":0,"index":602},{"krate":0,"index":605},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":43}],"decl_id":null,"docs":" Callsites represent the source locations from which spans or events\n originate.\n","sig":null,"attributes":[{"value":"! Callsites represent the source locations from which spans or events","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":8570,"byte_end":8641,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"! originate.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":8642,"byte_end":8656,"line_start":2,"line_end":2,"column_start":1,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":32},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":10933,"byte_end":10941,"line_start":77,"line_end":77,"column_start":11,"column_end":19},"name":"Callsite","qualname":"::callsite::Callsite","value":"Callsite: Sync","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34}],"decl_id":null,"docs":" Trait implemented by callsites.","sig":null,"attributes":[{"value":"/ Trait implemented by callsites.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":10727,"byte_end":10762,"line_start":73,"line_end":73,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":10763,"byte_end":10766,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ These functions are only intended to be called by the [`Registry`] which","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":10767,"byte_end":10843,"line_start":75,"line_end":75,"column_start":1,"column_end":77}},{"value":"/ correctly handles determining the common interest between all subscribers.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":10844,"byte_end":10922,"line_start":76,"line_end":76,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":11071,"byte_end":11083,"line_start":81,"line_end":81,"column_start":8,"column_end":20},"name":"set_interest","qualname":"::callsite::Callsite::set_interest","value":"pub fn set_interest(&Self, Interest)","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Sets the [`Interest`] for this callsite.","sig":null,"attributes":[{"value":"/ Sets the [`Interest`] for this callsite.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":10954,"byte_end":10998,"line_start":78,"line_end":78,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":11003,"byte_end":11006,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ [`Interest`]: ../subscriber/struct.Interest.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":11011,"byte_end":11063,"line_start":80,"line_end":80,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":11242,"byte_end":11250,"line_start":86,"line_end":86,"column_start":8,"column_end":16},"name":"metadata","qualname":"::callsite::Callsite::metadata","value":"pub fn metadata(&Self) -> &Metadata","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Returns the [metadata] associated with the callsite.","sig":null,"attributes":[{"value":"/ Returns the [metadata] associated with the callsite.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":11117,"byte_end":11173,"line_start":83,"line_end":83,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":11178,"byte_end":11181,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ [metadata]: ../metadata/struct.Metadata.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":11186,"byte_end":11234,"line_start":85,"line_end":85,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":602},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":11477,"byte_end":11487,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"Identifier","qualname":"::callsite::Identifier","value":"","parent":null,"children":[],"decl_id":null,"docs":" Uniquely identifies a [`Callsite`]","sig":null,"attributes":[{"value":"/ Uniquely identifies a [`Callsite`]","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":11279,"byte_end":11317,"line_start":89,"line_end":89,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":11318,"byte_end":11321,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ Two `Identifier`s are equal if they both refer to the same callsite.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":11322,"byte_end":11394,"line_start":91,"line_end":91,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":11395,"byte_end":11398,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ [`Callsite`]: ../callsite/trait.Callsite.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":11399,"byte_end":11448,"line_start":93,"line_end":93,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":604},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":12100,"byte_end":12125,"line_start":105,"line_end":105,"column_start":5,"column_end":30},"name":"0","qualname":"::callsite::Identifier::0","value":"&'static (dyn callsite::Callsite + 'static)","parent":{"krate":0,"index":602},"children":[],"decl_id":null,"docs":" **Warning**: The fields on this type are currently `pub` because it must\n be able to be constructed statically by macros. However, when `const\n fn`s are available on stable Rust, this will no longer be necessary.\n Thus, these fields are *not* considered stable public API, and they may\n change warning. Do not rely on any fields on `Identifier`. When\n constructing new `Identifier`s, use the `identify_callsite!` macro or\n the `Callsite::id` function instead.\n","sig":null,"attributes":[{"value":"/ **Warning**: The fields on this type are currently `pub` because it must","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":11493,"byte_end":11569,"line_start":96,"line_end":96,"column_start":5,"column_end":81}},{"value":"/ be able to be constructed statically by macros. However, when `const","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":11574,"byte_end":11646,"line_start":97,"line_end":97,"column_start":5,"column_end":77}},{"value":"/ fn`s are available on stable Rust, this will no longer be necessary.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":11651,"byte_end":11723,"line_start":98,"line_end":98,"column_start":5,"column_end":77}},{"value":"/ Thus, these fields are *not* considered stable public API, and they may","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":11728,"byte_end":11803,"line_start":99,"line_end":99,"column_start":5,"column_end":80}},{"value":"/ change warning. Do not rely on any fields on `Identifier`. When","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":11808,"byte_end":11875,"line_start":100,"line_end":100,"column_start":5,"column_end":72}},{"value":"/ constructing new `Identifier`s, use the `identify_callsite!` macro or","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":11880,"byte_end":11953,"line_start":101,"line_end":101,"column_start":5,"column_end":78}},{"value":"/ the `Callsite::id` function instead.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":11958,"byte_end":11998,"line_start":102,"line_end":102,"column_start":5,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":35},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":13176,"byte_end":13198,"line_start":126,"line_end":126,"column_start":8,"column_end":30},"name":"rebuild_interest_cache","qualname":"::callsite::rebuild_interest_cache","value":"pub fn rebuild_interest_cache()","parent":null,"children":[],"decl_id":null,"docs":" Clear and reregister interest on every [`Callsite`]","sig":null,"attributes":[{"value":"/ Clear and reregister interest on every [`Callsite`]","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":12131,"byte_end":12186,"line_start":108,"line_end":108,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":12187,"byte_end":12190,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ This function is intended for runtime reconfiguration of filters on traces","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":12191,"byte_end":12269,"line_start":110,"line_end":110,"column_start":1,"column_end":79}},{"value":"/ when the filter recalculation is much less frequent than trace events are.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":12270,"byte_end":12348,"line_start":111,"line_end":111,"column_start":1,"column_end":79}},{"value":"/ The alternative is to have the [`Subscriber`] that supports runtime","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":12349,"byte_end":12420,"line_start":112,"line_end":112,"column_start":1,"column_end":72}},{"value":"/ reconfiguration of filters always return [`Interest::sometimes()`] so that","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":12421,"byte_end":12499,"line_start":113,"line_end":113,"column_start":1,"column_end":79}},{"value":"/ [`enabled`] is evaluated for every event.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":12500,"byte_end":12545,"line_start":114,"line_end":114,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":12546,"byte_end":12549,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ This function will also re-compute the global maximum level as determined by","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":12550,"byte_end":12630,"line_start":116,"line_end":116,"column_start":1,"column_end":81}},{"value":"/ the [`Subscriber::max_level_hint`] method. If a [`Subscriber`]","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":12631,"byte_end":12697,"line_start":117,"line_end":117,"column_start":1,"column_end":67}},{"value":"/ implementation changes the value returned by its `max_level_hint`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":12698,"byte_end":12767,"line_start":118,"line_end":118,"column_start":1,"column_end":70}},{"value":"/ implementation at runtime, then it **must** call this function after that","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":12768,"byte_end":12845,"line_start":119,"line_end":119,"column_start":1,"column_end":78}},{"value":"/ value changes, in order for the change to be reflected.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":12846,"byte_end":12905,"line_start":120,"line_end":120,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":12906,"byte_end":12909,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ [`Callsite`]: ../callsite/trait.Callsite.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":12910,"byte_end":12959,"line_start":122,"line_end":122,"column_start":1,"column_end":50}},{"value":"/ [`enabled`]: ../subscriber/trait.Subscriber.html#tymethod.enabled","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":12960,"byte_end":13029,"line_start":123,"line_end":123,"column_start":1,"column_end":70}},{"value":"/ [`Interest::sometimes()`]: ../subscriber/struct.Interest.html#method.sometimes","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":13030,"byte_end":13112,"line_start":124,"line_end":124,"column_start":1,"column_end":83}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":13113,"byte_end":13168,"line_start":125,"line_end":125,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":36},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":13444,"byte_end":13452,"line_start":135,"line_end":135,"column_start":8,"column_end":16},"name":"register","qualname":"::callsite::register","value":"pub fn register(&'static Callsite)","parent":null,"children":[],"decl_id":null,"docs":" Register a new `Callsite` with the global registry.","sig":null,"attributes":[{"value":"/ Register a new `Callsite` with the global registry.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":13288,"byte_end":13343,"line_start":131,"line_end":131,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":13344,"byte_end":13347,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ This should be called once per callsite after the callsite has been","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":13348,"byte_end":13419,"line_start":133,"line_end":133,"column_start":1,"column_end":72}},{"value":"/ constructed.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":13420,"byte_end":13436,"line_start":134,"line_end":134,"column_start":1,"column_end":17}}]},{"kind":"Mod","id":{"krate":0,"index":46},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dispatcher","qualname":"::dispatcher","value":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":607},{"krate":0,"index":609},{"krate":0,"index":611},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":615},{"krate":0,"index":618},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":620},{"krate":0,"index":622},{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":99},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":137},{"krate":0,"index":139},{"krate":0,"index":148},{"krate":0,"index":153},{"krate":0,"index":157},{"krate":0,"index":160},{"krate":0,"index":163}],"decl_id":null,"docs":" Dispatches trace events to [`Subscriber`]s.","sig":null,"attributes":[{"value":"! Dispatches trace events to [`Subscriber`]s.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":14356,"byte_end":14403,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":14404,"byte_end":14407,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The _dispatcher_ is the component of the tracing system which is responsible","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":14408,"byte_end":14488,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"! for forwarding trace data from the instrumentation points that generate it","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":14489,"byte_end":14567,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"! to the subscriber that collects it.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":14568,"byte_end":14607,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":14608,"byte_end":14611,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! # Using the Trace Dispatcher","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":14612,"byte_end":14644,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":14645,"byte_end":14648,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! Every thread in a program using `tracing` has a _default subscriber_. When","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":14649,"byte_end":14727,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"! events occur, or spans are created, they are dispatched to the thread's","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":14728,"byte_end":14803,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"! current subscriber.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":14804,"byte_end":14827,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":14828,"byte_end":14831,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! ## Setting the Default Subscriber","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":14832,"byte_end":14869,"line_start":13,"line_end":13,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":14870,"byte_end":14873,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! By default, the current subscriber is an empty implementation that does","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":14874,"byte_end":14949,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"! nothing. To use a subscriber implementation, it must be set as the default.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":14950,"byte_end":15029,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"! There are two methods for doing so: [`with_default`] and","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":15030,"byte_end":15090,"line_start":17,"line_end":17,"column_start":1,"column_end":61}},{"value":"! [`set_global_default`]. `with_default` sets the default subscriber for the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":15091,"byte_end":15169,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"! duration of a scope, while `set_global_default` sets a default subscriber","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":15170,"byte_end":15247,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"! for the entire process.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":15248,"byte_end":15275,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":15276,"byte_end":15279,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! To use either of these functions, we must first wrap our subscriber in a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":15280,"byte_end":15356,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"! [`Dispatch`], a cloneable, type-erased reference to a subscriber. For","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":15357,"byte_end":15430,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"! example:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":15431,"byte_end":15443,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"! ```rust","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":15444,"byte_end":15455,"line_start":25,"line_end":25,"column_start":1,"column_end":12}},{"value":"! # pub struct FooSubscriber;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":15456,"byte_end":15487,"line_start":26,"line_end":26,"column_start":1,"column_end":32}},{"value":"! # use tracing_core::{","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":15488,"byte_end":15513,"line_start":27,"line_end":27,"column_start":1,"column_end":26}},{"value":"! #   dispatcher, Event, Metadata,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":15514,"byte_end":15550,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"! #   span::{Attributes, Id, Record}","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":15551,"byte_end":15589,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"! # };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":15590,"byte_end":15598,"line_start":30,"line_end":30,"column_start":1,"column_end":9}},{"value":"! # impl tracing_core::Subscriber for FooSubscriber {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":15599,"byte_end":15654,"line_start":31,"line_end":31,"column_start":1,"column_end":56}},{"value":"! #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":15655,"byte_end":15723,"line_start":32,"line_end":32,"column_start":1,"column_end":69}},{"value":"! #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":15724,"byte_end":15771,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"! #   fn event(&self, _: &Event) {}","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":15772,"byte_end":15809,"line_start":34,"line_end":34,"column_start":1,"column_end":38}},{"value":"! #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":15810,"byte_end":15866,"line_start":35,"line_end":35,"column_start":1,"column_end":57}},{"value":"! #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":15867,"byte_end":15924,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"! #   fn enter(&self, _: &Id) {}","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":15925,"byte_end":15959,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"! #   fn exit(&self, _: &Id) {}","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":15960,"byte_end":15993,"line_start":38,"line_end":38,"column_start":1,"column_end":34}},{"value":"! # }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":15994,"byte_end":16001,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"! # impl FooSubscriber { fn new() -> Self { FooSubscriber } }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":16002,"byte_end":16065,"line_start":40,"line_end":40,"column_start":1,"column_end":64}},{"value":"! use dispatcher::Dispatch;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":16066,"byte_end":16095,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":16096,"byte_end":16099,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"! let my_subscriber = FooSubscriber::new();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":16100,"byte_end":16145,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"! let my_dispatch = Dispatch::new(my_subscriber);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":16146,"byte_end":16197,"line_start":44,"line_end":44,"column_start":1,"column_end":52}},{"value":"! ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":16198,"byte_end":16205,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"! Then, we can use [`with_default`] to set our `Dispatch` as the default for","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":16206,"byte_end":16284,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"! the duration of a block:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":16285,"byte_end":16313,"line_start":47,"line_end":47,"column_start":1,"column_end":29}},{"value":"! ```rust","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":16314,"byte_end":16325,"line_start":48,"line_end":48,"column_start":1,"column_end":12}},{"value":"! # pub struct FooSubscriber;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":16326,"byte_end":16357,"line_start":49,"line_end":49,"column_start":1,"column_end":32}},{"value":"! # use tracing_core::{","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":16358,"byte_end":16383,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"! #   dispatcher, Event, Metadata,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":16384,"byte_end":16420,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"! #   span::{Attributes, Id, Record}","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":16421,"byte_end":16459,"line_start":52,"line_end":52,"column_start":1,"column_end":39}},{"value":"! # };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":16460,"byte_end":16468,"line_start":53,"line_end":53,"column_start":1,"column_end":9}},{"value":"! # impl tracing_core::Subscriber for FooSubscriber {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":16469,"byte_end":16524,"line_start":54,"line_end":54,"column_start":1,"column_end":56}},{"value":"! #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":16525,"byte_end":16593,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"! #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":16594,"byte_end":16641,"line_start":56,"line_end":56,"column_start":1,"column_end":48}},{"value":"! #   fn event(&self, _: &Event) {}","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":16642,"byte_end":16679,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"! #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":16680,"byte_end":16736,"line_start":58,"line_end":58,"column_start":1,"column_end":57}},{"value":"! #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":16737,"byte_end":16794,"line_start":59,"line_end":59,"column_start":1,"column_end":58}},{"value":"! #   fn enter(&self, _: &Id) {}","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":16795,"byte_end":16829,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"! #   fn exit(&self, _: &Id) {}","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":16830,"byte_end":16863,"line_start":61,"line_end":61,"column_start":1,"column_end":34}},{"value":"! # }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":16864,"byte_end":16871,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"! # impl FooSubscriber { fn new() -> Self { FooSubscriber } }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":16872,"byte_end":16935,"line_start":63,"line_end":63,"column_start":1,"column_end":64}},{"value":"! # let my_subscriber = FooSubscriber::new();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":16936,"byte_end":16983,"line_start":64,"line_end":64,"column_start":1,"column_end":48}},{"value":"! # let my_dispatch = dispatcher::Dispatch::new(my_subscriber);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":16984,"byte_end":17049,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"! // no default subscriber","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":17050,"byte_end":17078,"line_start":66,"line_end":66,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":17079,"byte_end":17082,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"! # #[cfg(feature = \"std\")]","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":17083,"byte_end":17112,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"! dispatcher::with_default(&my_dispatch, || {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":17113,"byte_end":17160,"line_start":69,"line_end":69,"column_start":1,"column_end":48}},{"value":"!     // my_subscriber is the default","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":17161,"byte_end":17200,"line_start":70,"line_end":70,"column_start":1,"column_end":40}},{"value":"! });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":17201,"byte_end":17208,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":17209,"byte_end":17212,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"! // no default subscriber again","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":17213,"byte_end":17247,"line_start":73,"line_end":73,"column_start":1,"column_end":35}},{"value":"! ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":17248,"byte_end":17255,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"! It's important to note that `with_default` will not propagate the current","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":17256,"byte_end":17333,"line_start":75,"line_end":75,"column_start":1,"column_end":78}},{"value":"! thread's default subscriber to any threads spawned within the `with_default`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":17334,"byte_end":17414,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"! block. To propagate the default subscriber to new threads, either use","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":17415,"byte_end":17488,"line_start":77,"line_end":77,"column_start":1,"column_end":74}},{"value":"! `with_default` from the new thread, or use `set_global_default`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":17489,"byte_end":17557,"line_start":78,"line_end":78,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":17558,"byte_end":17561,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"! As an alternative to `with_default`, we can use [`set_global_default`] to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":17562,"byte_end":17639,"line_start":80,"line_end":80,"column_start":1,"column_end":78}},{"value":"! set a `Dispatch` as the default for all threads, for the lifetime of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":17640,"byte_end":17716,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"! program. For example:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":17717,"byte_end":17742,"line_start":82,"line_end":82,"column_start":1,"column_end":26}},{"value":"! ```rust","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":17743,"byte_end":17754,"line_start":83,"line_end":83,"column_start":1,"column_end":12}},{"value":"! # pub struct FooSubscriber;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":17755,"byte_end":17786,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"! # use tracing_core::{","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":17787,"byte_end":17812,"line_start":85,"line_end":85,"column_start":1,"column_end":26}},{"value":"! #   dispatcher, Event, Metadata,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":17813,"byte_end":17849,"line_start":86,"line_end":86,"column_start":1,"column_end":37}},{"value":"! #   span::{Attributes, Id, Record}","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":17850,"byte_end":17888,"line_start":87,"line_end":87,"column_start":1,"column_end":39}},{"value":"! # };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":17889,"byte_end":17897,"line_start":88,"line_end":88,"column_start":1,"column_end":9}},{"value":"! # impl tracing_core::Subscriber for FooSubscriber {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":17898,"byte_end":17953,"line_start":89,"line_end":89,"column_start":1,"column_end":56}},{"value":"! #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":17954,"byte_end":18022,"line_start":90,"line_end":90,"column_start":1,"column_end":69}},{"value":"! #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":18023,"byte_end":18070,"line_start":91,"line_end":91,"column_start":1,"column_end":48}},{"value":"! #   fn event(&self, _: &Event) {}","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":18071,"byte_end":18108,"line_start":92,"line_end":92,"column_start":1,"column_end":38}},{"value":"! #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":18109,"byte_end":18165,"line_start":93,"line_end":93,"column_start":1,"column_end":57}},{"value":"! #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":18166,"byte_end":18223,"line_start":94,"line_end":94,"column_start":1,"column_end":58}},{"value":"! #   fn enter(&self, _: &Id) {}","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":18224,"byte_end":18258,"line_start":95,"line_end":95,"column_start":1,"column_end":35}},{"value":"! #   fn exit(&self, _: &Id) {}","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":18259,"byte_end":18292,"line_start":96,"line_end":96,"column_start":1,"column_end":34}},{"value":"! # }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":18293,"byte_end":18300,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"! # impl FooSubscriber { fn new() -> Self { FooSubscriber } }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":18301,"byte_end":18364,"line_start":98,"line_end":98,"column_start":1,"column_end":64}},{"value":"! # let my_subscriber = FooSubscriber::new();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":18365,"byte_end":18412,"line_start":99,"line_end":99,"column_start":1,"column_end":48}},{"value":"! # let my_dispatch = dispatcher::Dispatch::new(my_subscriber);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":18413,"byte_end":18478,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"! // no default subscriber","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":18479,"byte_end":18507,"line_start":101,"line_end":101,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":18508,"byte_end":18511,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"! dispatcher::set_global_default(my_dispatch)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":18512,"byte_end":18559,"line_start":103,"line_end":103,"column_start":1,"column_end":48}},{"value":"!     // `set_global_default` will return an error if the global default","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":18560,"byte_end":18634,"line_start":104,"line_end":104,"column_start":1,"column_end":75}},{"value":"!     // subscriber has already been set.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":18635,"byte_end":18678,"line_start":105,"line_end":105,"column_start":1,"column_end":44}},{"value":"!     .expect(\"global default was already set!\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":18679,"byte_end":18730,"line_start":106,"line_end":106,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":18731,"byte_end":18734,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"! // `my_subscriber` is now the default","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":18735,"byte_end":18776,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"! ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":18777,"byte_end":18784,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":18785,"byte_end":18788,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"! <div class=\"information\">","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":18789,"byte_end":18818,"line_start":111,"line_end":111,"column_start":1,"column_end":30}},{"value":"!     <div class=\"tooltip ignore\" style=\"\">ⓘ<span class=\"tooltiptext\">Note</span></div>","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":18819,"byte_end":18910,"line_start":112,"line_end":112,"column_start":1,"column_end":90}},{"value":"! </div>","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":18911,"byte_end":18921,"line_start":113,"line_end":113,"column_start":1,"column_end":11}},{"value":"! <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":18922,"byte_end":18981,"line_start":114,"line_end":114,"column_start":1,"column_end":60}},{"value":"! <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":18982,"byte_end":19047,"line_start":115,"line_end":115,"column_start":1,"column_end":66}},{"value":"! <strong>Note</strong>:the thread-local scoped dispatcher","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":19048,"byte_end":19108,"line_start":116,"line_end":116,"column_start":1,"column_end":61}},{"value":"! (<a href=\"#fn.with_default\"><code>with_default</code></a>) requires the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":19109,"byte_end":19184,"line_start":117,"line_end":117,"column_start":1,"column_end":76}},{"value":"! Rust standard library. <code>no_std</code> users should use","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":19185,"byte_end":19248,"line_start":118,"line_end":118,"column_start":1,"column_end":64}},{"value":"! <a href=\"#fn.set_global_default\"><code>set_global_default</code></a>","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":19249,"byte_end":19321,"line_start":119,"line_end":119,"column_start":1,"column_end":73}},{"value":"! instead.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":19322,"byte_end":19334,"line_start":120,"line_end":120,"column_start":1,"column_end":13}},{"value":"! </pre></div>","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":19335,"byte_end":19351,"line_start":121,"line_end":121,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":19352,"byte_end":19355,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"! ## Accessing the Default Subscriber","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":19356,"byte_end":19395,"line_start":123,"line_end":123,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":19396,"byte_end":19399,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"! A thread's current default subscriber can be accessed using the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":19400,"byte_end":19467,"line_start":125,"line_end":125,"column_start":1,"column_end":68}},{"value":"! [`get_default`] function, which executes a closure with a reference to the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":19468,"byte_end":19546,"line_start":126,"line_end":126,"column_start":1,"column_end":79}},{"value":"! currently default `Dispatch`. This is used primarily by `tracing`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":19547,"byte_end":19616,"line_start":127,"line_end":127,"column_start":1,"column_end":70}},{"value":"! instrumentation.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":19617,"byte_end":19637,"line_start":128,"line_end":128,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":19638,"byte_end":19641,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"! [`Subscriber`]: struct.Subscriber.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":19642,"byte_end":19684,"line_start":130,"line_end":130,"column_start":1,"column_end":43}},{"value":"! [`with_default`]: fn.with_default.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":19685,"byte_end":19727,"line_start":131,"line_end":131,"column_start":1,"column_end":43}},{"value":"! [`set_global_default`]: fn.set_global_default.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":19728,"byte_end":19782,"line_start":132,"line_end":132,"column_start":1,"column_end":55}},{"value":"! [`get_default`]: fn.get_default.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":19783,"byte_end":19823,"line_start":133,"line_end":133,"column_start":1,"column_end":41}},{"value":"! [`Dispatch`]: struct.Dispatch.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":19824,"byte_end":19862,"line_start":134,"line_end":134,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":607},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":20325,"byte_end":20333,"line_start":160,"line_end":160,"column_start":12,"column_end":20},"name":"Dispatch","qualname":"::dispatcher::Dispatch","value":"Dispatch {  }","parent":null,"children":[{"krate":0,"index":608}],"decl_id":null,"docs":" `Dispatch` trace data to a [`Subscriber`].","sig":null,"attributes":[{"value":"/ `Dispatch` trace data to a [`Subscriber`].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":20204,"byte_end":20250,"line_start":156,"line_end":156,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":20251,"byte_end":20254,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ [`Subscriber`]: trait.Subscriber.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":20255,"byte_end":20296,"line_start":158,"line_end":158,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":615},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":21929,"byte_end":21941,"line_start":207,"line_end":207,"column_start":12,"column_end":24},"name":"DefaultGuard","qualname":"::dispatcher::DefaultGuard","value":"","parent":null,"children":[],"decl_id":null,"docs":" A guard that resets the current default dispatcher to the prior\n default dispatcher when dropped.\n","sig":null,"attributes":[{"value":"/ A guard that resets the current default dispatcher to the prior","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":21725,"byte_end":21792,"line_start":202,"line_end":202,"column_start":1,"column_end":68}},{"value":"/ default dispatcher when dropped.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":21793,"byte_end":21829,"line_start":203,"line_end":203,"column_start":1,"column_end":37}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":21830,"byte_end":21853,"line_start":204,"line_end":204,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":85},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":22872,"byte_end":22884,"line_start":230,"line_end":230,"column_start":8,"column_end":20},"name":"with_default","qualname":"::dispatcher::with_default","value":"pub fn with_default<T, impl FnOnce() -> T: FnOnce() ->\n                    T>(&Dispatch, impl FnOnce() -> T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Sets this dispatch as the default for the duration of a closure.","sig":null,"attributes":[{"value":"/ Sets this dispatch as the default for the duration of a closure.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":21962,"byte_end":22030,"line_start":209,"line_end":209,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":22031,"byte_end":22034,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ The default dispatcher is used when creating a new [span] or","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":22035,"byte_end":22099,"line_start":211,"line_end":211,"column_start":1,"column_end":65}},{"value":"/ [`Event`].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":22100,"byte_end":22114,"line_start":212,"line_end":212,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":22115,"byte_end":22118,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ <div class=\"information\">","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":22119,"byte_end":22148,"line_start":214,"line_end":214,"column_start":1,"column_end":30}},{"value":"/     <div class=\"tooltip ignore\" style=\"\">ⓘ<span class=\"tooltiptext\">Note</span></div>","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":22149,"byte_end":22240,"line_start":215,"line_end":215,"column_start":1,"column_end":90}},{"value":"/ </div>","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":22241,"byte_end":22251,"line_start":216,"line_end":216,"column_start":1,"column_end":11}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":22252,"byte_end":22311,"line_start":217,"line_end":217,"column_start":1,"column_end":60}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":22312,"byte_end":22377,"line_start":218,"line_end":218,"column_start":1,"column_end":66}},{"value":"/ <strong>Note</strong>: This function required the Rust standard library.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":22378,"byte_end":22454,"line_start":219,"line_end":219,"column_start":1,"column_end":77}},{"value":"/ <code>no_std</code> users should use <a href=\"../fn.set_global_default.html\">","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":22455,"byte_end":22536,"line_start":220,"line_end":220,"column_start":1,"column_end":82}},{"value":"/ <code>set_global_default</code></a> instead.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":22537,"byte_end":22585,"line_start":221,"line_end":221,"column_start":1,"column_end":49}},{"value":"/ </pre></div>","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":22586,"byte_end":22602,"line_start":222,"line_end":222,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":22603,"byte_end":22606,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ [span]: ../span/index.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":22607,"byte_end":22637,"line_start":224,"line_end":224,"column_start":1,"column_end":31}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":22638,"byte_end":22693,"line_start":225,"line_end":225,"column_start":1,"column_end":56}},{"value":"/ [`Event`]: ../event/struct.Event.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":22694,"byte_end":22735,"line_start":226,"line_end":226,"column_start":1,"column_end":42}},{"value":"/ [`set_global_default`]: ../fn.set_global_default.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":22736,"byte_end":22793,"line_start":227,"line_end":227,"column_start":1,"column_end":58}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":22794,"byte_end":22817,"line_start":228,"line_end":228,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":88},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":24045,"byte_end":24056,"line_start":256,"line_end":256,"column_start":8,"column_end":19},"name":"set_default","qualname":"::dispatcher::set_default","value":"pub fn set_default(&Dispatch) -> DefaultGuard","parent":null,"children":[],"decl_id":null,"docs":" Sets the dispatch as the default dispatch for the duration of the lifetime\n of the returned DefaultGuard","sig":null,"attributes":[{"value":"/ Sets the dispatch as the default dispatch for the duration of the lifetime","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":23242,"byte_end":23320,"line_start":239,"line_end":239,"column_start":1,"column_end":79}},{"value":"/ of the returned DefaultGuard","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":23321,"byte_end":23353,"line_start":240,"line_end":240,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":23354,"byte_end":23357,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/ <div class=\"information\">","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":23358,"byte_end":23387,"line_start":242,"line_end":242,"column_start":1,"column_end":30}},{"value":"/     <div class=\"tooltip ignore\" style=\"\">ⓘ<span class=\"tooltiptext\">Note</span></div>","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":23388,"byte_end":23479,"line_start":243,"line_end":243,"column_start":1,"column_end":90}},{"value":"/ </div>","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":23480,"byte_end":23490,"line_start":244,"line_end":244,"column_start":1,"column_end":11}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":23491,"byte_end":23550,"line_start":245,"line_end":245,"column_start":1,"column_end":60}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":23551,"byte_end":23616,"line_start":246,"line_end":246,"column_start":1,"column_end":66}},{"value":"/ <strong>Note</strong>: This function required the Rust standard library.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":23617,"byte_end":23693,"line_start":247,"line_end":247,"column_start":1,"column_end":77}},{"value":"/ <code>no_std</code> users should use <a href=\"../fn.set_global_default.html\">","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":23694,"byte_end":23775,"line_start":248,"line_end":248,"column_start":1,"column_end":82}},{"value":"/ <code>set_global_default</code></a> instead.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":23776,"byte_end":23824,"line_start":249,"line_end":249,"column_start":1,"column_end":49}},{"value":"/ </pre></div>","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":23825,"byte_end":23841,"line_start":250,"line_end":250,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":23842,"byte_end":23845,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ [`set_global_default`]: ../fn.set_global_default.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":23846,"byte_end":23903,"line_start":252,"line_end":252,"column_start":1,"column_end":58}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":23904,"byte_end":23927,"line_start":253,"line_end":253,"column_start":1,"column_end":24}},{"value":"must_use = \"Dropping the guard unregisters the dispatcher.\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":23975,"byte_end":24037,"line_start":255,"line_end":255,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":89},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":25378,"byte_end":25396,"line_start":282,"line_end":282,"column_start":8,"column_end":26},"name":"set_global_default","qualname":"::dispatcher::set_global_default","value":"pub fn set_global_default(Dispatch) -> Result<(), SetGlobalDefaultError>","parent":null,"children":[],"decl_id":null,"docs":" Sets this dispatch as the global default for the duration of the entire program.\n Will be used as a fallback if no thread-local dispatch has been set in a thread\n (using `with_default`.)","sig":null,"attributes":[{"value":"/ Sets this dispatch as the global default for the duration of the entire program.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":24365,"byte_end":24449,"line_start":263,"line_end":263,"column_start":1,"column_end":85}},{"value":"/ Will be used as a fallback if no thread-local dispatch has been set in a thread","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":24450,"byte_end":24533,"line_start":264,"line_end":264,"column_start":1,"column_end":84}},{"value":"/ (using `with_default`.)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":24534,"byte_end":24561,"line_start":265,"line_end":265,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":24562,"byte_end":24565,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ Can only be set once; subsequent attempts to set the global default will fail.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":24566,"byte_end":24648,"line_start":267,"line_end":267,"column_start":1,"column_end":83}},{"value":"/ Returns `Err` if the global default has already been set.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":24649,"byte_end":24710,"line_start":268,"line_end":268,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":24711,"byte_end":24714,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":24715,"byte_end":24718,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ <div class=\"information\">","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":24719,"byte_end":24748,"line_start":271,"line_end":271,"column_start":1,"column_end":30}},{"value":"/     <div class=\"tooltip compile_fail\" style=\"\">&#x26a0; &#xfe0f;<span class=\"tooltiptext\">Warning</span></div>","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":24749,"byte_end":24863,"line_start":272,"line_end":272,"column_start":1,"column_end":115}},{"value":"/ </div><div class=\"example-wrap\" style=\"display:inline-block\"><pre class=\"compile_fail\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":24864,"byte_end":24996,"line_start":273,"line_end":273,"column_start":1,"column_end":133}},{"value":"/ <strong>Warning</strong>: In general, libraries should <em>not</em> call","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":24997,"byte_end":25073,"line_start":274,"line_end":274,"column_start":1,"column_end":77}},{"value":"/ <code>set_global_default()</code>! Doing so will cause conflicts when","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":25074,"byte_end":25147,"line_start":275,"line_end":275,"column_start":1,"column_end":74}},{"value":"/ executables that depend on the library try to set the default later.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":25148,"byte_end":25220,"line_start":276,"line_end":276,"column_start":1,"column_end":73}},{"value":"/ </pre></div>","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":25221,"byte_end":25237,"line_start":277,"line_end":277,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":25238,"byte_end":25241,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ [span]: ../span/index.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":25242,"byte_end":25272,"line_start":279,"line_end":279,"column_start":1,"column_end":31}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":25273,"byte_end":25328,"line_start":280,"line_end":280,"column_start":1,"column_end":56}},{"value":"/ [`Event`]: ../event/struct.Event.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":25329,"byte_end":25370,"line_start":281,"line_end":281,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":90},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":26064,"byte_end":26076,"line_start":302,"line_end":302,"column_start":8,"column_end":20},"name":"has_been_set","qualname":"::dispatcher::has_been_set","value":"pub fn has_been_set() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if a `tracing` dispatcher has ever been set.","sig":null,"attributes":[{"value":"/ Returns true if a `tracing` dispatcher has ever been set.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":25838,"byte_end":25899,"line_start":296,"line_end":296,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":25900,"byte_end":25903,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ This may be used to completely elide trace points if tracing is not in use","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":25904,"byte_end":25982,"line_start":298,"line_end":298,"column_start":1,"column_end":79}},{"value":"/ at all or has yet to be initialized.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":25983,"byte_end":26023,"line_start":299,"line_end":299,"column_start":1,"column_end":41}},{"value":"inline(always)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":26039,"byte_end":26056,"line_start":301,"line_end":301,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":620},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":26208,"byte_end":26229,"line_start":308,"line_end":308,"column_start":12,"column_end":33},"name":"SetGlobalDefaultError","qualname":"::dispatcher::SetGlobalDefaultError","value":"SetGlobalDefaultError {  }","parent":null,"children":[{"krate":0,"index":621}],"decl_id":null,"docs":" Returned if setting the global dispatcher fails.\n","sig":null,"attributes":[{"value":"/ Returned if setting the global dispatcher fails.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":26127,"byte_end":26179,"line_start":306,"line_end":306,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":94},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":26966,"byte_end":26977,"line_start":330,"line_end":330,"column_start":8,"column_end":19},"name":"get_default","qualname":"::dispatcher::get_default","value":"pub fn get_default<T, F>(F) -> T where F: FnMut(&Dispatch) -> T","parent":null,"children":[],"decl_id":null,"docs":" Executes a closure with a reference to this thread's current [dispatcher].","sig":null,"attributes":[{"value":"/ Executes a closure with a reference to this thread's current [dispatcher].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":26567,"byte_end":26645,"line_start":322,"line_end":322,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":26646,"byte_end":26649,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ Note that calls to `get_default` should not be nested; if this function is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":26650,"byte_end":26728,"line_start":324,"line_end":324,"column_start":1,"column_end":79}},{"value":"/ called while inside of another `get_default`, that closure will be provided","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":26729,"byte_end":26808,"line_start":325,"line_end":325,"column_start":1,"column_end":80}},{"value":"/ with `Dispatch::none` rather than the previously set dispatcher.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":26809,"byte_end":26877,"line_start":326,"line_end":326,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":26878,"byte_end":26881,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ [dispatcher]: ../dispatcher/struct.Dispatch.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":26882,"byte_end":26934,"line_start":328,"line_end":328,"column_start":1,"column_end":53}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":26935,"byte_end":26958,"line_start":329,"line_end":329,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":99},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":27724,"byte_end":27735,"line_start":355,"line_end":355,"column_start":8,"column_end":19},"name":"get_current","qualname":"::dispatcher::get_current","value":"pub fn get_current<T, impl FnOnce(&Dispatch) -> T: FnOnce(&Dispatch) ->\n                   T>(impl FnOnce(&Dispatch) -> T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Executes a closure with a reference to this thread's current [dispatcher].","sig":null,"attributes":[{"value":"/ Executes a closure with a reference to this thread's current [dispatcher].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":27293,"byte_end":27371,"line_start":345,"line_end":345,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":27372,"byte_end":27375,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ Note that calls to `get_default` should not be nested; if this function is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":27376,"byte_end":27454,"line_start":347,"line_end":347,"column_start":1,"column_end":79}},{"value":"/ called while inside of another `get_default`, that closure will be provided","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":27455,"byte_end":27534,"line_start":348,"line_end":348,"column_start":1,"column_end":80}},{"value":"/ with `Dispatch::none` rather than the previously set dispatcher.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":27535,"byte_end":27603,"line_start":349,"line_end":349,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":27604,"byte_end":27607,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ [dispatcher]: ../dispatcher/struct.Dispatch.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":27608,"byte_end":27660,"line_start":351,"line_end":351,"column_start":1,"column_end":53}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":27661,"byte_end":27684,"line_start":352,"line_end":352,"column_start":1,"column_end":24}},{"value":"inline(never)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":27700,"byte_end":27716,"line_start":354,"line_end":354,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":29189,"byte_end":29193,"line_start":407,"line_end":407,"column_start":12,"column_end":16},"name":"none","qualname":"<Dispatch>::none","value":"pub fn none() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Dispatch` that discards events and spans.\n","sig":null,"attributes":[{"value":"/ Returns a new `Dispatch` that discards events and spans.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":29103,"byte_end":29163,"line_start":405,"line_end":405,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":29168,"byte_end":29177,"line_start":406,"line_end":406,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":29441,"byte_end":29444,"line_start":416,"line_end":416,"column_start":12,"column_end":15},"name":"new","qualname":"<Dispatch>::new","value":"pub fn new<S>(S) -> Self where S: Subscriber + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Dispatch` that forwards to the given [`Subscriber`].","sig":null,"attributes":[{"value":"/ Returns a `Dispatch` that forwards to the given [`Subscriber`].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":29294,"byte_end":29361,"line_start":413,"line_end":413,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":29366,"byte_end":29369,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":29374,"byte_end":29429,"line_start":415,"line_end":415,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":30254,"byte_end":30271,"line_start":440,"line_end":440,"column_start":12,"column_end":29},"name":"register_callsite","qualname":"<Dispatch>::register_callsite","value":"pub fn register_callsite(&Self, &'static Metadata) -> subscriber::Interest","parent":null,"children":[],"decl_id":null,"docs":" Registers a new callsite with this subscriber, returning whether or not\n the subscriber is interested in being notified about the callsite.","sig":null,"attributes":[{"value":"/ Registers a new callsite with this subscriber, returning whether or not","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":29792,"byte_end":29867,"line_start":431,"line_end":431,"column_start":5,"column_end":80}},{"value":"/ the subscriber is interested in being notified about the callsite.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":29872,"byte_end":29942,"line_start":432,"line_end":432,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":29947,"byte_end":29950,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ This calls the [`register_callsite`] function on the [`Subscriber`]","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":29955,"byte_end":30026,"line_start":434,"line_end":434,"column_start":5,"column_end":76}},{"value":"/ that this `Dispatch` forwards to.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":30031,"byte_end":30068,"line_start":435,"line_end":435,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":30073,"byte_end":30076,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":30081,"byte_end":30136,"line_start":437,"line_end":437,"column_start":5,"column_end":60}},{"value":"/ [`register_callsite`]: ../subscriber/trait.Subscriber.html#method.register_callsite","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":30141,"byte_end":30228,"line_start":438,"line_end":438,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":30233,"byte_end":30242,"line_start":439,"line_end":439,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":31549,"byte_end":31557,"line_start":470,"line_end":470,"column_start":12,"column_end":20},"name":"new_span","qualname":"<Dispatch>::new_span","value":"pub fn new_span(&Self, &span::Attributes) -> span::Id","parent":null,"children":[],"decl_id":null,"docs":" Record the construction of a new span, returning a new [ID] for the\n span being constructed.","sig":null,"attributes":[{"value":"/ Record the construction of a new span, returning a new [ID] for the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":31124,"byte_end":31195,"line_start":460,"line_end":460,"column_start":5,"column_end":76}},{"value":"/ span being constructed.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":31200,"byte_end":31227,"line_start":461,"line_end":461,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":31232,"byte_end":31235,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ This calls the [`new_span`] function on the [`Subscriber`] that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":31240,"byte_end":31312,"line_start":463,"line_end":463,"column_start":5,"column_end":77}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":31317,"byte_end":31344,"line_start":464,"line_end":464,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":31349,"byte_end":31352,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ [ID]: ../span/struct.Id.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":31357,"byte_end":31389,"line_start":466,"line_end":466,"column_start":5,"column_end":37}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":31394,"byte_end":31449,"line_start":467,"line_end":467,"column_start":5,"column_end":60}},{"value":"/ [`new_span`]: ../subscriber/trait.Subscriber.html#method.new_span","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":31454,"byte_end":31523,"line_start":468,"line_end":468,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":31528,"byte_end":31537,"line_start":469,"line_end":469,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":31974,"byte_end":31980,"line_start":482,"line_end":482,"column_start":12,"column_end":18},"name":"record","qualname":"<Dispatch>::record","value":"pub fn record(&Self, &span::Id, &span::Record)","parent":null,"children":[],"decl_id":null,"docs":" Record a set of values on a span.","sig":null,"attributes":[{"value":"/ Record a set of values on a span.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":31658,"byte_end":31695,"line_start":474,"line_end":474,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":31700,"byte_end":31703,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ This calls the [`record`] function on the [`Subscriber`] that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":31708,"byte_end":31778,"line_start":476,"line_end":476,"column_start":5,"column_end":75}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":31783,"byte_end":31810,"line_start":477,"line_end":477,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":31815,"byte_end":31818,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":31823,"byte_end":31878,"line_start":479,"line_end":479,"column_start":5,"column_end":60}},{"value":"/ [`record`]: ../subscriber/trait.Subscriber.html#method.record","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":31883,"byte_end":31948,"line_start":480,"line_end":480,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":31953,"byte_end":31962,"line_start":481,"line_end":481,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":32495,"byte_end":32514,"line_start":495,"line_end":495,"column_start":12,"column_end":31},"name":"record_follows_from","qualname":"<Dispatch>::record_follows_from","value":"pub fn record_follows_from(&Self, &span::Id, &span::Id)","parent":null,"children":[],"decl_id":null,"docs":" Adds an indication that `span` follows from the span with the id\n `follows`.","sig":null,"attributes":[{"value":"/ Adds an indication that `span` follows from the span with the id","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":32090,"byte_end":32158,"line_start":486,"line_end":486,"column_start":5,"column_end":73}},{"value":"/ `follows`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":32163,"byte_end":32177,"line_start":487,"line_end":487,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":32182,"byte_end":32185,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ This calls the [`record_follows_from`] function on the [`Subscriber`]","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":32190,"byte_end":32263,"line_start":489,"line_end":489,"column_start":5,"column_end":78}},{"value":"/ that this `Dispatch` forwards to.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":32268,"byte_end":32305,"line_start":490,"line_end":490,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":32310,"byte_end":32313,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":32318,"byte_end":32373,"line_start":492,"line_end":492,"column_start":5,"column_end":60}},{"value":"/ [`record_follows_from`]: ../subscriber/trait.Subscriber.html#method.record_follows_from","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":32378,"byte_end":32469,"line_start":493,"line_end":493,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":32474,"byte_end":32483,"line_start":494,"line_end":494,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":33049,"byte_end":33056,"line_start":509,"line_end":509,"column_start":12,"column_end":19},"name":"enabled","qualname":"<Dispatch>::enabled","value":"pub fn enabled(&Self, &Metadata) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if a span with the specified [metadata] would be\n recorded.","sig":null,"attributes":[{"value":"/ Returns true if a span with the specified [metadata] would be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":32631,"byte_end":32696,"line_start":499,"line_end":499,"column_start":5,"column_end":70}},{"value":"/ recorded.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":32701,"byte_end":32714,"line_start":500,"line_end":500,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":32719,"byte_end":32722,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ This calls the [`enabled`] function on the [`Subscriber`] that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":32727,"byte_end":32798,"line_start":502,"line_end":502,"column_start":5,"column_end":76}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":32803,"byte_end":32830,"line_start":503,"line_end":503,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":32835,"byte_end":32838,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ [metadata]: ../metadata/struct.Metadata.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":32843,"byte_end":32891,"line_start":505,"line_end":505,"column_start":5,"column_end":53}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":32896,"byte_end":32951,"line_start":506,"line_end":506,"column_start":5,"column_end":60}},{"value":"/ [`enabled`]: ../subscriber/trait.Subscriber.html#method.enabled","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":32956,"byte_end":33023,"line_start":507,"line_end":507,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":33028,"byte_end":33037,"line_start":508,"line_end":508,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":33517,"byte_end":33522,"line_start":522,"line_end":522,"column_start":12,"column_end":17},"name":"event","qualname":"<Dispatch>::event","value":"pub fn event(&Self, &Event)","parent":null,"children":[],"decl_id":null,"docs":" Records that an [`Event`] has occurred.","sig":null,"attributes":[{"value":"/ Records that an [`Event`] has occurred.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":33152,"byte_end":33195,"line_start":513,"line_end":513,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":33200,"byte_end":33203,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This calls the [`event`] function on the [`Subscriber`] that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":33208,"byte_end":33277,"line_start":515,"line_end":515,"column_start":5,"column_end":74}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":33282,"byte_end":33309,"line_start":516,"line_end":516,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":33314,"byte_end":33317,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ [`Event`]: ../event/struct.Event.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":33322,"byte_end":33363,"line_start":518,"line_end":518,"column_start":5,"column_end":46}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":33368,"byte_end":33423,"line_start":519,"line_end":519,"column_start":5,"column_end":60}},{"value":"/ [`event`]: ../subscriber/trait.Subscriber.html#method.event","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":33428,"byte_end":33491,"line_start":520,"line_end":520,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":33496,"byte_end":33505,"line_start":521,"line_end":521,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":33918,"byte_end":33923,"line_start":534,"line_end":534,"column_start":12,"column_end":17},"name":"enter","qualname":"<Dispatch>::enter","value":"pub fn enter(&Self, &span::Id)","parent":null,"children":[],"decl_id":null,"docs":" Records that a span has been can_enter.","sig":null,"attributes":[{"value":"/ Records that a span has been can_enter.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":33599,"byte_end":33642,"line_start":526,"line_end":526,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":33647,"byte_end":33650,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ This calls the [`enter`] function on the [`Subscriber`] that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":33655,"byte_end":33724,"line_start":528,"line_end":528,"column_start":5,"column_end":74}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":33729,"byte_end":33756,"line_start":529,"line_end":529,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":33761,"byte_end":33764,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":33769,"byte_end":33824,"line_start":531,"line_end":531,"column_start":5,"column_end":60}},{"value":"/ [`enter`]: ../subscriber/trait.Subscriber.html#method.enter","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":33829,"byte_end":33892,"line_start":532,"line_end":532,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":33897,"byte_end":33906,"line_start":533,"line_end":533,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":34311,"byte_end":34315,"line_start":546,"line_end":546,"column_start":12,"column_end":16},"name":"exit","qualname":"<Dispatch>::exit","value":"pub fn exit(&Self, &span::Id)","parent":null,"children":[],"decl_id":null,"docs":" Records that a span has been exited.","sig":null,"attributes":[{"value":"/ Records that a span has been exited.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":33998,"byte_end":34038,"line_start":538,"line_end":538,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":34043,"byte_end":34046,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ This calls the [`exit`] function on the [`Subscriber`] that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":34051,"byte_end":34119,"line_start":540,"line_end":540,"column_start":5,"column_end":73}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":34124,"byte_end":34151,"line_start":541,"line_end":541,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":34156,"byte_end":34159,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":34164,"byte_end":34219,"line_start":543,"line_end":543,"column_start":5,"column_end":60}},{"value":"/ [`exit`]: ../subscriber/trait.Subscriber.html#method.exit","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":34224,"byte_end":34285,"line_start":544,"line_end":544,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":34290,"byte_end":34299,"line_start":545,"line_end":545,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":35121,"byte_end":35131,"line_start":565,"line_end":565,"column_start":12,"column_end":22},"name":"clone_span","qualname":"<Dispatch>::clone_span","value":"pub fn clone_span(&Self, &span::Id) -> span::Id","parent":null,"children":[],"decl_id":null,"docs":" Notifies the subscriber that a [span ID] has been cloned.","sig":null,"attributes":[{"value":"/ Notifies the subscriber that a [span ID] has been cloned.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":34389,"byte_end":34450,"line_start":550,"line_end":550,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":34455,"byte_end":34458,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ This function must only be called with span IDs that were returned by","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":34463,"byte_end":34536,"line_start":552,"line_end":552,"column_start":5,"column_end":78}},{"value":"/ this `Dispatch`'s [`new_span`] function. The `tracing` crate upholds","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":34541,"byte_end":34613,"line_start":553,"line_end":553,"column_start":5,"column_end":77}},{"value":"/ this guarantee and any other libraries implementing instrumentation APIs","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":34618,"byte_end":34694,"line_start":554,"line_end":554,"column_start":5,"column_end":81}},{"value":"/ must as well.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":34699,"byte_end":34716,"line_start":555,"line_end":555,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":34721,"byte_end":34724,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ This calls the [`clone_span`] function on the `Subscriber` that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":34729,"byte_end":34801,"line_start":557,"line_end":557,"column_start":5,"column_end":77}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":34806,"byte_end":34833,"line_start":558,"line_end":558,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":34838,"byte_end":34841,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ [span ID]: ../span/struct.Id.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":34846,"byte_end":34883,"line_start":560,"line_end":560,"column_start":5,"column_end":42}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":34888,"byte_end":34943,"line_start":561,"line_end":561,"column_start":5,"column_end":60}},{"value":"/ [`clone_span`]: ../subscriber/trait.Subscriber.html#method.clone_span","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":34948,"byte_end":35021,"line_start":562,"line_end":562,"column_start":5,"column_end":78}},{"value":"/ [`new_span`]: ../subscriber/trait.Subscriber.html#method.new_span","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":35026,"byte_end":35095,"line_start":563,"line_end":563,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":35100,"byte_end":35109,"line_start":564,"line_end":564,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":36645,"byte_end":36654,"line_start":595,"line_end":595,"column_start":12,"column_end":21},"name":"drop_span","qualname":"<Dispatch>::drop_span","value":"pub fn drop_span(&Self, span::Id)","parent":null,"children":[],"decl_id":null,"docs":" Notifies the subscriber that a [span ID] has been dropped.","sig":null,"attributes":[{"value":"/ Notifies the subscriber that a [span ID] has been dropped.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":35219,"byte_end":35281,"line_start":569,"line_end":569,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":35286,"byte_end":35289,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ This function must only be called with span IDs that were returned by","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":35294,"byte_end":35367,"line_start":571,"line_end":571,"column_start":5,"column_end":78}},{"value":"/ this `Dispatch`'s [`new_span`] function. The `tracing` crate upholds","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":35372,"byte_end":35444,"line_start":572,"line_end":572,"column_start":5,"column_end":77}},{"value":"/ this guarantee and any other libraries implementing instrumentation APIs","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":35449,"byte_end":35525,"line_start":573,"line_end":573,"column_start":5,"column_end":81}},{"value":"/ must as well.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":35530,"byte_end":35547,"line_start":574,"line_end":574,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":35552,"byte_end":35555,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ This calls the [`drop_span`] function on the [`Subscriber`] that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":35560,"byte_end":35633,"line_start":576,"line_end":576,"column_start":5,"column_end":78}},{"value":"/  `Dispatch` forwards to.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":35638,"byte_end":35666,"line_start":577,"line_end":577,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":35671,"byte_end":35674,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ <div class=\"information\">","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":35679,"byte_end":35708,"line_start":579,"line_end":579,"column_start":5,"column_end":34}},{"value":"/     <div class=\"tooltip compile_fail\" style=\"\">&#x26a0; &#xfe0f;<span class=\"tooltiptext\">Warning</span></div>","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":35713,"byte_end":35827,"line_start":580,"line_end":580,"column_start":5,"column_end":119}},{"value":"/ </div>","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":35832,"byte_end":35842,"line_start":581,"line_end":581,"column_start":5,"column_end":15}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\"><pre class=\"compile_fail\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":35847,"byte_end":35973,"line_start":582,"line_end":582,"column_start":5,"column_end":131}},{"value":"/ <strong>Deprecated</strong>: The <a href=\"#method.try_close\"><code>try_close</code></a>","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":35978,"byte_end":36069,"line_start":583,"line_end":583,"column_start":5,"column_end":96}},{"value":"/ method is functionally identical, but returns <code>true</code> if the span is now closed.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":36074,"byte_end":36168,"line_start":584,"line_end":584,"column_start":5,"column_end":99}},{"value":"/ It should be used instead of this method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":36173,"byte_end":36218,"line_start":585,"line_end":585,"column_start":5,"column_end":50}},{"value":"/ </pre></div>","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":36223,"byte_end":36239,"line_start":586,"line_end":586,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":36244,"byte_end":36247,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ [span ID]: ../span/struct.Id.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":36252,"byte_end":36289,"line_start":588,"line_end":588,"column_start":5,"column_end":42}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":36294,"byte_end":36349,"line_start":589,"line_end":589,"column_start":5,"column_end":60}},{"value":"/ [`drop_span`]: ../subscriber/trait.Subscriber.html#method.drop_span","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":36354,"byte_end":36425,"line_start":590,"line_end":590,"column_start":5,"column_end":76}},{"value":"/ [`new_span`]: ../subscriber/trait.Subscriber.html#method.new_span","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":36430,"byte_end":36499,"line_start":591,"line_end":591,"column_start":5,"column_end":74}},{"value":"/ [`try_close`]: #method.try_close","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":36504,"byte_end":36540,"line_start":592,"line_end":592,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":36545,"byte_end":36554,"line_start":593,"line_end":593,"column_start":5,"column_end":14}},{"value":"deprecated(since = \"0.1.2\", note = \"use `Dispatch::try_close` instead\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":36559,"byte_end":36633,"line_start":594,"line_end":594,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":37564,"byte_end":37573,"line_start":616,"line_end":616,"column_start":12,"column_end":21},"name":"try_close","qualname":"<Dispatch>::try_close","value":"pub fn try_close(&Self, span::Id) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Notifies the subscriber that a [span ID] has been dropped, and returns\n `true` if there are now 0 IDs referring to that span.","sig":null,"attributes":[{"value":"/ Notifies the subscriber that a [span ID] has been dropped, and returns","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":36757,"byte_end":36831,"line_start":600,"line_end":600,"column_start":5,"column_end":79}},{"value":"/ `true` if there are now 0 IDs referring to that span.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":36836,"byte_end":36893,"line_start":601,"line_end":601,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":36898,"byte_end":36901,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ This function must only be called with span IDs that were returned by","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":36906,"byte_end":36979,"line_start":603,"line_end":603,"column_start":5,"column_end":78}},{"value":"/ this `Dispatch`'s [`new_span`] function. The `tracing` crate upholds","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":36984,"byte_end":37056,"line_start":604,"line_end":604,"column_start":5,"column_end":77}},{"value":"/ this guarantee and any other libraries implementing instrumentation APIs","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":37061,"byte_end":37137,"line_start":605,"line_end":605,"column_start":5,"column_end":81}},{"value":"/ must as well.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":37142,"byte_end":37159,"line_start":606,"line_end":606,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":37164,"byte_end":37167,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ This calls the [`try_close`] function on the [`Subscriber`] that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":37172,"byte_end":37245,"line_start":608,"line_end":608,"column_start":5,"column_end":78}},{"value":"/  `Dispatch` forwards to.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":37250,"byte_end":37278,"line_start":609,"line_end":609,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":37283,"byte_end":37286,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ [span ID]: ../span/struct.Id.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":37291,"byte_end":37328,"line_start":611,"line_end":611,"column_start":5,"column_end":42}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":37333,"byte_end":37388,"line_start":612,"line_end":612,"column_start":5,"column_end":60}},{"value":"/ [`try_close`]: ../subscriber/trait.Subscriber.html#method.try_close","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":37393,"byte_end":37464,"line_start":613,"line_end":613,"column_start":5,"column_end":76}},{"value":"/ [`new_span`]: ../subscriber/trait.Subscriber.html#method.new_span","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":37469,"byte_end":37538,"line_start":614,"line_end":614,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":37543,"byte_end":37552,"line_start":615,"line_end":615,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":37949,"byte_end":37961,"line_start":627,"line_end":627,"column_start":12,"column_end":24},"name":"current_span","qualname":"<Dispatch>::current_span","value":"pub fn current_span(&Self) -> span::Current","parent":null,"children":[],"decl_id":null,"docs":" Returns a type representing this subscriber's view of the current span.","sig":null,"attributes":[{"value":"/ Returns a type representing this subscriber's view of the current span.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":37654,"byte_end":37729,"line_start":620,"line_end":620,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":37734,"byte_end":37737,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ This calls the [`current`] function on the `Subscriber` that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":37742,"byte_end":37811,"line_start":622,"line_end":622,"column_start":5,"column_end":74}},{"value":"/ `Dispatch` forwards to.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":37816,"byte_end":37843,"line_start":623,"line_end":623,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":37848,"byte_end":37851,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ [`current`]: ../subscriber/trait.Subscriber.html#method.current","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":37856,"byte_end":37923,"line_start":625,"line_end":625,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":37928,"byte_end":37937,"line_start":626,"line_end":626,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":38149,"byte_end":38151,"line_start":634,"line_end":634,"column_start":12,"column_end":14},"name":"is","qualname":"<Dispatch>::is","value":"pub fn is<T: Any>(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this `Dispatch` forwards to a `Subscriber` of type\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this `Dispatch` forwards to a `Subscriber` of type","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":38038,"byte_end":38110,"line_start":631,"line_end":631,"column_start":5,"column_end":77}},{"value":"/ `T`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":38115,"byte_end":38123,"line_start":632,"line_end":632,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":38128,"byte_end":38137,"line_start":633,"line_end":633,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":38388,"byte_end":38400,"line_start":641,"line_end":641,"column_start":12,"column_end":24},"name":"downcast_ref","qualname":"<Dispatch>::downcast_ref","value":"pub fn downcast_ref<T: Any>(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns some reference to the `Subscriber` this `Dispatch` forwards to\n if it is of type `T`, or `None` if it isn't.\n","sig":null,"attributes":[{"value":"/ Returns some reference to the `Subscriber` this `Dispatch` forwards to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":38235,"byte_end":38309,"line_start":638,"line_end":638,"column_start":5,"column_end":79}},{"value":"/ if it is of type `T`, or `None` if it isn't.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":38314,"byte_end":38362,"line_start":639,"line_end":639,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":38367,"byte_end":38376,"line_start":640,"line_end":640,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":166},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"event","qualname":"::event","value":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":624},{"krate":0,"index":629},{"krate":0,"index":172}],"decl_id":null,"docs":" Events represent single points in time during the execution of a program.\n","sig":null,"attributes":[{"value":"! Events represent single points in time during the execution of a program.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":46885,"byte_end":46962,"line_start":1,"line_end":1,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":624},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":47879,"byte_end":47884,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"Event","qualname":"::event::Event","value":"Event {  }","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628}],"decl_id":null,"docs":" `Event`s represent single points in time where something occurred during the\n execution of a program.","sig":null,"attributes":[{"value":"/ `Event`s represent single points in time where something occurred during the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":47042,"byte_end":47122,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ execution of a program.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":47123,"byte_end":47150,"line_start":7,"line_end":7,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":47151,"byte_end":47154,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ An `Event` can be compared to a log record in unstructured logging, but with","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":47155,"byte_end":47235,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ two key differences:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":47236,"byte_end":47260,"line_start":10,"line_end":10,"column_start":1,"column_end":25}},{"value":"/ - `Event`s exist _within the context of a [span]_. Unlike log lines, they","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":47261,"byte_end":47338,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/   may be located within the trace tree, allowing visibility into the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":47339,"byte_end":47411,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/   _temporal_ context in which the event occurred, as well as the source","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":47412,"byte_end":47487,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/   code location.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":47488,"byte_end":47508,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"/ - Like spans, `Event`s have structured key-value data known as _[fields]_,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":47509,"byte_end":47587,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/   which may include textual message. In general, a majority of the data","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":47588,"byte_end":47663,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/   associated with an event should be in the event's fields rather than in","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":47664,"byte_end":47741,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/   the textual message, as the fields are more structured.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":47742,"byte_end":47803,"line_start":18,"line_end":18,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":47804,"byte_end":47807,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [span]: ../span","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":47808,"byte_end":47827,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ [fields]: ../field","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":47828,"byte_end":47850,"line_start":21,"line_end":21,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":48172,"byte_end":48180,"line_start":33,"line_end":33,"column_start":12,"column_end":20},"name":"dispatch","qualname":"<Event>::dispatch","value":"pub fn dispatch(&'static Metadata, &'a field::ValueSet)","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Event` with the specified metadata and set of values,\n and observes it with the current subscriber.\n","sig":null,"attributes":[{"value":"/ Constructs a new `Event` with the specified metadata and set of values,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":48018,"byte_end":48093,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/ and observes it with the current subscriber.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":48098,"byte_end":48146,"line_start":31,"line_end":31,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":48151,"byte_end":48160,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":48540,"byte_end":48543,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<Event>::new","value":"pub fn new(&'static Metadata, &'a field::ValueSet) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Event` in the current span, with the specified metadata\n and set of values.\n","sig":null,"attributes":[{"value":"/ Returns a new `Event` in the current span, with the specified metadata","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":48413,"byte_end":48487,"line_start":40,"line_end":40,"column_start":5,"column_end":79}},{"value":"/ and set of values.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":48492,"byte_end":48514,"line_start":41,"line_end":41,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":48519,"byte_end":48528,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":48880,"byte_end":48892,"line_start":54,"line_end":54,"column_start":12,"column_end":24},"name":"new_child_of","qualname":"<Event>::new_child_of","value":"pub fn new_child_of<impl Into<Option<Id>>: Into<Option<Id>>>(impl Into<Option<Id>>,\n                                                             &'static Metadata,\n                                                             &'a field::ValueSet)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Event` as a child of the specified span, with the\n provided metadata and set of values.\n","sig":null,"attributes":[{"value":"/ Returns a new `Event` as a child of the specified span, with the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":48741,"byte_end":48809,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ provided metadata and set of values.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":48814,"byte_end":48854,"line_start":52,"line_end":52,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":48859,"byte_end":48868,"line_start":53,"line_end":53,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":49444,"byte_end":49452,"line_start":73,"line_end":73,"column_start":12,"column_end":20},"name":"child_of","qualname":"<Event>::child_of","value":"pub fn child_of<impl Into<Option<Id>>: Into<Option<Id>>>(impl Into<Option<Id>>,\n                                                         &'static Metadata,\n                                                         &'a field::ValueSet)","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Event` with the specified metadata and set of values,\n and observes it with the current subscriber and an explicit parent.\n","sig":null,"attributes":[{"value":"/ Constructs a new `Event` with the specified metadata and set of values,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":49267,"byte_end":49342,"line_start":70,"line_end":70,"column_start":5,"column_end":80}},{"value":"/ and observes it with the current subscriber and an explicit parent.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":49347,"byte_end":49418,"line_start":71,"line_end":71,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":49423,"byte_end":49432,"line_start":72,"line_end":72,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":49913,"byte_end":49919,"line_start":88,"line_end":88,"column_start":12,"column_end":18},"name":"record","qualname":"<Event>::record","value":"pub fn record(&Self, &mut field::Visit)","parent":null,"children":[],"decl_id":null,"docs":" Visits all the fields on this `Event` with the specified [visitor].","sig":null,"attributes":[{"value":"/ Visits all the fields on this `Event` with the specified [visitor].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":49763,"byte_end":49834,"line_start":84,"line_end":84,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":49839,"byte_end":49842,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ [visitor]: ../field/trait.Visit.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":49847,"byte_end":49887,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":49892,"byte_end":49901,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":50084,"byte_end":50090,"line_start":93,"line_end":93,"column_start":12,"column_end":18},"name":"fields","qualname":"<Event>::fields","value":"pub fn fields(&Self) -> field::Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the set of values on this `Event`.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the set of values on this `Event`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":50009,"byte_end":50072,"line_start":92,"line_end":92,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":50276,"byte_end":50284,"line_start":100,"line_end":100,"column_start":12,"column_end":20},"name":"metadata","qualname":"<Event>::metadata","value":"pub fn metadata(&Self) -> &'static Metadata","parent":null,"children":[],"decl_id":null,"docs":" Returns [metadata] describing this `Event`.","sig":null,"attributes":[{"value":"/ Returns [metadata] describing this `Event`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":50165,"byte_end":50212,"line_start":97,"line_end":97,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":50217,"byte_end":50220,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ [metadata]: ../struct.Metadata.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":50225,"byte_end":50264,"line_start":99,"line_end":99,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":50420,"byte_end":50427,"line_start":105,"line_end":105,"column_start":12,"column_end":19},"name":"is_root","qualname":"<Event>::is_root","value":"pub fn is_root(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the new event should be a root.\n","sig":null,"attributes":[{"value":"/ Returns true if the new event should be a root.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":50357,"byte_end":50408,"line_start":104,"line_end":104,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":50937,"byte_end":50950,"line_start":119,"line_end":119,"column_start":12,"column_end":25},"name":"is_contextual","qualname":"<Event>::is_contextual","value":"pub fn is_contextual(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the new event's parent should be determined based on the\n current context.","sig":null,"attributes":[{"value":"/ Returns true if the new event's parent should be determined based on the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":50552,"byte_end":50628,"line_start":112,"line_end":112,"column_start":5,"column_end":81}},{"value":"/ current context.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":50633,"byte_end":50653,"line_start":113,"line_end":113,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":50658,"byte_end":50661,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ If this is true and the current thread is currently inside a span, then","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":50666,"byte_end":50741,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/ that span should be the new event's parent. Otherwise, if the current","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":50746,"byte_end":50819,"line_start":116,"line_end":116,"column_start":5,"column_end":78}},{"value":"/ thread is _not_ inside a span, then the new event will be the root of its","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":50824,"byte_end":50901,"line_start":117,"line_end":117,"column_start":5,"column_end":82}},{"value":"/ own trace tree.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":50906,"byte_end":50925,"line_start":118,"line_end":118,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":51276,"byte_end":51282,"line_start":130,"line_end":130,"column_start":12,"column_end":18},"name":"parent","qualname":"<Event>::parent","value":"pub fn parent(&Self) -> Option<&Id>","parent":null,"children":[],"decl_id":null,"docs":" Returns the new event's explicitly-specified parent, if there is one.","sig":null,"attributes":[{"value":"/ Returns the new event's explicitly-specified parent, if there is one.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":51078,"byte_end":51151,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":51156,"byte_end":51159,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Otherwise (if the new event is a root or is a child of the current span),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":51164,"byte_end":51241,"line_start":128,"line_end":128,"column_start":5,"column_end":82}},{"value":"/ returns false.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":51246,"byte_end":51264,"line_start":129,"line_end":129,"column_start":5,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":188},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"field","qualname":"::field","value":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":1114},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":632},{"krate":0,"index":635},{"krate":0,"index":637},{"krate":0,"index":645},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":647},{"krate":0,"index":650},{"krate":0,"index":206},{"krate":0,"index":213},{"krate":0,"index":652},{"krate":0,"index":656},{"krate":0,"index":659},{"krate":0,"index":663},{"krate":0,"index":215},{"krate":0,"index":217},{"krate":0,"index":219},{"krate":0,"index":223},{"krate":0,"index":227},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":248},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":257},{"krate":0,"index":267},{"krate":0,"index":269},{"krate":0,"index":271},{"krate":0,"index":274},{"krate":0,"index":277},{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":320},{"krate":0,"index":325},{"krate":0,"index":327},{"krate":0,"index":329},{"krate":0,"index":332},{"krate":0,"index":341},{"krate":0,"index":345},{"krate":0,"index":349},{"krate":0,"index":760},{"krate":0,"index":763},{"krate":0,"index":766},{"krate":0,"index":769},{"krate":0,"index":772},{"krate":0,"index":775},{"krate":0,"index":778},{"krate":0,"index":781},{"krate":0,"index":784},{"krate":0,"index":787},{"krate":0,"index":790},{"krate":0,"index":793},{"krate":0,"index":796},{"krate":0,"index":799},{"krate":0,"index":802},{"krate":0,"index":805},{"krate":0,"index":808},{"krate":0,"index":811},{"krate":0,"index":814},{"krate":0,"index":817},{"krate":0,"index":820},{"krate":0,"index":823},{"krate":0,"index":826},{"krate":0,"index":829},{"krate":0,"index":832},{"krate":0,"index":835},{"krate":0,"index":838},{"krate":0,"index":841},{"krate":0,"index":844},{"krate":0,"index":847},{"krate":0,"index":850},{"krate":0,"index":853},{"krate":0,"index":856}],"decl_id":null,"docs":" Span and `Event` key-value data.","sig":null,"attributes":[{"value":"! Span and `Event` key-value data.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":51425,"byte_end":51461,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":51462,"byte_end":51465,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Spans and events may be annotated with key-value data, referred to as known","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":51466,"byte_end":51545,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"! as _fields_. These fields consist of a mapping from a key (corresponding to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":51546,"byte_end":51625,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"! a `&str` but represented internally as an array index) to a [`Value`].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":51626,"byte_end":51700,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":51701,"byte_end":51704,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! # `Value`s and `Subscriber`s","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":51705,"byte_end":51737,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":51738,"byte_end":51741,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! `Subscriber`s consume `Value`s as fields attached to [span]s or [`Event`]s.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":51742,"byte_end":51821,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"! The set of field keys on a given span or is defined on its [`Metadata`].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":51822,"byte_end":51898,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"! When a span is created, it provides [`Attributes`] to the `Subscriber`'s","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":51899,"byte_end":51975,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"! [`new_span`] method, containing any fields whose values were provided when","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":51976,"byte_end":52054,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"! the span was created; and may call the `Subscriber`'s [`record`] method","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":52055,"byte_end":52130,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"! with additional [`Record`]s if values are added for more of its fields.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":52131,"byte_end":52206,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"! Similarly, the [`Event`] type passed to the subscriber's [`event`] method","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":52207,"byte_end":52284,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"! will contain any fields attached to each event.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":52285,"byte_end":52336,"line_start":16,"line_end":16,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":52337,"byte_end":52340,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! `tracing` represents values as either one of a set of Rust primitives","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":52341,"byte_end":52414,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"! (`i64`, `u64`, `bool`, and `&str`) or using a `fmt::Display` or `fmt::Debug`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":52415,"byte_end":52495,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"! implementation. `Subscriber`s are provided these primitive value types as","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":52496,"byte_end":52573,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"! `dyn Value` trait objects.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":52574,"byte_end":52604,"line_start":21,"line_end":21,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":52605,"byte_end":52608,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! These trait objects can be formatted using `fmt::Debug`, but may also be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":52609,"byte_end":52685,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"! recorded as typed data by calling the [`Value::record`] method on these","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":52686,"byte_end":52761,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"! trait objects with a _visitor_ implementing the [`Visit`] trait. This trait","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":52762,"byte_end":52841,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"! represents the behavior used to record values of various types. For example,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":52842,"byte_end":52922,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"! we might record integers by incrementing counters for their field names,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":52923,"byte_end":52999,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"! rather than printing them.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":53000,"byte_end":53030,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":53031,"byte_end":53034,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! [`Value`]: trait.Value.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":53035,"byte_end":53066,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"! [span]: ../span/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":53067,"byte_end":53087,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"! [`Event`]: ../event/struct.Event.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":53088,"byte_end":53129,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"! [`Metadata`]: ../metadata/struct.Metadata.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":53130,"byte_end":53180,"line_start":33,"line_end":33,"column_start":1,"column_end":51}},{"value":"! [`Attributes`]:  ../span/struct.Attributes.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":53181,"byte_end":53232,"line_start":34,"line_end":34,"column_start":1,"column_end":52}},{"value":"! [`Record`]: ../span/struct.Record.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":53233,"byte_end":53275,"line_start":35,"line_end":35,"column_start":1,"column_end":43}},{"value":"! [`new_span`]: ../subscriber/trait.Subscriber.html#method.new_span","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":53276,"byte_end":53345,"line_start":36,"line_end":36,"column_start":1,"column_end":70}},{"value":"! [`record`]: ../subscriber/trait.Subscriber.html#method.record","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":53346,"byte_end":53411,"line_start":37,"line_end":37,"column_start":1,"column_end":66}},{"value":"! [`event`]:  ../subscriber/trait.Subscriber.html#method.event","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":53412,"byte_end":53476,"line_start":38,"line_end":38,"column_start":1,"column_end":65}},{"value":"! [`Value::record`]: trait.Value.html#method.record","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":53477,"byte_end":53530,"line_start":39,"line_end":39,"column_start":1,"column_end":54}},{"value":"! [`Visit`]: trait.Visit.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":53531,"byte_end":53562,"line_start":40,"line_end":40,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":632},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":54202,"byte_end":54207,"line_start":61,"line_end":61,"column_start":12,"column_end":17},"name":"Field","qualname":"::field::Field","value":"Field {  }","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":634}],"decl_id":null,"docs":" An opaque key allowing _O_(1) access to a field in a `Span`'s key-value\n data.","sig":null,"attributes":[{"value":"/ An opaque key allowing _O_(1) access to a field in a `Span`'s key-value","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":53719,"byte_end":53794,"line_start":52,"line_end":52,"column_start":1,"column_end":76}},{"value":"/ data.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":53795,"byte_end":53804,"line_start":53,"line_end":53,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":53805,"byte_end":53808,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ As keys are defined by the _metadata_ of a span, rather than by an","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":53809,"byte_end":53879,"line_start":55,"line_end":55,"column_start":1,"column_end":71}},{"value":"/ individual instance of a span, a key may be used to access the same field","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":53880,"byte_end":53957,"line_start":56,"line_end":56,"column_start":1,"column_end":78}},{"value":"/ across all instances of a given span with the same metadata. Thus, when a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":53958,"byte_end":54035,"line_start":57,"line_end":57,"column_start":1,"column_end":78}},{"value":"/ subscriber observes a new span, it need only access a field by name _once_,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":54036,"byte_end":54115,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ and use the key for that name for all other accesses.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":54116,"byte_end":54173,"line_start":59,"line_end":59,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":637},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":54498,"byte_end":54503,"line_start":73,"line_end":73,"column_start":12,"column_end":17},"name":"Empty","qualname":"::field::Empty","value":"","parent":null,"children":[],"decl_id":null,"docs":" An empty field.","sig":null,"attributes":[{"value":"/ An empty field.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":54249,"byte_end":54268,"line_start":66,"line_end":66,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":54269,"byte_end":54272,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ This can be used to indicate that the value of a field is not currently","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":54273,"byte_end":54348,"line_start":68,"line_end":68,"column_start":1,"column_end":76}},{"value":"/ present but will be recorded later.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":54349,"byte_end":54388,"line_start":69,"line_end":69,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":54389,"byte_end":54392,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ When a field's value is `Empty`. it will not be recorded.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":54393,"byte_end":54454,"line_start":71,"line_end":71,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":199},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":54561,"byte_end":54569,"line_start":76,"line_end":76,"column_start":12,"column_end":20},"name":"FieldSet","qualname":"::field::FieldSet","value":"FieldSet {  }","parent":null,"children":[{"krate":0,"index":200},{"krate":0,"index":201}],"decl_id":null,"docs":" Describes the fields present on a span.\n","sig":null,"attributes":[{"value":"/ Describes the fields present on a span.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":54506,"byte_end":54549,"line_start":75,"line_end":75,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":202},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":54814,"byte_end":54822,"line_start":84,"line_end":84,"column_start":12,"column_end":20},"name":"ValueSet","qualname":"::field::ValueSet","value":"ValueSet {  }","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205}],"decl_id":null,"docs":" A set of fields and values for a span.\n","sig":null,"attributes":[{"value":"/ A set of fields and values for a span.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":54760,"byte_end":54802,"line_start":83,"line_end":83,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":647},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":54985,"byte_end":54989,"line_start":91,"line_end":91,"column_start":12,"column_end":16},"name":"Iter","qualname":"::field::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":648},{"krate":0,"index":649}],"decl_id":null,"docs":" An iterator over a set of fields.\n","sig":null,"attributes":[{"value":"/ An iterator over a set of fields.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":54919,"byte_end":54956,"line_start":89,"line_end":89,"column_start":1,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":206},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":58987,"byte_end":58992,"line_start":189,"line_end":189,"column_start":11,"column_end":16},"name":"Visit","qualname":"::field::Visit","value":"Visit","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212}],"decl_id":null,"docs":" Visits typed values.","sig":null,"attributes":[{"value":"/ Visits typed values.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":55041,"byte_end":55065,"line_start":96,"line_end":96,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":55066,"byte_end":55069,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ An instance of `Visit` (\"a visitor\") represents the logic necessary to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":55070,"byte_end":55144,"line_start":98,"line_end":98,"column_start":1,"column_end":75}},{"value":"/ record field values of various types. When an implementor of [`Value`] is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":55145,"byte_end":55222,"line_start":99,"line_end":99,"column_start":1,"column_end":78}},{"value":"/ [recorded], it calls the appropriate method on the provided visitor to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":55223,"byte_end":55297,"line_start":100,"line_end":100,"column_start":1,"column_end":75}},{"value":"/ indicate the type that value should be recorded as.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":55298,"byte_end":55353,"line_start":101,"line_end":101,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":55354,"byte_end":55357,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ When a [`Subscriber`] implementation [records an `Event`] or a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":55358,"byte_end":55424,"line_start":103,"line_end":103,"column_start":1,"column_end":67}},{"value":"/ [set of `Value`s added to a `Span`], it can pass an `&mut Visit` to the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":55425,"byte_end":55500,"line_start":104,"line_end":104,"column_start":1,"column_end":76}},{"value":"/ `record` method on the provided [`ValueSet`] or [`Event`]. This visitor","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":55501,"byte_end":55576,"line_start":105,"line_end":105,"column_start":1,"column_end":76}},{"value":"/ will then be used to record all the field-value pairs present on that","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":55577,"byte_end":55650,"line_start":106,"line_end":106,"column_start":1,"column_end":74}},{"value":"/ `Event` or `ValueSet`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":55651,"byte_end":55677,"line_start":107,"line_end":107,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":55678,"byte_end":55681,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":55682,"byte_end":55696,"line_start":109,"line_end":109,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":55697,"byte_end":55700,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ A simple visitor that writes to a string might be implemented like so:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":55701,"byte_end":55775,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":55776,"byte_end":55783,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/ # extern crate tracing_core as tracing;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":55784,"byte_end":55827,"line_start":113,"line_end":113,"column_start":1,"column_end":44}},{"value":"/ use std::fmt::{self, Write};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":55828,"byte_end":55860,"line_start":114,"line_end":114,"column_start":1,"column_end":33}},{"value":"/ use tracing::field::{Value, Visit, Field};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":55861,"byte_end":55907,"line_start":115,"line_end":115,"column_start":1,"column_end":47}},{"value":"/ pub struct StringVisitor<'a> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":55908,"byte_end":55942,"line_start":116,"line_end":116,"column_start":1,"column_end":35}},{"value":"/     string: &'a mut String,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":55943,"byte_end":55974,"line_start":117,"line_end":117,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":55975,"byte_end":55980,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":55981,"byte_end":55984,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ impl<'a> Visit for StringVisitor<'a> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":55985,"byte_end":56027,"line_start":120,"line_end":120,"column_start":1,"column_end":43}},{"value":"/     fn record_debug(&mut self, field: &Field, value: &fmt::Debug) {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":56028,"byte_end":56099,"line_start":121,"line_end":121,"column_start":1,"column_end":72}},{"value":"/         write!(self.string, \"{} = {:?}; \", field.name(), value).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":56100,"byte_end":56177,"line_start":122,"line_end":122,"column_start":1,"column_end":78}},{"value":"/     }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":56178,"byte_end":56187,"line_start":123,"line_end":123,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":56188,"byte_end":56193,"line_start":124,"line_end":124,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":56194,"byte_end":56201,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ This visitor will format each recorded value using `fmt::Debug`, and","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":56202,"byte_end":56274,"line_start":126,"line_end":126,"column_start":1,"column_end":73}},{"value":"/ append the field name and formatted value to the provided string,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":56275,"byte_end":56344,"line_start":127,"line_end":127,"column_start":1,"column_end":70}},{"value":"/ regardless of the type of the recorded value. When all the values have","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":56345,"byte_end":56419,"line_start":128,"line_end":128,"column_start":1,"column_end":75}},{"value":"/ been recorded, the `StringVisitor` may be dropped, allowing the string","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":56420,"byte_end":56494,"line_start":129,"line_end":129,"column_start":1,"column_end":75}},{"value":"/ to be printed or stored in some other data structure.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":56495,"byte_end":56552,"line_start":130,"line_end":130,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":56553,"byte_end":56556,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ The `Visit` trait provides default implementations for `record_i64`,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":56557,"byte_end":56629,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/ `record_u64`, `record_bool`, `record_str`, and `record_error`, which simply","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":56630,"byte_end":56709,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ forward the recorded value to `record_debug`. Thus, `record_debug` is the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":56710,"byte_end":56787,"line_start":134,"line_end":134,"column_start":1,"column_end":78}},{"value":"/ only method which a `Visit` implementation *must* implement. However,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":56788,"byte_end":56861,"line_start":135,"line_end":135,"column_start":1,"column_end":74}},{"value":"/ visitors may override the default implementations of these functions in","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":56862,"byte_end":56937,"line_start":136,"line_end":136,"column_start":1,"column_end":76}},{"value":"/ order to implement type-specific behavior.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":56938,"byte_end":56984,"line_start":137,"line_end":137,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":56985,"byte_end":56988,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ Additionally, when a visitor receives a value of a type it does not care","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":56989,"byte_end":57065,"line_start":139,"line_end":139,"column_start":1,"column_end":77}},{"value":"/ about, it is free to ignore those values completely. For example, a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":57066,"byte_end":57137,"line_start":140,"line_end":140,"column_start":1,"column_end":72}},{"value":"/ visitor which only records numeric data might look like this:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":57138,"byte_end":57203,"line_start":141,"line_end":141,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":57204,"byte_end":57207,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":57208,"byte_end":57215,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/ # extern crate tracing_core as tracing;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":57216,"byte_end":57259,"line_start":144,"line_end":144,"column_start":1,"column_end":44}},{"value":"/ # use std::fmt::{self, Write};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":57260,"byte_end":57294,"line_start":145,"line_end":145,"column_start":1,"column_end":35}},{"value":"/ # use tracing::field::{Value, Visit, Field};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":57295,"byte_end":57343,"line_start":146,"line_end":146,"column_start":1,"column_end":49}},{"value":"/ pub struct SumVisitor {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":57344,"byte_end":57371,"line_start":147,"line_end":147,"column_start":1,"column_end":28}},{"value":"/     sum: i64,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":57372,"byte_end":57389,"line_start":148,"line_end":148,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":57390,"byte_end":57395,"line_start":149,"line_end":149,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":57396,"byte_end":57399,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ impl Visit for SumVisitor {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":57400,"byte_end":57431,"line_start":151,"line_end":151,"column_start":1,"column_end":32}},{"value":"/     fn record_i64(&mut self, _field: &Field, value: i64) {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":57432,"byte_end":57494,"line_start":152,"line_end":152,"column_start":1,"column_end":63}},{"value":"/        self.sum += value;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":57495,"byte_end":57524,"line_start":153,"line_end":153,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":57525,"byte_end":57534,"line_start":154,"line_end":154,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":57535,"byte_end":57538,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/     fn record_u64(&mut self, _field: &Field, value: u64) {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":57539,"byte_end":57601,"line_start":156,"line_end":156,"column_start":1,"column_end":63}},{"value":"/         self.sum += value as i64;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":57602,"byte_end":57639,"line_start":157,"line_end":157,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":57640,"byte_end":57649,"line_start":158,"line_end":158,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":57650,"byte_end":57653,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/     fn record_debug(&mut self, _field: &Field, _value: &fmt::Debug) {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":57654,"byte_end":57727,"line_start":160,"line_end":160,"column_start":1,"column_end":74}},{"value":"/         // Do nothing","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":57728,"byte_end":57753,"line_start":161,"line_end":161,"column_start":1,"column_end":26}},{"value":"/     }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":57754,"byte_end":57763,"line_start":162,"line_end":162,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":57764,"byte_end":57769,"line_start":163,"line_end":163,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":57770,"byte_end":57777,"line_start":164,"line_end":164,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":57778,"byte_end":57781,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ This visitor (which is probably not particularly useful) keeps a running","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":57782,"byte_end":57858,"line_start":166,"line_end":166,"column_start":1,"column_end":77}},{"value":"/ sum of all the numeric values it records, and ignores all other values. A","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":57859,"byte_end":57936,"line_start":167,"line_end":167,"column_start":1,"column_end":78}},{"value":"/ more practical example of recording typed values is presented in","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":57937,"byte_end":58005,"line_start":168,"line_end":168,"column_start":1,"column_end":69}},{"value":"/ `examples/counters.rs`, which demonstrates a very simple metrics system","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":58006,"byte_end":58081,"line_start":169,"line_end":169,"column_start":1,"column_end":76}},{"value":"/ implemented using `tracing`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":58082,"byte_end":58114,"line_start":170,"line_end":170,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":58115,"byte_end":58118,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ <div class=\"information\">","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":58119,"byte_end":58148,"line_start":172,"line_end":172,"column_start":1,"column_end":30}},{"value":"/     <div class=\"tooltip ignore\" style=\"\">ⓘ<span class=\"tooltiptext\">Note</span></div>","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":58149,"byte_end":58240,"line_start":173,"line_end":173,"column_start":1,"column_end":90}},{"value":"/ </div>","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":58241,"byte_end":58251,"line_start":174,"line_end":174,"column_start":1,"column_end":11}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":58252,"byte_end":58311,"line_start":175,"line_end":175,"column_start":1,"column_end":60}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":58312,"byte_end":58377,"line_start":176,"line_end":176,"column_start":1,"column_end":66}},{"value":"/ <strong>Note</strong>: The <code>record_error</code> trait method is only","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":58378,"byte_end":58455,"line_start":177,"line_end":177,"column_start":1,"column_end":78}},{"value":"/ available when the Rust standard library is present, as it requires the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":58456,"byte_end":58531,"line_start":178,"line_end":178,"column_start":1,"column_end":76}},{"value":"/ <code>std::error::Error</code> trait.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":58532,"byte_end":58573,"line_start":179,"line_end":179,"column_start":1,"column_end":42}},{"value":"/ </pre></div>","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":58574,"byte_end":58590,"line_start":180,"line_end":180,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":58591,"byte_end":58594,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ [`Value`]: trait.Value.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":58595,"byte_end":58626,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ [recorded]: trait.Value.html#method.record","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":58627,"byte_end":58673,"line_start":183,"line_end":183,"column_start":1,"column_end":47}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":58674,"byte_end":58729,"line_start":184,"line_end":184,"column_start":1,"column_end":56}},{"value":"/ [records an `Event`]: ../subscriber/trait.Subscriber.html#method.event","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":58730,"byte_end":58804,"line_start":185,"line_end":185,"column_start":1,"column_end":75}},{"value":"/ [set of `Value`s added to a `Span`]: ../subscriber/trait.Subscriber.html#method.record","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":58805,"byte_end":58895,"line_start":186,"line_end":186,"column_start":1,"column_end":91}},{"value":"/ [`Event`]: ../event/struct.Event.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":58896,"byte_end":58937,"line_start":187,"line_end":187,"column_start":1,"column_end":42}},{"value":"/ [`ValueSet`]: struct.ValueSet.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":58938,"byte_end":58976,"line_start":188,"line_end":188,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":59047,"byte_end":59057,"line_start":191,"line_end":191,"column_start":8,"column_end":18},"name":"record_i64","qualname":"::field::Visit::record_i64","value":"pub fn record_i64(&mut Self, &Field, i64)","parent":{"krate":0,"index":206},"children":[],"decl_id":null,"docs":" Visit a signed 64-bit integer value.\n","sig":null,"attributes":[{"value":"/ Visit a signed 64-bit integer value.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":58999,"byte_end":59039,"line_start":190,"line_end":190,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":59201,"byte_end":59211,"line_start":196,"line_end":196,"column_start":8,"column_end":18},"name":"record_u64","qualname":"::field::Visit::record_u64","value":"pub fn record_u64(&mut Self, &Field, u64)","parent":{"krate":0,"index":206},"children":[],"decl_id":null,"docs":" Visit an unsigned 64-bit integer value.\n","sig":null,"attributes":[{"value":"/ Visit an unsigned 64-bit integer value.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":59150,"byte_end":59193,"line_start":195,"line_end":195,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":59338,"byte_end":59349,"line_start":201,"line_end":201,"column_start":8,"column_end":19},"name":"record_bool","qualname":"::field::Visit::record_bool","value":"pub fn record_bool(&mut Self, &Field, bool)","parent":{"krate":0,"index":206},"children":[],"decl_id":null,"docs":" Visit a boolean value.\n","sig":null,"attributes":[{"value":"/ Visit a boolean value.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":59304,"byte_end":59330,"line_start":200,"line_end":200,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":59476,"byte_end":59486,"line_start":206,"line_end":206,"column_start":8,"column_end":18},"name":"record_str","qualname":"::field::Visit::record_str","value":"pub fn record_str(&mut Self, &Field, &str)","parent":{"krate":0,"index":206},"children":[],"decl_id":null,"docs":" Visit a string value.\n","sig":null,"attributes":[{"value":"/ Visit a string value.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":59443,"byte_end":59468,"line_start":205,"line_end":205,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":60112,"byte_end":60124,"line_start":222,"line_end":222,"column_start":8,"column_end":20},"name":"record_error","qualname":"::field::Visit::record_error","value":"pub fn record_error(&mut Self, &Field, &std::error::Error + 'static)","parent":{"krate":0,"index":206},"children":[],"decl_id":null,"docs":" Records a type implementing `Error`.","sig":null,"attributes":[{"value":"/ Records a type implementing `Error`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":59580,"byte_end":59620,"line_start":210,"line_end":210,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":59625,"byte_end":59628,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ <div class=\"information\">","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":59633,"byte_end":59662,"line_start":212,"line_end":212,"column_start":5,"column_end":34}},{"value":"/     <div class=\"tooltip ignore\" style=\"\">ⓘ<span class=\"tooltiptext\">Note</span></div>","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":59667,"byte_end":59758,"line_start":213,"line_end":213,"column_start":5,"column_end":94}},{"value":"/ </div>","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":59763,"byte_end":59773,"line_start":214,"line_end":214,"column_start":5,"column_end":15}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":59778,"byte_end":59837,"line_start":215,"line_end":215,"column_start":5,"column_end":64}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":59842,"byte_end":59907,"line_start":216,"line_end":216,"column_start":5,"column_end":70}},{"value":"/ <strong>Note</strong>: This is only enabled when the Rust standard library is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":59912,"byte_end":59993,"line_start":217,"line_end":217,"column_start":5,"column_end":86}},{"value":"/ present.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":59998,"byte_end":60010,"line_start":218,"line_end":218,"column_start":5,"column_end":17}},{"value":"/ </pre>","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":60015,"byte_end":60025,"line_start":219,"line_end":219,"column_start":5,"column_end":15}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":60030,"byte_end":60053,"line_start":220,"line_end":220,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":60320,"byte_end":60332,"line_start":227,"line_end":227,"column_start":8,"column_end":20},"name":"record_debug","qualname":"::field::Visit::record_debug","value":"pub fn record_debug(&mut Self, &Field, &fmt::Debug)","parent":{"krate":0,"index":206},"children":[],"decl_id":null,"docs":" Visit a value implementing `fmt::Debug`.\n","sig":null,"attributes":[{"value":"/ Visit a value implementing `fmt::Debug`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":60268,"byte_end":60312,"line_start":226,"line_end":226,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":213},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":60664,"byte_end":60669,"line_start":237,"line_end":237,"column_start":11,"column_end":16},"name":"Value","qualname":"::field::Value","value":"Value: crate::sealed::Sealed","parent":null,"children":[{"krate":0,"index":214}],"decl_id":null,"docs":" A field value of an erased type.","sig":null,"attributes":[{"value":"/ A field value of an erased type.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":60387,"byte_end":60423,"line_start":230,"line_end":230,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":60424,"byte_end":60427,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ Implementors of `Value` may call the appropriate typed recording methods on","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":60428,"byte_end":60507,"line_start":232,"line_end":232,"column_start":1,"column_end":80}},{"value":"/ the [visitor] passed to their `record` method in order to indicate how","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":60508,"byte_end":60582,"line_start":233,"line_end":233,"column_start":1,"column_end":75}},{"value":"/ their data should be recorded.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":60583,"byte_end":60617,"line_start":234,"line_end":234,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":60618,"byte_end":60621,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ [visitor]: trait.Visit.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":60622,"byte_end":60653,"line_start":236,"line_end":236,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":60754,"byte_end":60760,"line_start":239,"line_end":239,"column_start":8,"column_end":14},"name":"record","qualname":"::field::Value::record","value":"pub fn record(&Self, &Field, &mut Visit)","parent":{"krate":0,"index":213},"children":[],"decl_id":null,"docs":" Visits this value with the given `Visitor`.\n","sig":null,"attributes":[{"value":"/ Visits this value with the given `Visitor`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":60699,"byte_end":60746,"line_start":238,"line_end":238,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":652},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":60989,"byte_end":61001,"line_start":247,"line_end":247,"column_start":12,"column_end":24},"name":"DisplayValue","qualname":"::field::DisplayValue","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `Value` which serializes using `fmt::Display`.","sig":null,"attributes":[{"value":"/ A `Value` which serializes using `fmt::Display`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":60810,"byte_end":60862,"line_start":242,"line_end":242,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":60863,"byte_end":60866,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ Uses `record_debug` in the `Value` implementation to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":60867,"byte_end":60923,"line_start":244,"line_end":244,"column_start":1,"column_end":57}},{"value":"/ avoid an unnecessary evaluation.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":60924,"byte_end":60960,"line_start":245,"line_end":245,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":659},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":61115,"byte_end":61125,"line_start":251,"line_end":251,"column_start":12,"column_end":22},"name":"DebugValue","qualname":"::field::DebugValue","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `Value` which serializes as a string using `fmt::Debug`.\n","sig":null,"attributes":[{"value":"/ A `Value` which serializes as a string using `fmt::Debug`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":61024,"byte_end":61086,"line_start":249,"line_end":249,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":215},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":61272,"byte_end":61279,"line_start":255,"line_end":255,"column_start":8,"column_end":15},"name":"display","qualname":"::field::display","value":"pub fn display<T>(T) -> DisplayValue<T> where T: fmt::Display","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type implementing `fmt::Display` as a `Value` that can be\n recorded using its `Display` implementation.\n","sig":null,"attributes":[{"value":"/ Wraps a type implementing `fmt::Display` as a `Value` that can be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":61146,"byte_end":61215,"line_start":253,"line_end":253,"column_start":1,"column_end":70}},{"value":"/ recorded using its `Display` implementation.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":61216,"byte_end":61264,"line_start":254,"line_end":254,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":217},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":61482,"byte_end":61487,"line_start":264,"line_end":264,"column_start":8,"column_end":13},"name":"debug","qualname":"::field::debug","value":"pub fn debug<T>(T) -> DebugValue<T> where T: fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type implementing `fmt::Debug` as a `Value` that can be\n recorded using its `Debug` implementation.\n","sig":null,"attributes":[{"value":"/ Wraps a type implementing `fmt::Debug` as a `Value` that can be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":61360,"byte_end":61427,"line_start":262,"line_end":262,"column_start":1,"column_end":68}},{"value":"/ recorded using its `Debug` implementation.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":61428,"byte_end":61474,"line_start":263,"line_end":263,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":68730,"byte_end":68738,"line_start":538,"line_end":538,"column_start":12,"column_end":20},"name":"callsite","qualname":"<Field>::callsite","value":"pub fn callsite(&Self) -> callsite::Identifier","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Identifier`] that uniquely identifies the [`Callsite`]\n which defines this field.","sig":null,"attributes":[{"value":"/ Returns an [`Identifier`] that uniquely identifies the [`Callsite`]","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":68478,"byte_end":68549,"line_start":532,"line_end":532,"column_start":5,"column_end":76}},{"value":"/ which defines this field.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":68554,"byte_end":68583,"line_start":533,"line_end":533,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":68588,"byte_end":68591,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ [`Identifier`]: ../callsite/struct.Identifier.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":68596,"byte_end":68650,"line_start":535,"line_end":535,"column_start":5,"column_end":59}},{"value":"/ [`Callsite`]: ../callsite/trait.Callsite.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":68655,"byte_end":68704,"line_start":536,"line_end":536,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":68709,"byte_end":68718,"line_start":537,"line_end":537,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":68882,"byte_end":68886,"line_start":543,"line_end":543,"column_start":12,"column_end":16},"name":"name","qualname":"<Field>::name","value":"pub fn name(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns a string representing the name of the field.\n","sig":null,"attributes":[{"value":"/ Returns a string representing the name of the field.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":68814,"byte_end":68870,"line_start":542,"line_end":542,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":69902,"byte_end":69905,"line_start":594,"line_end":594,"column_start":18,"column_end":21},"name":"new","qualname":"<FieldSet>::new","value":"pub const fn new(&'static [&'static str], callsite::Identifier) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `FieldSet` with the given array of field names and callsite.\n","sig":null,"attributes":[{"value":"/ Constructs a new `FieldSet` with the given array of field names and callsite.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":69803,"byte_end":69884,"line_start":593,"line_end":593,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":70511,"byte_end":70516,"line_start":610,"line_end":610,"column_start":12,"column_end":17},"name":"field","qualname":"<FieldSet>::field","value":"pub fn field<Q: ?Sized>(&Self, &Q) -> Option<Field> where Q: Borrow<str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`Field`] named `name`, or `None` if no such field exists.","sig":null,"attributes":[{"value":"/ Returns the [`Field`] named `name`, or `None` if no such field exists.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":70377,"byte_end":70451,"line_start":607,"line_end":607,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":70456,"byte_end":70459,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ [`Field`]: ../struct.Field.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":70464,"byte_end":70499,"line_start":609,"line_end":609,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":71687,"byte_end":71695,"line_start":638,"line_end":638,"column_start":12,"column_end":20},"name":"contains","qualname":"<FieldSet>::contains","value":"pub fn contains(&Self, &Field) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` contains the given `field`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` contains the given `field`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":70864,"byte_end":70920,"line_start":624,"line_end":624,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":70925,"byte_end":70928,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ <div class=\"information\">","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":70933,"byte_end":70962,"line_start":626,"line_end":626,"column_start":5,"column_end":34}},{"value":"/     <div class=\"tooltip ignore\" style=\"\">ⓘ<span class=\"tooltiptext\">Note</span></div>","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":70967,"byte_end":71058,"line_start":627,"line_end":627,"column_start":5,"column_end":94}},{"value":"/ </div>","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":71063,"byte_end":71073,"line_start":628,"line_end":628,"column_start":5,"column_end":15}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":71078,"byte_end":71137,"line_start":629,"line_end":629,"column_start":5,"column_end":64}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":71142,"byte_end":71207,"line_start":630,"line_end":630,"column_start":5,"column_end":70}},{"value":"/ <strong>Note</strong>: If <code>field</code> shares a name with a field","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":71212,"byte_end":71287,"line_start":631,"line_end":631,"column_start":5,"column_end":80}},{"value":"/ in this <code>FieldSet</code>, but was created by a <code>FieldSet</code>","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":71292,"byte_end":71369,"line_start":632,"line_end":632,"column_start":5,"column_end":82}},{"value":"/ with a different callsite, this <code>FieldSet</code> does <em>not</em>","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":71374,"byte_end":71449,"line_start":633,"line_end":633,"column_start":5,"column_end":80}},{"value":"/ contain it. This is so that if two separate span callsites define a field","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":71454,"byte_end":71531,"line_start":634,"line_end":634,"column_start":5,"column_end":82}},{"value":"/ named \"foo\", the <code>Field</code> corresponding to \"foo\" for each","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":71536,"byte_end":71607,"line_start":635,"line_end":635,"column_start":5,"column_end":76}},{"value":"/ of those callsites are not equivalent.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":71612,"byte_end":71654,"line_start":636,"line_end":636,"column_start":5,"column_end":47}},{"value":"/ </pre></div>","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":71659,"byte_end":71675,"line_start":637,"line_end":637,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":71881,"byte_end":71885,"line_start":643,"line_end":643,"column_start":12,"column_end":16},"name":"iter","qualname":"<FieldSet>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the `Field`s in this `FieldSet`.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the `Field`s in this `FieldSet`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":71808,"byte_end":71869,"line_start":642,"line_end":642,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":72320,"byte_end":72329,"line_start":659,"line_end":659,"column_start":12,"column_end":21},"name":"value_set","qualname":"<FieldSet>::value_set","value":"pub fn value_set<'v, V>(&'v Self, &'v V) -> ValueSet where V: ValidLen","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `ValueSet` with entries for this `FieldSet`'s values.","sig":null,"attributes":[{"value":"/ Returns a new `ValueSet` with entries for this `FieldSet`'s values.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":72115,"byte_end":72186,"line_start":654,"line_end":654,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":72191,"byte_end":72194,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ Note that a `ValueSet` may not be constructed with arrays of over 32","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":72199,"byte_end":72271,"line_start":656,"line_end":656,"column_start":5,"column_end":77}},{"value":"/ elements.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":72276,"byte_end":72289,"line_start":657,"line_end":657,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":72605,"byte_end":72608,"line_start":671,"line_end":671,"column_start":12,"column_end":15},"name":"len","qualname":"<FieldSet>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of fields in this `FieldSet`.\n","sig":null,"attributes":[{"value":"/ Returns the number of fields in this `FieldSet`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":72527,"byte_end":72579,"line_start":669,"line_end":669,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":72584,"byte_end":72593,"line_start":670,"line_end":670,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":72743,"byte_end":72751,"line_start":677,"line_end":677,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FieldSet>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether or not this `FieldSet` has fields.\n","sig":null,"attributes":[{"value":"/ Returns whether or not this `FieldSet` has fields.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":72663,"byte_end":72717,"line_start":675,"line_end":675,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":72722,"byte_end":72731,"line_start":676,"line_end":676,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":74110,"byte_end":74118,"line_start":733,"line_end":733,"column_start":12,"column_end":20},"name":"callsite","qualname":"<ValueSet>::callsite","value":"pub fn callsite(&Self) -> callsite::Identifier","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Identifier`] that uniquely identifies the [`Callsite`]\n defining the fields this `ValueSet` refers to.","sig":null,"attributes":[{"value":"/ Returns an [`Identifier`] that uniquely identifies the [`Callsite`]","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":73837,"byte_end":73908,"line_start":727,"line_end":727,"column_start":5,"column_end":76}},{"value":"/ defining the fields this `ValueSet` refers to.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":73913,"byte_end":73963,"line_start":728,"line_end":728,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":73968,"byte_end":73971,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ [`Identifier`]: ../callsite/struct.Identifier.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":73976,"byte_end":74030,"line_start":730,"line_end":730,"column_start":5,"column_end":59}},{"value":"/ [`Callsite`]: ../callsite/trait.Callsite.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":74035,"byte_end":74084,"line_start":731,"line_end":731,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":74089,"byte_end":74098,"line_start":732,"line_end":732,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":351},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":76643,"byte_end":76651,"line_start":815,"line_end":815,"column_start":15,"column_end":23},"name":"ValidLen","qualname":"::field::private::ValidLen","value":"ValidLen<'a>: Borrow<[(&'a Field, Option<&'a Value + 'a>)]>","parent":null,"children":[],"decl_id":null,"docs":" Marker trait implemented by arrays which are of valid length to\n construct a `ValueSet`.","sig":null,"attributes":[{"value":"/ Marker trait implemented by arrays which are of valid length to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":76204,"byte_end":76271,"line_start":808,"line_end":808,"column_start":5,"column_end":72}},{"value":"/ construct a `ValueSet`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":76276,"byte_end":76303,"line_start":809,"line_end":809,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":76308,"byte_end":76311,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ `ValueSet`s may only be constructed from arrays containing 32 or fewer","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":76316,"byte_end":76390,"line_start":811,"line_end":811,"column_start":5,"column_end":79}},{"value":"/ elements, to ensure the array is small enough to always be allocated on the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":76395,"byte_end":76474,"line_start":812,"line_end":812,"column_start":5,"column_end":84}},{"value":"/ stack. This trait is only implemented by arrays of an appropriate length,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":76479,"byte_end":76556,"line_start":813,"line_end":813,"column_start":5,"column_end":82}},{"value":"/ ensuring that the correct size arrays are used at compile-time.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":76561,"byte_end":76628,"line_start":814,"line_end":814,"column_start":5,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":354},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"metadata","qualname":"::metadata","value":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","parent":null,"children":[{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":859},{"krate":0,"index":871},{"krate":0,"index":869},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":873},{"krate":0,"index":885},{"krate":0,"index":883},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":887},{"krate":0,"index":897},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":899},{"krate":0,"index":904},{"krate":0,"index":902},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":389},{"krate":0,"index":906},{"krate":0,"index":919},{"krate":0,"index":917},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":392},{"krate":0,"index":397},{"krate":0,"index":403},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":921},{"krate":0,"index":950},{"krate":0,"index":948},{"krate":0,"index":946},{"krate":0,"index":943},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":412},{"krate":0,"index":414},{"krate":0,"index":416},{"krate":0,"index":418},{"krate":0,"index":435},{"krate":0,"index":437},{"krate":0,"index":439},{"krate":0,"index":951},{"krate":0,"index":953},{"krate":0,"index":445},{"krate":0,"index":447},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":452},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":469},{"krate":0,"index":475},{"krate":0,"index":477}],"decl_id":null,"docs":" Metadata describing trace data.\n","sig":null,"attributes":[{"value":"! Metadata describing trace data.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":81861,"byte_end":81896,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":365},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":84494,"byte_end":84502,"line_start":61,"line_end":61,"column_start":12,"column_end":20},"name":"Metadata","qualname":"::metadata::Metadata","value":"Metadata {  }","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374}],"decl_id":null,"docs":" Metadata describing a [span] or [event].","sig":null,"attributes":[{"value":"/ Metadata describing a [span] or [event].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":82027,"byte_end":82071,"line_start":9,"line_end":9,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":82072,"byte_end":82075,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ All spans and events have the following metadata:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":82076,"byte_end":82129,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"/ - A [name], represented as a static string.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":82130,"byte_end":82177,"line_start":12,"line_end":12,"column_start":1,"column_end":48}},{"value":"/ - A [target], a string that categorizes part of the system where the span","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":82178,"byte_end":82255,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/   or event occurred. The `tracing` macros default to using the module","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":82256,"byte_end":82329,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/   path where the span or event originated as the target, but it may be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":82330,"byte_end":82404,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/   overridden.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":82405,"byte_end":82422,"line_start":16,"line_end":16,"column_start":1,"column_end":18}},{"value":"/ - A [verbosity level].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":82423,"byte_end":82449,"line_start":17,"line_end":17,"column_start":1,"column_end":27}},{"value":"/ - The names of the [fields] defined by the span or event.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":82450,"byte_end":82511,"line_start":18,"line_end":18,"column_start":1,"column_end":62}},{"value":"/ - Whether the metadata corresponds to a span or event.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":82512,"byte_end":82570,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":82571,"byte_end":82574,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ In addition, the following optional metadata describing the source code","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":82575,"byte_end":82650,"line_start":21,"line_end":21,"column_start":1,"column_end":76}},{"value":"/ location where the span or event originated _may_ be provided:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":82651,"byte_end":82717,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/ - The [file name]","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":82718,"byte_end":82739,"line_start":23,"line_end":23,"column_start":1,"column_end":22}},{"value":"/ - The [line number]","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":82740,"byte_end":82763,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"/ - The [module path]","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":82764,"byte_end":82787,"line_start":25,"line_end":25,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":82788,"byte_end":82791,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Metadata is used by [`Subscriber`]s when filtering spans and events, and it","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":82792,"byte_end":82871,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ may also be used as part of their data payload.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":82872,"byte_end":82923,"line_start":28,"line_end":28,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":82924,"byte_end":82927,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ When created by the `event!` or `span!` macro, the metadata describing a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":82928,"byte_end":83004,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ particular event or span is constructed statically and exists as a single","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":83005,"byte_end":83082,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ static instance. Thus, the overhead of creating the metadata is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":83083,"byte_end":83150,"line_start":32,"line_end":32,"column_start":1,"column_end":68}},{"value":"/ _significantly_ lower than that of creating the actual span. Therefore,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":83151,"byte_end":83226,"line_start":33,"line_end":33,"column_start":1,"column_end":76}},{"value":"/ filtering is based on metadata, rather than on the constructed span.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":83227,"byte_end":83299,"line_start":34,"line_end":34,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":83300,"byte_end":83303,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ <div class=\"information\">","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":83304,"byte_end":83333,"line_start":36,"line_end":36,"column_start":1,"column_end":30}},{"value":"/     <div class=\"tooltip ignore\" style=\"\">ⓘ<span class=\"tooltiptext\">Note</span></div>","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":83334,"byte_end":83425,"line_start":37,"line_end":37,"column_start":1,"column_end":90}},{"value":"/ </div>","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":83426,"byte_end":83436,"line_start":38,"line_end":38,"column_start":1,"column_end":11}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":83437,"byte_end":83496,"line_start":39,"line_end":39,"column_start":1,"column_end":60}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":83497,"byte_end":83562,"line_start":40,"line_end":40,"column_start":1,"column_end":66}},{"value":"/ <strong>Note</strong>: Although instances of <code>Metadata</code> cannot","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":83563,"byte_end":83640,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ be compared directly, they provide a method <a href=\"struct.Metadata.html#method.id\">","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":83641,"byte_end":83730,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"/ <code>id</code></a>, returning an opaque <a href=\"../callsite/struct.Identifier.html\">","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":83731,"byte_end":83821,"line_start":43,"line_end":43,"column_start":1,"column_end":91}},{"value":"/ callsite identifier</a>  which uniquely identifies the callsite where the metadata","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":83822,"byte_end":83908,"line_start":44,"line_end":44,"column_start":1,"column_end":87}},{"value":"/ originated. This can be used to determine if two <code>Metadata</code> correspond to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":83909,"byte_end":83997,"line_start":45,"line_end":45,"column_start":1,"column_end":89}},{"value":"/ the same callsite.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":83998,"byte_end":84020,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"/ </pre></div>","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":84021,"byte_end":84037,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":84038,"byte_end":84041,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ [span]: ../span/index.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":84042,"byte_end":84072,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/ [event]: ../event/index.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":84073,"byte_end":84105,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ [name]: #method.name","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":84106,"byte_end":84130,"line_start":51,"line_end":51,"column_start":1,"column_end":25}},{"value":"/ [target]: #method.target","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":84131,"byte_end":84159,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/ [fields]: #method.fields","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":84160,"byte_end":84188,"line_start":53,"line_end":53,"column_start":1,"column_end":29}},{"value":"/ [verbosity level]: #method.level","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":84189,"byte_end":84225,"line_start":54,"line_end":54,"column_start":1,"column_end":37}},{"value":"/ [file name]: #method.file","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":84226,"byte_end":84255,"line_start":55,"line_end":55,"column_start":1,"column_end":30}},{"value":"/ [line number]: #method.line","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":84256,"byte_end":84287,"line_start":56,"line_end":56,"column_start":1,"column_end":32}},{"value":"/ [module path]: #method.module","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":84288,"byte_end":84321,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":84322,"byte_end":84377,"line_start":58,"line_end":58,"column_start":1,"column_end":56}},{"value":"/ [`id`]: struct.Metadata.html#method.id","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":84378,"byte_end":84420,"line_start":59,"line_end":59,"column_start":1,"column_end":43}},{"value":"/ [callsite identifier]: ../callsite/struct.Identifier.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":84421,"byte_end":84482,"line_start":60,"line_end":60,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":859},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":85500,"byte_end":85504,"line_start":94,"line_end":94,"column_start":12,"column_end":16},"name":"Kind","qualname":"::metadata::Kind","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether the callsite is a span or event.\n","sig":null,"attributes":[{"value":"/ Indicates whether the callsite is a span or event.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":85395,"byte_end":85449,"line_start":92,"line_end":92,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":873},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":85625,"byte_end":85630,"line_start":98,"line_end":98,"column_start":12,"column_end":17},"name":"Level","qualname":"::metadata::Level","value":"","parent":null,"children":[],"decl_id":null,"docs":" Describes the level of verbosity of a span or event.\n","sig":null,"attributes":[{"value":"/ Describes the level of verbosity of a span or event.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":85518,"byte_end":85574,"line_start":96,"line_end":96,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":887},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":86100,"byte_end":86111,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"LevelFilter","qualname":"::metadata::LevelFilter","value":"","parent":null,"children":[],"decl_id":null,"docs":" A filter comparable to a verbosity `Level`.","sig":null,"attributes":[{"value":"/ A filter comparable to a verbosity `Level`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":85645,"byte_end":85692,"line_start":100,"line_end":100,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":85693,"byte_end":85696,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ If a `Level` is considered less than a `LevelFilter`, it should be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":85697,"byte_end":85767,"line_start":102,"line_end":102,"column_start":1,"column_end":71}},{"value":"/ considered disabled; if greater than or equal to the `LevelFilter`, that","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":85768,"byte_end":85844,"line_start":103,"line_end":103,"column_start":1,"column_end":77}},{"value":"/ level is enabled.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":85845,"byte_end":85866,"line_start":104,"line_end":104,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":85867,"byte_end":85870,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ Note that this is essentially identical to the `Level` type, but with the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":85871,"byte_end":85948,"line_start":106,"line_end":106,"column_start":1,"column_end":78}},{"value":"/ addition of an `OFF` level that completely disables all trace","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":85949,"byte_end":86014,"line_start":107,"line_end":107,"column_start":1,"column_end":66}},{"value":"/ instrumentation.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":86015,"byte_end":86035,"line_start":108,"line_end":108,"column_start":1,"column_end":21}},{"value":"repr(transparent)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":86036,"byte_end":86056,"line_start":109,"line_end":109,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":899},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":86230,"byte_end":86251,"line_start":115,"line_end":115,"column_start":12,"column_end":33},"name":"ParseLevelFilterError","qualname":"::metadata::ParseLevelFilterError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicates that a string could not be parsed to a valid level.\n","sig":null,"attributes":[{"value":"/ Indicates that a string could not be parsed to a valid level.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":86129,"byte_end":86194,"line_start":113,"line_end":113,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":86540,"byte_end":86543,"line_start":124,"line_end":124,"column_start":18,"column_end":21},"name":"new","qualname":"<Metadata>::new","value":"pub const fn new(&'static str, &'a str, Level, Option<&'a str>, Option<u32>,\n                 Option<&'a str>, field::FieldSet, Kind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct new metadata for a span or event, with a name, target, level, field\n names, and optional source code location.\n","sig":null,"attributes":[{"value":"/ Construct new metadata for a span or event, with a name, target, level, field","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":86391,"byte_end":86472,"line_start":122,"line_end":122,"column_start":5,"column_end":86}},{"value":"/ names, and optional source code location.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":86477,"byte_end":86522,"line_start":123,"line_end":123,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":87060,"byte_end":87066,"line_start":147,"line_end":147,"column_start":12,"column_end":18},"name":"fields","qualname":"<Metadata>::fields","value":"pub fn fields(&Self) -> &field::FieldSet","parent":null,"children":[],"decl_id":null,"docs":" Returns the names of the fields on the described span or event.\n","sig":null,"attributes":[{"value":"/ Returns the names of the fields on the described span or event.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":86981,"byte_end":87048,"line_start":146,"line_end":146,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":87206,"byte_end":87211,"line_start":152,"line_end":152,"column_start":12,"column_end":17},"name":"level","qualname":"<Metadata>::level","value":"pub fn level(&Self) -> &Level","parent":null,"children":[],"decl_id":null,"docs":" Returns the level of verbosity of the described span or event.\n","sig":null,"attributes":[{"value":"/ Returns the level of verbosity of the described span or event.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":87128,"byte_end":87194,"line_start":151,"line_end":151,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":87307,"byte_end":87311,"line_start":157,"line_end":157,"column_start":12,"column_end":16},"name":"name","qualname":"<Metadata>::name","value":"pub fn name(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of the span.\n","sig":null,"attributes":[{"value":"/ Returns the name of the span.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":87262,"byte_end":87295,"line_start":156,"line_end":156,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":87634,"byte_end":87640,"line_start":166,"line_end":166,"column_start":12,"column_end":18},"name":"target","qualname":"<Metadata>::target","value":"pub fn target(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Returns a string describing the part of the system where the span or\n event that this metadata describes occurred.","sig":null,"attributes":[{"value":"/ Returns a string describing the part of the system where the span or","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":87366,"byte_end":87438,"line_start":161,"line_end":161,"column_start":5,"column_end":77}},{"value":"/ event that this metadata describes occurred.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":87443,"byte_end":87491,"line_start":162,"line_end":162,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":87496,"byte_end":87499,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ Typically, this is the module path, but alternate targets may be set","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":87504,"byte_end":87576,"line_start":164,"line_end":164,"column_start":5,"column_end":77}},{"value":"/ when spans or events are constructed.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":87581,"byte_end":87622,"line_start":165,"line_end":165,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":87817,"byte_end":87828,"line_start":172,"line_end":172,"column_start":12,"column_end":23},"name":"module_path","qualname":"<Metadata>::module_path","value":"pub fn module_path(&Self) -> Option<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path to the Rust module where the span occurred, or\n `None` if the module path is unknown.\n","sig":null,"attributes":[{"value":"/ Returns the path to the Rust module where the span occurred, or","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":87692,"byte_end":87759,"line_start":170,"line_end":170,"column_start":5,"column_end":72}},{"value":"/ `None` if the module path is unknown.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":87764,"byte_end":87805,"line_start":171,"line_end":171,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":88015,"byte_end":88019,"line_start":178,"line_end":178,"column_start":12,"column_end":16},"name":"file","qualname":"<Metadata>::file","value":"pub fn file(&Self) -> Option<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of the source code file where the span\n occurred, or `None` if the file is unknown\n","sig":null,"attributes":[{"value":"/ Returns the name of the source code file where the span","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":87893,"byte_end":87952,"line_start":176,"line_end":176,"column_start":5,"column_end":64}},{"value":"/ occurred, or `None` if the file is unknown","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":87957,"byte_end":88003,"line_start":177,"line_end":177,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":88214,"byte_end":88218,"line_start":184,"line_end":184,"column_start":12,"column_end":16},"name":"line","qualname":"<Metadata>::line","value":"pub fn line(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the line number in the source code file where the span\n occurred, or `None` if the line number is unknown.\n","sig":null,"attributes":[{"value":"/ Returns the line number in the source code file where the span","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":88077,"byte_end":88143,"line_start":182,"line_end":182,"column_start":5,"column_end":71}},{"value":"/ occurred, or `None` if the line number is unknown.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":88148,"byte_end":88202,"line_start":183,"line_end":183,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":88411,"byte_end":88419,"line_start":191,"line_end":191,"column_start":12,"column_end":20},"name":"callsite","qualname":"<Metadata>::callsite","value":"pub fn callsite(&Self) -> callsite::Identifier","parent":null,"children":[],"decl_id":null,"docs":" Returns an opaque `Identifier` that uniquely identifies the callsite\n this `Metadata` originated from.\n","sig":null,"attributes":[{"value":"/ Returns an opaque `Identifier` that uniquely identifies the callsite","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":88272,"byte_end":88344,"line_start":188,"line_end":188,"column_start":5,"column_end":77}},{"value":"/ this `Metadata` originated from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":88349,"byte_end":88385,"line_start":189,"line_end":189,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":88390,"byte_end":88399,"line_start":190,"line_end":190,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":88556,"byte_end":88564,"line_start":196,"line_end":196,"column_start":12,"column_end":20},"name":"is_event","qualname":"<Metadata>::is_event","value":"pub fn is_event(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the callsite kind is `Event`.\n","sig":null,"attributes":[{"value":"/ Returns true if the callsite kind is `Event`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":88495,"byte_end":88544,"line_start":195,"line_end":195,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":88681,"byte_end":88688,"line_start":201,"line_end":201,"column_start":12,"column_end":19},"name":"is_span","qualname":"<Metadata>::is_span","value":"pub fn is_span(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the callsite kind is `Span`.\n","sig":null,"attributes":[{"value":"/ Return true if the callsite kind is `Span`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":88622,"byte_end":88669,"line_start":200,"line_end":200,"column_start":5,"column_end":52}}]},{"kind":"Const","id":{"krate":0,"index":393},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":89966,"byte_end":89971,"line_start":247,"line_end":247,"column_start":15,"column_end":20},"name":"EVENT","qualname":"::metadata::Kind::EVENT","value":"Kind","parent":{"krate":0,"index":392},"children":[],"decl_id":null,"docs":" `Event` callsite\n","sig":null,"attributes":[{"value":"/ `Event` callsite","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":89931,"byte_end":89951,"line_start":246,"line_end":246,"column_start":5,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":394},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":90043,"byte_end":90047,"line_start":250,"line_end":250,"column_start":15,"column_end":19},"name":"SPAN","qualname":"::metadata::Kind::SPAN","value":"Kind","parent":{"krate":0,"index":392},"children":[],"decl_id":null,"docs":" `Span` callsite\n","sig":null,"attributes":[{"value":"/ `Span` callsite","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":90009,"byte_end":90028,"line_start":249,"line_end":249,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":90142,"byte_end":90149,"line_start":253,"line_end":253,"column_start":12,"column_end":19},"name":"is_span","qualname":"<Kind>::is_span","value":"pub fn is_span(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the callsite kind is `Span`\n","sig":null,"attributes":[{"value":"/ Return true if the callsite kind is `Span`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":90084,"byte_end":90130,"line_start":252,"line_end":252,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":90335,"byte_end":90343,"line_start":261,"line_end":261,"column_start":12,"column_end":20},"name":"is_event","qualname":"<Kind>::is_event","value":"pub fn is_event(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the callsite kind is `Event`\n","sig":null,"attributes":[{"value":"/ Return true if the callsite kind is `Event`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":90276,"byte_end":90323,"line_start":260,"line_end":260,"column_start":5,"column_end":52}}]},{"kind":"Const","id":{"krate":0,"index":398},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":90598,"byte_end":90603,"line_start":275,"line_end":275,"column_start":15,"column_end":20},"name":"ERROR","qualname":"::metadata::Level::ERROR","value":"Level","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" The \"error\" level.","sig":null,"attributes":[{"value":"/ The \"error\" level.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":90513,"byte_end":90535,"line_start":272,"line_end":272,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":90540,"byte_end":90543,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Designates very serious errors.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":90548,"byte_end":90583,"line_start":274,"line_end":274,"column_start":5,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":399},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":90728,"byte_end":90732,"line_start":279,"line_end":279,"column_start":15,"column_end":19},"name":"WARN","qualname":"::metadata::Level::WARN","value":"Level","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" The \"warn\" level.","sig":null,"attributes":[{"value":"/ The \"warn\" level.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":90643,"byte_end":90664,"line_start":276,"line_end":276,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":90669,"byte_end":90672,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Designates hazardous situations.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":90677,"byte_end":90713,"line_start":278,"line_end":278,"column_start":5,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":400},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":90854,"byte_end":90858,"line_start":283,"line_end":283,"column_start":15,"column_end":19},"name":"INFO","qualname":"::metadata::Level::INFO","value":"Level","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" The \"info\" level.","sig":null,"attributes":[{"value":"/ The \"info\" level.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":90771,"byte_end":90792,"line_start":280,"line_end":280,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":90797,"byte_end":90800,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Designates useful information.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":90805,"byte_end":90839,"line_start":282,"line_end":282,"column_start":5,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":401},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":90989,"byte_end":90994,"line_start":287,"line_end":287,"column_start":15,"column_end":20},"name":"DEBUG","qualname":"::metadata::Level::DEBUG","value":"Level","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" The \"debug\" level.","sig":null,"attributes":[{"value":"/ The \"debug\" level.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":90897,"byte_end":90919,"line_start":284,"line_end":284,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":90924,"byte_end":90927,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ Designates lower priority information.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":90932,"byte_end":90974,"line_start":286,"line_end":286,"column_start":5,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":402},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":91155,"byte_end":91160,"line_start":291,"line_end":291,"column_start":15,"column_end":20},"name":"TRACE","qualname":"::metadata::Level::TRACE","value":"Level","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" The \"trace\" level.","sig":null,"attributes":[{"value":"/ The \"trace\" level.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":91034,"byte_end":91056,"line_start":288,"line_end":288,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":91061,"byte_end":91064,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ Designates very low priority, often extremely verbose, information.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":91069,"byte_end":91140,"line_start":290,"line_end":290,"column_start":5,"column_end":76}}]},{"kind":"Const","id":{"krate":0,"index":419},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":93788,"byte_end":93791,"line_start":386,"line_end":386,"column_start":15,"column_end":18},"name":"OFF","qualname":"::metadata::LevelFilter::OFF","value":"LevelFilter","parent":{"krate":0,"index":418},"children":[],"decl_id":null,"docs":" The \"off\" level.","sig":null,"attributes":[{"value":"/ The \"off\" level.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":93668,"byte_end":93688,"line_start":383,"line_end":383,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":93693,"byte_end":93696,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ Designates that trace instrumentation should be completely disabled.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":93701,"byte_end":93773,"line_start":385,"line_end":385,"column_start":5,"column_end":77}}]},{"kind":"Const","id":{"krate":0,"index":420},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":93915,"byte_end":93920,"line_start":390,"line_end":390,"column_start":15,"column_end":20},"name":"ERROR","qualname":"::metadata::LevelFilter::ERROR","value":"LevelFilter","parent":{"krate":0,"index":418},"children":[],"decl_id":null,"docs":" The \"error\" level.","sig":null,"attributes":[{"value":"/ The \"error\" level.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":93830,"byte_end":93852,"line_start":387,"line_end":387,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":93857,"byte_end":93860,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ Designates very serious errors.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":93865,"byte_end":93900,"line_start":389,"line_end":389,"column_start":5,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":421},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":94064,"byte_end":94068,"line_start":394,"line_end":394,"column_start":15,"column_end":19},"name":"WARN","qualname":"::metadata::LevelFilter::WARN","value":"LevelFilter","parent":{"krate":0,"index":418},"children":[],"decl_id":null,"docs":" The \"warn\" level.","sig":null,"attributes":[{"value":"/ The \"warn\" level.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":93979,"byte_end":94000,"line_start":391,"line_end":391,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":94005,"byte_end":94008,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ Designates hazardous situations.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":94013,"byte_end":94049,"line_start":393,"line_end":393,"column_start":5,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":422},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":94209,"byte_end":94213,"line_start":398,"line_end":398,"column_start":15,"column_end":19},"name":"INFO","qualname":"::metadata::LevelFilter::INFO","value":"LevelFilter","parent":{"krate":0,"index":418},"children":[],"decl_id":null,"docs":" The \"info\" level.","sig":null,"attributes":[{"value":"/ The \"info\" level.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":94126,"byte_end":94147,"line_start":395,"line_end":395,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":94152,"byte_end":94155,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ Designates useful information.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":94160,"byte_end":94194,"line_start":397,"line_end":397,"column_start":5,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":423},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":94363,"byte_end":94368,"line_start":402,"line_end":402,"column_start":15,"column_end":20},"name":"DEBUG","qualname":"::metadata::LevelFilter::DEBUG","value":"LevelFilter","parent":{"krate":0,"index":418},"children":[],"decl_id":null,"docs":" The \"debug\" level.","sig":null,"attributes":[{"value":"/ The \"debug\" level.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":94271,"byte_end":94293,"line_start":399,"line_end":399,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":94298,"byte_end":94301,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ Designates lower priority information.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":94306,"byte_end":94348,"line_start":401,"line_end":401,"column_start":5,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":424},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":94548,"byte_end":94553,"line_start":406,"line_end":406,"column_start":15,"column_end":20},"name":"TRACE","qualname":"::metadata::LevelFilter::TRACE","value":"LevelFilter","parent":{"krate":0,"index":418},"children":[],"decl_id":null,"docs":" The \"trace\" level.","sig":null,"attributes":[{"value":"/ The \"trace\" level.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":94427,"byte_end":94449,"line_start":403,"line_end":403,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":94454,"byte_end":94457,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ Designates very low priority, often extremely verbose, information.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":94462,"byte_end":94533,"line_start":405,"line_end":405,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":94734,"byte_end":94744,"line_start":410,"line_end":410,"column_start":18,"column_end":28},"name":"from_level","qualname":"<LevelFilter>::from_level","value":"pub const fn from_level(Level) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LevelFilter` that enables spans and events with verbosity up\n to and including `level`.\n","sig":null,"attributes":[{"value":"/ Returns a `LevelFilter` that enables spans and events with verbosity up","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":94607,"byte_end":94682,"line_start":408,"line_end":408,"column_start":5,"column_end":80}},{"value":"/ to and including `level`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":94687,"byte_end":94716,"line_start":409,"line_end":409,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":95013,"byte_end":95023,"line_start":419,"line_end":419,"column_start":18,"column_end":28},"name":"into_level","qualname":"<LevelFilter>::into_level","value":"pub const fn into_level(Self) -> Option<Level>","parent":null,"children":[],"decl_id":null,"docs":" Returns the most verbose [`Level`] that this filter accepts, or `None`\n if it is [`OFF`].","sig":null,"attributes":[{"value":"/ Returns the most verbose [`Level`] that this filter accepts, or `None`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":94806,"byte_end":94880,"line_start":414,"line_end":414,"column_start":5,"column_end":79}},{"value":"/ if it is [`OFF`].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":94885,"byte_end":94906,"line_start":415,"line_end":415,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":94911,"byte_end":94914,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ [`Level`]: ../struct.Level.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":94919,"byte_end":94954,"line_start":417,"line_end":417,"column_start":5,"column_end":40}},{"value":"/ [`OFF`]: #associatedconstant.OFF","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":94959,"byte_end":94995,"line_start":418,"line_end":418,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":96754,"byte_end":96761,"line_start":454,"line_end":454,"column_start":12,"column_end":19},"name":"current","qualname":"<LevelFilter>::current","value":"pub fn current() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LevelFilter` that matches the most verbose [`Level`] that any\n currently active [`Subscriber`] will enable.","sig":null,"attributes":[{"value":"/ Returns a `LevelFilter` that matches the most verbose [`Level`] that any","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":95874,"byte_end":95950,"line_start":437,"line_end":437,"column_start":5,"column_end":81}},{"value":"/ currently active [`Subscriber`] will enable.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":95955,"byte_end":96003,"line_start":438,"line_end":438,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":96008,"byte_end":96011,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ User code should treat this as a *hint*. If a given span or event has a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":96016,"byte_end":96091,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/ level *higher* than the returned `LevelFilter`, it will not be enabled.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":96096,"byte_end":96171,"line_start":441,"line_end":441,"column_start":5,"column_end":80}},{"value":"/ However, if the level is less than or equal to this value, the span or","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":96176,"byte_end":96250,"line_start":442,"line_end":442,"column_start":5,"column_end":79}},{"value":"/ event is *not* guaranteed to be enabled; the subscriber will still","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":96255,"byte_end":96325,"line_start":443,"line_end":443,"column_start":5,"column_end":75}},{"value":"/ filter each callsite individually.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":96330,"byte_end":96368,"line_start":444,"line_end":444,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":96373,"byte_end":96376,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ Therefore, comparing a given span or event's level to the returned","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":96381,"byte_end":96451,"line_start":446,"line_end":446,"column_start":5,"column_end":75}},{"value":"/ `LevelFilter` **can** be used for determining if something is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":96456,"byte_end":96521,"line_start":447,"line_end":447,"column_start":5,"column_end":70}},{"value":"/ *disabled*, but **should not** be used for determining if something is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":96526,"byte_end":96600,"line_start":448,"line_end":448,"column_start":5,"column_end":79}},{"value":"/ *enabled*.`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":96605,"byte_end":96620,"line_start":449,"line_end":449,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":96625,"byte_end":96628,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ [`Level`]: ../struct.Level.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":96633,"byte_end":96668,"line_start":451,"line_end":451,"column_start":5,"column_end":40}},{"value":"/ [`Subscriber`]: ../../trait.Subscriber.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":96673,"byte_end":96720,"line_start":452,"line_end":452,"column_start":5,"column_end":52}},{"value":"inline(always)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":96725,"byte_end":96742,"line_start":453,"line_end":453,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":951},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":101473,"byte_end":101488,"line_start":563,"line_end":563,"column_start":12,"column_end":27},"name":"ParseLevelError","qualname":"::metadata::ParseLevelError","value":"ParseLevelError {  }","parent":null,"children":[{"krate":0,"index":952}],"decl_id":null,"docs":" Returned if parsing a `Level` fails.\n","sig":null,"attributes":[{"value":"/ Returned if parsing a `Level` fails.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":101404,"byte_end":101444,"line_start":561,"line_end":561,"column_start":1,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":485},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"span","qualname":"::span","value":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":965},{"krate":0,"index":980},{"krate":0,"index":978},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":968},{"krate":0,"index":982},{"krate":0,"index":987},{"krate":0,"index":990},{"krate":0,"index":993},{"krate":0,"index":996},{"krate":0,"index":998},{"krate":0,"index":1000},{"krate":0,"index":1008},{"krate":0,"index":491},{"krate":0,"index":496},{"krate":0,"index":499},{"krate":0,"index":512},{"krate":0,"index":518},{"krate":0,"index":526},{"krate":0,"index":529},{"krate":0,"index":532},{"krate":0,"index":534}],"decl_id":null,"docs":" Spans represent periods of time in the execution of a program.\n","sig":null,"attributes":[{"value":"! Spans represent periods of time in the execution of a program.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":112794,"byte_end":112860,"line_start":1,"line_end":1,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":965},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":113401,"byte_end":113403,"line_start":15,"line_end":15,"column_start":12,"column_end":14},"name":"Id","qualname":"::span::Id","value":"","parent":null,"children":[],"decl_id":null,"docs":" Identifies a span within the context of a subscriber.","sig":null,"attributes":[{"value":"/ Identifies a span within the context of a subscriber.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":112955,"byte_end":113012,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":113013,"byte_end":113016,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ They are generated by [`Subscriber`]s for each span as it is created, by","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":113017,"byte_end":113093,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ the [`new_span`] trait method. See the documentation for that method for","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":113094,"byte_end":113170,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ more information on span ID generation.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":113171,"byte_end":113214,"line_start":10,"line_end":10,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":113215,"byte_end":113218,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":113219,"byte_end":113274,"line_start":12,"line_end":12,"column_start":1,"column_end":56}},{"value":"/ [`new_span`]: ../subscriber/trait.Subscriber.html#method.new_span","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":113275,"byte_end":113344,"line_start":13,"line_end":13,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":982},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":113534,"byte_end":113544,"line_start":20,"line_end":20,"column_start":12,"column_end":22},"name":"Attributes","qualname":"::span::Attributes","value":"Attributes {  }","parent":null,"children":[{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986}],"decl_id":null,"docs":" Attributes provided to a `Subscriber` describing a new span when it is\n created.\n","sig":null,"attributes":[{"value":"/ Attributes provided to a `Subscriber` describing a new span when it is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":113418,"byte_end":113492,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ created.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":113493,"byte_end":113505,"line_start":18,"line_end":18,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":990},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":113721,"byte_end":113727,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"Record","qualname":"::span::Record","value":"Record {  }","parent":null,"children":[{"krate":0,"index":992}],"decl_id":null,"docs":" A set of fields recorded by a span.\n","sig":null,"attributes":[{"value":"/ A set of fields recorded by a span.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":113653,"byte_end":113692,"line_start":26,"line_end":26,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":996},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":114365,"byte_end":114372,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"Current","qualname":"::span::Current","value":"Current {  }","parent":null,"children":[{"krate":0,"index":997}],"decl_id":null,"docs":" Indicates what [the `Subscriber` considers] the \"current\" span.","sig":null,"attributes":[{"value":"/ Indicates what [the `Subscriber` considers] the \"current\" span.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":113774,"byte_end":113841,"line_start":32,"line_end":32,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":113842,"byte_end":113845,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ As subscribers may not track a notion of a current span, this has three","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":113846,"byte_end":113921,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ possible states:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":113922,"byte_end":113942,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/ - \"unknown\", indicating that the subscriber does not track a current span,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":113943,"byte_end":114021,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ - \"none\", indicating that the current context is known to not be in a span,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":114022,"byte_end":114101,"line_start":37,"line_end":37,"column_start":1,"column_end":80}},{"value":"/ - \"some\", with the current span's [`Id`] and [`Metadata`].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":114102,"byte_end":114164,"line_start":38,"line_end":38,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":114165,"byte_end":114168,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [the `Subscriber` considers]: ../subscriber/trait.Subscriber.html#method.current_span","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":114169,"byte_end":114258,"line_start":40,"line_end":40,"column_start":1,"column_end":90}},{"value":"/ [`Id`]: struct.Id.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":114259,"byte_end":114285,"line_start":41,"line_end":41,"column_start":1,"column_end":27}},{"value":"/ [`Metadata`]: ../metadata/struct.Metadata.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":114286,"byte_end":114336,"line_start":42,"line_end":42,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":115079,"byte_end":115087,"line_start":72,"line_end":72,"column_start":12,"column_end":20},"name":"from_u64","qualname":"<Id>::from_u64","value":"pub fn from_u64(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new span ID from the given `u64`.","sig":null,"attributes":[{"value":"/ Constructs a new span ID from the given `u64`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":114589,"byte_end":114639,"line_start":61,"line_end":61,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":114644,"byte_end":114647,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ <div class=\"information\">","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":114652,"byte_end":114681,"line_start":63,"line_end":63,"column_start":5,"column_end":34}},{"value":"/     <div class=\"tooltip ignore\" style=\"\">ⓘ<span class=\"tooltiptext\">Note</span></div>","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":114686,"byte_end":114777,"line_start":64,"line_end":64,"column_start":5,"column_end":94}},{"value":"/ </div>","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":114782,"byte_end":114792,"line_start":65,"line_end":65,"column_start":5,"column_end":15}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\">","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":114797,"byte_end":114856,"line_start":66,"line_end":66,"column_start":5,"column_end":64}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":114861,"byte_end":114926,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/ <strong>Note</strong>: Span IDs must be greater than zero.</pre></div>","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":114931,"byte_end":115005,"line_start":68,"line_end":68,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":115010,"byte_end":115013,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":115018,"byte_end":115030,"line_start":70,"line_end":70,"column_start":5,"column_end":17}},{"value":"/ - If the provided `u64` is 0","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":115035,"byte_end":115067,"line_start":71,"line_end":71,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":115350,"byte_end":115367,"line_start":80,"line_end":80,"column_start":18,"column_end":35},"name":"from_non_zero_u64","qualname":"<Id>::from_non_zero_u64","value":"pub const fn from_non_zero_u64(NonZeroU64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new span ID from the given `NonZeroU64`.","sig":null,"attributes":[{"value":"/ Constructs a new span ID from the given `NonZeroU64`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":115179,"byte_end":115236,"line_start":76,"line_end":76,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":115241,"byte_end":115244,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Unlike [`Id::from_u64`](#method.from_u64), this will never panic.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":115249,"byte_end":115318,"line_start":78,"line_end":78,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":115323,"byte_end":115332,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":115580,"byte_end":115588,"line_start":87,"line_end":87,"column_start":12,"column_end":20},"name":"into_u64","qualname":"<Id>::into_u64","value":"pub fn into_u64(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the span's ID as a `u64`.\n","sig":null,"attributes":[{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":115487,"byte_end":115526,"line_start":85,"line_end":85,"column_start":5,"column_end":44}},{"value":"/ Returns the span's ID as a `u64`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":115531,"byte_end":115568,"line_start":86,"line_end":86,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":115824,"byte_end":115841,"line_start":95,"line_end":95,"column_start":18,"column_end":35},"name":"into_non_zero_u64","qualname":"<Id>::into_non_zero_u64","value":"pub const fn into_non_zero_u64(&Self) -> NonZeroU64","parent":null,"children":[],"decl_id":null,"docs":" Returns the span's ID as a `NonZeroU64`.\n","sig":null,"attributes":[{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":115704,"byte_end":115743,"line_start":92,"line_end":92,"column_start":5,"column_end":44}},{"value":"/ Returns the span's ID as a `NonZeroU64`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":115748,"byte_end":115792,"line_start":93,"line_end":93,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":115797,"byte_end":115806,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":116192,"byte_end":116195,"line_start":111,"line_end":111,"column_start":12,"column_end":15},"name":"new","qualname":"<Attributes>::new","value":"pub fn new(&'static Metadata, &'a field::ValueSet) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns `Attributes` describing a new child span of the current span,\n with the provided metadata and values.\n","sig":null,"attributes":[{"value":"/ Returns `Attributes` describing a new child span of the current span,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":116060,"byte_end":116133,"line_start":109,"line_end":109,"column_start":5,"column_end":78}},{"value":"/ with the provided metadata and values.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":116138,"byte_end":116180,"line_start":110,"line_end":110,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":116538,"byte_end":116546,"line_start":121,"line_end":121,"column_start":12,"column_end":20},"name":"new_root","qualname":"<Attributes>::new_root","value":"pub fn new_root(&'static Metadata, &'a field::ValueSet) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns `Attributes` describing a new span at the root of its own trace\n tree, with the provided metadata and values.\n","sig":null,"attributes":[{"value":"/ Returns `Attributes` describing a new span at the root of its own trace","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":116398,"byte_end":116473,"line_start":119,"line_end":119,"column_start":5,"column_end":80}},{"value":"/ tree, with the provided metadata and values.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":116478,"byte_end":116526,"line_start":120,"line_end":120,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":116887,"byte_end":116895,"line_start":131,"line_end":131,"column_start":12,"column_end":20},"name":"child_of","qualname":"<Attributes>::child_of","value":"pub fn child_of(Id, &'static Metadata, &'a field::ValueSet) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns `Attributes` describing a new child span of the specified\n parent span, with the provided metadata and values.\n","sig":null,"attributes":[{"value":"/ Returns `Attributes` describing a new child span of the specified","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":116746,"byte_end":116815,"line_start":129,"line_end":129,"column_start":5,"column_end":74}},{"value":"/ parent span, with the provided metadata and values.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":116820,"byte_end":116875,"line_start":130,"line_end":130,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":117213,"byte_end":117221,"line_start":144,"line_end":144,"column_start":12,"column_end":20},"name":"metadata","qualname":"<Attributes>::metadata","value":"pub fn metadata(&Self) -> &'static Metadata","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the new span's metadata.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the new span's metadata.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":117150,"byte_end":117201,"line_start":143,"line_end":143,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":117406,"byte_end":117412,"line_start":150,"line_end":150,"column_start":12,"column_end":18},"name":"values","qualname":"<Attributes>::values","value":"pub fn values(&Self) -> &field::ValueSet","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a `ValueSet` containing any values the new span\n was created with.\n","sig":null,"attributes":[{"value":"/ Returns a reference to a `ValueSet` containing any values the new span","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":117294,"byte_end":117368,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ was created with.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":117373,"byte_end":117394,"line_start":149,"line_end":149,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":117539,"byte_end":117546,"line_start":155,"line_end":155,"column_start":12,"column_end":19},"name":"is_root","qualname":"<Attributes>::is_root","value":"pub fn is_root(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the new span should be a root.\n","sig":null,"attributes":[{"value":"/ Returns true if the new span should be a root.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":117477,"byte_end":117527,"line_start":154,"line_end":154,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":118053,"byte_end":118066,"line_start":169,"line_end":169,"column_start":12,"column_end":25},"name":"is_contextual","qualname":"<Attributes>::is_contextual","value":"pub fn is_contextual(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the new span's parent should be determined based on the\n current context.","sig":null,"attributes":[{"value":"/ Returns true if the new span's parent should be determined based on the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":117671,"byte_end":117746,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ current context.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":117751,"byte_end":117771,"line_start":163,"line_end":163,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":117776,"byte_end":117779,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ If this is true and the current thread is currently inside a span, then","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":117784,"byte_end":117859,"line_start":165,"line_end":165,"column_start":5,"column_end":80}},{"value":"/ that span should be the new span's parent. Otherwise, if the current","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":117864,"byte_end":117936,"line_start":166,"line_end":166,"column_start":5,"column_end":77}},{"value":"/ thread is _not_ inside a span, then the new span will be the root of its","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":117941,"byte_end":118017,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ own trace tree.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":118022,"byte_end":118041,"line_start":168,"line_end":168,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":118390,"byte_end":118396,"line_start":180,"line_end":180,"column_start":12,"column_end":18},"name":"parent","qualname":"<Attributes>::parent","value":"pub fn parent(&Self) -> Option<&Id>","parent":null,"children":[],"decl_id":null,"docs":" Returns the new span's explicitly-specified parent, if there is one.","sig":null,"attributes":[{"value":"/ Returns the new span's explicitly-specified parent, if there is one.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":118194,"byte_end":118266,"line_start":176,"line_end":176,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":118271,"byte_end":118274,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ Otherwise (if the new span is a root or is a child of the current span),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":118279,"byte_end":118355,"line_start":178,"line_end":178,"column_start":5,"column_end":81}},{"value":"/ returns false.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":118360,"byte_end":118378,"line_start":179,"line_end":179,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":118697,"byte_end":118703,"line_start":191,"line_end":191,"column_start":12,"column_end":18},"name":"record","qualname":"<Attributes>::record","value":"pub fn record(&Self, &mut field::Visit)","parent":null,"children":[],"decl_id":null,"docs":" Records all the fields in this set of `Attributes` with the provided\n [Visitor].","sig":null,"attributes":[{"value":"/ Records all the fields in this set of `Attributes` with the provided","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":118541,"byte_end":118613,"line_start":187,"line_end":187,"column_start":5,"column_end":77}},{"value":"/ [Visitor].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":118618,"byte_end":118632,"line_start":188,"line_end":188,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":118637,"byte_end":118640,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ [visitor]: ../field/trait.Visit.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":118645,"byte_end":118685,"line_start":190,"line_end":190,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":118898,"byte_end":118906,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"contains","qualname":"<Attributes>::contains","value":"pub fn contains(&Self, &field::Field) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this set of `Attributes` contains a value for the\n given `Field`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this set of `Attributes` contains a value for the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":118792,"byte_end":118863,"line_start":195,"line_end":195,"column_start":5,"column_end":76}},{"value":"/ given `Field`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":118868,"byte_end":118886,"line_start":196,"line_end":196,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":119071,"byte_end":119079,"line_start":202,"line_end":202,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Attributes>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this set of `Attributes` contains _no_ values.\n","sig":null,"attributes":[{"value":"/ Returns true if this set of `Attributes` contains _no_ values.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":118993,"byte_end":119059,"line_start":201,"line_end":201,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":119251,"byte_end":119254,"line_start":211,"line_end":211,"column_start":12,"column_end":15},"name":"new","qualname":"<Record>::new","value":"pub fn new(&'a field::ValueSet) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Record` from a `ValueSet`.\n","sig":null,"attributes":[{"value":"/ Constructs a new `Record` from a `ValueSet`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":119191,"byte_end":119239,"line_start":210,"line_end":210,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":119470,"byte_end":119476,"line_start":218,"line_end":218,"column_start":12,"column_end":18},"name":"record","qualname":"<Record>::record","value":"pub fn record(&Self, &mut field::Visit)","parent":null,"children":[],"decl_id":null,"docs":" Records all the fields in this `Record` with the provided [Visitor].","sig":null,"attributes":[{"value":"/ Records all the fields in this `Record` with the provided [Visitor].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":119333,"byte_end":119405,"line_start":215,"line_end":215,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":119410,"byte_end":119413,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ [visitor]: ../field/trait.Visit.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":119418,"byte_end":119458,"line_start":217,"line_end":217,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":119652,"byte_end":119660,"line_start":223,"line_end":223,"column_start":12,"column_end":20},"name":"contains","qualname":"<Record>::contains","value":"pub fn contains(&Self, &field::Field) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this `Record` contains a value for the given `Field`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this `Record` contains a value for the given `Field`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":119565,"byte_end":119640,"line_start":222,"line_end":222,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":119814,"byte_end":119822,"line_start":228,"line_end":228,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Record>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this `Record` contains _no_ values.\n","sig":null,"attributes":[{"value":"/ Returns true if this `Record` contains _no_ values.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":119747,"byte_end":119802,"line_start":227,"line_end":227,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":120065,"byte_end":120068,"line_start":238,"line_end":238,"column_start":12,"column_end":15},"name":"new","qualname":"<Current>::new","value":"pub fn new(Id, &'static Metadata) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Current` that indicates the current context is a span\n with the given `metadata` and `metadata`.\n","sig":null,"attributes":[{"value":"/ Constructs a new `Current` that indicates the current context is a span","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":119928,"byte_end":120003,"line_start":236,"line_end":236,"column_start":5,"column_end":80}},{"value":"/ with the given `metadata` and `metadata`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":120008,"byte_end":120053,"line_start":237,"line_end":237,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":120325,"byte_end":120329,"line_start":246,"line_end":246,"column_start":12,"column_end":16},"name":"none","qualname":"<Current>::none","value":"pub fn none() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Current` that indicates the current context is *not*\n in a span.\n","sig":null,"attributes":[{"value":"/ Constructs a new `Current` that indicates the current context is *not*","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":120220,"byte_end":120294,"line_start":244,"line_end":244,"column_start":5,"column_end":79}},{"value":"/ in a span.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":120299,"byte_end":120313,"line_start":245,"line_end":245,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":121229,"byte_end":121237,"line_start":272,"line_end":272,"column_start":12,"column_end":20},"name":"is_known","qualname":"<Current>::is_known","value":"pub fn is_known(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Subscriber` that constructed this `Current` tracks a\n current span.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Subscriber` that constructed this `Current` tracks a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":120635,"byte_end":120714,"line_start":260,"line_end":260,"column_start":5,"column_end":84}},{"value":"/ current span.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":120719,"byte_end":120736,"line_start":261,"line_end":261,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":120741,"byte_end":120744,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ If this returns `true` and [`id`], [`metadata`], or [`into_inner`]","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":120749,"byte_end":120819,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/ return `None`, that indicates that we are currently known to *not* be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":120824,"byte_end":120897,"line_start":264,"line_end":264,"column_start":5,"column_end":78}},{"value":"/ inside a span. If this returns `false`, those methods will also return","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":120902,"byte_end":120976,"line_start":265,"line_end":265,"column_start":5,"column_end":79}},{"value":"/ `None`, but in this case, that is because the subscriber does not keep","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":120981,"byte_end":121055,"line_start":266,"line_end":266,"column_start":5,"column_end":79}},{"value":"/ track of the currently-entered span.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":121060,"byte_end":121100,"line_start":267,"line_end":267,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":121105,"byte_end":121108,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ [`id`]: #method.id","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":121113,"byte_end":121135,"line_start":269,"line_end":269,"column_start":5,"column_end":27}},{"value":"/ [`metadata`]: #method.metadata","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":121140,"byte_end":121174,"line_start":270,"line_end":270,"column_start":5,"column_end":39}},{"value":"/ [`into_inner`]: #method.into_inner","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":121179,"byte_end":121217,"line_start":271,"line_end":271,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":121499,"byte_end":121509,"line_start":281,"line_end":281,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Current>::into_inner","value":"pub fn into_inner(Self) -> Option<(Id, &'static Metadata)>","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and returns the span `Id` and `Metadata` of the current\n span, if one exists and is known.\n","sig":null,"attributes":[{"value":"/ Consumes `self` and returns the span `Id` and `Metadata` of the current","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":121370,"byte_end":121445,"line_start":279,"line_end":279,"column_start":5,"column_end":80}},{"value":"/ span, if one exists and is known.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":121450,"byte_end":121487,"line_start":280,"line_end":280,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":121790,"byte_end":121792,"line_start":289,"line_end":289,"column_start":12,"column_end":14},"name":"id","qualname":"<Current>::id","value":"pub fn id(&Self) -> Option<&Id>","parent":null,"children":[],"decl_id":null,"docs":" Borrows the `Id` of the current span, if one exists and is known.\n","sig":null,"attributes":[{"value":"/ Borrows the `Id` of the current span, if one exists and is known.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":121709,"byte_end":121778,"line_start":288,"line_end":288,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":122037,"byte_end":122045,"line_start":297,"line_end":297,"column_start":12,"column_end":20},"name":"metadata","qualname":"<Current>::metadata","value":"pub fn metadata(&Self) -> Option<&'static Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Borrows the `Metadata` of the current span, if one exists and is known.\n","sig":null,"attributes":[{"value":"/ Borrows the `Metadata` of the current span, if one exists and is known.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":121950,"byte_end":122025,"line_start":296,"line_end":296,"column_start":5,"column_end":80}}]},{"kind":"Mod","id":{"krate":0,"index":539},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"subscriber","qualname":"::subscriber","value":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":563},{"krate":0,"index":1010},{"krate":0,"index":1015},{"krate":0,"index":1013},{"krate":0,"index":1017},{"krate":0,"index":1041},{"krate":0,"index":1039},{"krate":0,"index":1037},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1029},{"krate":0,"index":1027},{"krate":0,"index":568}],"decl_id":null,"docs":" Subscribers collect and record trace data.\n","sig":null,"attributes":[{"value":"! Subscribers collect and record trace data.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":125203,"byte_end":125249,"line_start":1,"line_end":1,"column_start":1,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":548},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":129077,"byte_end":129087,"line_start":70,"line_end":70,"column_start":11,"column_end":21},"name":"Subscriber","qualname":"::subscriber::Subscriber","value":"Subscriber: 'static","parent":null,"children":[{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562}],"decl_id":null,"docs":" Trait representing the functions required to collect trace data.","sig":null,"attributes":[{"value":"/ Trait representing the functions required to collect trace data.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":125340,"byte_end":125408,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":125409,"byte_end":125412,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Crates that provide implementations of methods for collecting or recording","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":125413,"byte_end":125491,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ trace data should implement the `Subscriber` interface. This trait is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":125492,"byte_end":125565,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ intended to represent fundamental primitives for collecting trace events and","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":125566,"byte_end":125646,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ spans — other libraries may offer utility functions and types to make","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":125647,"byte_end":125722,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ subscriber implementations more modular or improve the ergonomics of writing","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":125723,"byte_end":125803,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ subscribers.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":125804,"byte_end":125820,"line_start":13,"line_end":13,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":125821,"byte_end":125824,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ A subscriber is responsible for the following:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":125825,"byte_end":125875,"line_start":15,"line_end":15,"column_start":1,"column_end":51}},{"value":"/ - Registering new spans as they are created, and providing them with span","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":125876,"byte_end":125953,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/   IDs. Implicitly, this means the subscriber may determine the strategy for","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":125954,"byte_end":126033,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/   determining span equality.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":126034,"byte_end":126066,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/ - Recording the attachment of field values and follows-from annotations to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":126067,"byte_end":126145,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/   spans.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":126146,"byte_end":126158,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"/ - Filtering spans and events, and determining when those filters must be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":126159,"byte_end":126235,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/   invalidated.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":126236,"byte_end":126254,"line_start":22,"line_end":22,"column_start":1,"column_end":19}},{"value":"/ - Observing spans as they are entered, exited, and closed, and events as","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":126255,"byte_end":126331,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/   they occur.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":126332,"byte_end":126349,"line_start":24,"line_end":24,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":126350,"byte_end":126353,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ When a span is entered or exited, the subscriber is provided only with the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":126354,"byte_end":126432,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ [ID] with which it tagged that span when it was created. This means","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":126433,"byte_end":126504,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/ that it is up to the subscriber to determine whether and how span _data_ —","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":126505,"byte_end":126585,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ the fields and metadata describing the span — should be stored. The","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":126586,"byte_end":126659,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"/ [`new_span`] function is called when a new span is created, and at that","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":126660,"byte_end":126735,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ point, the subscriber _may_ choose to store the associated data if it will","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":126736,"byte_end":126814,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/ be referenced again. However, if the data has already been recorded and will","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":126815,"byte_end":126895,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ not be needed by the implementations of `enter` and `exit`, the subscriber","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":126896,"byte_end":126974,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ may freely discard that data without allocating space to store it.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":126975,"byte_end":127045,"line_start":34,"line_end":34,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":127046,"byte_end":127049,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ## Overriding default impls","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":127050,"byte_end":127081,"line_start":36,"line_end":36,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":127082,"byte_end":127085,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Some trait methods on `Subscriber` have default implementations, either in","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":127086,"byte_end":127164,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ order to reduce the surface area of implementing `Subscriber`, or for","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":127165,"byte_end":127238,"line_start":39,"line_end":39,"column_start":1,"column_end":74}},{"value":"/ backward-compatibility reasons. However, many subscribers will likely want","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":127239,"byte_end":127317,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/ to override these default implementations.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":127318,"byte_end":127364,"line_start":41,"line_end":41,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":127365,"byte_end":127368,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ The following methods are likely of interest:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":127369,"byte_end":127418,"line_start":43,"line_end":43,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":127419,"byte_end":127422,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ - [`register_callsite`] is called once for each callsite from which a span","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":127423,"byte_end":127501,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"/   event may originate, and returns an [`Interest`] value describing whether or","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":127502,"byte_end":127584,"line_start":46,"line_end":46,"column_start":1,"column_end":83}},{"value":"/   not the subscriber wishes to see events or spans from that callsite. By","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":127585,"byte_end":127662,"line_start":47,"line_end":47,"column_start":1,"column_end":78}},{"value":"/   default, it calls [`enabled`], and returns `Interest::always()` if","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":127663,"byte_end":127735,"line_start":48,"line_end":48,"column_start":1,"column_end":73}},{"value":"/   `enabled` returns true, or `Interest::never()` if enabled returns false.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":127736,"byte_end":127814,"line_start":49,"line_end":49,"column_start":1,"column_end":79}},{"value":"/   However, if the subscriber's interest can change dynamically at runtime,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":127815,"byte_end":127893,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"/   it may want to override this function to return `Interest::sometimes()`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":127894,"byte_end":127972,"line_start":51,"line_end":51,"column_start":1,"column_end":79}},{"value":"/   Additionally, subscribers which wish to perform a behaviour once for each","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":127973,"byte_end":128052,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/   callsite, such as allocating storage for data related to that callsite,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":128053,"byte_end":128130,"line_start":53,"line_end":53,"column_start":1,"column_end":78}},{"value":"/   can perform it in `register_callsite`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":128131,"byte_end":128175,"line_start":54,"line_end":54,"column_start":1,"column_end":45}},{"value":"/ - [`clone_span`] is called every time a span ID is cloned, and [`try_close`]","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":128176,"byte_end":128256,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"/   is called when a span ID is dropped. By default, these functions do","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":128257,"byte_end":128330,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/   nothing. However, they can be used to implement reference counting for","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":128331,"byte_end":128407,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/   spans, allowing subscribers to free storage for span data and to determine","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":128408,"byte_end":128488,"line_start":58,"line_end":58,"column_start":1,"column_end":81}},{"value":"/   when a span has _closed_ permanently (rather than being exited).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":128489,"byte_end":128559,"line_start":59,"line_end":59,"column_start":1,"column_end":71}},{"value":"/   Subscribers which store per-span data or which need to track span closures","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":128560,"byte_end":128640,"line_start":60,"line_end":60,"column_start":1,"column_end":81}},{"value":"/   should override these functions together.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":128641,"byte_end":128688,"line_start":61,"line_end":61,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":128689,"byte_end":128692,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ [ID]: ../span/struct.Id.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":128693,"byte_end":128725,"line_start":63,"line_end":63,"column_start":1,"column_end":33}},{"value":"/ [`new_span`]: trait.Subscriber.html#method.new_span","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":128726,"byte_end":128781,"line_start":64,"line_end":64,"column_start":1,"column_end":56}},{"value":"/ [`register_callsite`]: trait.Subscriber.html#method.register_callsite","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":128782,"byte_end":128855,"line_start":65,"line_end":65,"column_start":1,"column_end":74}},{"value":"/ [`Interest`]: struct.Interest.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":128856,"byte_end":128894,"line_start":66,"line_end":66,"column_start":1,"column_end":39}},{"value":"/ [`enabled`]: trait.Subscriber.html#method.enabled","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":128895,"byte_end":128948,"line_start":67,"line_end":67,"column_start":1,"column_end":54}},{"value":"/ [`clone_span`]: trait.Subscriber.html#method.clone_span","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":128949,"byte_end":129008,"line_start":68,"line_end":68,"column_start":1,"column_end":60}},{"value":"/ [`try_close`]: trait.Subscriber.html#method.try_close","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":129009,"byte_end":129066,"line_start":69,"line_end":69,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":133124,"byte_end":133141,"line_start":140,"line_end":140,"column_start":8,"column_end":25},"name":"register_callsite","qualname":"::subscriber::Subscriber::register_callsite","value":"pub fn register_callsite(&Self, &'static Metadata) -> Interest","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Registers a new callsite with this subscriber, returning whether or not\n the subscriber is interested in being notified about the callsite.","sig":null,"attributes":[{"value":"/ Registers a new callsite with this subscriber, returning whether or not","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":129184,"byte_end":129259,"line_start":73,"line_end":73,"column_start":5,"column_end":80}},{"value":"/ the subscriber is interested in being notified about the callsite.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":129264,"byte_end":129334,"line_start":74,"line_end":74,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":129339,"byte_end":129342,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ By default, this function assumes that the subscriber's [filter]","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":129347,"byte_end":129415,"line_start":76,"line_end":76,"column_start":5,"column_end":73}},{"value":"/ represents an unchanging view of its interest in the callsite. However,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":129420,"byte_end":129495,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ if this is not the case, subscribers may override this function to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":129500,"byte_end":129570,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ indicate different interests, or to implement behaviour that should run","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":129575,"byte_end":129650,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ once for every callsite.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":129655,"byte_end":129683,"line_start":80,"line_end":80,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":129688,"byte_end":129691,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This function is guaranteed to be called at least once per callsite on","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":129696,"byte_end":129770,"line_start":82,"line_end":82,"column_start":5,"column_end":79}},{"value":"/ every active subscriber. The subscriber may store the keys to fields it","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":129775,"byte_end":129850,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/ cares about in order to reduce the cost of accessing fields by name,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":129855,"byte_end":129927,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ preallocate storage for that callsite, or perform any other actions it","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":129932,"byte_end":130006,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/ wishes to perform once for each callsite.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":130011,"byte_end":130056,"line_start":86,"line_end":86,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":130061,"byte_end":130064,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ The subscriber should then return an [`Interest`], indicating","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":130069,"byte_end":130134,"line_start":88,"line_end":88,"column_start":5,"column_end":70}},{"value":"/ whether it is interested in being notified about that callsite in the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":130139,"byte_end":130212,"line_start":89,"line_end":89,"column_start":5,"column_end":78}},{"value":"/ future. This may be `Always` indicating that the subscriber always","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":130217,"byte_end":130287,"line_start":90,"line_end":90,"column_start":5,"column_end":75}},{"value":"/ wishes to be notified about the callsite, and its filter need not be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":130292,"byte_end":130364,"line_start":91,"line_end":91,"column_start":5,"column_end":77}},{"value":"/ re-evaluated; `Sometimes`, indicating that the subscriber may sometimes","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":130369,"byte_end":130444,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ care about the callsite but not always (such as when sampling), or","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":130449,"byte_end":130519,"line_start":93,"line_end":93,"column_start":5,"column_end":75}},{"value":"/ `Never`, indicating that the subscriber never wishes to be notified about","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":130524,"byte_end":130601,"line_start":94,"line_end":94,"column_start":5,"column_end":82}},{"value":"/ that callsite. If all active subscribers return `Never`, a callsite will","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":130606,"byte_end":130682,"line_start":95,"line_end":95,"column_start":5,"column_end":81}},{"value":"/ never be enabled unless a new subscriber expresses interest in it.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":130687,"byte_end":130757,"line_start":96,"line_end":96,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":130762,"byte_end":130765,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ `Subscriber`s which require their filters to be run every time an event","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":130770,"byte_end":130845,"line_start":98,"line_end":98,"column_start":5,"column_end":80}},{"value":"/ occurs or a span is entered/exited should return `Interest::sometimes`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":130850,"byte_end":130925,"line_start":99,"line_end":99,"column_start":5,"column_end":80}},{"value":"/ If a subscriber returns `Interest::sometimes`, then its' [`enabled`] method","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":130930,"byte_end":131009,"line_start":100,"line_end":100,"column_start":5,"column_end":84}},{"value":"/ will be called every time an event or span is created from that callsite.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":131014,"byte_end":131091,"line_start":101,"line_end":101,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":131096,"byte_end":131099,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ For example, suppose a sampling subscriber is implemented by","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":131104,"byte_end":131168,"line_start":103,"line_end":103,"column_start":5,"column_end":69}},{"value":"/ incrementing a counter every time `enabled` is called and only returning","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":131173,"byte_end":131249,"line_start":104,"line_end":104,"column_start":5,"column_end":81}},{"value":"/ `true` when the counter is divisible by a specified sampling rate. If","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":131254,"byte_end":131327,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/ that subscriber returns `Interest::always` from `register_callsite`, then","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":131332,"byte_end":131409,"line_start":106,"line_end":106,"column_start":5,"column_end":82}},{"value":"/ the filter will not be re-evaluated once it has been applied to a given","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":131414,"byte_end":131489,"line_start":107,"line_end":107,"column_start":5,"column_end":80}},{"value":"/ set of metadata. Thus, the counter will not be incremented, and the span","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":131494,"byte_end":131570,"line_start":108,"line_end":108,"column_start":5,"column_end":81}},{"value":"/ or event that corresponds to the metadata will never be `enabled`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":131575,"byte_end":131645,"line_start":109,"line_end":109,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":131650,"byte_end":131653,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ `Subscriber`s that need to change their filters occasionally should call","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":131658,"byte_end":131734,"line_start":111,"line_end":111,"column_start":5,"column_end":81}},{"value":"/ [`rebuild_interest_cache`] to re-evaluate `register_callsite` for all","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":131739,"byte_end":131812,"line_start":112,"line_end":112,"column_start":5,"column_end":78}},{"value":"/ callsites.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":131817,"byte_end":131831,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":131836,"byte_end":131839,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Similarly, if a `Subscriber` has a filtering strategy that can be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":131844,"byte_end":131913,"line_start":115,"line_end":115,"column_start":5,"column_end":74}},{"value":"/ changed dynamically at runtime, it would need to re-evaluate that filter","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":131918,"byte_end":131994,"line_start":116,"line_end":116,"column_start":5,"column_end":81}},{"value":"/ if the cached results have changed.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":131999,"byte_end":132038,"line_start":117,"line_end":117,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":132043,"byte_end":132046,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ A subscriber which manages fanout to multiple other subscribers","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":132051,"byte_end":132118,"line_start":119,"line_end":119,"column_start":5,"column_end":72}},{"value":"/ should proxy this decision to all of its child subscribers,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":132123,"byte_end":132186,"line_start":120,"line_end":120,"column_start":5,"column_end":68}},{"value":"/ returning `Interest::never` only if _all_ such children return","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":132191,"byte_end":132257,"line_start":121,"line_end":121,"column_start":5,"column_end":71}},{"value":"/ `Interest::never`. If the set of subscribers to which spans are","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":132262,"byte_end":132329,"line_start":122,"line_end":122,"column_start":5,"column_end":72}},{"value":"/ broadcast may change dynamically, the subscriber should also never","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":132334,"byte_end":132404,"line_start":123,"line_end":123,"column_start":5,"column_end":75}},{"value":"/ return `Interest::Never`, as a new subscriber may be added that _is_","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":132409,"byte_end":132481,"line_start":124,"line_end":124,"column_start":5,"column_end":77}},{"value":"/ interested.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":132486,"byte_end":132501,"line_start":125,"line_end":125,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":132506,"byte_end":132509,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":132514,"byte_end":132525,"line_start":127,"line_end":127,"column_start":5,"column_end":16}},{"value":"/ This function may be called again when a new subscriber is created or","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":132530,"byte_end":132603,"line_start":128,"line_end":128,"column_start":5,"column_end":78}},{"value":"/ when the registry is invalidated.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":132608,"byte_end":132645,"line_start":129,"line_end":129,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":132650,"byte_end":132653,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ If a subscriber returns `Interest::never` for a particular callsite, it","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":132658,"byte_end":132733,"line_start":131,"line_end":131,"column_start":5,"column_end":80}},{"value":"/ _may_ still see spans and events originating from that callsite, if","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":132738,"byte_end":132809,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ another subscriber expressed interest in it.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":132814,"byte_end":132862,"line_start":133,"line_end":133,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":132867,"byte_end":132870,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ [filter]: #method.enabled","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":132875,"byte_end":132904,"line_start":135,"line_end":135,"column_start":5,"column_end":34}},{"value":"/ [metadata]: ../metadata/struct.Metadata.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":132909,"byte_end":132957,"line_start":136,"line_end":136,"column_start":5,"column_end":53}},{"value":"/ [`Interest`]: struct.Interest.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":132962,"byte_end":133000,"line_start":137,"line_end":137,"column_start":5,"column_end":43}},{"value":"/ [`enabled`]: #method.enabled","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":133005,"byte_end":133037,"line_start":138,"line_end":138,"column_start":5,"column_end":37}},{"value":"/ [`rebuild_interest_cache`]: ../callsite/fn.rebuild_interest_cache.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":133042,"byte_end":133116,"line_start":139,"line_end":139,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":134515,"byte_end":134522,"line_start":168,"line_end":168,"column_start":8,"column_end":15},"name":"enabled","qualname":"::subscriber::Subscriber::enabled","value":"pub fn enabled(&Self, &Metadata) -> bool","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Returns true if a span or event with the specified [metadata] would be\n recorded.","sig":null,"attributes":[{"value":"/ Returns true if a span or event with the specified [metadata] would be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":133336,"byte_end":133410,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ recorded.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":133415,"byte_end":133428,"line_start":149,"line_end":149,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":133433,"byte_end":133436,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ By default, it is assumed that this filter needs only be evaluated once","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":133441,"byte_end":133516,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/ for each callsite, so it is called by [`register_callsite`] when each","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":133521,"byte_end":133594,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ callsite is registered. The result is used to determine if the subscriber","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":133599,"byte_end":133676,"line_start":153,"line_end":153,"column_start":5,"column_end":82}},{"value":"/ is always [interested] or never interested in that callsite. This is intended","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":133681,"byte_end":133762,"line_start":154,"line_end":154,"column_start":5,"column_end":86}},{"value":"/ primarily as an optimization, so that expensive filters (such as those","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":133767,"byte_end":133841,"line_start":155,"line_end":155,"column_start":5,"column_end":79}},{"value":"/ involving string search, et cetera) need not be re-evaluated.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":133846,"byte_end":133911,"line_start":156,"line_end":156,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":133916,"byte_end":133919,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ However, if the subscriber's interest in a particular span or event may","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":133924,"byte_end":133999,"line_start":158,"line_end":158,"column_start":5,"column_end":80}},{"value":"/ change, or depends on contexts only determined dynamically at runtime,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":134004,"byte_end":134078,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ then the `register_callsite` method should be overridden to return","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":134083,"byte_end":134153,"line_start":160,"line_end":160,"column_start":5,"column_end":75}},{"value":"/ [`Interest::sometimes`]. In that case, this function will be called every","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":134158,"byte_end":134235,"line_start":161,"line_end":161,"column_start":5,"column_end":82}},{"value":"/ time that span or event occurs.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":134240,"byte_end":134275,"line_start":162,"line_end":162,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":134280,"byte_end":134283,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ [metadata]: ../metadata/struct.Metadata.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":134288,"byte_end":134336,"line_start":164,"line_end":164,"column_start":5,"column_end":53}},{"value":"/ [interested]: struct.Interest.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":134341,"byte_end":134379,"line_start":165,"line_end":165,"column_start":5,"column_end":43}},{"value":"/ [`Interest::sometimes`]: struct.Interest.html#method.sometimes","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":134384,"byte_end":134450,"line_start":166,"line_end":166,"column_start":5,"column_end":71}},{"value":"/ [`register_callsite`]: #method.register_callsite","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":134455,"byte_end":134507,"line_start":167,"line_end":167,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":135972,"byte_end":135986,"line_start":193,"line_end":193,"column_start":8,"column_end":22},"name":"max_level_hint","qualname":"::subscriber::Subscriber::max_level_hint","value":"pub fn max_level_hint(&Self) -> Option<LevelFilter>","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Returns the highest [verbosity level][level] that this `Subscriber` will\n enable, or `None`, if the subscriber does not implement level-based\n filtering or chooses not to implement this method.","sig":null,"attributes":[{"value":"/ Returns the highest [verbosity level][level] that this `Subscriber` will","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":134569,"byte_end":134645,"line_start":170,"line_end":170,"column_start":5,"column_end":81}},{"value":"/ enable, or `None`, if the subscriber does not implement level-based","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":134650,"byte_end":134721,"line_start":171,"line_end":171,"column_start":5,"column_end":76}},{"value":"/ filtering or chooses not to implement this method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":134726,"byte_end":134780,"line_start":172,"line_end":172,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":134785,"byte_end":134788,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ If this method returns a [`Level`][level], it will be used as a hint to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":134793,"byte_end":134868,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ determine the most verbose level that will be enabled. This will allow","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":134873,"byte_end":134947,"line_start":175,"line_end":175,"column_start":5,"column_end":79}},{"value":"/ spans and events which are more verbose than that level to be skipped","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":134952,"byte_end":135025,"line_start":176,"line_end":176,"column_start":5,"column_end":78}},{"value":"/ more efficiently. Subscribers which perform filtering are strongly","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":135030,"byte_end":135100,"line_start":177,"line_end":177,"column_start":5,"column_end":75}},{"value":"/ encouraged to provide an implementation of this method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":135105,"byte_end":135164,"line_start":178,"line_end":178,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":135169,"byte_end":135172,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ If the maximum level the subscriber will enable can change over the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":135177,"byte_end":135248,"line_start":180,"line_end":180,"column_start":5,"column_end":76}},{"value":"/ course of its lifetime, it is free to return a different value from","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":135253,"byte_end":135324,"line_start":181,"line_end":181,"column_start":5,"column_end":76}},{"value":"/ multiple invocations of this method. However, note that changes in the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":135329,"byte_end":135403,"line_start":182,"line_end":182,"column_start":5,"column_end":79}},{"value":"/ maximum level will **only** be reflected after the callsite [`Interest`]","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":135408,"byte_end":135484,"line_start":183,"line_end":183,"column_start":5,"column_end":81}},{"value":"/ cache is rebuilt, by calling the [`callsite::rebuild_interest_cache`][rebuild]","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":135489,"byte_end":135571,"line_start":184,"line_end":184,"column_start":5,"column_end":87}},{"value":"/ function. Therefore, if the subscriber will change the value returned by","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":135576,"byte_end":135652,"line_start":185,"line_end":185,"column_start":5,"column_end":81}},{"value":"/ this method, it is responsible for ensuring that","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":135657,"byte_end":135709,"line_start":186,"line_end":186,"column_start":5,"column_end":57}},{"value":"/ [`rebuild_interest_cache`][rebuild] is called after the value of the max","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":135714,"byte_end":135790,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ level changes.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":135795,"byte_end":135813,"line_start":188,"line_end":188,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":135818,"byte_end":135821,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ [level]: ../struct.Level.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":135826,"byte_end":135859,"line_start":190,"line_end":190,"column_start":5,"column_end":38}},{"value":"/ [`Interest`]: struct.Interest.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":135864,"byte_end":135902,"line_start":191,"line_end":191,"column_start":5,"column_end":43}},{"value":"/ [rebuild]: ../callsite/fn.rebuild_interest_cache.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":135907,"byte_end":135964,"line_start":192,"line_end":192,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":137429,"byte_end":137437,"line_start":221,"line_end":221,"column_start":8,"column_end":16},"name":"new_span","qualname":"::subscriber::Subscriber::new_span","value":"pub fn new_span(&Self, &span::Attributes) -> span::Id","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Visit the construction of a new span, returning a new [span ID] for the\n span being constructed.","sig":null,"attributes":[{"value":"/ Visit the construction of a new span, returning a new [span ID] for the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":136043,"byte_end":136118,"line_start":197,"line_end":197,"column_start":5,"column_end":80}},{"value":"/ span being constructed.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":136123,"byte_end":136150,"line_start":198,"line_end":198,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":136155,"byte_end":136158,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ The provided [`Attributes`] contains any field values that were provided","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":136163,"byte_end":136239,"line_start":200,"line_end":200,"column_start":5,"column_end":81}},{"value":"/ when the span was created. The subscriber may pass a [visitor] to the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":136244,"byte_end":136317,"line_start":201,"line_end":201,"column_start":5,"column_end":78}},{"value":"/ `Attributes`' [`record` method] to record these values.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":136322,"byte_end":136381,"line_start":202,"line_end":202,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":136386,"byte_end":136389,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ IDs are used to uniquely identify spans and events within the context of a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":136394,"byte_end":136472,"line_start":204,"line_end":204,"column_start":5,"column_end":83}},{"value":"/ subscriber, so span equality will be based on the returned ID. Thus, if","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":136477,"byte_end":136552,"line_start":205,"line_end":205,"column_start":5,"column_end":80}},{"value":"/ the subscriber wishes for all spans with the same metadata to be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":136557,"byte_end":136625,"line_start":206,"line_end":206,"column_start":5,"column_end":73}},{"value":"/ considered equal, it should return the same ID every time it is given a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":136630,"byte_end":136705,"line_start":207,"line_end":207,"column_start":5,"column_end":80}},{"value":"/ particular set of metadata. Similarly, if it wishes for two separate","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":136710,"byte_end":136782,"line_start":208,"line_end":208,"column_start":5,"column_end":77}},{"value":"/ instances of a span with the same metadata to *not* be equal, it should","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":136787,"byte_end":136862,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/ return a distinct ID every time this function is called, regardless of","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":136867,"byte_end":136941,"line_start":210,"line_end":210,"column_start":5,"column_end":79}},{"value":"/ the metadata.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":136946,"byte_end":136963,"line_start":211,"line_end":211,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":136968,"byte_end":136971,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ Note that the subscriber is free to assign span IDs based on whatever","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":136976,"byte_end":137049,"line_start":213,"line_end":213,"column_start":5,"column_end":78}},{"value":"/ scheme it sees fit. Any guarantees about uniqueness, ordering, or ID","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":137054,"byte_end":137126,"line_start":214,"line_end":214,"column_start":5,"column_end":77}},{"value":"/ reuse are left up to the subscriber implementation to determine.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":137131,"byte_end":137199,"line_start":215,"line_end":215,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":137204,"byte_end":137207,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ [span ID]: ../span/struct.Id.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":137212,"byte_end":137249,"line_start":217,"line_end":217,"column_start":5,"column_end":42}},{"value":"/ [`Attributes`]: ../span/struct.Attributes.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":137254,"byte_end":137304,"line_start":218,"line_end":218,"column_start":5,"column_end":55}},{"value":"/ [visitor]: ../field/trait.Visit.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":137309,"byte_end":137349,"line_start":219,"line_end":219,"column_start":5,"column_end":45}},{"value":"/ [`record` method]: ../span/struct.Attributes.html#method.record","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":137354,"byte_end":137421,"line_start":220,"line_end":220,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":139074,"byte_end":139080,"line_start":262,"line_end":262,"column_start":8,"column_end":14},"name":"record","qualname":"::subscriber::Subscriber::record","value":"pub fn record(&Self, &span::Id, &span::Record)","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Record a set of values on a span.","sig":null,"attributes":[{"value":"/ Record a set of values on a span.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":137573,"byte_end":137610,"line_start":225,"line_end":225,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":137615,"byte_end":137618,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This method will be invoked when value is recorded on a span.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":137623,"byte_end":137688,"line_start":227,"line_end":227,"column_start":5,"column_end":70}},{"value":"/ Recording multiple values for the same field is possible,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":137693,"byte_end":137754,"line_start":228,"line_end":228,"column_start":5,"column_end":66}},{"value":"/ but the actual behaviour is defined by the subscriber implementation.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":137759,"byte_end":137832,"line_start":229,"line_end":229,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":137837,"byte_end":137840,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ Keep in mind that a span might not provide a value","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":137845,"byte_end":137899,"line_start":231,"line_end":231,"column_start":5,"column_end":59}},{"value":"/ for each field it declares.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":137904,"byte_end":137935,"line_start":232,"line_end":232,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":137940,"byte_end":137943,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The subscriber is expected to provide a [visitor] to the `Record`'s","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":137948,"byte_end":138019,"line_start":234,"line_end":234,"column_start":5,"column_end":76}},{"value":"/ [`record` method] in order to record the added values.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":138024,"byte_end":138082,"line_start":235,"line_end":235,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":138087,"byte_end":138090,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":138095,"byte_end":138108,"line_start":237,"line_end":237,"column_start":5,"column_end":18}},{"value":"/  \"foo = 3\" will be recorded when [`record`] is called on the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":138113,"byte_end":138177,"line_start":238,"line_end":238,"column_start":5,"column_end":69}},{"value":"/ `Attributes` passed to `new_span`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":138182,"byte_end":138220,"line_start":239,"line_end":239,"column_start":5,"column_end":43}},{"value":"/ Since values are not provided for the `bar` and `baz` fields,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":138225,"byte_end":138290,"line_start":240,"line_end":240,"column_start":5,"column_end":70}},{"value":"/ the span's `Metadata` will indicate that it _has_ those fields,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":138295,"byte_end":138362,"line_start":241,"line_end":241,"column_start":5,"column_end":72}},{"value":"/ but values for them won't be recorded at this time.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":138367,"byte_end":138422,"line_start":242,"line_end":242,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":138427,"byte_end":138430,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":138435,"byte_end":138453,"line_start":244,"line_end":244,"column_start":5,"column_end":23}},{"value":"/ #[macro_use]","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":138458,"byte_end":138474,"line_start":245,"line_end":245,"column_start":5,"column_end":21}},{"value":"/ extern crate tracing;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":138479,"byte_end":138504,"line_start":246,"line_end":246,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":138509,"byte_end":138512,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let mut span = span!(\"my_span\", foo = 3, bar, baz);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":138517,"byte_end":138572,"line_start":248,"line_end":248,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":138577,"byte_end":138580,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ // `Subscriber::record` will be called with a `Record`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":138585,"byte_end":138643,"line_start":250,"line_end":250,"column_start":5,"column_end":63}},{"value":"/ // containing \"bar = false\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":138648,"byte_end":138679,"line_start":251,"line_end":251,"column_start":5,"column_end":36}},{"value":"/ span.record(\"bar\", &false);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":138684,"byte_end":138715,"line_start":252,"line_end":252,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":138720,"byte_end":138723,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ // `Subscriber::record` will be called with a `Record`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":138728,"byte_end":138786,"line_start":254,"line_end":254,"column_start":5,"column_end":63}},{"value":"/ // containing \"baz = \"a string\"\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":138791,"byte_end":138827,"line_start":255,"line_end":255,"column_start":5,"column_end":41}},{"value":"/ span.record(\"baz\", &\"a string\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":138832,"byte_end":138868,"line_start":256,"line_end":256,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":138873,"byte_end":138880,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":138885,"byte_end":138888,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ [visitor]: ../field/trait.Visit.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":138893,"byte_end":138933,"line_start":259,"line_end":259,"column_start":5,"column_end":45}},{"value":"/ [`record`]: ../span/struct.Attributes.html#method.record","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":138938,"byte_end":138998,"line_start":260,"line_end":260,"column_start":5,"column_end":65}},{"value":"/ [`record` method]: ../span/struct.Record.html#method.record","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":139003,"byte_end":139066,"line_start":261,"line_end":261,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":140314,"byte_end":140333,"line_start":282,"line_end":282,"column_start":8,"column_end":27},"name":"record_follows_from","qualname":"::subscriber::Subscriber::record_follows_from","value":"pub fn record_follows_from(&Self, &span::Id, &span::Id)","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Adds an indication that `span` follows from the span with the id\n `follows`.","sig":null,"attributes":[{"value":"/ Adds an indication that `span` follows from the span with the id","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":139138,"byte_end":139206,"line_start":264,"line_end":264,"column_start":5,"column_end":73}},{"value":"/ `follows`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":139211,"byte_end":139225,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":139230,"byte_end":139233,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ This relationship differs somewhat from the parent-child relationship: a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":139238,"byte_end":139314,"line_start":267,"line_end":267,"column_start":5,"column_end":81}},{"value":"/ span may have any number of prior spans, rather than a single one; and","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":139319,"byte_end":139393,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ spans are not considered to be executing _inside_ of the spans they","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":139398,"byte_end":139469,"line_start":269,"line_end":269,"column_start":5,"column_end":76}},{"value":"/ follow from. This means that a span may close even if subsequent spans","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":139474,"byte_end":139548,"line_start":270,"line_end":270,"column_start":5,"column_end":79}},{"value":"/ that follow from it are still open, and time spent inside of a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":139553,"byte_end":139619,"line_start":271,"line_end":271,"column_start":5,"column_end":71}},{"value":"/ subsequent span should not be included in the time its precedents were","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":139624,"byte_end":139698,"line_start":272,"line_end":272,"column_start":5,"column_end":79}},{"value":"/ executing. This is used to model causal relationships such as when a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":139703,"byte_end":139775,"line_start":273,"line_end":273,"column_start":5,"column_end":77}},{"value":"/ single future spawns several related background tasks, et cetera.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":139780,"byte_end":139849,"line_start":274,"line_end":274,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":139854,"byte_end":139857,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ If the subscriber has spans corresponding to the given IDs, it should","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":139862,"byte_end":139935,"line_start":276,"line_end":276,"column_start":5,"column_end":78}},{"value":"/ record this relationship in whatever way it deems necessary. Otherwise,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":139940,"byte_end":140015,"line_start":277,"line_end":277,"column_start":5,"column_end":80}},{"value":"/ if one or both of the given span IDs do not correspond to spans that the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":140020,"byte_end":140096,"line_start":278,"line_end":278,"column_start":5,"column_end":81}},{"value":"/ subscriber knows about, or if a cyclical relationship would be created","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":140101,"byte_end":140175,"line_start":279,"line_end":279,"column_start":5,"column_end":79}},{"value":"/ (i.e., some span _a_ which proceeds some other span _b_ may not also","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":140180,"byte_end":140252,"line_start":280,"line_end":280,"column_start":5,"column_end":77}},{"value":"/ follow from _b_), it may silently do nothing.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":140257,"byte_end":140306,"line_start":281,"line_end":281,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":141304,"byte_end":141309,"line_start":302,"line_end":302,"column_start":8,"column_end":13},"name":"event","qualname":"::subscriber::Subscriber::event","value":"pub fn event(&Self, &Event)","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Records that an [`Event`] has occurred.","sig":null,"attributes":[{"value":"/ Records that an [`Event`] has occurred.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":140384,"byte_end":140427,"line_start":284,"line_end":284,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":140432,"byte_end":140435,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ This method will be invoked when an Event is constructed by","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":140440,"byte_end":140503,"line_start":286,"line_end":286,"column_start":5,"column_end":68}},{"value":"/ the `Event`'s [`dispatch` method]. For example, this happens internally","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":140508,"byte_end":140583,"line_start":287,"line_end":287,"column_start":5,"column_end":80}},{"value":"/ when an event macro from `tracing` is called.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":140588,"byte_end":140637,"line_start":288,"line_end":288,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":140642,"byte_end":140645,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ The key difference between this method and `record` is that `record` is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":140650,"byte_end":140725,"line_start":290,"line_end":290,"column_start":5,"column_end":80}},{"value":"/ called when a value is recorded for a field defined by a span,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":140730,"byte_end":140796,"line_start":291,"line_end":291,"column_start":5,"column_end":71}},{"value":"/ while `event` is called when a new event occurs.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":140801,"byte_end":140853,"line_start":292,"line_end":292,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":140858,"byte_end":140861,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ The provided `Event` struct contains any field values attached to the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":140866,"byte_end":140939,"line_start":294,"line_end":294,"column_start":5,"column_end":78}},{"value":"/ event. The subscriber may pass a [visitor] to the `Event`'s","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":140944,"byte_end":141007,"line_start":295,"line_end":295,"column_start":5,"column_end":68}},{"value":"/ [`record` method] to record these values.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":141012,"byte_end":141057,"line_start":296,"line_end":296,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":141062,"byte_end":141065,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ [`Event`]: ../event/struct.Event.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":141070,"byte_end":141111,"line_start":298,"line_end":298,"column_start":5,"column_end":46}},{"value":"/ [visitor]: ../field/trait.Visit.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":141116,"byte_end":141156,"line_start":299,"line_end":299,"column_start":5,"column_end":45}},{"value":"/ [`record` method]: ../event/struct.Event.html#method.record","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":141161,"byte_end":141224,"line_start":300,"line_end":300,"column_start":5,"column_end":68}},{"value":"/ [`dispatch` method]: ../event/struct.Event.html#method.dispatch","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":141229,"byte_end":141296,"line_start":301,"line_end":301,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":141725,"byte_end":141730,"line_start":312,"line_end":312,"column_start":8,"column_end":13},"name":"enter","qualname":"::subscriber::Subscriber::enter","value":"pub fn enter(&Self, &span::Id)","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Records that a span has been entered.","sig":null,"attributes":[{"value":"/ Records that a span has been entered.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":141342,"byte_end":141383,"line_start":304,"line_end":304,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":141388,"byte_end":141391,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ When entering a span, this method is called to notify the subscriber","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":141396,"byte_end":141468,"line_start":306,"line_end":306,"column_start":5,"column_end":77}},{"value":"/ that the span has been entered. The subscriber is provided with the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":141473,"byte_end":141544,"line_start":307,"line_end":307,"column_start":5,"column_end":76}},{"value":"/ [span ID] of the entered span, and should update any internal state","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":141549,"byte_end":141620,"line_start":308,"line_end":308,"column_start":5,"column_end":76}},{"value":"/ tracking the current span accordingly.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":141625,"byte_end":141667,"line_start":309,"line_end":309,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":141672,"byte_end":141675,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ [span ID]: ../span/struct.Id.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":141680,"byte_end":141717,"line_start":311,"line_end":311,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":142224,"byte_end":142228,"line_start":324,"line_end":324,"column_start":8,"column_end":12},"name":"exit","qualname":"::subscriber::Subscriber::exit","value":"pub fn exit(&Self, &span::Id)","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Records that a span has been exited.","sig":null,"attributes":[{"value":"/ Records that a span has been exited.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":141761,"byte_end":141801,"line_start":314,"line_end":314,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":141806,"byte_end":141809,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ When exiting a span, this method is called to notify the subscriber","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":141814,"byte_end":141885,"line_start":316,"line_end":316,"column_start":5,"column_end":76}},{"value":"/ that the span has been exited. The subscriber is provided with the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":141890,"byte_end":141960,"line_start":317,"line_end":317,"column_start":5,"column_end":75}},{"value":"/ [span ID] of the exited span, and should update any internal state","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":141965,"byte_end":142035,"line_start":318,"line_end":318,"column_start":5,"column_end":75}},{"value":"/ tracking the current span accordingly.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":142040,"byte_end":142082,"line_start":319,"line_end":319,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":142087,"byte_end":142090,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ Exiting a span does not imply that the span will not be re-entered.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":142095,"byte_end":142166,"line_start":321,"line_end":321,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":142171,"byte_end":142174,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ [span ID]: ../span/struct.Id.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":142179,"byte_end":142216,"line_start":323,"line_end":323,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":143423,"byte_end":143433,"line_start":346,"line_end":346,"column_start":8,"column_end":18},"name":"clone_span","qualname":"::subscriber::Subscriber::clone_span","value":"pub fn clone_span(&Self, &span::Id) -> span::Id","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Notifies the subscriber that a [span ID] has been cloned.","sig":null,"attributes":[{"value":"/ Notifies the subscriber that a [span ID] has been cloned.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":142259,"byte_end":142320,"line_start":326,"line_end":326,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":142325,"byte_end":142328,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ This function is guaranteed to only be called with span IDs that were","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":142333,"byte_end":142406,"line_start":328,"line_end":328,"column_start":5,"column_end":78}},{"value":"/ returned by this subscriber's `new_span` function.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":142411,"byte_end":142465,"line_start":329,"line_end":329,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":142470,"byte_end":142473,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ Note that the default implementation of this function this is just the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":142478,"byte_end":142552,"line_start":331,"line_end":331,"column_start":5,"column_end":79}},{"value":"/ identity function, passing through the identifier. However, it can be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":142557,"byte_end":142630,"line_start":332,"line_end":332,"column_start":5,"column_end":78}},{"value":"/ used in conjunction with [`try_close`] to track the number of handles","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":142635,"byte_end":142708,"line_start":333,"line_end":333,"column_start":5,"column_end":78}},{"value":"/ capable of `enter`ing a span. When all the handles have been dropped","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":142713,"byte_end":142785,"line_start":334,"line_end":334,"column_start":5,"column_end":77}},{"value":"/ (i.e., `try_close` has been called one more time than `clone_span` for a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":142790,"byte_end":142866,"line_start":335,"line_end":335,"column_start":5,"column_end":81}},{"value":"/ given ID), the subscriber may assume that the span will not be entered","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":142871,"byte_end":142945,"line_start":336,"line_end":336,"column_start":5,"column_end":79}},{"value":"/ again. It is then free to deallocate storage for data associated with","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":142950,"byte_end":143023,"line_start":337,"line_end":337,"column_start":5,"column_end":78}},{"value":"/ that span, write data from that span to IO, and so on.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":143028,"byte_end":143086,"line_start":338,"line_end":338,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":143091,"byte_end":143094,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ For more unsafe situations, however, if `id` is itself a pointer of some","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":143099,"byte_end":143175,"line_start":340,"line_end":340,"column_start":5,"column_end":81}},{"value":"/ kind this can be used as a hook to \"clone\" the pointer, depending on","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":143180,"byte_end":143252,"line_start":341,"line_end":341,"column_start":5,"column_end":77}},{"value":"/ what that means for the specified pointer.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":143257,"byte_end":143303,"line_start":342,"line_end":342,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":143308,"byte_end":143311,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ [span ID]: ../span/struct.Id.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":143316,"byte_end":143353,"line_start":344,"line_end":344,"column_start":5,"column_end":42}},{"value":"/ [`try_close`]: trait.Subscriber.html#method.try_close","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":143358,"byte_end":143415,"line_start":345,"line_end":345,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":143957,"byte_end":143966,"line_start":360,"line_end":360,"column_start":8,"column_end":17},"name":"drop_span","qualname":"::subscriber::Subscriber::drop_span","value":"pub fn drop_span(&Self, span::Id)","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" **This method is deprecated.**","sig":null,"attributes":[{"value":"/ **This method is deprecated.**","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":143500,"byte_end":143534,"line_start":350,"line_end":350,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":143539,"byte_end":143542,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ Using `drop_span` may result in subscribers composed using","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":143547,"byte_end":143609,"line_start":352,"line_end":352,"column_start":5,"column_end":67}},{"value":"/ `tracing-subscriber` crate's `Layer` trait from observing close events.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":143614,"byte_end":143689,"line_start":353,"line_end":353,"column_start":5,"column_end":80}},{"value":"/ Use [`try_close`] instead.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":143694,"byte_end":143724,"line_start":354,"line_end":354,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":143729,"byte_end":143732,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ The default implementation of this function does nothing.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":143737,"byte_end":143798,"line_start":356,"line_end":356,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":143803,"byte_end":143806,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ [`try_close`]: trait.Subscriber.html#method.try_close","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":143811,"byte_end":143868,"line_start":358,"line_end":358,"column_start":5,"column_end":62}},{"value":"deprecated(since = \"0.1.2\", note = \"use `Subscriber::try_close` instead\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":143873,"byte_end":143949,"line_start":359,"line_end":359,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":146161,"byte_end":146170,"line_start":398,"line_end":398,"column_start":8,"column_end":17},"name":"try_close","qualname":"::subscriber::Subscriber::try_close","value":"pub fn try_close(&Self, span::Id) -> bool","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Notifies the subscriber that a [`span ID`] has been dropped, and returns\n `true` if there are now 0 IDs that refer to that span.","sig":null,"attributes":[{"value":"/ Notifies the subscriber that a [`span ID`] has been dropped, and returns","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":143997,"byte_end":144073,"line_start":362,"line_end":362,"column_start":5,"column_end":81}},{"value":"/ `true` if there are now 0 IDs that refer to that span.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":144078,"byte_end":144136,"line_start":363,"line_end":363,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":144141,"byte_end":144144,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ Higher-level libraries providing functionality for composing multiple","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":144149,"byte_end":144222,"line_start":365,"line_end":365,"column_start":5,"column_end":78}},{"value":"/ subscriber implementations may use this return value to notify any","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":144227,"byte_end":144297,"line_start":366,"line_end":366,"column_start":5,"column_end":75}},{"value":"/ \"layered\" subscribers that this subscriber considers the span closed.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":144302,"byte_end":144375,"line_start":367,"line_end":367,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":144380,"byte_end":144383,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ The default implementation of this method calls the subscriber's","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":144388,"byte_end":144456,"line_start":369,"line_end":369,"column_start":5,"column_end":73}},{"value":"/ [`drop_span`] method and returns `false`. This means that, unless the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":144461,"byte_end":144534,"line_start":370,"line_end":370,"column_start":5,"column_end":78}},{"value":"/ subscriber overrides the default implementation, close notifications","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":144539,"byte_end":144611,"line_start":371,"line_end":371,"column_start":5,"column_end":77}},{"value":"/ will never be sent to any layered subscribers. In general, if the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":144616,"byte_end":144685,"line_start":372,"line_end":372,"column_start":5,"column_end":74}},{"value":"/ subscriber tracks reference counts, this method should be implemented,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":144690,"byte_end":144764,"line_start":373,"line_end":373,"column_start":5,"column_end":79}},{"value":"/ rather than `drop_span`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":144769,"byte_end":144797,"line_start":374,"line_end":374,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":144802,"byte_end":144805,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ This function is guaranteed to only be called with span IDs that were","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":144810,"byte_end":144883,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ returned by this subscriber's `new_span` function.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":144888,"byte_end":144942,"line_start":377,"line_end":377,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":144947,"byte_end":144950,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ It's guaranteed that if this function has been called once more than the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":144955,"byte_end":145031,"line_start":379,"line_end":379,"column_start":5,"column_end":81}},{"value":"/ number of times `clone_span` was called with the same `id`, then no more","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":145036,"byte_end":145112,"line_start":380,"line_end":380,"column_start":5,"column_end":81}},{"value":"/ handles that can enter the span with that `id` exist. This means that it","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":145117,"byte_end":145193,"line_start":381,"line_end":381,"column_start":5,"column_end":81}},{"value":"/ can be used in conjunction with [`clone_span`] to track the number of","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":145198,"byte_end":145271,"line_start":382,"line_end":382,"column_start":5,"column_end":78}},{"value":"/ handles capable of `enter`ing a span. When all the handles have been","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":145276,"byte_end":145348,"line_start":383,"line_end":383,"column_start":5,"column_end":77}},{"value":"/ dropped (i.e., `try_close` has been called one more time than","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":145353,"byte_end":145418,"line_start":384,"line_end":384,"column_start":5,"column_end":70}},{"value":"/ `clone_span` for a given ID), the subscriber may assume that the span","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":145423,"byte_end":145496,"line_start":385,"line_end":385,"column_start":5,"column_end":78}},{"value":"/ will not be entered again, and should return `true`. It is then free to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":145501,"byte_end":145576,"line_start":386,"line_end":386,"column_start":5,"column_end":80}},{"value":"/ deallocate storage for data associated with that span, write data from","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":145581,"byte_end":145655,"line_start":387,"line_end":387,"column_start":5,"column_end":79}},{"value":"/ that span to IO, and so on.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":145660,"byte_end":145691,"line_start":388,"line_end":388,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":145696,"byte_end":145699,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ **Note**: since this function is called when spans are dropped,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":145704,"byte_end":145771,"line_start":390,"line_end":390,"column_start":5,"column_end":72}},{"value":"/ implementations should ensure that they are unwind-safe. Panicking from","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":145776,"byte_end":145851,"line_start":391,"line_end":391,"column_start":5,"column_end":80}},{"value":"/ inside of a `try_close` function may cause a double panic, if the span","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":145856,"byte_end":145930,"line_start":392,"line_end":392,"column_start":5,"column_end":79}},{"value":"/ was dropped due to a thread unwinding.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":145935,"byte_end":145977,"line_start":393,"line_end":393,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":145982,"byte_end":145985,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ [span ID]: ../span/struct.Id.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":145990,"byte_end":146027,"line_start":395,"line_end":395,"column_start":5,"column_end":42}},{"value":"/ [`clone_span`]: trait.Subscriber.html#method.clone_span","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":146032,"byte_end":146091,"line_start":396,"line_end":396,"column_start":5,"column_end":64}},{"value":"/ [`drop_span`]: trait.Subscriber.html#method.drop_span","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":146096,"byte_end":146153,"line_start":397,"line_end":397,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":146998,"byte_end":147010,"line_start":417,"line_end":417,"column_start":8,"column_end":20},"name":"current_span","qualname":"::subscriber::Subscriber::current_span","value":"pub fn current_span(&Self) -> span::Current","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" Returns a type representing this subscriber's view of the current span.","sig":null,"attributes":[{"value":"/ Returns a type representing this subscriber's view of the current span.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":146284,"byte_end":146359,"line_start":404,"line_end":404,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":146364,"byte_end":146367,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ If subscribers track a current span, they should override this function","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":146372,"byte_end":146447,"line_start":406,"line_end":406,"column_start":5,"column_end":80}},{"value":"/ to return [`Current::new`] if the thread from which this method is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":146452,"byte_end":146522,"line_start":407,"line_end":407,"column_start":5,"column_end":75}},{"value":"/ called is inside a span, or [`Current::none`] if the thread is not","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":146527,"byte_end":146597,"line_start":408,"line_end":408,"column_start":5,"column_end":75}},{"value":"/ inside a span.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":146602,"byte_end":146620,"line_start":409,"line_end":409,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":146625,"byte_end":146628,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ By default, this returns a value indicating that the subscriber","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":146633,"byte_end":146700,"line_start":411,"line_end":411,"column_start":5,"column_end":72}},{"value":"/ does **not** track what span is current. If the subscriber does not","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":146705,"byte_end":146776,"line_start":412,"line_end":412,"column_start":5,"column_end":76}},{"value":"/ implement a current span, it should not override this method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":146781,"byte_end":146846,"line_start":413,"line_end":413,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":146851,"byte_end":146854,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ [`Current::new`]: ../span/struct.Current.html#tymethod.new","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":146859,"byte_end":146921,"line_start":415,"line_end":415,"column_start":5,"column_end":67}},{"value":"/ [`Current::none`]: ../span/struct.Current.html#tymethod.none","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":146926,"byte_end":146990,"line_start":416,"line_end":416,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":148530,"byte_end":148542,"line_start":448,"line_end":448,"column_start":15,"column_end":27},"name":"downcast_raw","qualname":"::subscriber::Subscriber::downcast_raw","value":"pub unsafe fn downcast_raw(&Self, TypeId) -> Option<*const ()>","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" If `self` is the same type as the provided `TypeId`, returns an untyped\n `*const` pointer to that type. Otherwise, returns `None`.","sig":null,"attributes":[{"value":"/ If `self` is the same type as the provided `TypeId`, returns an untyped","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":147162,"byte_end":147237,"line_start":423,"line_end":423,"column_start":5,"column_end":80}},{"value":"/ `*const` pointer to that type. Otherwise, returns `None`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":147242,"byte_end":147303,"line_start":424,"line_end":424,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":147308,"byte_end":147311,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ If you wish to downcast a `Subscriber`, it is strongly advised to use","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":147316,"byte_end":147389,"line_start":426,"line_end":426,"column_start":5,"column_end":78}},{"value":"/ the safe API provided by [`downcast_ref`] instead.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":147394,"byte_end":147448,"line_start":427,"line_end":427,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":147453,"byte_end":147456,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ This API is required for `downcast_raw` to be a trait method; a method","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":147461,"byte_end":147535,"line_start":429,"line_end":429,"column_start":5,"column_end":79}},{"value":"/ signature like [`downcast_ref`] (with a generic type parameter) is not","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":147540,"byte_end":147614,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ object-safe, and thus cannot be a trait method for `Subscriber`. This","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":147619,"byte_end":147692,"line_start":431,"line_end":431,"column_start":5,"column_end":78}},{"value":"/ means that if we only exposed `downcast_ref`, `Subscriber`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":147697,"byte_end":147759,"line_start":432,"line_end":432,"column_start":5,"column_end":67}},{"value":"/ implementations could not override the downcasting behavior","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":147764,"byte_end":147827,"line_start":433,"line_end":433,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":147832,"byte_end":147835,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ This method may be overridden by \"fan out\" or \"chained\" subscriber","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":147840,"byte_end":147910,"line_start":435,"line_end":435,"column_start":5,"column_end":75}},{"value":"/ implementations which consist of multiple composed types. Such","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":147915,"byte_end":147981,"line_start":436,"line_end":436,"column_start":5,"column_end":71}},{"value":"/ subscribers might allow `downcast_raw` by returning references to those","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":147986,"byte_end":148061,"line_start":437,"line_end":437,"column_start":5,"column_end":80}},{"value":"/ component if they contain components with the given `TypeId`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":148066,"byte_end":148131,"line_start":438,"line_end":438,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":148136,"byte_end":148139,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":148144,"byte_end":148156,"line_start":440,"line_end":440,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":148161,"byte_end":148164,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ The [`downcast_ref`] method expects that the pointer returned by","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":148169,"byte_end":148237,"line_start":442,"line_end":442,"column_start":5,"column_end":73}},{"value":"/ `downcast_raw` is non-null and points to a valid instance of the type","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":148242,"byte_end":148315,"line_start":443,"line_end":443,"column_start":5,"column_end":78}},{"value":"/ with the provided `TypeId`. Failure to ensure this will result in","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":148320,"byte_end":148389,"line_start":444,"line_end":444,"column_start":5,"column_end":74}},{"value":"/ undefined behaviour, so implementing `downcast_raw` is unsafe.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":148394,"byte_end":148460,"line_start":445,"line_end":445,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":148465,"byte_end":148468,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ [`downcast_ref`]: #method.downcast_ref","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":148473,"byte_end":148515,"line_start":447,"line_end":447,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":148831,"byte_end":148833,"line_start":459,"line_end":459,"column_start":12,"column_end":14},"name":"is","qualname":"<Subscriber>::is","value":"pub fn is<T: Any>(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this `Subscriber` is the same type as `T`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this `Subscriber` is the same type as `T`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":148755,"byte_end":148819,"line_start":458,"line_end":458,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":149031,"byte_end":149043,"line_start":465,"line_end":465,"column_start":12,"column_end":24},"name":"downcast_ref","qualname":"<Subscriber>::downcast_ref","value":"pub fn downcast_ref<T: Any>(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns some reference to this `Subscriber` value if it is of type `T`,\n or `None` if it isn't.\n","sig":null,"attributes":[{"value":"/ Returns some reference to this `Subscriber` value if it is of type `T`,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":148913,"byte_end":148988,"line_start":463,"line_end":463,"column_start":5,"column_end":80}},{"value":"/ or `None` if it isn't.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":148993,"byte_end":149019,"line_start":464,"line_end":464,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1010},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":149689,"byte_end":149697,"line_start":485,"line_end":485,"column_start":12,"column_end":20},"name":"Interest","qualname":"::subscriber::Interest","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicates a [`Subscriber`]'s interest in a particular callsite.","sig":null,"attributes":[{"value":"/ Indicates a [`Subscriber`]'s interest in a particular callsite.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":149301,"byte_end":149368,"line_start":477,"line_end":477,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":149369,"byte_end":149372,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ `Subscriber`s return an `Interest` from their [`register_callsite`] methods","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":149373,"byte_end":149452,"line_start":479,"line_end":479,"column_start":1,"column_end":80}},{"value":"/ in order to determine whether that span should be enabled or disabled.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":149453,"byte_end":149527,"line_start":480,"line_end":480,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":149528,"byte_end":149531,"line_start":481,"line_end":481,"column_start":1,"column_end":4}},{"value":"/ [`Subscriber`]: ../trait.Subscriber.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":149532,"byte_end":149576,"line_start":482,"line_end":482,"column_start":1,"column_end":45}},{"value":"/ [`register_callsite`]: ../trait.Subscriber.html#method.register_callsite","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":149577,"byte_end":149653,"line_start":483,"line_end":483,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":150176,"byte_end":150181,"line_start":501,"line_end":501,"column_start":12,"column_end":17},"name":"never","qualname":"<Interest>::never","value":"pub fn never() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Interest` indicating that the subscriber is never interested\n in being notified about a callsite.","sig":null,"attributes":[{"value":"/ Returns an `Interest` indicating that the subscriber is never interested","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":149869,"byte_end":149945,"line_start":495,"line_end":495,"column_start":5,"column_end":81}},{"value":"/ in being notified about a callsite.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":149950,"byte_end":149989,"line_start":496,"line_end":496,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":149994,"byte_end":149997,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ If all active subscribers are `never()` interested in a callsite, it will","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":150002,"byte_end":150079,"line_start":498,"line_end":498,"column_start":5,"column_end":82}},{"value":"/ be completely disabled unless a new subscriber becomes active.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":150084,"byte_end":150150,"line_start":499,"line_end":499,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":150155,"byte_end":150164,"line_start":500,"line_end":500,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":150710,"byte_end":150719,"line_start":513,"line_end":513,"column_start":12,"column_end":21},"name":"sometimes","qualname":"<Interest>::sometimes","value":"pub fn sometimes() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Interest` indicating the subscriber is sometimes interested\n in being notified about a callsite.","sig":null,"attributes":[{"value":"/ Returns an `Interest` indicating the subscriber is sometimes interested","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":150243,"byte_end":150318,"line_start":505,"line_end":505,"column_start":5,"column_end":80}},{"value":"/ in being notified about a callsite.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":150323,"byte_end":150362,"line_start":506,"line_end":506,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":150367,"byte_end":150370,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ If all active subscribers are `sometimes` or `never` interested in a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":150375,"byte_end":150447,"line_start":508,"line_end":508,"column_start":5,"column_end":77}},{"value":"/ callsite, the currently active subscriber will be asked to filter that","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":150452,"byte_end":150526,"line_start":509,"line_end":509,"column_start":5,"column_end":79}},{"value":"/ callsite every time it creates a span. This will be the case until a new","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":150531,"byte_end":150607,"line_start":510,"line_end":510,"column_start":5,"column_end":81}},{"value":"/ subscriber expresses that it is `always` interested in the callsite.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":150612,"byte_end":150684,"line_start":511,"line_end":511,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":150689,"byte_end":150698,"line_start":512,"line_end":512,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":151075,"byte_end":151081,"line_start":523,"line_end":523,"column_start":12,"column_end":18},"name":"always","qualname":"<Interest>::always","value":"pub fn always() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Interest` indicating the subscriber is always interested in\n being notified about a callsite.","sig":null,"attributes":[{"value":"/ Returns an `Interest` indicating the subscriber is always interested in","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":150785,"byte_end":150860,"line_start":517,"line_end":517,"column_start":5,"column_end":80}},{"value":"/ being notified about a callsite.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":150865,"byte_end":150901,"line_start":518,"line_end":518,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":150906,"byte_end":150909,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ If any subscriber expresses that it is `always()` interested in a given","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":150914,"byte_end":150989,"line_start":520,"line_end":520,"column_start":5,"column_end":80}},{"value":"/ callsite, then the callsite will always be enabled.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":150994,"byte_end":151049,"line_start":521,"line_end":521,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":151054,"byte_end":151063,"line_start":522,"line_end":522,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":151273,"byte_end":151281,"line_start":530,"line_end":530,"column_start":12,"column_end":20},"name":"is_never","qualname":"<Interest>::is_never","value":"pub fn is_never(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the subscriber is never interested in being notified\n about this callsite.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the subscriber is never interested in being notified","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":151144,"byte_end":151218,"line_start":527,"line_end":527,"column_start":5,"column_end":79}},{"value":"/ about this callsite.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":151223,"byte_end":151247,"line_start":528,"line_end":528,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":151252,"byte_end":151261,"line_start":529,"line_end":529,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":151541,"byte_end":151553,"line_start":540,"line_end":540,"column_start":12,"column_end":24},"name":"is_sometimes","qualname":"<Interest>::is_sometimes","value":"pub fn is_sometimes(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the subscriber is sometimes interested in being notified\n about this callsite.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the subscriber is sometimes interested in being notified","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":151408,"byte_end":151486,"line_start":537,"line_end":537,"column_start":5,"column_end":83}},{"value":"/ about this callsite.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":151491,"byte_end":151515,"line_start":538,"line_end":538,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":151520,"byte_end":151529,"line_start":539,"line_end":539,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":151814,"byte_end":151823,"line_start":550,"line_end":550,"column_start":12,"column_end":21},"name":"is_always","qualname":"<Interest>::is_always","value":"pub fn is_always(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the subscriber is always interested in being notified\n about this callsite.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the subscriber is always interested in being notified","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":151684,"byte_end":151759,"line_start":547,"line_end":547,"column_start":5,"column_end":80}},{"value":"/ about this callsite.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":151764,"byte_end":151788,"line_start":548,"line_end":548,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":151793,"byte_end":151802,"line_start":549,"line_end":549,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":590},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":8557,"byte_end":8563,"line_start":278,"line_end":278,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":9132,"byte_end":9140,"line_start":27,"line_end":27,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":13873,"byte_end":13883,"line_start":149,"line_end":149,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":14030,"byte_end":14040,"line_start":155,"line_end":155,"column_start":13,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":14065,"byte_end":14075,"line_start":157,"line_end":157,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":14210,"byte_end":14220,"line_start":163,"line_end":163,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":26280,"byte_end":26301,"line_start":312,"line_end":312,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":26541,"byte_end":26562,"line_start":320,"line_end":320,"column_start":23,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":29088,"byte_end":29096,"line_start":404,"line_end":404,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":38510,"byte_end":38518,"line_start":646,"line_end":646,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":38671,"byte_end":38679,"line_start":653,"line_end":653,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":38805,"byte_end":38813,"line_start":659,"line_end":659,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":39000,"byte_end":39012,"line_start":670,"line_end":670,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":39642,"byte_end":39651,"line_start":695,"line_end":695,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":40045,"byte_end":40050,"line_start":711,"line_end":711,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":40875,"byte_end":40882,"line_start":742,"line_end":742,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":41291,"byte_end":41298,"line_start":759,"line_end":759,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":41461,"byte_end":41473,"line_start":769,"line_end":769,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":48002,"byte_end":48007,"line_start":29,"line_end":29,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":179},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":61617,"byte_end":61628,"line_start":273,"line_end":273,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":61789,"byte_end":61797,"line_start":279,"line_end":279,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":61962,"byte_end":61963,"line_start":285,"line_end":285,"column_start":19,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":64894,"byte_end":64902,"line_start":399,"line_end":399,"column_start":58,"column_end":66},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":64962,"byte_end":64970,"line_start":400,"line_end":400,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":65910,"byte_end":65919,"line_start":436,"line_end":436,"column_start":41,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":65952,"byte_end":65961,"line_start":438,"line_end":438,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":66430,"byte_end":66442,"line_start":450,"line_end":450,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":67321,"byte_end":67333,"line_start":481,"line_end":481,"column_start":49,"column_end":61},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":67359,"byte_end":67371,"line_start":483,"line_end":483,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":67574,"byte_end":67586,"line_start":492,"line_end":492,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":67735,"byte_end":67747,"line_start":498,"line_end":498,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":67941,"byte_end":67951,"line_start":506,"line_end":506,"column_start":47,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":67989,"byte_end":67999,"line_start":508,"line_end":508,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":68178,"byte_end":68188,"line_start":517,"line_end":517,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":68331,"byte_end":68336,"line_start":523,"line_end":523,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":68355,"byte_end":68360,"line_start":524,"line_end":524,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":68466,"byte_end":68471,"line_start":531,"line_end":531,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":68977,"byte_end":68982,"line_start":548,"line_end":548,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":69104,"byte_end":69109,"line_start":554,"line_end":554,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":69191,"byte_end":69196,"line_start":560,"line_end":560,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":69326,"byte_end":69331,"line_start":566,"line_end":566,"column_start":13,"column_end":18},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":69350,"byte_end":69355,"line_start":568,"line_end":568,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":69519,"byte_end":69524,"line_start":578,"line_end":578,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":69788,"byte_end":69796,"line_start":592,"line_end":592,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":318},{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":73004,"byte_end":73012,"line_start":691,"line_end":691,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":73254,"byte_end":73262,"line_start":700,"line_end":700,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":73478,"byte_end":73482,"line_start":710,"line_end":710,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":73818,"byte_end":73826,"line_start":726,"line_end":726,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":338},{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":75371,"byte_end":75379,"line_start":774,"line_end":774,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":75798,"byte_end":75806,"line_start":789,"line_end":789,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":86372,"byte_end":86380,"line_start":121,"line_end":121,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":88767,"byte_end":88775,"line_start":206,"line_end":206,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":89920,"byte_end":89924,"line_start":245,"line_end":245,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":90501,"byte_end":90506,"line_start":271,"line_end":271,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":91221,"byte_end":91226,"line_start":294,"line_end":294,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":91657,"byte_end":91672,"line_start":308,"line_end":308,"column_start":38,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":91694,"byte_end":91699,"line_start":310,"line_end":310,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":93281,"byte_end":93292,"line_start":361,"line_end":361,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":93415,"byte_end":93426,"line_start":368,"line_end":368,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":93545,"byte_end":93556,"line_start":375,"line_end":375,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":93650,"byte_end":93661,"line_start":382,"line_end":382,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":99278,"byte_end":99289,"line_start":507,"line_end":507,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":99708,"byte_end":99719,"line_start":520,"line_end":520,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":100213,"byte_end":100224,"line_start":533,"line_end":533,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":440},{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":101528,"byte_end":101543,"line_start":567,"line_end":567,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":101801,"byte_end":101822,"line_start":576,"line_end":576,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":102124,"byte_end":102145,"line_start":586,"line_end":586,"column_start":28,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":106482,"byte_end":106487,"line_start":661,"line_end":661,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":106642,"byte_end":106647,"line_start":668,"line_end":668,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":107266,"byte_end":107271,"line_start":695,"line_end":695,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":107440,"byte_end":107445,"line_start":702,"line_end":702,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":108338,"byte_end":108349,"line_start":737,"line_end":737,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":108498,"byte_end":108509,"line_start":744,"line_end":744,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":109214,"byte_end":109225,"line_start":771,"line_end":771,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":109402,"byte_end":109413,"line_start":778,"line_end":778,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":114580,"byte_end":114582,"line_start":60,"line_end":60,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":116039,"byte_end":116049,"line_start":108,"line_end":108,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":119174,"byte_end":119180,"line_start":209,"line_end":209,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":119914,"byte_end":119921,"line_start":235,"line_end":235,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":122490,"byte_end":122497,"line_start":317,"line_end":317,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":149854,"byte_end":149862,"line_start":494,"line_end":494,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":8132,"byte_end":8140,"line_start":255,"line_end":255,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":7}},{"kind":"Mod","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":8150,"byte_end":8160,"line_start":256,"line_end":256,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":46}},{"kind":"Mod","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":8170,"byte_end":8175,"line_start":257,"line_end":257,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":166}},{"kind":"Mod","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":8185,"byte_end":8190,"line_start":258,"line_end":258,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":188}},{"kind":"Mod","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":8200,"byte_end":8208,"line_start":259,"line_end":259,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":354}},{"kind":"Mod","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":8230,"byte_end":8234,"line_start":261,"line_end":261,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":485}},{"kind":"Mod","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/lib.rs","byte_start":8267,"byte_end":8277,"line_start":263,"line_end":263,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":539}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":9132,"byte_end":9140,"line_start":27,"line_end":27,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":23},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":10943,"byte_end":10947,"line_start":77,"line_end":77,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":1934},"to":{"krate":0,"index":32}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":13873,"byte_end":13883,"line_start":149,"line_end":149,"column_start":20,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":602},"to":{"krate":2,"index":1648}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":14030,"byte_end":14040,"line_start":155,"line_end":155,"column_start":13,"column_end":23},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":602},"to":{"krate":2,"index":1653}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":14065,"byte_end":14075,"line_start":157,"line_end":157,"column_start":21,"column_end":31},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":602},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/callsite.rs","byte_start":14210,"byte_end":14220,"line_start":163,"line_end":163,"column_start":15,"column_end":25},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":602},"to":{"krate":2,"index":6386}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":26280,"byte_end":26301,"line_start":312,"line_end":312,"column_start":23,"column_end":44},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":620},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":26541,"byte_end":26562,"line_start":320,"line_end":320,"column_start":23,"column_end":44},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":620},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":29088,"byte_end":29096,"line_start":404,"line_end":404,"column_start":6,"column_end":14},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":607},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":38510,"byte_end":38518,"line_start":646,"line_end":646,"column_start":18,"column_end":26},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":607},"to":{"krate":2,"index":1910}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":38671,"byte_end":38679,"line_start":653,"line_end":653,"column_start":21,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":607},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":38805,"byte_end":38813,"line_start":659,"line_end":659,"column_start":21,"column_end":29},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":607},"to":{"krate":2,"index":1840}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":39000,"byte_end":39012,"line_start":670,"line_end":670,"column_start":21,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":137},"to":{"krate":0,"index":548}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":39642,"byte_end":39651,"line_start":695,"line_end":695,"column_start":6,"column_end":15},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":40045,"byte_end":40050,"line_start":711,"line_end":711,"column_start":6,"column_end":11},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":78},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":40875,"byte_end":40882,"line_start":742,"line_end":742,"column_start":10,"column_end":17},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":81},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":41291,"byte_end":41298,"line_start":759,"line_end":759,"column_start":19,"column_end":26},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":2117}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/dispatcher.rs","byte_start":41461,"byte_end":41473,"line_start":769,"line_end":769,"column_start":15,"column_end":27},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":615},"to":{"krate":2,"index":2117}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/event.rs","byte_start":48002,"byte_end":48007,"line_start":29,"line_end":29,"column_start":10,"column_end":15},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":60686,"byte_end":60692,"line_start":237,"line_end":237,"column_start":33,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":590},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":61617,"byte_end":61628,"line_start":273,"line_end":273,"column_start":29,"column_end":40},"kind":{"Impl":{"id":18}},"from":{"krate":2,"index":5975},"to":{"krate":0,"index":206}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":61789,"byte_end":61797,"line_start":279,"line_end":279,"column_start":29,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":2,"index":6056},"to":{"krate":0,"index":206}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":61962,"byte_end":61963,"line_start":285,"line_end":285,"column_start":19,"column_end":20},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":228},"to":{"krate":0,"index":206}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":64894,"byte_end":64902,"line_start":399,"line_end":399,"column_start":58,"column_end":66},"kind":{"Impl":{"id":41}},"from":{"krate":2,"index":11710},"to":{"krate":0,"index":590}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":64962,"byte_end":64970,"line_start":400,"line_end":400,"column_start":54,"column_end":62},"kind":{"Impl":{"id":42}},"from":{"krate":2,"index":11710},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":65910,"byte_end":65919,"line_start":436,"line_end":436,"column_start":41,"column_end":50},"kind":{"Impl":{"id":45}},"from":{"krate":2,"index":30955},"to":{"krate":0,"index":590}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":65952,"byte_end":65961,"line_start":438,"line_end":438,"column_start":25,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":2,"index":30955},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":66430,"byte_end":66442,"line_start":450,"line_end":450,"column_start":44,"column_end":56},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":259},"to":{"krate":0,"index":32}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":67321,"byte_end":67333,"line_start":481,"line_end":481,"column_start":49,"column_end":61},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":652},"to":{"krate":0,"index":590}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":67359,"byte_end":67371,"line_start":483,"line_end":483,"column_start":19,"column_end":31},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":652},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":67574,"byte_end":67586,"line_start":492,"line_end":492,"column_start":38,"column_end":50},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":652},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":67735,"byte_end":67747,"line_start":498,"line_end":498,"column_start":40,"column_end":52},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":652},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":67941,"byte_end":67951,"line_start":506,"line_end":506,"column_start":47,"column_end":57},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":659},"to":{"krate":0,"index":590}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":67989,"byte_end":67999,"line_start":508,"line_end":508,"column_start":31,"column_end":41},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":659},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":68178,"byte_end":68188,"line_start":517,"line_end":517,"column_start":36,"column_end":46},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":659},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":68331,"byte_end":68336,"line_start":523,"line_end":523,"column_start":32,"column_end":37},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":637},"to":{"krate":0,"index":590}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":68355,"byte_end":68360,"line_start":524,"line_end":524,"column_start":16,"column_end":21},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":637},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":68466,"byte_end":68471,"line_start":531,"line_end":531,"column_start":6,"column_end":11},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":68977,"byte_end":68982,"line_start":548,"line_end":548,"column_start":23,"column_end":28},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":632},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":69104,"byte_end":69109,"line_start":554,"line_end":554,"column_start":21,"column_end":26},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":632},"to":{"krate":2,"index":1831}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":69191,"byte_end":69196,"line_start":560,"line_end":560,"column_start":20,"column_end":25},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":632},"to":{"krate":2,"index":1648}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":69326,"byte_end":69331,"line_start":566,"line_end":566,"column_start":13,"column_end":18},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":632},"to":{"krate":2,"index":1653}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":69350,"byte_end":69355,"line_start":568,"line_end":568,"column_start":15,"column_end":20},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":632},"to":{"krate":2,"index":6386}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":69519,"byte_end":69524,"line_start":578,"line_end":578,"column_start":16,"column_end":21},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":632},"to":{"krate":2,"index":1620}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":69788,"byte_end":69796,"line_start":592,"line_end":592,"column_start":6,"column_end":14},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":73004,"byte_end":73012,"line_start":691,"line_end":691,"column_start":21,"column_end":29},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":199},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":73254,"byte_end":73262,"line_start":700,"line_end":700,"column_start":23,"column_end":31},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":199},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":73478,"byte_end":73482,"line_start":710,"line_end":710,"column_start":19,"column_end":23},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":647},"to":{"krate":2,"index":4984}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":73818,"byte_end":73826,"line_start":726,"line_end":726,"column_start":10,"column_end":18},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":75371,"byte_end":75379,"line_start":774,"line_end":774,"column_start":25,"column_end":33},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":202},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":75798,"byte_end":75806,"line_start":789,"line_end":789,"column_start":27,"column_end":35},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":202},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/field.rs","byte_start":76657,"byte_end":76663,"line_start":815,"line_end":815,"column_start":29,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1598},"to":{"krate":0,"index":351}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":86372,"byte_end":86380,"line_start":121,"line_end":121,"column_start":10,"column_end":18},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":365},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":88767,"byte_end":88775,"line_start":206,"line_end":206,"column_start":25,"column_end":33},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":365},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":89920,"byte_end":89924,"line_start":245,"line_end":245,"column_start":6,"column_end":10},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":859},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":90501,"byte_end":90506,"line_start":271,"line_end":271,"column_start":6,"column_end":11},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":873},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":91221,"byte_end":91226,"line_start":294,"line_end":294,"column_start":23,"column_end":28},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":873},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":91657,"byte_end":91672,"line_start":308,"line_end":308,"column_start":38,"column_end":53},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":951},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":91694,"byte_end":91699,"line_start":310,"line_end":310,"column_start":18,"column_end":23},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":873},"to":{"krate":2,"index":7723}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":93281,"byte_end":93292,"line_start":361,"line_end":361,"column_start":22,"column_end":33},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":887},"to":{"krate":2,"index":1840}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":93415,"byte_end":93426,"line_start":368,"line_end":368,"column_start":30,"column_end":41},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":887},"to":{"krate":2,"index":1840}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":93545,"byte_end":93556,"line_start":375,"line_end":375,"column_start":30,"column_end":41},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":887},"to":{"krate":2,"index":1837}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":93650,"byte_end":93661,"line_start":382,"line_end":382,"column_start":6,"column_end":17},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":887},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":99278,"byte_end":99289,"line_start":507,"line_end":507,"column_start":23,"column_end":34},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":887},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":99708,"byte_end":99719,"line_start":520,"line_end":520,"column_start":21,"column_end":32},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":887},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":100213,"byte_end":100224,"line_start":533,"line_end":533,"column_start":18,"column_end":29},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":887},"to":{"krate":2,"index":7723}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":101528,"byte_end":101543,"line_start":567,"line_end":567,"column_start":23,"column_end":38},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":951},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":101801,"byte_end":101822,"line_start":576,"line_end":576,"column_start":23,"column_end":44},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":899},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":102124,"byte_end":102145,"line_start":586,"line_end":586,"column_start":28,"column_end":49},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":899},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":106482,"byte_end":106487,"line_start":661,"line_end":661,"column_start":33,"column_end":38},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":873},"to":{"krate":2,"index":1648}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":106642,"byte_end":106647,"line_start":668,"line_end":668,"column_start":21,"column_end":26},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":873},"to":{"krate":2,"index":1685}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":107266,"byte_end":107271,"line_start":695,"line_end":695,"column_start":14,"column_end":19},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":873},"to":{"krate":2,"index":1674}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":107440,"byte_end":107445,"line_start":702,"line_end":702,"column_start":34,"column_end":39},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":873},"to":{"krate":2,"index":1685}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":108338,"byte_end":108349,"line_start":737,"line_end":737,"column_start":27,"column_end":38},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":887},"to":{"krate":2,"index":1648}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":108498,"byte_end":108509,"line_start":744,"line_end":744,"column_start":21,"column_end":32},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":887},"to":{"krate":2,"index":1685}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":109214,"byte_end":109225,"line_start":771,"line_end":771,"column_start":14,"column_end":25},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":887},"to":{"krate":2,"index":1674}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/metadata.rs","byte_start":109402,"byte_end":109413,"line_start":778,"line_end":778,"column_start":28,"column_end":39},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":887},"to":{"krate":2,"index":1685}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":114580,"byte_end":114582,"line_start":60,"line_end":60,"column_start":6,"column_end":8},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":965},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":116039,"byte_end":116049,"line_start":108,"line_end":108,"column_start":10,"column_end":20},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":982},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":119174,"byte_end":119180,"line_start":209,"line_end":209,"column_start":10,"column_end":16},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":990},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":119914,"byte_end":119921,"line_start":235,"line_end":235,"column_start":6,"column_end":13},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":996},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/span.rs","byte_start":122490,"byte_end":122497,"line_start":317,"line_end":317,"column_start":27,"column_end":34},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":996},"to":{"krate":2,"index":1837}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-core-0.1.16/src/subscriber.rs","byte_start":149854,"byte_end":149862,"line_start":494,"line_end":494,"column_start":6,"column_end":14},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1010},"to":{"krate":4294967295,"index":4294967295}}]}