{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0","program":"/home/alansky/.rustup/toolchains/nightly-2020-07-02-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","wasmparser","--edition=2018","/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=1f30f6ce8c964215","-C","extra-filename=-1f30f6ce8c964215","--out-dir","/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps","-L","dependency=/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/alansky/.rustup/toolchains/nightly-2020-07-02-x86_64-unknown-linux-gnu"],"output":"/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps/libwasmparser-1f30f6ce8c964215.rmeta"},"prelude":{"crate_id":{"name":"wasmparser","disambiguator":[7525913771804767517,913625018357448008]},"crate_root":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src","external_crates":[{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15171822389981698586,9596930288317159773]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[309489290393175025,9116230521283433112]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4391997853131671271,2752570053062459009]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[680011651820151502,5018330578075825921]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4249137077638888796,17834651879708154657]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[13082819734751436340,16140962863799451331]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8371738565553744270,17943531712744420027]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17468180561489458258,7285327718060701271]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[14551538593801126895,13478667531910088620]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[16022708609364593127,529027819734980321]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[18024135037275500963,3187671833432925572]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5194268306266264186,14551347693776345482]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[18097577876301876973,855323625195415836]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[5106557709654100294,13294098602154984522]}}],"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":600,"byte_end":2946,"line_start":16,"line_end":80,"column_start":1,"column_end":15}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1850},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":1131,"byte_end":1143,"line_start":26,"line_end":26,"column_start":31,"column_end":43},"alias_span":null,"name":"BinaryReader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1820},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":1175,"byte_end":1180,"line_start":27,"line_end":27,"column_start":31,"column_end":36},"alias_span":null,"name":"Range","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1955},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":1210,"byte_end":1227,"line_start":29,"line_end":29,"column_start":28,"column_end":45},"alias_span":null,"name":"BinaryReaderError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2349},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":1256,"byte_end":1263,"line_start":30,"line_end":30,"column_start":28,"column_end":35},"alias_span":null,"name":"BrTable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1969},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":1292,"byte_end":1309,"line_start":31,"line_end":31,"column_start":28,"column_end":45},"alias_span":null,"name":"CustomSectionKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2192},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":1338,"byte_end":1348,"line_start":32,"line_end":32,"column_start":28,"column_end":38},"alias_span":null,"name":"ExportType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2119},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":1377,"byte_end":1389,"line_start":33,"line_end":33,"column_start":28,"column_end":40},"alias_span":null,"name":"ExternalKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2156},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":1418,"byte_end":1426,"line_start":34,"line_end":34,"column_start":28,"column_end":36},"alias_span":null,"name":"FuncType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2247},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":1455,"byte_end":1465,"line_start":35,"line_end":35,"column_start":28,"column_end":38},"alias_span":null,"name":"GlobalType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2359},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":1494,"byte_end":1500,"line_start":36,"line_end":36,"column_start":28,"column_end":34},"alias_span":null,"name":"Ieee32","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2360},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":1494,"byte_end":1500,"line_start":36,"line_end":36,"column_start":28,"column_end":34},"alias_span":null,"name":"Ieee32","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":2377},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":1529,"byte_end":1535,"line_start":37,"line_end":37,"column_start":28,"column_end":34},"alias_span":null,"name":"Ieee64","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2378},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":1529,"byte_end":1535,"line_start":37,"line_end":37,"column_start":28,"column_end":34},"alias_span":null,"name":"Ieee64","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":2262},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":1564,"byte_end":1586,"line_start":38,"line_end":38,"column_start":28,"column_end":50},"alias_span":null,"name":"ImportSectionEntryType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2173},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":1615,"byte_end":1627,"line_start":39,"line_end":39,"column_start":28,"column_end":40},"alias_span":null,"name":"InstanceType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2318},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":1656,"byte_end":1667,"line_start":40,"line_end":40,"column_start":28,"column_end":39},"alias_span":null,"name":"LinkingType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2286},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":1696,"byte_end":1711,"line_start":41,"line_end":41,"column_start":28,"column_end":43},"alias_span":null,"name":"MemoryImmediate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2232},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":1740,"byte_end":1750,"line_start":42,"line_end":42,"column_start":28,"column_end":38},"alias_span":null,"name":"MemoryType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2182},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":1779,"byte_end":1789,"line_start":43,"line_end":43,"column_start":28,"column_end":38},"alias_span":null,"name":"ModuleType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2306},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":1818,"byte_end":1826,"line_start":44,"line_end":44,"column_start":28,"column_end":36},"alias_span":null,"name":"NameType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2294},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":1855,"byte_end":1861,"line_start":45,"line_end":45,"column_start":28,"column_end":34},"alias_span":null,"name":"Naming","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2416},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":1890,"byte_end":1898,"line_start":46,"line_end":46,"column_start":28,"column_end":36},"alias_span":null,"name":"Operator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2327},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":1927,"byte_end":1936,"line_start":47,"line_end":47,"column_start":28,"column_end":37},"alias_span":null,"name":"RelocType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2202},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":1965,"byte_end":1980,"line_start":48,"line_end":48,"column_start":28,"column_end":43},"alias_span":null,"name":"ResizableLimits","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":581},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":2009,"byte_end":2015,"line_start":49,"line_end":49,"column_start":28,"column_end":34},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1997},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":2044,"byte_end":2055,"line_start":50,"line_end":50,"column_start":28,"column_end":39},"alias_span":null,"name":"SectionCode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2217},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":2084,"byte_end":2093,"line_start":51,"line_end":51,"column_start":28,"column_end":37},"alias_span":null,"name":"TableType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2067},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":2122,"byte_end":2126,"line_start":52,"line_end":52,"column_start":28,"column_end":32},"alias_span":null,"name":"Type","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2139},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":2155,"byte_end":2162,"line_start":53,"line_end":53,"column_start":28,"column_end":35},"alias_span":null,"name":"TypeDef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2100},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":2191,"byte_end":2205,"line_start":54,"line_end":54,"column_start":28,"column_end":42},"alias_span":null,"name":"TypeOrFuncType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2395},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":2234,"byte_end":2238,"line_start":55,"line_end":55,"column_start":28,"column_end":32},"alias_span":null,"name":"V128","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2396},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":2234,"byte_end":2238,"line_start":55,"line_end":55,"column_start":28,"column_end":32},"alias_span":null,"name":"V128","value":"","parent":{"krate":0,"index":31}},{"kind":"Use","ref_id":{"krate":0,"index":205},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":2274,"byte_end":2286,"line_start":57,"line_end":57,"column_start":34,"column_end":46},"alias_span":null,"name":"WasmFuncType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":286},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":2321,"byte_end":2335,"line_start":58,"line_end":58,"column_start":34,"column_end":48},"alias_span":null,"name":"WasmGlobalType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":282},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":2370,"byte_end":2384,"line_start":59,"line_end":59,"column_start":34,"column_end":48},"alias_span":null,"name":"WasmMemoryType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":290},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":2419,"byte_end":2438,"line_start":60,"line_end":60,"column_start":34,"column_end":53},"alias_span":null,"name":"WasmModuleResources","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":277},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":2473,"byte_end":2486,"line_start":61,"line_end":61,"column_start":34,"column_end":47},"alias_span":null,"name":"WasmTableType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":200},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":2521,"byte_end":2529,"line_start":62,"line_end":62,"column_start":34,"column_end":42},"alias_span":null,"name":"WasmType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":202},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":2564,"byte_end":2575,"line_start":63,"line_end":63,"column_start":34,"column_end":45},"alias_span":null,"name":"WasmTypeDef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1903},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":2704,"byte_end":2727,"line_start":67,"line_end":67,"column_start":37,"column_end":60},"alias_span":null,"name":"OperatorValidatorConfig","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":2753,"byte_end":2754,"line_start":69,"line_end":69,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"Payload, Parser","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":2753,"byte_end":2754,"line_start":69,"line_end":69,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"Import, ElementSectionReader, ModuleSectionReader, ImportSectionReader, SectionReader, AliasedInstance, DataKind, ElementKind, OperatorsReader, GlobalSectionReader, FunctionSectionReader, DataSectionReader, InstanceSectionReader, SectionIteratorLimited, ElementItem, InitExpr, Instance, TableSectionReader, TypeSectionReader, ExportSectionReader, FunctionBody, AliasSectionReader, SectionWithLimitedItems, Alias, Export, MemorySectionReader","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":2753,"byte_end":2754,"line_start":69,"line_end":69,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":600,"byte_end":2946,"line_start":16,"line_end":80,"column_start":1,"column_end":15},"name":"","qualname":"::","value":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":3789},{"krate":0,"index":13},{"krate":0,"index":3791},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":3827},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":176},{"krate":0,"index":196},{"krate":0,"index":344},{"krate":0,"index":444},{"krate":0,"index":577},{"krate":0,"index":600},{"krate":0,"index":1486}],"decl_id":null,"docs":" A simple event-driven library for parsing WebAssembly binary files\n (or streams).","sig":null,"attributes":[{"value":"! A simple event-driven library for parsing WebAssembly binary files","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":600,"byte_end":670,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"! (or streams).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":671,"byte_end":688,"line_start":17,"line_end":17,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":689,"byte_end":692,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! The parser library reports events as they happend and only stores","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":693,"byte_end":762,"line_start":19,"line_end":19,"column_start":1,"column_end":70}},{"value":"! parsing information for a brief period of time, making it very fast","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":763,"byte_end":834,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"! and memory-efficient. The event-driven model, however, has some drawbacks.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":835,"byte_end":913,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"! If you need random access to the entire WebAssembly data-structure,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":914,"byte_end":985,"line_start":22,"line_end":22,"column_start":1,"column_end":72}},{"value":"! this is not the right library for you. You could however, build such","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":986,"byte_end":1058,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"! a data-structure using this library.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/lib.rs","byte_start":1059,"byte_end":1099,"line_start":24,"line_end":24,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1820},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":4683,"byte_end":4688,"line_start":53,"line_end":53,"column_start":12,"column_end":17},"name":"Range","qualname":"::binary_reader::Range","value":"Range { start, end }","parent":null,"children":[{"krate":0,"index":1821},{"krate":0,"index":1822}],"decl_id":null,"docs":" Bytecode range in the WebAssembly module.\n","sig":null,"attributes":[{"value":"/ Bytecode range in the WebAssembly module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":4558,"byte_end":4603,"line_start":51,"line_end":51,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":1821},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":4737,"byte_end":4742,"line_start":55,"line_end":55,"column_start":9,"column_end":14},"name":"start","qualname":"::binary_reader::Range::start","value":"usize","parent":{"krate":0,"index":1820},"children":[],"decl_id":null,"docs":" The start bound of the range.\n","sig":null,"attributes":[{"value":"/ The start bound of the range.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":4695,"byte_end":4728,"line_start":54,"line_end":54,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":1822},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":4795,"byte_end":4798,"line_start":57,"line_end":57,"column_start":9,"column_end":12},"name":"end","qualname":"::binary_reader::Range::end","value":"usize","parent":{"krate":0,"index":1820},"children":[],"decl_id":null,"docs":" The end bound of the range.\n","sig":null,"attributes":[{"value":"/ The end bound of the range.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":4755,"byte_end":4786,"line_start":56,"line_end":56,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":4947,"byte_end":4950,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Range>::new","value":"pub fn new(usize, usize) -> Range","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new instance of `Range`.","sig":null,"attributes":[{"value":"/ Constructs a new instance of `Range`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":4827,"byte_end":4868,"line_start":61,"line_end":61,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":4873,"byte_end":4876,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":4881,"byte_end":4893,"line_start":63,"line_end":63,"column_start":5,"column_end":17}},{"value":"/ If `start` is greater than `end`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":4898,"byte_end":4935,"line_start":64,"line_end":64,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":5137,"byte_end":5142,"line_start":71,"line_end":71,"column_start":12,"column_end":17},"name":"slice","qualname":"<Range>::slice","value":"pub fn slice<'a>(&Self, &'a [u8]) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a new slice between `start` and `end - 1` from `data`.\n","sig":null,"attributes":[{"value":"/ Returns a new slice between `start` and `end - 1` from `data`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":5059,"byte_end":5125,"line_start":70,"line_end":70,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":1850},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":5325,"byte_end":5337,"line_start":78,"line_end":78,"column_start":12,"column_end":24},"name":"BinaryReader","qualname":"::binary_reader::BinaryReader","value":"BinaryReader {  }","parent":null,"children":[{"krate":0,"index":1852},{"krate":0,"index":1853},{"krate":0,"index":1854}],"decl_id":null,"docs":" A binary reader of the WebAssembly structures and types.\n","sig":null,"attributes":[{"value":"/ A binary reader of the WebAssembly structures and types.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":5229,"byte_end":5289,"line_start":76,"line_end":76,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":5823,"byte_end":5826,"line_start":96,"line_end":96,"column_start":12,"column_end":15},"name":"new","qualname":"<BinaryReader>::new","value":"pub fn new(&[u8]) -> BinaryReader","parent":null,"children":[],"decl_id":null,"docs":" Constructs `BinaryReader` type.","sig":null,"attributes":[{"value":"/ Constructs `BinaryReader` type.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":5483,"byte_end":5518,"line_start":85,"line_end":85,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":5523,"byte_end":5526,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":5531,"byte_end":5545,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":5550,"byte_end":5557,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ let fn_body = &vec![0x41, 0x00, 0x10, 0x00, 0x0B];","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":5562,"byte_end":5616,"line_start":89,"line_end":89,"column_start":5,"column_end":59}},{"value":"/ let mut reader = wasmparser::BinaryReader::new(fn_body);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":5621,"byte_end":5681,"line_start":90,"line_end":90,"column_start":5,"column_end":65}},{"value":"/ while !reader.eof() {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":5686,"byte_end":5711,"line_start":91,"line_end":91,"column_start":5,"column_end":30}},{"value":"/     let op = reader.read_operator();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":5716,"byte_end":5756,"line_start":92,"line_end":92,"column_start":5,"column_end":45}},{"value":"/     println!(\"{:?}\", op)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":5761,"byte_end":5789,"line_start":93,"line_end":93,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":5794,"byte_end":5799,"line_start":94,"line_end":94,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":5804,"byte_end":5811,"line_start":95,"line_end":95,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":6062,"byte_end":6077,"line_start":105,"line_end":105,"column_start":12,"column_end":27},"name":"new_with_offset","qualname":"<BinaryReader>::new_with_offset","value":"pub fn new_with_offset(&[u8], usize) -> BinaryReader","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `BinaryReader` with an explicit starting offset.\n","sig":null,"attributes":[{"value":"/ Constructs a `BinaryReader` with an explicit starting offset.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":5985,"byte_end":6050,"line_start":104,"line_end":104,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":6264,"byte_end":6281,"line_start":113,"line_end":113,"column_start":12,"column_end":29},"name":"original_position","qualname":"<BinaryReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":6438,"byte_end":6443,"line_start":118,"line_end":118,"column_start":12,"column_end":17},"name":"range","qualname":"<BinaryReader>::range","value":"pub fn range(&Self) -> Range","parent":null,"children":[],"decl_id":null,"docs":" Returns a range from the starting offset to the end of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns a range from the starting offset to the end of the buffer.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":6356,"byte_end":6426,"line_start":117,"line_end":117,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":8116,"byte_end":8125,"line_start":179,"line_end":179,"column_start":12,"column_end":21},"name":"read_type","qualname":"<BinaryReader>::read_type","value":"pub fn read_type(&mut Self) -> Result<Type>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":8811,"byte_end":8827,"line_start":199,"line_end":199,"column_start":12,"column_end":28},"name":"read_local_count","qualname":"<BinaryReader>::read_local_count","value":"pub fn read_local_count(&mut Self) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Read a `count` indicating the number of times to call `read_local_decl`.\n","sig":null,"attributes":[{"value":"/ Read a `count` indicating the number of times to call `read_local_decl`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":8723,"byte_end":8799,"line_start":198,"line_end":198,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":9262,"byte_end":9277,"line_start":211,"line_end":211,"column_start":12,"column_end":27},"name":"read_local_decl","qualname":"<BinaryReader>::read_local_decl","value":"pub fn read_local_decl(&mut Self, &mut usize) -> Result<(u32, Type)>","parent":null,"children":[],"decl_id":null,"docs":" Read a `(count, value_type)` declaration of local variables of the same type.\n","sig":null,"attributes":[{"value":"/ Read a `(count, value_type)` declaration of local variables of the same type.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":9169,"byte_end":9250,"line_start":210,"line_end":210,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":18552,"byte_end":18555,"line_start":458,"line_end":458,"column_start":12,"column_end":15},"name":"eof","qualname":"<BinaryReader>::eof","value":"pub fn eof(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the `BinaryReader` has reached the end of the file.\n","sig":null,"attributes":[{"value":"/ Returns whether the `BinaryReader` has reached the end of the file.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":18469,"byte_end":18540,"line_start":457,"line_end":457,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":18689,"byte_end":18705,"line_start":463,"line_end":463,"column_start":12,"column_end":28},"name":"current_position","qualname":"<BinaryReader>::current_position","value":"pub fn current_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the `BinaryReader`'s current position.\n","sig":null,"attributes":[{"value":"/ Returns the `BinaryReader`'s current position.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":18627,"byte_end":18677,"line_start":462,"line_end":462,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":18833,"byte_end":18848,"line_start":468,"line_end":468,"column_start":12,"column_end":27},"name":"bytes_remaining","qualname":"<BinaryReader>::bytes_remaining","value":"pub fn bytes_remaining(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes remaining in the `BinaryReader`.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes remaining in the `BinaryReader`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":18757,"byte_end":18821,"line_start":467,"line_end":467,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":19140,"byte_end":19150,"line_start":477,"line_end":477,"column_start":12,"column_end":22},"name":"read_bytes","qualname":"<BinaryReader>::read_bytes","value":"pub fn read_bytes(&mut Self, usize) -> Result<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Advances the `BinaryReader` `size` bytes, and returns a slice from the\n current position of `size` length.","sig":null,"attributes":[{"value":"/ Advances the `BinaryReader` `size` bytes, and returns a slice from the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":18920,"byte_end":18994,"line_start":472,"line_end":472,"column_start":5,"column_end":79}},{"value":"/ current position of `size` length.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":18999,"byte_end":19037,"line_start":473,"line_end":473,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":19042,"byte_end":19045,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":19050,"byte_end":19062,"line_start":475,"line_end":475,"column_start":5,"column_end":17}},{"value":"/ If `size` exceeds the remaining length in `BinaryReader`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":19067,"byte_end":19128,"line_start":476,"line_end":476,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":19513,"byte_end":19521,"line_start":487,"line_end":487,"column_start":12,"column_end":20},"name":"read_u32","qualname":"<BinaryReader>::read_u32","value":"pub fn read_u32(&mut Self) -> Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Advances the `BinaryReader` four bytes and returns a `u32`.\n # Errors\n If `BinaryReader` has less than four bytes remaining.\n","sig":null,"attributes":[{"value":"/ Advances the `BinaryReader` four bytes and returns a `u32`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":19359,"byte_end":19422,"line_start":484,"line_end":484,"column_start":5,"column_end":68}},{"value":"/ # Errors","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":19427,"byte_end":19439,"line_start":485,"line_end":485,"column_start":5,"column_end":17}},{"value":"/ If `BinaryReader` has less than four bytes remaining.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":19444,"byte_end":19501,"line_start":486,"line_end":486,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":19960,"byte_end":19968,"line_start":501,"line_end":501,"column_start":12,"column_end":20},"name":"read_u64","qualname":"<BinaryReader>::read_u64","value":"pub fn read_u64(&mut Self) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Advances the `BinaryReader` eight bytes and returns a `u64`.\n # Errors\n If `BinaryReader` has less than eight bytes remaining.\n","sig":null,"attributes":[{"value":"/ Advances the `BinaryReader` eight bytes and returns a `u64`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":19804,"byte_end":19868,"line_start":498,"line_end":498,"column_start":5,"column_end":69}},{"value":"/ # Errors","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":19873,"byte_end":19885,"line_start":499,"line_end":499,"column_start":5,"column_end":17}},{"value":"/ If `BinaryReader` has less than eight bytes remaining.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":19890,"byte_end":19948,"line_start":500,"line_end":500,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":20417,"byte_end":20424,"line_start":516,"line_end":516,"column_start":12,"column_end":19},"name":"read_u8","qualname":"<BinaryReader>::read_u8","value":"pub fn read_u8(&mut Self) -> Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Advances the `BinaryReader` a single byte, and returns the data as\n a `u32`.\n # Errors\n If `BinaryReader` has no bytes remaining.\n","sig":null,"attributes":[{"value":"/ Advances the `BinaryReader` a single byte, and returns the data as","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":20251,"byte_end":20321,"line_start":512,"line_end":512,"column_start":5,"column_end":75}},{"value":"/ a `u32`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":20326,"byte_end":20338,"line_start":513,"line_end":513,"column_start":5,"column_end":17}},{"value":"/ # Errors","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":20343,"byte_end":20355,"line_start":514,"line_end":514,"column_start":5,"column_end":17}},{"value":"/ If `BinaryReader` has no bytes remaining.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":20360,"byte_end":20405,"line_start":515,"line_end":515,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":20842,"byte_end":20853,"line_start":528,"line_end":528,"column_start":12,"column_end":23},"name":"read_var_u8","qualname":"<BinaryReader>::read_var_u8","value":"pub fn read_var_u8(&mut Self) -> Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Advances the `BinaryReader` up to two bytes to parse a variable\n length integer as a `u8`.\n # Errors\n If `BinaryReader` has less than one or two bytes remaining, or the\n integer is larger than eight bits.\n","sig":null,"attributes":[{"value":"/ Advances the `BinaryReader` up to two bytes to parse a variable","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":20594,"byte_end":20661,"line_start":523,"line_end":523,"column_start":5,"column_end":72}},{"value":"/ length integer as a `u8`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":20666,"byte_end":20695,"line_start":524,"line_end":524,"column_start":5,"column_end":34}},{"value":"/ # Errors","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":20700,"byte_end":20712,"line_start":525,"line_end":525,"column_start":5,"column_end":17}},{"value":"/ If `BinaryReader` has less than one or two bytes remaining, or the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":20717,"byte_end":20787,"line_start":526,"line_end":526,"column_start":5,"column_end":75}},{"value":"/ integer is larger than eight bits.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":20792,"byte_end":20830,"line_start":527,"line_end":527,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":21562,"byte_end":21574,"line_start":550,"line_end":550,"column_start":12,"column_end":24},"name":"read_var_u32","qualname":"<BinaryReader>::read_var_u32","value":"pub fn read_var_u32(&mut Self) -> Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Advances the `BinaryReader` up to four bytes to parse a variable\n length integer as a `u32`.\n # Errors\n If `BinaryReader` has less than one or up to four bytes remaining, or\n the integer is larger than 32 bits.\n","sig":null,"attributes":[{"value":"/ Advances the `BinaryReader` up to four bytes to parse a variable","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":21308,"byte_end":21376,"line_start":545,"line_end":545,"column_start":5,"column_end":73}},{"value":"/ length integer as a `u32`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":21381,"byte_end":21411,"line_start":546,"line_end":546,"column_start":5,"column_end":35}},{"value":"/ # Errors","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":21416,"byte_end":21428,"line_start":547,"line_end":547,"column_start":5,"column_end":17}},{"value":"/ If `BinaryReader` has less than one or up to four bytes remaining, or","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":21433,"byte_end":21506,"line_start":548,"line_end":548,"column_start":5,"column_end":78}},{"value":"/ the integer is larger than 32 bits.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":21511,"byte_end":21550,"line_start":549,"line_end":549,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":22635,"byte_end":22646,"line_start":582,"line_end":582,"column_start":12,"column_end":23},"name":"skip_var_32","qualname":"<BinaryReader>::skip_var_32","value":"pub fn skip_var_32(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Advances the `BinaryReader` up to four bytes over a variable length 32\n bit integer, discarding the result.\n # Errors\n If `BinaryReader` has less than one or up to four bytes remaining, or\n the integer is larger than 32 bits.\n","sig":null,"attributes":[{"value":"/ Advances the `BinaryReader` up to four bytes over a variable length 32","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":22366,"byte_end":22440,"line_start":577,"line_end":577,"column_start":5,"column_end":79}},{"value":"/ bit integer, discarding the result.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":22445,"byte_end":22484,"line_start":578,"line_end":578,"column_start":5,"column_end":44}},{"value":"/ # Errors","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":22489,"byte_end":22501,"line_start":579,"line_end":579,"column_start":5,"column_end":17}},{"value":"/ If `BinaryReader` has less than one or up to four bytes remaining, or","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":22506,"byte_end":22579,"line_start":580,"line_end":580,"column_start":5,"column_end":78}},{"value":"/ the integer is larger than 32 bits.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":22584,"byte_end":22623,"line_start":581,"line_end":581,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":23021,"byte_end":23030,"line_start":596,"line_end":596,"column_start":12,"column_end":21},"name":"skip_type","qualname":"<BinaryReader>::skip_type","value":"pub fn skip_type(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Alias method for `BinaryReader::skip_var_u32`.\n","sig":null,"attributes":[{"value":"/ Alias method for `BinaryReader::skip_var_u32`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":22959,"byte_end":23009,"line_start":595,"line_end":595,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":23253,"byte_end":23263,"line_start":603,"line_end":603,"column_start":12,"column_end":22},"name":"skip_bytes","qualname":"<BinaryReader>::skip_bytes","value":"pub fn skip_bytes(&mut Self, usize) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Advances the `BinaryReader` `len` bytes, skipping the result.\n # Errors\n If `BinaryReader` has less than `len` bytes remaining.\n","sig":null,"attributes":[{"value":"/ Advances the `BinaryReader` `len` bytes, skipping the result.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":23096,"byte_end":23161,"line_start":600,"line_end":600,"column_start":5,"column_end":70}},{"value":"/ # Errors","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":23166,"byte_end":23178,"line_start":601,"line_end":601,"column_start":5,"column_end":17}},{"value":"/ If `BinaryReader` has less than `len` bytes remaining.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":23183,"byte_end":23241,"line_start":602,"line_end":602,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":23720,"byte_end":23731,"line_start":615,"line_end":615,"column_start":12,"column_end":23},"name":"skip_string","qualname":"<BinaryReader>::skip_string","value":"pub fn skip_string(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Advances the `BinaryReader` past a WebAssembly string. This method does\n not perform any utf-8 validation.\n # Errors\n If `BinaryReader` has less than four bytes, the string's length exceeds\n the remaining bytes, or the string length\n exceeds `limits::MAX_WASM_STRING_SIZE`.\n","sig":null,"attributes":[{"value":"/ Advances the `BinaryReader` past a WebAssembly string. This method does","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":23396,"byte_end":23471,"line_start":609,"line_end":609,"column_start":5,"column_end":80}},{"value":"/ not perform any utf-8 validation.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":23476,"byte_end":23513,"line_start":610,"line_end":610,"column_start":5,"column_end":42}},{"value":"/ # Errors","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":23518,"byte_end":23530,"line_start":611,"line_end":611,"column_start":5,"column_end":17}},{"value":"/ If `BinaryReader` has less than four bytes, the string's length exceeds","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":23535,"byte_end":23610,"line_start":612,"line_end":612,"column_start":5,"column_end":80}},{"value":"/ the remaining bytes, or the string length","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":23615,"byte_end":23660,"line_start":613,"line_end":613,"column_start":5,"column_end":50}},{"value":"/ exceeds `limits::MAX_WASM_STRING_SIZE`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":23665,"byte_end":23708,"line_start":614,"line_end":614,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":24575,"byte_end":24587,"line_start":639,"line_end":639,"column_start":12,"column_end":24},"name":"read_var_i32","qualname":"<BinaryReader>::read_var_i32","value":"pub fn read_var_i32(&mut Self) -> Result<i32>","parent":null,"children":[],"decl_id":null,"docs":" Advances the `BinaryReader` up to four bytes to parse a variable\n length integer as a `i32`.\n # Errors\n If `BinaryReader` has less than one or up to four bytes remaining, or\n the integer is larger than 32 bits.\n","sig":null,"attributes":[{"value":"/ Advances the `BinaryReader` up to four bytes to parse a variable","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":24321,"byte_end":24389,"line_start":634,"line_end":634,"column_start":5,"column_end":73}},{"value":"/ length integer as a `i32`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":24394,"byte_end":24424,"line_start":635,"line_end":635,"column_start":5,"column_end":35}},{"value":"/ # Errors","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":24429,"byte_end":24441,"line_start":636,"line_end":636,"column_start":5,"column_end":17}},{"value":"/ If `BinaryReader` has less than one or up to four bytes remaining, or","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":24446,"byte_end":24519,"line_start":637,"line_end":637,"column_start":5,"column_end":78}},{"value":"/ the integer is larger than 32 bits.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":24524,"byte_end":24563,"line_start":638,"line_end":638,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":25964,"byte_end":25976,"line_start":676,"line_end":676,"column_start":12,"column_end":24},"name":"read_var_s33","qualname":"<BinaryReader>::read_var_s33","value":"pub fn read_var_s33(&mut Self) -> Result<i64>","parent":null,"children":[],"decl_id":null,"docs":" Advances the `BinaryReader` up to four bytes to parse a variable\n length integer as a signed 33 bit integer, returned as a `i64`.\n # Errors\n If `BinaryReader` has less than one or up to five bytes remaining, or\n the integer is larger than 33 bits.\n","sig":null,"attributes":[{"value":"/ Advances the `BinaryReader` up to four bytes to parse a variable","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":25673,"byte_end":25741,"line_start":671,"line_end":671,"column_start":5,"column_end":73}},{"value":"/ length integer as a signed 33 bit integer, returned as a `i64`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":25746,"byte_end":25813,"line_start":672,"line_end":672,"column_start":5,"column_end":72}},{"value":"/ # Errors","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":25818,"byte_end":25830,"line_start":673,"line_end":673,"column_start":5,"column_end":17}},{"value":"/ If `BinaryReader` has less than one or up to five bytes remaining, or","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":25835,"byte_end":25908,"line_start":674,"line_end":674,"column_start":5,"column_end":78}},{"value":"/ the integer is larger than 33 bits.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":25913,"byte_end":25952,"line_start":675,"line_end":675,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":27348,"byte_end":27360,"line_start":713,"line_end":713,"column_start":12,"column_end":24},"name":"read_var_i64","qualname":"<BinaryReader>::read_var_i64","value":"pub fn read_var_i64(&mut Self) -> Result<i64>","parent":null,"children":[],"decl_id":null,"docs":" Advances the `BinaryReader` up to eight bytes to parse a variable\n length integer as a 64 bit integer, returned as a `i64`.\n # Errors\n If `BinaryReader` has less than one or up to eight bytes remaining, or\n the integer is larger than 64 bits.\n","sig":null,"attributes":[{"value":"/ Advances the `BinaryReader` up to eight bytes to parse a variable","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":27062,"byte_end":27131,"line_start":708,"line_end":708,"column_start":5,"column_end":74}},{"value":"/ length integer as a 64 bit integer, returned as a `i64`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":27136,"byte_end":27196,"line_start":709,"line_end":709,"column_start":5,"column_end":65}},{"value":"/ # Errors","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":27201,"byte_end":27213,"line_start":710,"line_end":710,"column_start":5,"column_end":17}},{"value":"/ If `BinaryReader` has less than one or up to eight bytes remaining, or","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":27218,"byte_end":27292,"line_start":711,"line_end":711,"column_start":5,"column_end":79}},{"value":"/ the integer is larger than 64 bits.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":27297,"byte_end":27336,"line_start":712,"line_end":712,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":28558,"byte_end":28566,"line_start":744,"line_end":744,"column_start":12,"column_end":20},"name":"read_f32","qualname":"<BinaryReader>::read_f32","value":"pub fn read_f32(&mut Self) -> Result<Ieee32>","parent":null,"children":[],"decl_id":null,"docs":" Advances the `BinaryReader` up to four bytes to parse a variable\n length integer as a 32 bit floating point integer, returned as `Ieee32`.\n # Errors\n If `BinaryReader` has less than one or up to four bytes remaining, or\n the integer is larger than 32 bits.\n","sig":null,"attributes":[{"value":"/ Advances the `BinaryReader` up to four bytes to parse a variable","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":28258,"byte_end":28326,"line_start":739,"line_end":739,"column_start":5,"column_end":73}},{"value":"/ length integer as a 32 bit floating point integer, returned as `Ieee32`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":28331,"byte_end":28407,"line_start":740,"line_end":740,"column_start":5,"column_end":81}},{"value":"/ # Errors","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":28412,"byte_end":28424,"line_start":741,"line_end":741,"column_start":5,"column_end":17}},{"value":"/ If `BinaryReader` has less than one or up to four bytes remaining, or","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":28429,"byte_end":28502,"line_start":742,"line_end":742,"column_start":5,"column_end":78}},{"value":"/ the integer is larger than 32 bits.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":28507,"byte_end":28546,"line_start":743,"line_end":743,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":28973,"byte_end":28981,"line_start":754,"line_end":754,"column_start":12,"column_end":20},"name":"read_f64","qualname":"<BinaryReader>::read_f64","value":"pub fn read_f64(&mut Self) -> Result<Ieee64>","parent":null,"children":[],"decl_id":null,"docs":" Advances the `BinaryReader` up to four bytes to parse a variable\n length integer as a 32 bit floating point integer, returned as `Ieee32`.\n # Errors\n If `BinaryReader` has less than one or up to four bytes remaining, or\n the integer is larger than 32 bits.\n","sig":null,"attributes":[{"value":"/ Advances the `BinaryReader` up to four bytes to parse a variable","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":28673,"byte_end":28741,"line_start":749,"line_end":749,"column_start":5,"column_end":73}},{"value":"/ length integer as a 32 bit floating point integer, returned as `Ieee32`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":28746,"byte_end":28822,"line_start":750,"line_end":750,"column_start":5,"column_end":81}},{"value":"/ # Errors","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":28827,"byte_end":28839,"line_start":751,"line_end":751,"column_start":5,"column_end":17}},{"value":"/ If `BinaryReader` has less than one or up to four bytes remaining, or","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":28844,"byte_end":28917,"line_start":752,"line_end":752,"column_start":5,"column_end":78}},{"value":"/ the integer is larger than 32 bits.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":28922,"byte_end":28961,"line_start":753,"line_end":753,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":29395,"byte_end":29406,"line_start":764,"line_end":764,"column_start":12,"column_end":23},"name":"read_string","qualname":"<BinaryReader>::read_string","value":"pub fn read_string(&mut Self) -> Result<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Reads a WebAssembly string from the module.\n # Errors\n If `BinaryReader` has less than up to four bytes remaining, the string's\n length exceeds the remaining bytes, the string's length exceeds\n `limits::MAX_WASM_STRING_SIZE`, or the string contains invalid utf-8.\n","sig":null,"attributes":[{"value":"/ Reads a WebAssembly string from the module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":29088,"byte_end":29135,"line_start":759,"line_end":759,"column_start":5,"column_end":52}},{"value":"/ # Errors","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":29140,"byte_end":29152,"line_start":760,"line_end":760,"column_start":5,"column_end":17}},{"value":"/ If `BinaryReader` has less than up to four bytes remaining, the string's","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":29157,"byte_end":29233,"line_start":761,"line_end":761,"column_start":5,"column_end":81}},{"value":"/ length exceeds the remaining bytes, the string's length exceeds","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":29238,"byte_end":29305,"line_start":762,"line_end":762,"column_start":5,"column_end":72}},{"value":"/ `limits::MAX_WASM_STRING_SIZE`, or the string contains invalid utf-8.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":29310,"byte_end":29383,"line_start":763,"line_end":763,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":39283,"byte_end":39296,"line_start":1021,"line_end":1021,"column_start":12,"column_end":25},"name":"read_operator","qualname":"<BinaryReader>::read_operator","value":"pub fn read_operator(&mut Self) -> Result<Operator>","parent":null,"children":[],"decl_id":null,"docs":" Reads the next available `Operator`.\n # Errors\n If `BinaryReader` has less bytes remaining than required to parse\n the `Operator`.\n","sig":null,"attributes":[{"value":"/ Reads the next available `Operator`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":39116,"byte_end":39156,"line_start":1017,"line_end":1017,"column_start":5,"column_end":45}},{"value":"/ # Errors","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":39161,"byte_end":39173,"line_start":1018,"line_end":1018,"column_start":5,"column_end":17}},{"value":"/ If `BinaryReader` has less bytes remaining than required to parse","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":39178,"byte_end":39247,"line_start":1019,"line_end":1019,"column_start":5,"column_end":74}},{"value":"/ the `Operator`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":39252,"byte_end":39271,"line_start":1020,"line_end":1020,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":66833,"byte_end":66836,"line_start":1771,"line_end":1771,"column_start":12,"column_end":15},"name":"len","qualname":"<BrTable>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of `br_table` entries, not including the default\n label\n","sig":null,"attributes":[{"value":"/ Returns the number of `br_table` entries, not including the default","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":66736,"byte_end":66807,"line_start":1769,"line_end":1769,"column_start":5,"column_end":76}},{"value":"/ label","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":66812,"byte_end":66821,"line_start":1770,"line_end":1770,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":66976,"byte_end":66984,"line_start":1776,"line_end":1776,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<BrTable>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether `BrTable` doesn't have any labels apart from the default one.\n","sig":null,"attributes":[{"value":"/ Returns whether `BrTable` doesn't have any labels apart from the default one.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":66883,"byte_end":66964,"line_start":1775,"line_end":1775,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":67599,"byte_end":67609,"line_start":1795,"line_end":1795,"column_start":12,"column_end":22},"name":"read_table","qualname":"<BrTable>::read_table","value":"pub fn read_table(&Self) -> Result<(Box<[u32]>, u32)>","parent":null,"children":[],"decl_id":null,"docs":" Reads br_table entries.","sig":null,"attributes":[{"value":"/ Reads br_table entries.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":67037,"byte_end":67064,"line_start":1780,"line_end":1780,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":67069,"byte_end":67072,"line_start":1781,"line_end":1781,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":67077,"byte_end":67091,"line_start":1782,"line_end":1782,"column_start":5,"column_end":19}},{"value":"/ ```rust","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":67096,"byte_end":67107,"line_start":1783,"line_end":1783,"column_start":5,"column_end":16}},{"value":"/ let buf = vec![0x0e, 0x02, 0x01, 0x02, 0x00];","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":67112,"byte_end":67161,"line_start":1784,"line_end":1784,"column_start":5,"column_end":54}},{"value":"/ let mut reader = wasmparser::BinaryReader::new(&buf);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":67166,"byte_end":67223,"line_start":1785,"line_end":1785,"column_start":5,"column_end":62}},{"value":"/ let op = reader.read_operator().unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":67228,"byte_end":67273,"line_start":1786,"line_end":1786,"column_start":5,"column_end":50}},{"value":"/ if let wasmparser::Operator::BrTable { ref table } = op {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":67278,"byte_end":67339,"line_start":1787,"line_end":1787,"column_start":5,"column_end":66}},{"value":"/     let br_table_depths = table.read_table().unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":67344,"byte_end":67402,"line_start":1788,"line_end":1788,"column_start":5,"column_end":63}},{"value":"/     assert!(br_table_depths.0 == vec![1,2].into_boxed_slice() &&","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":67407,"byte_end":67475,"line_start":1789,"line_end":1789,"column_start":5,"column_end":73}},{"value":"/             br_table_depths.1 == 0);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":67480,"byte_end":67520,"line_start":1790,"line_end":1790,"column_start":5,"column_end":45}},{"value":"/ } else {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":67525,"byte_end":67537,"line_start":1791,"line_end":1791,"column_start":5,"column_end":17}},{"value":"/     unreachable!();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":67542,"byte_end":67565,"line_start":1792,"line_end":1792,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":67570,"byte_end":67575,"line_start":1793,"line_end":1793,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":67580,"byte_end":67587,"line_start":1794,"line_end":1794,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1861},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":68520,"byte_end":68535,"line_start":1825,"line_end":1825,"column_start":12,"column_end":27},"name":"BrTableIterator","qualname":"::binary_reader::BrTableIterator","value":"BrTableIterator {  }","parent":null,"children":[{"krate":0,"index":1863}],"decl_id":null,"docs":" Iterator for `BrTable`.","sig":null,"attributes":[{"value":"/ Iterator for `BrTable`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":68108,"byte_end":68135,"line_start":1811,"line_end":1811,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":68136,"byte_end":68139,"line_start":1812,"line_end":1812,"column_start":1,"column_end":4}},{"value":"/ #Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":68140,"byte_end":68153,"line_start":1813,"line_end":1813,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":68154,"byte_end":68165,"line_start":1814,"line_end":1814,"column_start":1,"column_end":12}},{"value":"/ let buf = vec![0x0e, 0x02, 0x01, 0x02, 0x00];","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":68166,"byte_end":68215,"line_start":1815,"line_end":1815,"column_start":1,"column_end":50}},{"value":"/ let mut reader = wasmparser::BinaryReader::new(&buf);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":68216,"byte_end":68273,"line_start":1816,"line_end":1816,"column_start":1,"column_end":58}},{"value":"/ let op = reader.read_operator().unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":68274,"byte_end":68319,"line_start":1817,"line_end":1817,"column_start":1,"column_end":46}},{"value":"/ if let wasmparser::Operator::BrTable { ref table } = op {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":68320,"byte_end":68381,"line_start":1818,"line_end":1818,"column_start":1,"column_end":62}},{"value":"/     for depth in table {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":68382,"byte_end":68410,"line_start":1819,"line_end":1819,"column_start":1,"column_end":29}},{"value":"/         println!(\"BrTable depth: {}\", depth);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":68411,"byte_end":68460,"line_start":1820,"line_end":1820,"column_start":1,"column_end":50}},{"value":"/     }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":68461,"byte_end":68470,"line_start":1821,"line_end":1821,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":68471,"byte_end":68476,"line_start":1822,"line_end":1822,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":68477,"byte_end":68484,"line_start":1823,"line_end":1823,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":200},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":71524,"byte_end":71532,"line_start":22,"line_end":22,"column_start":11,"column_end":19},"name":"WasmType","qualname":"::module_resources::WasmType","value":"WasmType: PartialEq<crate::Type> + PartialEq + Eq","parent":null,"children":[{"krate":0,"index":201}],"decl_id":null,"docs":" Types that qualify as Wasm types for validation purposes.","sig":null,"attributes":[{"value":"/ Types that qualify as Wasm types for validation purposes.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":71348,"byte_end":71409,"line_start":18,"line_end":18,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":71410,"byte_end":71413,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Must be comparable with `wasmparser` given Wasm types and","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":71414,"byte_end":71475,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ must be comparable to themselves.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":71476,"byte_end":71513,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":71757,"byte_end":71771,"line_start":28,"line_end":28,"column_start":8,"column_end":22},"name":"to_parser_type","qualname":"::module_resources::WasmType::to_parser_type","value":"pub fn to_parser_type(&Self) -> crate::Type","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":" Converts the custom type into a `wasmparser` known type.","sig":null,"attributes":[{"value":"/ Converts the custom type into a `wasmparser` known type.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":71580,"byte_end":71640,"line_start":23,"line_end":23,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":71645,"byte_end":71648,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":71653,"byte_end":71663,"line_start":25,"line_end":25,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":71668,"byte_end":71671,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ This interface is required as bridge until transitioning is complete.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":71676,"byte_end":71749,"line_start":27,"line_end":27,"column_start":5,"column_end":78}}]},{"kind":"Trait","id":{"krate":0,"index":202},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":71808,"byte_end":71819,"line_start":31,"line_end":31,"column_start":11,"column_end":22},"name":"WasmTypeDef","qualname":"::module_resources::WasmTypeDef","value":"WasmTypeDef","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":203},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":71831,"byte_end":71839,"line_start":32,"line_end":32,"column_start":10,"column_end":18},"name":"FuncType","qualname":"::module_resources::WasmTypeDef::FuncType","value":"type FuncType: WasmFuncType;","parent":{"krate":0,"index":202},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":71863,"byte_end":71870,"line_start":34,"line_end":34,"column_start":8,"column_end":15},"name":"as_func","qualname":"::module_resources::WasmTypeDef::as_func","value":"pub fn as_func(&Self) -> Option<&Self::FuncType>","parent":{"krate":0,"index":202},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":205},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":71990,"byte_end":72002,"line_start":38,"line_end":38,"column_start":11,"column_end":23},"name":"WasmFuncType","qualname":"::module_resources::WasmFuncType","value":"WasmFuncType","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210}],"decl_id":null,"docs":" Types that qualify as Wasm function types for validation purposes.\n","sig":null,"attributes":[{"value":"/ Types that qualify as Wasm function types for validation purposes.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":71909,"byte_end":71979,"line_start":37,"line_end":37,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":206},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":72065,"byte_end":72069,"line_start":40,"line_end":40,"column_start":10,"column_end":14},"name":"Type","qualname":"::module_resources::WasmFuncType::Type","value":"type Type: WasmType;","parent":{"krate":0,"index":205},"children":[],"decl_id":null,"docs":" A type that is comparable with Wasm types.\n","sig":null,"attributes":[{"value":"/ A type that is comparable with Wasm types.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":72009,"byte_end":72055,"line_start":39,"line_end":39,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":72132,"byte_end":72142,"line_start":43,"line_end":43,"column_start":8,"column_end":18},"name":"len_inputs","qualname":"::module_resources::WasmFuncType::len_inputs","value":"pub fn len_inputs(&Self) -> usize","parent":{"krate":0,"index":205},"children":[],"decl_id":null,"docs":" Returns the number of input types.\n","sig":null,"attributes":[{"value":"/ Returns the number of input types.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":72086,"byte_end":72124,"line_start":42,"line_end":42,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":72211,"byte_end":72222,"line_start":45,"line_end":45,"column_start":8,"column_end":19},"name":"len_outputs","qualname":"::module_resources::WasmFuncType::len_outputs","value":"pub fn len_outputs(&Self) -> usize","parent":{"krate":0,"index":205},"children":[],"decl_id":null,"docs":" Returns the number of output types.\n","sig":null,"attributes":[{"value":"/ Returns the number of output types.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":72164,"byte_end":72203,"line_start":44,"line_end":44,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":72471,"byte_end":72479,"line_start":52,"line_end":52,"column_start":8,"column_end":16},"name":"input_at","qualname":"::module_resources::WasmFuncType::input_at","value":"pub fn input_at(&Self, u32) -> Option<&Self::Type>","parent":{"krate":0,"index":205},"children":[],"decl_id":null,"docs":" Returns the type at given index if any.","sig":null,"attributes":[{"value":"/ Returns the type at given index if any.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":72244,"byte_end":72287,"line_start":46,"line_end":46,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":72292,"byte_end":72295,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":72300,"byte_end":72310,"line_start":48,"line_end":48,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":72315,"byte_end":72318,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ The returned type may be wrapped by the user crate and thus","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":72323,"byte_end":72386,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ the actually returned type only has to be comparable to a Wasm type.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":72391,"byte_end":72463,"line_start":51,"line_end":51,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":72751,"byte_end":72760,"line_start":59,"line_end":59,"column_start":8,"column_end":17},"name":"output_at","qualname":"::module_resources::WasmFuncType::output_at","value":"pub fn output_at(&Self, u32) -> Option<&Self::Type>","parent":{"krate":0,"index":205},"children":[],"decl_id":null,"docs":" Returns the type at given index if any.","sig":null,"attributes":[{"value":"/ Returns the type at given index if any.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":72524,"byte_end":72567,"line_start":53,"line_end":53,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":72572,"byte_end":72575,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":72580,"byte_end":72590,"line_start":55,"line_end":55,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":72595,"byte_end":72598,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The returned type may be wrapped by the user crate and thus","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":72603,"byte_end":72666,"line_start":57,"line_end":57,"column_start":5,"column_end":68}},{"value":"/ the actually returned type only has to be comparable to a Wasm type.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":72671,"byte_end":72743,"line_start":58,"line_end":58,"column_start":5,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":277},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":77313,"byte_end":77326,"line_start":245,"line_end":245,"column_start":11,"column_end":24},"name":"WasmTableType","qualname":"::module_resources::WasmTableType","value":"WasmTableType","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281}],"decl_id":null,"docs":" Types that qualify as Wasm table types for validation purposes.\n","sig":null,"attributes":[{"value":"/ Types that qualify as Wasm table types for validation purposes.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":77235,"byte_end":77302,"line_start":244,"line_end":244,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":278},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":77389,"byte_end":77393,"line_start":247,"line_end":247,"column_start":10,"column_end":14},"name":"Type","qualname":"::module_resources::WasmTableType::Type","value":"type Type: WasmType;","parent":{"krate":0,"index":277},"children":[],"decl_id":null,"docs":" A type that is comparable with Wasm types.\n","sig":null,"attributes":[{"value":"/ A type that is comparable with Wasm types.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":77333,"byte_end":77379,"line_start":246,"line_end":246,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":77460,"byte_end":77472,"line_start":250,"line_end":250,"column_start":8,"column_end":20},"name":"element_type","qualname":"::module_resources::WasmTableType::element_type","value":"pub fn element_type(&Self) -> &Self::Type","parent":{"krate":0,"index":277},"children":[],"decl_id":null,"docs":" Returns the element type of the table.\n","sig":null,"attributes":[{"value":"/ Returns the element type of the table.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":77410,"byte_end":77452,"line_start":249,"line_end":249,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":77551,"byte_end":77564,"line_start":252,"line_end":252,"column_start":8,"column_end":21},"name":"initial_limit","qualname":"::module_resources::WasmTableType::initial_limit","value":"pub fn initial_limit(&Self) -> u32","parent":{"krate":0,"index":277},"children":[],"decl_id":null,"docs":" Returns the initial limit of the table.\n","sig":null,"attributes":[{"value":"/ Returns the initial limit of the table.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":77500,"byte_end":77543,"line_start":251,"line_end":251,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":77642,"byte_end":77655,"line_start":254,"line_end":254,"column_start":8,"column_end":21},"name":"maximum_limit","qualname":"::module_resources::WasmTableType::maximum_limit","value":"pub fn maximum_limit(&Self) -> Option<u32>","parent":{"krate":0,"index":277},"children":[],"decl_id":null,"docs":" Returns the maximum limit of the table if any.\n","sig":null,"attributes":[{"value":"/ Returns the maximum limit of the table if any.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":77584,"byte_end":77634,"line_start":253,"line_end":253,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":282},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":77761,"byte_end":77775,"line_start":258,"line_end":258,"column_start":11,"column_end":25},"name":"WasmMemoryType","qualname":"::module_resources::WasmMemoryType","value":"WasmMemoryType","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285}],"decl_id":null,"docs":" Types that qualify as Wasm memory types for validation purposes.\n","sig":null,"attributes":[{"value":"/ Types that qualify as Wasm memory types for validation purposes.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":77682,"byte_end":77750,"line_start":257,"line_end":257,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":77840,"byte_end":77849,"line_start":260,"line_end":260,"column_start":8,"column_end":17},"name":"is_shared","qualname":"::module_resources::WasmMemoryType::is_shared","value":"pub fn is_shared(&Self) -> bool","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":" Returns `true` if the linear memory is shared.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the linear memory is shared.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":77782,"byte_end":77832,"line_start":259,"line_end":259,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":77929,"byte_end":77942,"line_start":262,"line_end":262,"column_start":8,"column_end":21},"name":"initial_limit","qualname":"::module_resources::WasmMemoryType::initial_limit","value":"pub fn initial_limit(&Self) -> u32","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":" Returns the initial limit of the linear memory.\n","sig":null,"attributes":[{"value":"/ Returns the initial limit of the linear memory.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":77870,"byte_end":77921,"line_start":261,"line_end":261,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":78028,"byte_end":78041,"line_start":264,"line_end":264,"column_start":8,"column_end":21},"name":"maximum_limit","qualname":"::module_resources::WasmMemoryType::maximum_limit","value":"pub fn maximum_limit(&Self) -> Option<u32>","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":" Returns the maximum limit of the linear memory if any.\n","sig":null,"attributes":[{"value":"/ Returns the maximum limit of the linear memory if any.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":77962,"byte_end":78020,"line_start":263,"line_end":263,"column_start":5,"column_end":63}}]},{"kind":"Trait","id":{"krate":0,"index":286},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":78147,"byte_end":78161,"line_start":268,"line_end":268,"column_start":11,"column_end":25},"name":"WasmGlobalType","qualname":"::module_resources::WasmGlobalType","value":"WasmGlobalType","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289}],"decl_id":null,"docs":" Types that qualify as Wasm global types for validation purposes.\n","sig":null,"attributes":[{"value":"/ Types that qualify as Wasm global types for validation purposes.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":78068,"byte_end":78136,"line_start":267,"line_end":267,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":287},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":78224,"byte_end":78228,"line_start":270,"line_end":270,"column_start":10,"column_end":14},"name":"Type","qualname":"::module_resources::WasmGlobalType::Type","value":"type Type: WasmType;","parent":{"krate":0,"index":286},"children":[],"decl_id":null,"docs":" A type that is comparable with Wasm types.\n","sig":null,"attributes":[{"value":"/ A type that is comparable with Wasm types.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":78168,"byte_end":78214,"line_start":269,"line_end":269,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":78306,"byte_end":78316,"line_start":273,"line_end":273,"column_start":8,"column_end":18},"name":"is_mutable","qualname":"::module_resources::WasmGlobalType::is_mutable","value":"pub fn is_mutable(&Self) -> bool","parent":{"krate":0,"index":286},"children":[],"decl_id":null,"docs":" Returns `true` if the global variable is mutable.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the global variable is mutable.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":78245,"byte_end":78298,"line_start":272,"line_end":272,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":78397,"byte_end":78409,"line_start":275,"line_end":275,"column_start":8,"column_end":20},"name":"content_type","qualname":"::module_resources::WasmGlobalType::content_type","value":"pub fn content_type(&Self) -> &Self::Type","parent":{"krate":0,"index":286},"children":[],"decl_id":null,"docs":" Returns the content type of the global variable.\n","sig":null,"attributes":[{"value":"/ Returns the content type of the global variable.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":78337,"byte_end":78389,"line_start":274,"line_end":274,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":290},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":78820,"byte_end":78839,"line_start":286,"line_end":286,"column_start":11,"column_end":30},"name":"WasmModuleResources","qualname":"::module_resources::WasmModuleResources","value":"WasmModuleResources","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303}],"decl_id":null,"docs":" Types  that qualify as Wasm valiation database.","sig":null,"attributes":[{"value":"/ Types  that qualify as Wasm valiation database.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":78436,"byte_end":78487,"line_start":278,"line_end":278,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":78488,"byte_end":78491,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":78492,"byte_end":78502,"line_start":280,"line_end":280,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":78503,"byte_end":78506,"line_start":281,"line_end":281,"column_start":1,"column_end":4}},{"value":"/ The `wasmparser` crate provides a builtin validation framework but allows","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":78507,"byte_end":78584,"line_start":282,"line_end":282,"column_start":1,"column_end":78}},{"value":"/ users of this crate to also feed the parsed Wasm into their own data","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":78585,"byte_end":78657,"line_start":283,"line_end":283,"column_start":1,"column_end":73}},{"value":"/ structure while parsing and also validate at the same time without","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":78658,"byte_end":78728,"line_start":284,"line_end":284,"column_start":1,"column_end":71}},{"value":"/ the need of an additional parsing or validation step or copying data around.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":78729,"byte_end":78809,"line_start":285,"line_end":285,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":291},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":78898,"byte_end":78905,"line_start":288,"line_end":288,"column_start":10,"column_end":17},"name":"TypeDef","qualname":"::module_resources::WasmModuleResources::TypeDef","value":"type TypeDef: WasmTypeDef;","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" The function type used for validation.\n","sig":null,"attributes":[{"value":"/ The function type used for validation.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":78846,"byte_end":78888,"line_start":287,"line_end":287,"column_start":5,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":292},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":78973,"byte_end":78982,"line_start":290,"line_end":290,"column_start":10,"column_end":19},"name":"TableType","qualname":"::module_resources::WasmModuleResources::TableType","value":"type TableType: WasmTableType;","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" The table type used for validation.\n","sig":null,"attributes":[{"value":"/ The table type used for validation.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":78924,"byte_end":78963,"line_start":289,"line_end":289,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":293},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":79053,"byte_end":79063,"line_start":292,"line_end":292,"column_start":10,"column_end":20},"name":"MemoryType","qualname":"::module_resources::WasmModuleResources::MemoryType","value":"type MemoryType: WasmMemoryType;","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" The memory type used for validation.\n","sig":null,"attributes":[{"value":"/ The memory type used for validation.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":79003,"byte_end":79043,"line_start":291,"line_end":291,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":294},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":79135,"byte_end":79145,"line_start":294,"line_end":294,"column_start":10,"column_end":20},"name":"GlobalType","qualname":"::module_resources::WasmModuleResources::GlobalType","value":"type GlobalType: WasmGlobalType;","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" The global type used for validation.\n","sig":null,"attributes":[{"value":"/ The global type used for validation.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":79085,"byte_end":79125,"line_start":293,"line_end":293,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":79212,"byte_end":79219,"line_start":297,"line_end":297,"column_start":8,"column_end":15},"name":"type_at","qualname":"::module_resources::WasmModuleResources::type_at","value":"pub fn type_at(&Self, u32) -> Option<&Self::TypeDef>","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" Returns the type at given index.\n","sig":null,"attributes":[{"value":"/ Returns the type at given index.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":79168,"byte_end":79204,"line_start":296,"line_end":296,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":79319,"byte_end":79327,"line_start":299,"line_end":299,"column_start":8,"column_end":16},"name":"table_at","qualname":"::module_resources::WasmModuleResources::table_at","value":"pub fn table_at(&Self, u32) -> Option<&Self::TableType>","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" Returns the table at given index if any.\n","sig":null,"attributes":[{"value":"/ Returns the table at given index if any.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":79267,"byte_end":79311,"line_start":298,"line_end":298,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":79430,"byte_end":79439,"line_start":301,"line_end":301,"column_start":8,"column_end":17},"name":"memory_at","qualname":"::module_resources::WasmModuleResources::memory_at","value":"pub fn memory_at(&Self, u32) -> Option<&Self::MemoryType>","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" Returns the linear memory at given index.\n","sig":null,"attributes":[{"value":"/ Returns the linear memory at given index.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":79377,"byte_end":79422,"line_start":300,"line_end":300,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":79545,"byte_end":79554,"line_start":303,"line_end":303,"column_start":8,"column_end":17},"name":"global_at","qualname":"::module_resources::WasmModuleResources::global_at","value":"pub fn global_at(&Self, u32) -> Option<&Self::GlobalType>","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" Returns the global variable at given index.\n","sig":null,"attributes":[{"value":"/ Returns the global variable at given index.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":79490,"byte_end":79537,"line_start":302,"line_end":302,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":79666,"byte_end":79678,"line_start":305,"line_end":305,"column_start":8,"column_end":20},"name":"func_type_at","qualname":"::module_resources::WasmModuleResources::func_type_at","value":"pub fn func_type_at(&Self, u32)\n-> Option<&<Self::TypeDef as WasmTypeDef>::FuncType>","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" Returns the function signature ID at given index.\n","sig":null,"attributes":[{"value":"/ Returns the function signature ID at given index.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":79605,"byte_end":79658,"line_start":304,"line_end":304,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":79809,"byte_end":79824,"line_start":307,"line_end":307,"column_start":8,"column_end":23},"name":"element_type_at","qualname":"::module_resources::WasmModuleResources::element_type_at","value":"pub fn element_type_at(&Self, u32) -> Option<crate::Type>","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" Returns the element type at the given index.\n","sig":null,"attributes":[{"value":"/ Returns the element type at the given index.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":79753,"byte_end":79801,"line_start":306,"line_end":306,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":79913,"byte_end":79926,"line_start":310,"line_end":310,"column_start":8,"column_end":21},"name":"element_count","qualname":"::module_resources::WasmModuleResources::element_count","value":"pub fn element_count(&Self) -> u32","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" Returns the number of elements.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":79870,"byte_end":79905,"line_start":309,"line_end":309,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":80011,"byte_end":80021,"line_start":312,"line_end":312,"column_start":8,"column_end":18},"name":"data_count","qualname":"::module_resources::WasmModuleResources::data_count","value":"pub fn data_count(&Self) -> u32","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" Returns the number of bytes in the Wasm data section.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes in the Wasm data section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":79946,"byte_end":80003,"line_start":311,"line_end":311,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":80172,"byte_end":80194,"line_start":315,"line_end":315,"column_start":8,"column_end":30},"name":"is_function_referenced","qualname":"::module_resources::WasmModuleResources::is_function_referenced","value":"pub fn is_function_referenced(&Self, u32) -> bool","parent":{"krate":0,"index":290},"children":[],"decl_id":null,"docs":" Returns whether the function index is referenced in the module anywhere\n outside of the start/function sections.\n","sig":null,"attributes":[{"value":"/ Returns whether the function index is referenced in the module anywhere","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":80041,"byte_end":80116,"line_start":313,"line_end":313,"column_start":5,"column_end":80}},{"value":"/ outside of the start/function sections.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":80121,"byte_end":80164,"line_start":314,"line_end":314,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1903},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/operators_validator.rs","byte_start":94784,"byte_end":94807,"line_start":319,"line_end":319,"column_start":12,"column_end":35},"name":"OperatorValidatorConfig","qualname":"::operators_validator::OperatorValidatorConfig","value":"OperatorValidatorConfig { enable_threads, enable_reference_types, enable_simd, enable_bulk_memory, enable_multi_value, enable_tail_call, enable_module_linking }","parent":null,"children":[{"krate":0,"index":1904},{"krate":0,"index":1905},{"krate":0,"index":1906},{"krate":0,"index":1907},{"krate":0,"index":1908},{"krate":0,"index":1909},{"krate":0,"index":1910}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1904},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/operators_validator.rs","byte_start":94818,"byte_end":94832,"line_start":320,"line_end":320,"column_start":9,"column_end":23},"name":"enable_threads","qualname":"::operators_validator::OperatorValidatorConfig::enable_threads","value":"bool","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1905},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/operators_validator.rs","byte_start":94848,"byte_end":94870,"line_start":321,"line_end":321,"column_start":9,"column_end":31},"name":"enable_reference_types","qualname":"::operators_validator::OperatorValidatorConfig::enable_reference_types","value":"bool","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1906},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/operators_validator.rs","byte_start":94886,"byte_end":94897,"line_start":322,"line_end":322,"column_start":9,"column_end":20},"name":"enable_simd","qualname":"::operators_validator::OperatorValidatorConfig::enable_simd","value":"bool","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1907},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/operators_validator.rs","byte_start":94913,"byte_end":94931,"line_start":323,"line_end":323,"column_start":9,"column_end":27},"name":"enable_bulk_memory","qualname":"::operators_validator::OperatorValidatorConfig::enable_bulk_memory","value":"bool","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1908},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/operators_validator.rs","byte_start":94947,"byte_end":94965,"line_start":324,"line_end":324,"column_start":9,"column_end":27},"name":"enable_multi_value","qualname":"::operators_validator::OperatorValidatorConfig::enable_multi_value","value":"bool","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1909},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/operators_validator.rs","byte_start":94981,"byte_end":94997,"line_start":325,"line_end":325,"column_start":9,"column_end":25},"name":"enable_tail_call","qualname":"::operators_validator::OperatorValidatorConfig::enable_tail_call","value":"bool","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1910},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/operators_validator.rs","byte_start":95013,"byte_end":95034,"line_start":326,"line_end":326,"column_start":9,"column_end":30},"name":"enable_module_linking","qualname":"::operators_validator::OperatorValidatorConfig::enable_module_linking","value":"bool","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1921},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":167800,"byte_end":167806,"line_start":20,"line_end":20,"column_start":12,"column_end":18},"name":"Parser","qualname":"::parser::Parser","value":"Parser {  }","parent":null,"children":[{"krate":0,"index":1922},{"krate":0,"index":1923},{"krate":0,"index":1924}],"decl_id":null,"docs":" An incremental parser of a binary WebAssembly module.","sig":null,"attributes":[{"value":"/ An incremental parser of a binary WebAssembly module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":167251,"byte_end":167308,"line_start":10,"line_end":10,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":167309,"byte_end":167312,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type is intended to be used to incrementally parse a WebAssembly module","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":167313,"byte_end":167393,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ as bytes become available for the module. This can also be used to parse","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":167394,"byte_end":167470,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ modules that are already entirely resident within memory.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":167471,"byte_end":167532,"line_start":14,"line_end":14,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":167533,"byte_end":167536,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This primary function for a parser is the [`Parser::parse`] function which","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":167537,"byte_end":167615,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ will incrementally consume input. You can also use the [`Parser::parse_all`]","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":167616,"byte_end":167696,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ function to parse a module that is entirely resident in memory.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":167697,"byte_end":167764,"line_start":18,"line_end":18,"column_start":1,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1946},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":168611,"byte_end":168623,"line_start":45,"line_end":45,"column_start":5,"column_end":17},"name":"NeedMoreData","qualname":"::parser::Chunk::NeedMoreData","value":"Chunk::NeedMoreData(u64)","parent":{"krate":0,"index":1944},"children":[],"decl_id":null,"docs":" This can be returned at any time and indicates that more data is needed\n to proceed with parsing. Zero bytes were consumed from the input to\n [`Parser::parse`]. The `usize` value here is a hint as to how many more\n bytes are needed to continue parsing.\n","sig":null,"attributes":[{"value":"/ This can be returned at any time and indicates that more data is needed","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":168329,"byte_end":168404,"line_start":41,"line_end":41,"column_start":5,"column_end":80}},{"value":"/ to proceed with parsing. Zero bytes were consumed from the input to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":168409,"byte_end":168480,"line_start":42,"line_end":42,"column_start":5,"column_end":76}},{"value":"/ [`Parser::parse`]. The `usize` value here is a hint as to how many more","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":168485,"byte_end":168560,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/ bytes are needed to continue parsing.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":168565,"byte_end":168606,"line_start":44,"line_end":44,"column_start":5,"column_end":46}}]},{"kind":"StructVariant","id":{"krate":0,"index":1949},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":168676,"byte_end":168682,"line_start":48,"line_end":48,"column_start":5,"column_end":11},"name":"Parsed","qualname":"::parser::Chunk::Parsed","value":"Chunk::Parsed { consumed, payload }","parent":{"krate":0,"index":1944},"children":[],"decl_id":null,"docs":" A chunk was successfully parsed.\n","sig":null,"attributes":[{"value":"/ A chunk was successfully parsed.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":168635,"byte_end":168671,"line_start":47,"line_end":47,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":1944},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":168313,"byte_end":168318,"line_start":40,"line_end":40,"column_start":10,"column_end":15},"name":"Chunk","qualname":"::parser::Chunk","value":"pub enum Chunk<'a> {\n\n    /// This can be returned at any time and indicates that more data is needed\n    /// to proceed with parsing. Zero bytes were consumed from the input to\n    /// [`Parser::parse`]. The `usize` value here is a hint as to how many more\n    /// bytes are needed to continue parsing.\n    NeedMoreData(u64),\n\n    /// A chunk was successfully parsed.\n    Parsed {\n        /// This many bytes of the `data` input to [`Parser::parse`] were\n        /// consumed to produce `payload`.\n        consumed: usize,\n        /// The value that we actually parsed.\n        payload: Payload,\n    },\n}","parent":null,"children":[{"krate":0,"index":1946},{"krate":0,"index":1949}],"decl_id":null,"docs":" A successful return payload from [`Parser::parse`].","sig":null,"attributes":[{"value":"/ A successful return payload from [`Parser::parse`].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":168034,"byte_end":168089,"line_start":34,"line_end":34,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":168090,"byte_end":168093,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ On success one of two possible values can be returned, either that more data","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":168094,"byte_end":168174,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"/ is needed to continue parsing or a chunk of the input was parsed, indicating","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":168175,"byte_end":168255,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ how much of it was parsed.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":168256,"byte_end":168286,"line_start":38,"line_end":38,"column_start":1,"column_end":31}}]},{"kind":"StructVariant","id":{"krate":0,"index":472},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":170328,"byte_end":170335,"line_start":81,"line_end":81,"column_start":5,"column_end":12},"name":"Version","qualname":"::parser::Payload::Version","value":"Payload::Version { num, range }","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":" Indicates the header of a WebAssembly binary.","sig":null,"attributes":[{"value":"/ Indicates the header of a WebAssembly binary.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":170158,"byte_end":170207,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":170212,"byte_end":170215,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ This header also indicates the version number that was parsed, which is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":170220,"byte_end":170295,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ currently always 1.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":170300,"byte_end":170323,"line_start":80,"line_end":80,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":475},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":170726,"byte_end":170737,"line_start":92,"line_end":92,"column_start":5,"column_end":16},"name":"TypeSection","qualname":"::parser::Payload::TypeSection","value":"Payload::TypeSection(crate::TypeSectionReader)","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":" A type section was received, and the provided reader can be used to\n parse the contents of the type section.\n","sig":null,"attributes":[{"value":"/ A type section was received, and the provided reader can be used to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":170602,"byte_end":170673,"line_start":90,"line_end":90,"column_start":5,"column_end":76}},{"value":"/ parse the contents of the type section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":170678,"byte_end":170721,"line_start":91,"line_end":91,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":478},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":170901,"byte_end":170914,"line_start":95,"line_end":95,"column_start":5,"column_end":18},"name":"ImportSection","qualname":"::parser::Payload::ImportSection","value":"Payload::ImportSection(crate::ImportSectionReader)","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":" A import section was received, and the provided reader can be used to\n parse the contents of the import section.\n","sig":null,"attributes":[{"value":"/ A import section was received, and the provided reader can be used to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":170773,"byte_end":170846,"line_start":93,"line_end":93,"column_start":5,"column_end":78}},{"value":"/ parse the contents of the import section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":170851,"byte_end":170896,"line_start":94,"line_end":94,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":481},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":171079,"byte_end":171091,"line_start":98,"line_end":98,"column_start":5,"column_end":17},"name":"AliasSection","qualname":"::parser::Payload::AliasSection","value":"Payload::AliasSection(crate::AliasSectionReader)","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":" An alias section was received, and the provided reader can be used to\n parse the contents of the alias section.\n","sig":null,"attributes":[{"value":"/ An alias section was received, and the provided reader can be used to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":170952,"byte_end":171025,"line_start":96,"line_end":96,"column_start":5,"column_end":78}},{"value":"/ parse the contents of the alias section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":171030,"byte_end":171074,"line_start":97,"line_end":97,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":484},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":171261,"byte_end":171276,"line_start":101,"line_end":101,"column_start":5,"column_end":20},"name":"InstanceSection","qualname":"::parser::Payload::InstanceSection","value":"Payload::InstanceSection(crate::InstanceSectionReader)","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":" An instance section was received, and the provided reader can be used to\n parse the contents of the instance section.\n","sig":null,"attributes":[{"value":"/ An instance section was received, and the provided reader can be used to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":171128,"byte_end":171204,"line_start":99,"line_end":99,"column_start":5,"column_end":81}},{"value":"/ parse the contents of the instance section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":171209,"byte_end":171256,"line_start":100,"line_end":100,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":487},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":171444,"byte_end":171457,"line_start":104,"line_end":104,"column_start":5,"column_end":18},"name":"ModuleSection","qualname":"::parser::Payload::ModuleSection","value":"Payload::ModuleSection(crate::ModuleSectionReader)","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":" A module section was received, and the provided reader can be used to\n parse the contents of the module section.\n","sig":null,"attributes":[{"value":"/ A module section was received, and the provided reader can be used to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":171316,"byte_end":171389,"line_start":102,"line_end":102,"column_start":5,"column_end":78}},{"value":"/ parse the contents of the module section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":171394,"byte_end":171439,"line_start":103,"line_end":103,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":490},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":171627,"byte_end":171642,"line_start":107,"line_end":107,"column_start":5,"column_end":20},"name":"FunctionSection","qualname":"::parser::Payload::FunctionSection","value":"Payload::FunctionSection(crate::FunctionSectionReader)","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":" A function section was received, and the provided reader can be used to\n parse the contents of the function section.\n","sig":null,"attributes":[{"value":"/ A function section was received, and the provided reader can be used to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":171495,"byte_end":171570,"line_start":105,"line_end":105,"column_start":5,"column_end":80}},{"value":"/ parse the contents of the function section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":171575,"byte_end":171622,"line_start":106,"line_end":106,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":493},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":171808,"byte_end":171820,"line_start":110,"line_end":110,"column_start":5,"column_end":17},"name":"TableSection","qualname":"::parser::Payload::TableSection","value":"Payload::TableSection(crate::TableSectionReader)","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":" A table section was received, and the provided reader can be used to\n parse the contents of the table section.\n","sig":null,"attributes":[{"value":"/ A table section was received, and the provided reader can be used to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":171682,"byte_end":171754,"line_start":108,"line_end":108,"column_start":5,"column_end":77}},{"value":"/ parse the contents of the table section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":171759,"byte_end":171803,"line_start":109,"line_end":109,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":496},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":171985,"byte_end":171998,"line_start":113,"line_end":113,"column_start":5,"column_end":18},"name":"MemorySection","qualname":"::parser::Payload::MemorySection","value":"Payload::MemorySection(crate::MemorySectionReader)","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":" A memory section was received, and the provided reader can be used to\n parse the contents of the memory section.\n","sig":null,"attributes":[{"value":"/ A memory section was received, and the provided reader can be used to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":171857,"byte_end":171930,"line_start":111,"line_end":111,"column_start":5,"column_end":78}},{"value":"/ parse the contents of the memory section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":171935,"byte_end":171980,"line_start":112,"line_end":112,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":499},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":172164,"byte_end":172177,"line_start":116,"line_end":116,"column_start":5,"column_end":18},"name":"GlobalSection","qualname":"::parser::Payload::GlobalSection","value":"Payload::GlobalSection(crate::GlobalSectionReader)","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":" A global section was received, and the provided reader can be used to\n parse the contents of the global section.\n","sig":null,"attributes":[{"value":"/ A global section was received, and the provided reader can be used to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":172036,"byte_end":172109,"line_start":114,"line_end":114,"column_start":5,"column_end":78}},{"value":"/ parse the contents of the global section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":172114,"byte_end":172159,"line_start":115,"line_end":115,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":502},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":172344,"byte_end":172357,"line_start":119,"line_end":119,"column_start":5,"column_end":18},"name":"ExportSection","qualname":"::parser::Payload::ExportSection","value":"Payload::ExportSection(crate::ExportSectionReader)","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":" An export section was received, and the provided reader can be used to\n parse the contents of the export section.\n","sig":null,"attributes":[{"value":"/ An export section was received, and the provided reader can be used to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":172215,"byte_end":172289,"line_start":117,"line_end":117,"column_start":5,"column_end":79}},{"value":"/ parse the contents of the export section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":172294,"byte_end":172339,"line_start":118,"line_end":118,"column_start":5,"column_end":50}}]},{"kind":"StructVariant","id":{"krate":0,"index":505},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":172496,"byte_end":172508,"line_start":122,"line_end":122,"column_start":5,"column_end":17},"name":"StartSection","qualname":"::parser::Payload::StartSection","value":"Payload::StartSection { func, range }","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":" A start section was received, and the `u32` here is the index of the\n start function.\n","sig":null,"attributes":[{"value":"/ A start section was received, and the `u32` here is the index of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":172395,"byte_end":172467,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ start function.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":172472,"byte_end":172491,"line_start":121,"line_end":121,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":508},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":172868,"byte_end":172882,"line_start":131,"line_end":131,"column_start":5,"column_end":19},"name":"ElementSection","qualname":"::parser::Payload::ElementSection","value":"Payload::ElementSection(crate::ElementSectionReader)","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":" An element section was received, and the provided reader can be used to\n parse the contents of the element section.\n","sig":null,"attributes":[{"value":"/ An element section was received, and the provided reader can be used to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":172737,"byte_end":172812,"line_start":129,"line_end":129,"column_start":5,"column_end":80}},{"value":"/ parse the contents of the element section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":172817,"byte_end":172863,"line_start":130,"line_end":130,"column_start":5,"column_end":51}}]},{"kind":"StructVariant","id":{"krate":0,"index":511},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":173034,"byte_end":173050,"line_start":134,"line_end":134,"column_start":5,"column_end":21},"name":"DataCountSection","qualname":"::parser::Payload::DataCountSection","value":"Payload::DataCountSection { count, range }","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":" A data count section was received, and the `u32` here is the contents of\n the data count section.\n","sig":null,"attributes":[{"value":"/ A data count section was received, and the `u32` here is the contents of","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":172921,"byte_end":172997,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ the data count section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":173002,"byte_end":173029,"line_start":133,"line_end":133,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":514},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":173409,"byte_end":173420,"line_start":143,"line_end":143,"column_start":5,"column_end":16},"name":"DataSection","qualname":"::parser::Payload::DataSection","value":"Payload::DataSection(crate::DataSectionReader)","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":" A data section was received, and the provided reader can be used to\n parse the contents of the data section.\n","sig":null,"attributes":[{"value":"/ A data section was received, and the provided reader can be used to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":173285,"byte_end":173356,"line_start":141,"line_end":141,"column_start":5,"column_end":76}},{"value":"/ parse the contents of the data section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":173361,"byte_end":173404,"line_start":142,"line_end":142,"column_start":5,"column_end":48}}]},{"kind":"StructVariant","id":{"krate":0,"index":517},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":173492,"byte_end":173505,"line_start":145,"line_end":145,"column_start":5,"column_end":18},"name":"CustomSection","qualname":"::parser::Payload::CustomSection","value":"Payload::CustomSection { name, data_offset, data }","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":" A custom section was found.\n","sig":null,"attributes":[{"value":"/ A custom section was found.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":173456,"byte_end":173487,"line_start":144,"line_end":144,"column_start":5,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":521},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":174491,"byte_end":174507,"line_start":166,"line_end":166,"column_start":5,"column_end":21},"name":"CodeSectionStart","qualname":"::parser::Payload::CodeSectionStart","value":"Payload::CodeSectionStart { count, range, size }","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":" Indicator of the start of the code section.","sig":null,"attributes":[{"value":"/ Indicator of the start of the code section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":173828,"byte_end":173875,"line_start":155,"line_end":155,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":173880,"byte_end":173883,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This entry is returned whenever the code section starts. The `count`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":173888,"byte_end":173960,"line_start":157,"line_end":157,"column_start":5,"column_end":77}},{"value":"/ field indicates how many entries are in this code section. After","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":173965,"byte_end":174033,"line_start":158,"line_end":158,"column_start":5,"column_end":73}},{"value":"/ receiving this start marker you're guaranteed that the next `count`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":174038,"byte_end":174109,"line_start":159,"line_end":159,"column_start":5,"column_end":76}},{"value":"/ items will be either `CodeSectionEntry` or an error will be returned.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":174114,"byte_end":174187,"line_start":160,"line_end":160,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":174192,"byte_end":174195,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ This, unlike other sections, is intended to be used for streaming the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":174200,"byte_end":174273,"line_start":162,"line_end":162,"column_start":5,"column_end":78}},{"value":"/ contents of the code section. The code section is not required to be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":174278,"byte_end":174350,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ fully resident in memory when we parse it. Instead a [`Parser`] is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":174355,"byte_end":174425,"line_start":164,"line_end":164,"column_start":5,"column_end":75}},{"value":"/ capable of parsing piece-by-piece of a code section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":174430,"byte_end":174486,"line_start":165,"line_end":165,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":525},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":175501,"byte_end":175517,"line_start":187,"line_end":187,"column_start":5,"column_end":21},"name":"CodeSectionEntry","qualname":"::parser::Payload::CodeSectionEntry","value":"Payload::CodeSectionEntry(crate::FunctionBody)","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":" An entry of the code section, a function, was parsed.","sig":null,"attributes":[{"value":"/ An entry of the code section, a function, was parsed.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":175048,"byte_end":175105,"line_start":180,"line_end":180,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":175110,"byte_end":175113,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ This entry indicates that a function was successfully received from the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":175118,"byte_end":175193,"line_start":182,"line_end":182,"column_start":5,"column_end":80}},{"value":"/ code section, and the payload here is the window into the original input","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":175198,"byte_end":175274,"line_start":183,"line_end":183,"column_start":5,"column_end":81}},{"value":"/ where the function resides. Note that the function itself has not been","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":175279,"byte_end":175353,"line_start":184,"line_end":184,"column_start":5,"column_end":79}},{"value":"/ parsed, it's only been outlined. You'll need to process the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":175358,"byte_end":175421,"line_start":185,"line_end":185,"column_start":5,"column_end":68}},{"value":"/ `FunctionBody` provided to test whether it parses and/or is valid.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":175426,"byte_end":175496,"line_start":186,"line_end":186,"column_start":5,"column_end":75}}]},{"kind":"StructVariant","id":{"krate":0,"index":528},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":175795,"byte_end":175817,"line_start":194,"line_end":194,"column_start":5,"column_end":27},"name":"ModuleCodeSectionStart","qualname":"::parser::Payload::ModuleCodeSectionStart","value":"Payload::ModuleCodeSectionStart { count, range, size }","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":" Indicator of the start of the module code section.","sig":null,"attributes":[{"value":"/ Indicator of the start of the module code section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":175549,"byte_end":175603,"line_start":189,"line_end":189,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":175608,"byte_end":175611,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ This behaves the same as the `CodeSectionStart` payload being returned.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":175616,"byte_end":175691,"line_start":191,"line_end":191,"column_start":5,"column_end":80}},{"value":"/ You're guaranteed the next `count` items will be of type","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":175696,"byte_end":175756,"line_start":192,"line_end":192,"column_start":5,"column_end":65}},{"value":"/ `ModuleCodeSectionEntry`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":175761,"byte_end":175790,"line_start":193,"line_end":193,"column_start":5,"column_end":34}}]},{"kind":"StructVariant","id":{"krate":0,"index":532},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":176833,"byte_end":176855,"line_start":215,"line_end":215,"column_start":5,"column_end":27},"name":"ModuleCodeSectionEntry","qualname":"::parser::Payload::ModuleCodeSectionEntry","value":"Payload::ModuleCodeSectionEntry { parser, range }","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":" An entry of the module code section, a module, was parsed.","sig":null,"attributes":[{"value":"/ An entry of the module code section, a module, was parsed.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":176161,"byte_end":176223,"line_start":204,"line_end":204,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":176228,"byte_end":176231,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ This variant is special in that it returns a sub-`Parser`. Upon","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":176236,"byte_end":176303,"line_start":206,"line_end":206,"column_start":5,"column_end":72}},{"value":"/ receiving a `ModuleCodeSectionEntry` it is expected that the returned","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":176308,"byte_end":176381,"line_start":207,"line_end":207,"column_start":5,"column_end":78}},{"value":"/ `Parser` will be used instead of the parent `Parser` until the parse has","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":176386,"byte_end":176462,"line_start":208,"line_end":208,"column_start":5,"column_end":81}},{"value":"/ finished. You'll need to feed data into the `Parser` returned until it","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":176467,"byte_end":176541,"line_start":209,"line_end":209,"column_start":5,"column_end":79}},{"value":"/ returns `Payload::End`. After that you'll switch back to the parent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":176546,"byte_end":176617,"line_start":210,"line_end":210,"column_start":5,"column_end":76}},{"value":"/ parser to resume parsing the rest of the module code section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":176622,"byte_end":176687,"line_start":211,"line_end":211,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":176692,"byte_end":176695,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ Note that binaries will not be parsed correctly if you feed the data for","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":176700,"byte_end":176776,"line_start":213,"line_end":213,"column_start":5,"column_end":81}},{"value":"/ a nested module into the parent [`Parser`].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":176781,"byte_end":176828,"line_start":214,"line_end":214,"column_start":5,"column_end":52}}]},{"kind":"StructVariant","id":{"krate":0,"index":535},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":177483,"byte_end":177497,"line_start":230,"line_end":230,"column_start":5,"column_end":19},"name":"UnknownSection","qualname":"::parser::Payload::UnknownSection","value":"Payload::UnknownSection { id, contents, range }","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":" An unknown section was found.","sig":null,"attributes":[{"value":"/ An unknown section was found.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":177183,"byte_end":177216,"line_start":224,"line_end":224,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":177221,"byte_end":177224,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ This variant is returned for all unknown sections in a wasm file. This","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":177229,"byte_end":177303,"line_start":226,"line_end":226,"column_start":5,"column_end":79}},{"value":"/ likely wants to be interpreted as an error by consumers of the parser,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":177308,"byte_end":177382,"line_start":227,"line_end":227,"column_start":5,"column_end":79}},{"value":"/ but this can also be used to parse sections unknown to wasmparser at","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":177387,"byte_end":177459,"line_start":228,"line_end":228,"column_start":5,"column_end":77}},{"value":"/ this time.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":177464,"byte_end":177478,"line_start":229,"line_end":229,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":539},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":177866,"byte_end":177869,"line_start":241,"line_end":241,"column_start":5,"column_end":8},"name":"End","qualname":"::parser::Payload::End","value":"Payload::End","parent":{"krate":0,"index":470},"children":[],"decl_id":null,"docs":" The end of the WebAssembly module was reached.\n","sig":null,"attributes":[{"value":"/ The end of the WebAssembly module was reached.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":177811,"byte_end":177861,"line_start":240,"line_end":240,"column_start":5,"column_end":55}}]},{"kind":"Enum","id":{"krate":0,"index":470},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":170140,"byte_end":170147,"line_start":76,"line_end":76,"column_start":10,"column_end":17},"name":"Payload","qualname":"::parser::Payload","value":"pub enum Payload<'a> {\n\n    /// Indicates the header of a WebAssembly binary.\n    ///\n    /// This header also indicates the version number that was parsed, which is\n    /// currently always 1.\n    Version {\n        /// The version number found\n        num: u32,\n        /// The range of bytes that were parsed to consume the header of the\n        /// module. Note that this range is relative to the start of the byte\n        /// stream.\n        range: Range,\n    },\n\n    /// A type section was received, and the provided reader can be used to\n    /// parse the contents of the type section.\n    TypeSection(crate::TypeSectionReader),\n\n    /// A import section was received, and the provided reader can be used to\n    /// parse the contents of the import section.\n    ImportSection(crate::ImportSectionReader),\n\n    /// An alias section was received, and the provided reader can be used to\n    /// parse the contents of the alias section.\n    AliasSection(crate::AliasSectionReader),\n\n    /// An instance section was received, and the provided reader can be used to\n    /// parse the contents of the instance section.\n    InstanceSection(crate::InstanceSectionReader),\n\n    /// A module section was received, and the provided reader can be used to\n    /// parse the contents of the module section.\n    ModuleSection(crate::ModuleSectionReader),\n\n    /// A function section was received, and the provided reader can be used to\n    /// parse the contents of the function section.\n    FunctionSection(crate::FunctionSectionReader),\n\n    /// A table section was received, and the provided reader can be used to\n    /// parse the contents of the table section.\n    TableSection(crate::TableSectionReader),\n\n    /// A memory section was received, and the provided reader can be used to\n    /// parse the contents of the memory section.\n    MemorySection(crate::MemorySectionReader),\n\n    /// A global section was received, and the provided reader can be used to\n    /// parse the contents of the global section.\n    GlobalSection(crate::GlobalSectionReader),\n\n    /// An export section was received, and the provided reader can be used to\n    /// parse the contents of the export section.\n    ExportSection(crate::ExportSectionReader),\n\n    /// A start section was received, and the `u32` here is the index of the\n    /// start function.\n    StartSection {\n        /// The start function index\n        func: u32,\n        /// The range of bytes that specify the `func` field, specified in\n        /// offsets relative to the start of the byte stream.\n        range: Range,\n    },\n\n    /// An element section was received, and the provided reader can be used to\n    /// parse the contents of the element section.\n    ElementSection(crate::ElementSectionReader),\n\n    /// A data count section was received, and the `u32` here is the contents of\n    /// the data count section.\n    DataCountSection {\n        /// The number of data segments.\n        count: u32,\n        /// The range of bytes that specify the `count` field, specified in\n        /// offsets relative to the start of the byte stream.\n        range: Range,\n    },\n\n    /// A data section was received, and the provided reader can be used to\n    /// parse the contents of the data section.\n    DataSection(crate::DataSectionReader),\n\n    /// A custom section was found.\n    CustomSection {\n        /// The name of the custom section.\n        name: &'a str,\n        /// The offset, relative to the start of the original module, that the\n        /// payload for this custom section starts at.\n        data_offset: usize,\n        /// The actual contents of the custom section.\n        data: &'a [u8],\n    },\n\n    /// Indicator of the start of the code section.\n    ///\n    /// This entry is returned whenever the code section starts. The `count`\n    /// field indicates how many entries are in this code section. After\n    /// receiving this start marker you're guaranteed that the next `count`\n    /// items will be either `CodeSectionEntry` or an error will be returned.\n    ///\n    /// This, unlike other sections, is intended to be used for streaming the\n    /// contents of the code section. The code section is not required to be\n    /// fully resident in memory when we parse it. Instead a [`Parser`] is\n    /// capable of parsing piece-by-piece of a code section.\n    CodeSectionStart {\n        /// The number of functions in this section.\n        count: u32,\n        /// The range of bytes that represent this section, specified in\n        /// offsets relative to the start of the byte stream.\n        range: Range,\n        /// The size, in bytes, of the remaining contents of this section.\n        ///\n        /// This can be used in combination with [`Parser::skip_section`]\n        /// where the caller will know how many bytes to skip before feeding\n        /// bytes into `Parser` again.\n        size: u32,\n    },\n\n    /// An entry of the code section, a function, was parsed.\n    ///\n    /// This entry indicates that a function was successfully received from the\n    /// code section, and the payload here is the window into the original input\n    /// where the function resides. Note that the function itself has not been\n    /// parsed, it's only been outlined. You'll need to process the\n    /// `FunctionBody` provided to test whether it parses and/or is valid.\n    CodeSectionEntry(crate::FunctionBody),\n\n    /// Indicator of the start of the module code section.\n    ///\n    /// This behaves the same as the `CodeSectionStart` payload being returned.\n    /// You're guaranteed the next `count` items will be of type\n    /// `ModuleCodeSectionEntry`.\n    ModuleCodeSectionStart {\n        /// The number of inline modules in this section.\n        count: u32,\n        /// The range of bytes that represent this section, specified in\n        /// offsets relative to the start of the byte stream.\n        range: Range,\n        /// The size, in bytes, of the remaining contents of this section.\n        size: u32,\n    },\n\n    /// An entry of the module code section, a module, was parsed.\n    ///\n    /// This variant is special in that it returns a sub-`Parser`. Upon\n    /// receiving a `ModuleCodeSectionEntry` it is expected that the returned\n    /// `Parser` will be used instead of the parent `Parser` until the parse has\n    /// finished. You'll need to feed data into the `Parser` returned until it\n    /// returns `Payload::End`. After that you'll switch back to the parent\n    /// parser to resume parsing the rest of the module code section.\n    ///\n    /// Note that binaries will not be parsed correctly if you feed the data for\n    /// a nested module into the parent [`Parser`].\n    ModuleCodeSectionEntry {\n        /// The parser to use to parse the contents of the nested submodule.\n        /// This parser should be used until it reports `End`.\n        parser: Parser,\n        /// The range of bytes, relative to the start of the input stream, of\n        /// the bytes containing this submodule.\n        range: Range,\n    },\n\n    /// An unknown section was found.\n    ///\n    /// This variant is returned for all unknown sections in a wasm file. This\n    /// likely wants to be interpreted as an error by consumers of the parser,\n    /// but this can also be used to parse sections unknown to wasmparser at\n    /// this time.\n    UnknownSection {\n        /// The 8-bit identifier for this section.\n        id: u8,\n        /// The contents of this section.\n        contents: &'a [u8],\n        /// The range of bytes, relative to the start of the original data\n        /// stream, that the contents of this section reside in.\n        range: Range,\n    },\n\n    /// The end of the WebAssembly module was reached.\n    End,\n}","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":475},{"krate":0,"index":478},{"krate":0,"index":481},{"krate":0,"index":484},{"krate":0,"index":487},{"krate":0,"index":490},{"krate":0,"index":493},{"krate":0,"index":496},{"krate":0,"index":499},{"krate":0,"index":502},{"krate":0,"index":505},{"krate":0,"index":508},{"krate":0,"index":511},{"krate":0,"index":514},{"krate":0,"index":517},{"krate":0,"index":521},{"krate":0,"index":525},{"krate":0,"index":528},{"krate":0,"index":532},{"krate":0,"index":535},{"krate":0,"index":539}],"decl_id":null,"docs":" Values that can be parsed from a wasm module.","sig":null,"attributes":[{"value":"/ Values that can be parsed from a wasm module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":168914,"byte_end":168963,"line_start":57,"line_end":57,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":168964,"byte_end":168967,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ This enumeration is all possible chunks of pieces that can be parsed by a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":168968,"byte_end":169045,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/ [`Parser`] from a binary WebAssembly module. Note that for many sections the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":169046,"byte_end":169126,"line_start":60,"line_end":60,"column_start":1,"column_end":81}},{"value":"/ entire section is parsed all at once, whereas other functions, like the code","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":169127,"byte_end":169207,"line_start":61,"line_end":61,"column_start":1,"column_end":81}},{"value":"/ section, are parsed incrementally. This is a distinction where some","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":169208,"byte_end":169279,"line_start":62,"line_end":62,"column_start":1,"column_end":72}},{"value":"/ sections, like the type section, are required to be fully resident in memory","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":169280,"byte_end":169360,"line_start":63,"line_end":63,"column_start":1,"column_end":81}},{"value":"/ (fully downloaded) before proceeding. Other sections, like the code section,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":169361,"byte_end":169441,"line_start":64,"line_end":64,"column_start":1,"column_end":81}},{"value":"/ can be processed in a streaming fashion where each function is extracted","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":169442,"byte_end":169518,"line_start":65,"line_end":65,"column_start":1,"column_end":77}},{"value":"/ individually so it can possibly be shipped to another thread while you wait","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":169519,"byte_end":169598,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ for more functions to get downloaded.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":169599,"byte_end":169640,"line_start":67,"line_end":67,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":169641,"byte_end":169644,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Note that payloads, when returned, do not indicate that the wasm module is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":169645,"byte_end":169723,"line_start":69,"line_end":69,"column_start":1,"column_end":79}},{"value":"/ valid. For example when you receive a `Payload::TypeSection` the type","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":169724,"byte_end":169797,"line_start":70,"line_end":70,"column_start":1,"column_end":74}},{"value":"/ section itself has not yet actually been parsed. The reader returned will be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":169798,"byte_end":169878,"line_start":71,"line_end":71,"column_start":1,"column_end":81}},{"value":"/ able to parse it, but you'll have to actually iterate the reader to do the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":169879,"byte_end":169957,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ full parse. Each payload returned is intended to be a *window* into the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":169958,"byte_end":170033,"line_start":73,"line_end":73,"column_start":1,"column_end":76}},{"value":"/ original `data` passed to [`Parser::parse`] which can be further processed","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":170034,"byte_end":170112,"line_start":74,"line_end":74,"column_start":1,"column_end":79}},{"value":"/ if necessary.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":170113,"byte_end":170130,"line_start":75,"line_end":75,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":178099,"byte_end":178102,"line_start":249,"line_end":249,"column_start":12,"column_end":15},"name":"new","qualname":"<Parser>::new","value":"pub fn new(u64) -> Parser","parent":null,"children":[],"decl_id":null,"docs":" Creates a new module parser.","sig":null,"attributes":[{"value":"/ Creates a new module parser.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":177892,"byte_end":177924,"line_start":245,"line_end":245,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":177929,"byte_end":177932,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ Reports errors and ranges relative to `offset` provided, where `offset`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":177937,"byte_end":178012,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/ is some logical offset within the input stream that we're parsing.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":178017,"byte_end":178087,"line_start":248,"line_end":248,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":184699,"byte_end":184704,"line_start":397,"line_end":397,"column_start":12,"column_end":17},"name":"parse","qualname":"<Parser>::parse","value":"pub fn parse<'a>(&mut Self, &'a [u8], bool) -> Result<Chunk>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to parse a chunk of data.","sig":null,"attributes":[{"value":"/ Attempts to parse a chunk of data.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":178266,"byte_end":178304,"line_start":257,"line_end":257,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":178309,"byte_end":178312,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This method will attempt to parse the next incremental portion of a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":178317,"byte_end":178388,"line_start":259,"line_end":259,"column_start":5,"column_end":76}},{"value":"/ WebAssembly binary. Data available for the module is provided as `data`,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":178393,"byte_end":178469,"line_start":260,"line_end":260,"column_start":5,"column_end":81}},{"value":"/ and the data can be incomplete if more data has yet to arrive for the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":178474,"byte_end":178547,"line_start":261,"line_end":261,"column_start":5,"column_end":78}},{"value":"/ module. The `eof` flag indicates whether `data` represents all possible","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":178552,"byte_end":178627,"line_start":262,"line_end":262,"column_start":5,"column_end":80}},{"value":"/ data for the module and no more data will ever be received.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":178632,"byte_end":178695,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":178700,"byte_end":178703,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ There are two ways parsing can succeed with this method:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":178708,"byte_end":178768,"line_start":265,"line_end":265,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":178773,"byte_end":178776,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ * `Chunk::NeedMoreData` - this indicates that there is not enough bytes","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":178781,"byte_end":178856,"line_start":267,"line_end":267,"column_start":5,"column_end":80}},{"value":"/   in `data` to parse a chunk of this module. The caller needs to wait","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":178861,"byte_end":178934,"line_start":268,"line_end":268,"column_start":5,"column_end":78}},{"value":"/   for more data to be available in this situation before calling this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":178939,"byte_end":179012,"line_start":269,"line_end":269,"column_start":5,"column_end":78}},{"value":"/   method again. It is guaranteed that this is only returned if `eof` is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":179017,"byte_end":179092,"line_start":270,"line_end":270,"column_start":5,"column_end":80}},{"value":"/   `false`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":179097,"byte_end":179111,"line_start":271,"line_end":271,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":179116,"byte_end":179119,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ * `Chunk::Parsed` - this indicates that a chunk of the input was","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":179124,"byte_end":179192,"line_start":273,"line_end":273,"column_start":5,"column_end":73}},{"value":"/   successfully parsed. The payload is available in this variant of what","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":179197,"byte_end":179272,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/   was parsed, and this also indicates how many bytes of `data` was","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":179277,"byte_end":179347,"line_start":275,"line_end":275,"column_start":5,"column_end":75}},{"value":"/   consumed. It's expected that the caller will not provide these bytes","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":179352,"byte_end":179426,"line_start":276,"line_end":276,"column_start":5,"column_end":79}},{"value":"/   back to the [`Parser`] again.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":179431,"byte_end":179466,"line_start":277,"line_end":277,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":179471,"byte_end":179474,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ Note that all `Chunk` return values are connected, with a lifetime, to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":179479,"byte_end":179553,"line_start":279,"line_end":279,"column_start":5,"column_end":79}},{"value":"/ the input buffer. Each parsed chunk borrows the input buffer and is a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":179558,"byte_end":179631,"line_start":280,"line_end":280,"column_start":5,"column_end":78}},{"value":"/ view into it for successfully parsed chunks.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":179636,"byte_end":179684,"line_start":281,"line_end":281,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":179689,"byte_end":179692,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ It is expected that you'll call this method until `Payload::End` is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":179697,"byte_end":179768,"line_start":283,"line_end":283,"column_start":5,"column_end":76}},{"value":"/ reached, at which point you're guaranteed that the module has completely","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":179773,"byte_end":179849,"line_start":284,"line_end":284,"column_start":5,"column_end":81}},{"value":"/ parsed. Note that complete parsing, for the top-level wasm module,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":179854,"byte_end":179924,"line_start":285,"line_end":285,"column_start":5,"column_end":75}},{"value":"/ implies that `data` is empty and `eof` is `true`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":179929,"byte_end":179982,"line_start":286,"line_end":286,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":179987,"byte_end":179990,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":179995,"byte_end":180007,"line_start":288,"line_end":288,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":180012,"byte_end":180015,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ Parse errors are returned as an `Err`. Errors can happen when the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":180020,"byte_end":180089,"line_start":290,"line_end":290,"column_start":5,"column_end":74}},{"value":"/ structure of the module is unexpected, or if sections are too large for","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":180094,"byte_end":180169,"line_start":291,"line_end":291,"column_start":5,"column_end":80}},{"value":"/ example. Note that errors are not returned for malformed *contents* of","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":180174,"byte_end":180248,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ sections here. Sections are generally not individually parsed and each","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":180253,"byte_end":180327,"line_start":293,"line_end":293,"column_start":5,"column_end":79}},{"value":"/ returned [`Payload`] needs to be iterated over further to detect all","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":180332,"byte_end":180404,"line_start":294,"line_end":294,"column_start":5,"column_end":77}},{"value":"/ errors.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":180409,"byte_end":180420,"line_start":295,"line_end":295,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":180425,"byte_end":180428,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":180433,"byte_end":180447,"line_start":297,"line_end":297,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":180452,"byte_end":180455,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ An example of reading a wasm file from a stream (`std::io::Read`) and","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":180460,"byte_end":180533,"line_start":299,"line_end":299,"column_start":5,"column_end":78}},{"value":"/ incrementally parsing it.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":180538,"byte_end":180567,"line_start":300,"line_end":300,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":180572,"byte_end":180575,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":180580,"byte_end":180587,"line_start":302,"line_end":302,"column_start":5,"column_end":12}},{"value":"/ use std::io::Read;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":180592,"byte_end":180614,"line_start":303,"line_end":303,"column_start":5,"column_end":27}},{"value":"/ use anyhow::Result;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":180619,"byte_end":180642,"line_start":304,"line_end":304,"column_start":5,"column_end":28}},{"value":"/ use wasmparser::{Parser, Chunk, Payload::*};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":180647,"byte_end":180695,"line_start":305,"line_end":305,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":180700,"byte_end":180703,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ fn parse(mut reader: impl Read) -> Result<()> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":180708,"byte_end":180759,"line_start":307,"line_end":307,"column_start":5,"column_end":56}},{"value":"/     let mut buf = Vec::new();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":180764,"byte_end":180797,"line_start":308,"line_end":308,"column_start":5,"column_end":38}},{"value":"/     let mut parser = Parser::new(0);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":180802,"byte_end":180842,"line_start":309,"line_end":309,"column_start":5,"column_end":45}},{"value":"/     let mut eof = false;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":180847,"byte_end":180875,"line_start":310,"line_end":310,"column_start":5,"column_end":33}},{"value":"/     let mut stack = Vec::new();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":180880,"byte_end":180915,"line_start":311,"line_end":311,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":180920,"byte_end":180923,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":180928,"byte_end":180942,"line_start":313,"line_end":313,"column_start":5,"column_end":19}},{"value":"/         let (payload, consumed) = match parser.parse(&buf, eof)? {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":180947,"byte_end":181017,"line_start":314,"line_end":314,"column_start":5,"column_end":75}},{"value":"/             Chunk::NeedMoreData(hint) => {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":181022,"byte_end":181068,"line_start":315,"line_end":315,"column_start":5,"column_end":51}},{"value":"/                 assert!(!eof); // otherwise an error would be returned","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":181073,"byte_end":181147,"line_start":316,"line_end":316,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":181152,"byte_end":181155,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/                 // Use the hint to preallocate more space, then read","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":181160,"byte_end":181232,"line_start":318,"line_end":318,"column_start":5,"column_end":77}},{"value":"/                 // some more data into our buffer.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":181237,"byte_end":181291,"line_start":319,"line_end":319,"column_start":5,"column_end":59}},{"value":"/                 //","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":181296,"byte_end":181318,"line_start":320,"line_end":320,"column_start":5,"column_end":27}},{"value":"/                 // Note that the buffer management here is not ideal,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":181323,"byte_end":181396,"line_start":321,"line_end":321,"column_start":5,"column_end":78}},{"value":"/                 // but it's compact enough to fit in an example!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":181401,"byte_end":181469,"line_start":322,"line_end":322,"column_start":5,"column_end":73}},{"value":"/                 let len = buf.len();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":181474,"byte_end":181514,"line_start":323,"line_end":323,"column_start":5,"column_end":45}},{"value":"/                 buf.extend((0..hint).map(|_| 0u8));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":181519,"byte_end":181574,"line_start":324,"line_end":324,"column_start":5,"column_end":60}},{"value":"/                 let n = reader.read(&mut buf[len..])?;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":181579,"byte_end":181637,"line_start":325,"line_end":325,"column_start":5,"column_end":63}},{"value":"/                 buf.truncate(len + n);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":181642,"byte_end":181684,"line_start":326,"line_end":326,"column_start":5,"column_end":47}},{"value":"/                 eof = n == 0;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":181689,"byte_end":181722,"line_start":327,"line_end":327,"column_start":5,"column_end":38}},{"value":"/                 continue;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":181727,"byte_end":181756,"line_start":328,"line_end":328,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":181761,"byte_end":181778,"line_start":329,"line_end":329,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":181783,"byte_end":181786,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/             Chunk::Parsed { consumed, payload } => (payload, consumed),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":181791,"byte_end":181866,"line_start":331,"line_end":331,"column_start":5,"column_end":80}},{"value":"/         };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":181871,"byte_end":181885,"line_start":332,"line_end":332,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":181890,"byte_end":181893,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/         match payload {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":181898,"byte_end":181925,"line_start":334,"line_end":334,"column_start":5,"column_end":32}},{"value":"/             // Each of these would be handled individually as necessary","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":181930,"byte_end":182005,"line_start":335,"line_end":335,"column_start":5,"column_end":80}},{"value":"/             Version { .. } => { /* ... */ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":182010,"byte_end":182057,"line_start":336,"line_end":336,"column_start":5,"column_end":52}},{"value":"/             TypeSection(_) => { /* ... */ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":182062,"byte_end":182109,"line_start":337,"line_end":337,"column_start":5,"column_end":52}},{"value":"/             ImportSection(_) => { /* ... */ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":182114,"byte_end":182163,"line_start":338,"line_end":338,"column_start":5,"column_end":54}},{"value":"/             AliasSection(_) => { /* ... */ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":182168,"byte_end":182216,"line_start":339,"line_end":339,"column_start":5,"column_end":53}},{"value":"/             InstanceSection(_) => { /* ... */ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":182221,"byte_end":182272,"line_start":340,"line_end":340,"column_start":5,"column_end":56}},{"value":"/             ModuleSection(_) => { /* ... */ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":182277,"byte_end":182326,"line_start":341,"line_end":341,"column_start":5,"column_end":54}},{"value":"/             FunctionSection(_) => { /* ... */ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":182331,"byte_end":182382,"line_start":342,"line_end":342,"column_start":5,"column_end":56}},{"value":"/             TableSection(_) => { /* ... */ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":182387,"byte_end":182435,"line_start":343,"line_end":343,"column_start":5,"column_end":53}},{"value":"/             MemorySection(_) => { /* ... */ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":182440,"byte_end":182489,"line_start":344,"line_end":344,"column_start":5,"column_end":54}},{"value":"/             GlobalSection(_) => { /* ... */ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":182494,"byte_end":182543,"line_start":345,"line_end":345,"column_start":5,"column_end":54}},{"value":"/             ExportSection(_) => { /* ... */ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":182548,"byte_end":182597,"line_start":346,"line_end":346,"column_start":5,"column_end":54}},{"value":"/             StartSection { .. } => { /* ... */ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":182602,"byte_end":182654,"line_start":347,"line_end":347,"column_start":5,"column_end":57}},{"value":"/             ElementSection(_) => { /* ... */ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":182659,"byte_end":182709,"line_start":348,"line_end":348,"column_start":5,"column_end":55}},{"value":"/             DataCountSection { .. } => { /* ... */ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":182714,"byte_end":182770,"line_start":349,"line_end":349,"column_start":5,"column_end":61}},{"value":"/             DataSection(_) => { /* ... */ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":182775,"byte_end":182822,"line_start":350,"line_end":350,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":182827,"byte_end":182830,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/             // Here we know how many functions we'll be receiving as","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":182835,"byte_end":182907,"line_start":352,"line_end":352,"column_start":5,"column_end":77}},{"value":"/             // `CodeSectionEntry`, so we can prepare for that, and","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":182912,"byte_end":182982,"line_start":353,"line_end":353,"column_start":5,"column_end":75}},{"value":"/             // afterwards we can parse and handle each function","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":182987,"byte_end":183054,"line_start":354,"line_end":354,"column_start":5,"column_end":72}},{"value":"/             // individually.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":183059,"byte_end":183091,"line_start":355,"line_end":355,"column_start":5,"column_end":37}},{"value":"/             CodeSectionStart { .. } => { /* ... */ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":183096,"byte_end":183152,"line_start":356,"line_end":356,"column_start":5,"column_end":61}},{"value":"/             CodeSectionEntry(body) => {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":183157,"byte_end":183200,"line_start":357,"line_end":357,"column_start":5,"column_end":48}},{"value":"/                 // here we can iterate over `body` to parse the function","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":183205,"byte_end":183281,"line_start":358,"line_end":358,"column_start":5,"column_end":81}},{"value":"/                 // and its locals","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":183286,"byte_end":183323,"line_start":359,"line_end":359,"column_start":5,"column_end":42}},{"value":"/             }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":183328,"byte_end":183345,"line_start":360,"line_end":360,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":183350,"byte_end":183353,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/             // When parsing nested modules we need to switch which","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":183358,"byte_end":183428,"line_start":362,"line_end":362,"column_start":5,"column_end":75}},{"value":"/             // `Parser` we're using.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":183433,"byte_end":183473,"line_start":363,"line_end":363,"column_start":5,"column_end":45}},{"value":"/             ModuleCodeSectionStart { .. } => { /* ... */ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":183478,"byte_end":183540,"line_start":364,"line_end":364,"column_start":5,"column_end":67}},{"value":"/             ModuleCodeSectionEntry { parser: subparser, .. } => {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":183545,"byte_end":183614,"line_start":365,"line_end":365,"column_start":5,"column_end":74}},{"value":"/                 stack.push(parser);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":183619,"byte_end":183658,"line_start":366,"line_end":366,"column_start":5,"column_end":44}},{"value":"/                 parser = subparser;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":183663,"byte_end":183702,"line_start":367,"line_end":367,"column_start":5,"column_end":44}},{"value":"/             }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":183707,"byte_end":183724,"line_start":368,"line_end":368,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":183729,"byte_end":183732,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/             CustomSection { name, .. } => { /* ... */ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":183737,"byte_end":183796,"line_start":370,"line_end":370,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":183801,"byte_end":183804,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/             // most likely you'd return an error here","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":183809,"byte_end":183866,"line_start":372,"line_end":372,"column_start":5,"column_end":62}},{"value":"/             UnknownSection { id, .. } => { /* ... */ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":183871,"byte_end":183929,"line_start":373,"line_end":373,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":183934,"byte_end":183937,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/             // Once we've reached the end of a module we either resume","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":183942,"byte_end":184016,"line_start":375,"line_end":375,"column_start":5,"column_end":79}},{"value":"/             // at the parent module or we break out of the loop because","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":184021,"byte_end":184096,"line_start":376,"line_end":376,"column_start":5,"column_end":80}},{"value":"/             // we're done.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":184101,"byte_end":184131,"line_start":377,"line_end":377,"column_start":5,"column_end":35}},{"value":"/             End => {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":184136,"byte_end":184160,"line_start":378,"line_end":378,"column_start":5,"column_end":29}},{"value":"/                 if let Some(parent_parser) = stack.pop() {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":184165,"byte_end":184227,"line_start":379,"line_end":379,"column_start":5,"column_end":67}},{"value":"/                     parser = parent_parser;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":184232,"byte_end":184279,"line_start":380,"line_end":380,"column_start":5,"column_end":52}},{"value":"/                 } else {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":184284,"byte_end":184312,"line_start":381,"line_end":381,"column_start":5,"column_end":33}},{"value":"/                     break;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":184317,"byte_end":184347,"line_start":382,"line_end":382,"column_start":5,"column_end":35}},{"value":"/                 }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":184352,"byte_end":184373,"line_start":383,"line_end":383,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":184378,"byte_end":184395,"line_start":384,"line_end":384,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":184400,"byte_end":184413,"line_start":385,"line_end":385,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":184418,"byte_end":184421,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/         // once we're done processing the payload we can forget the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":184426,"byte_end":184497,"line_start":387,"line_end":387,"column_start":5,"column_end":76}},{"value":"/         // original.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":184502,"byte_end":184526,"line_start":388,"line_end":388,"column_start":5,"column_end":29}},{"value":"/         buf.drain(..consumed);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":184531,"byte_end":184565,"line_start":389,"line_end":389,"column_start":5,"column_end":39}},{"value":"/     }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":184570,"byte_end":184579,"line_start":390,"line_end":390,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":184584,"byte_end":184587,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":184592,"byte_end":184606,"line_start":392,"line_end":392,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":184611,"byte_end":184616,"line_start":393,"line_end":393,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":184621,"byte_end":184624,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # parse(&b\"\\0asm\\x01\\0\\0\\0\"[..]).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":184629,"byte_end":184675,"line_start":395,"line_end":395,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":184680,"byte_end":184687,"line_start":396,"line_end":396,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":197960,"byte_end":197969,"line_start":682,"line_end":682,"column_start":12,"column_end":21},"name":"parse_all","qualname":"<Parser>::parse_all","value":"pub fn parse_all<'a>(Self, &'a [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Convenience function that can be used to parse a module entirely\n resident in memory.","sig":null,"attributes":[{"value":"/ Convenience function that can be used to parse a module entirely","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":197435,"byte_end":197503,"line_start":672,"line_end":672,"column_start":5,"column_end":73}},{"value":"/ resident in memory.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":197508,"byte_end":197531,"line_start":673,"line_end":673,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":197536,"byte_end":197539,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ This function will parse the `data` provided as a WebAssembly module,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":197544,"byte_end":197617,"line_start":675,"line_end":675,"column_start":5,"column_end":78}},{"value":"/ assuming that `data` represents the entire WebAssembly module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":197622,"byte_end":197688,"line_start":676,"line_end":676,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":197693,"byte_end":197696,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ Note that when this function yields `ModuleCodeSectionEntry`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":197701,"byte_end":197765,"line_start":678,"line_end":678,"column_start":5,"column_end":69}},{"value":"/ no action needs to be taken with the returned parser. The parser will be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":197770,"byte_end":197846,"line_start":679,"line_end":679,"column_start":5,"column_end":81}},{"value":"/ automatically switched to internally and more payloads will continue to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":197851,"byte_end":197926,"line_start":680,"line_end":680,"column_start":5,"column_end":80}},{"value":"/ get returned.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":197931,"byte_end":197948,"line_start":681,"line_end":681,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":201838,"byte_end":201850,"line_start":786,"line_end":786,"column_start":12,"column_end":24},"name":"skip_section","qualname":"<Parser>::skip_section","value":"pub fn skip_section(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Skip parsing the code or module code section entirely.","sig":null,"attributes":[{"value":"/ Skip parsing the code or module code section entirely.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":199627,"byte_end":199685,"line_start":732,"line_end":732,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":199690,"byte_end":199693,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ This function can be used to indicate, after receiving","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":199698,"byte_end":199756,"line_start":734,"line_end":734,"column_start":5,"column_end":63}},{"value":"/ `CodeSectionStart` or `ModuleCodeSectionStart`, that the section","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":199761,"byte_end":199829,"line_start":735,"line_end":735,"column_start":5,"column_end":73}},{"value":"/ will not be parsed.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":199834,"byte_end":199857,"line_start":736,"line_end":736,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":199862,"byte_end":199865,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ The caller will be responsible for skipping `size` bytes (found in the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":199870,"byte_end":199944,"line_start":738,"line_end":738,"column_start":5,"column_end":79}},{"value":"/ `CodeSectionStart` or `ModuleCodeSectionStart` payload). Bytes should","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":199949,"byte_end":200022,"line_start":739,"line_end":739,"column_start":5,"column_end":78}},{"value":"/ only be fed into `parse` after the `size` bytes have been skipped.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":200027,"byte_end":200097,"line_start":740,"line_end":740,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":200102,"byte_end":200105,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":200110,"byte_end":200122,"line_start":742,"line_end":742,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":200127,"byte_end":200130,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ This function will panic if the parser is not in a state where it's","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":200135,"byte_end":200206,"line_start":744,"line_end":744,"column_start":5,"column_end":76}},{"value":"/ parsing the code or module code section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":200211,"byte_end":200255,"line_start":745,"line_end":745,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":200260,"byte_end":200263,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":200268,"byte_end":200282,"line_start":747,"line_end":747,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":200287,"byte_end":200290,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":200295,"byte_end":200302,"line_start":749,"line_end":749,"column_start":5,"column_end":12}},{"value":"/ use wasmparser::{Result, Parser, Chunk, Range, SectionReader, Payload::*};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":200307,"byte_end":200385,"line_start":750,"line_end":750,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":200390,"byte_end":200393,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ fn objdump_headers(mut wasm: &[u8]) -> Result<()> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":200398,"byte_end":200453,"line_start":752,"line_end":752,"column_start":5,"column_end":60}},{"value":"/     let mut parser = Parser::new(0);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":200458,"byte_end":200498,"line_start":753,"line_end":753,"column_start":5,"column_end":45}},{"value":"/     loop {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":200503,"byte_end":200517,"line_start":754,"line_end":754,"column_start":5,"column_end":19}},{"value":"/         let payload = match parser.parse(wasm, true)? {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":200522,"byte_end":200581,"line_start":755,"line_end":755,"column_start":5,"column_end":64}},{"value":"/             Chunk::Parsed { consumed, payload } => {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":200586,"byte_end":200642,"line_start":756,"line_end":756,"column_start":5,"column_end":61}},{"value":"/                 wasm = &wasm[consumed..];","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":200647,"byte_end":200692,"line_start":757,"line_end":757,"column_start":5,"column_end":50}},{"value":"/                 payload","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":200697,"byte_end":200724,"line_start":758,"line_end":758,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":200729,"byte_end":200746,"line_start":759,"line_end":759,"column_start":5,"column_end":22}},{"value":"/             // this state isn't possible with `eof = true`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":200751,"byte_end":200813,"line_start":760,"line_end":760,"column_start":5,"column_end":67}},{"value":"/             Chunk::NeedMoreData(_) => unreachable!(),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":200818,"byte_end":200875,"line_start":761,"line_end":761,"column_start":5,"column_end":62}},{"value":"/         };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":200880,"byte_end":200894,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/         match payload {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":200899,"byte_end":200926,"line_start":763,"line_end":763,"column_start":5,"column_end":32}},{"value":"/             TypeSection(s) => print_range(\"type section\", &s.range()),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":200931,"byte_end":201005,"line_start":764,"line_end":764,"column_start":5,"column_end":79}},{"value":"/             ImportSection(s) => print_range(\"import section\", &s.range()),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":201010,"byte_end":201088,"line_start":765,"line_end":765,"column_start":5,"column_end":83}},{"value":"/             // .. other sections","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":201093,"byte_end":201129,"line_start":766,"line_end":766,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":201134,"byte_end":201137,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/             // Print the range of the code section we see, but don't","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":201142,"byte_end":201214,"line_start":768,"line_end":768,"column_start":5,"column_end":77}},{"value":"/             // actually iterate over each individual function.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":201219,"byte_end":201285,"line_start":769,"line_end":769,"column_start":5,"column_end":71}},{"value":"/             CodeSectionStart { range, size, .. } => {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":201290,"byte_end":201347,"line_start":770,"line_end":770,"column_start":5,"column_end":62}},{"value":"/                 print_range(\"code section\", &range);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":201352,"byte_end":201408,"line_start":771,"line_end":771,"column_start":5,"column_end":61}},{"value":"/                 parser.skip_section();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":201413,"byte_end":201455,"line_start":772,"line_end":772,"column_start":5,"column_end":47}},{"value":"/                 wasm = &wasm[size as usize..];","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":201460,"byte_end":201510,"line_start":773,"line_end":773,"column_start":5,"column_end":55}},{"value":"/             }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":201515,"byte_end":201532,"line_start":774,"line_end":774,"column_start":5,"column_end":22}},{"value":"/             End => break,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":201537,"byte_end":201566,"line_start":775,"line_end":775,"column_start":5,"column_end":34}},{"value":"/             _ => {}","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":201571,"byte_end":201594,"line_start":776,"line_end":776,"column_start":5,"column_end":28}},{"value":"/         }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":201599,"byte_end":201612,"line_start":777,"line_end":777,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":201617,"byte_end":201626,"line_start":778,"line_end":778,"column_start":5,"column_end":14}},{"value":"/     Ok(())","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":201631,"byte_end":201645,"line_start":779,"line_end":779,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":201650,"byte_end":201655,"line_start":780,"line_end":780,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":201660,"byte_end":201663,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ fn print_range(section: &str, range: &Range) {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":201668,"byte_end":201718,"line_start":782,"line_end":782,"column_start":5,"column_end":55}},{"value":"/     println!(\"{:>40}: {:#010x} - {:#010x}\", section, range.start, range.end);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":201723,"byte_end":201804,"line_start":783,"line_end":783,"column_start":5,"column_end":86}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":201809,"byte_end":201814,"line_start":784,"line_end":784,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":201819,"byte_end":201826,"line_start":785,"line_end":785,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1955},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":221670,"byte_end":221687,"line_start":21,"line_end":21,"column_start":12,"column_end":29},"name":"BinaryReaderError","qualname":"::primitives::BinaryReaderError","value":"BinaryReaderError {  }","parent":null,"children":[{"krate":0,"index":1956}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":581},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":222095,"byte_end":222101,"line_start":35,"line_end":35,"column_start":10,"column_end":16},"name":"Result","qualname":"::primitives::Result","value":"result::Result<T, BinaryReaderError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":223106,"byte_end":223113,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"message","qualname":"<BinaryReaderError>::message","value":"pub fn message(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get this error's message.\n","sig":null,"attributes":[{"value":"/ Get this error's message.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":223065,"byte_end":223094,"line_start":71,"line_end":71,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":223248,"byte_end":223254,"line_start":77,"line_end":77,"column_start":12,"column_end":18},"name":"offset","qualname":"<BinaryReaderError>::offset","value":"pub fn offset(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the offset within the Wasm binary where the error occured.\n","sig":null,"attributes":[{"value":"/ Get the offset within the Wasm binary where the error occured.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":223170,"byte_end":223236,"line_start":76,"line_end":76,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1970},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":223403,"byte_end":223410,"line_start":84,"line_end":84,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::primitives::CustomSectionKind::Unknown","value":"CustomSectionKind::Unknown","parent":{"krate":0,"index":1969},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1972},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":223416,"byte_end":223420,"line_start":85,"line_end":85,"column_start":5,"column_end":9},"name":"Name","qualname":"::primitives::CustomSectionKind::Name","value":"CustomSectionKind::Name","parent":{"krate":0,"index":1969},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1974},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":223426,"byte_end":223435,"line_start":86,"line_end":86,"column_start":5,"column_end":14},"name":"Producers","qualname":"::primitives::CustomSectionKind::Producers","value":"CustomSectionKind::Producers","parent":{"krate":0,"index":1969},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1976},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":223441,"byte_end":223457,"line_start":87,"line_end":87,"column_start":5,"column_end":21},"name":"SourceMappingURL","qualname":"::primitives::CustomSectionKind::SourceMappingURL","value":"CustomSectionKind::SourceMappingURL","parent":{"krate":0,"index":1969},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1978},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":223463,"byte_end":223468,"line_start":88,"line_end":88,"column_start":5,"column_end":10},"name":"Reloc","qualname":"::primitives::CustomSectionKind::Reloc","value":"CustomSectionKind::Reloc","parent":{"krate":0,"index":1969},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1980},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":223474,"byte_end":223481,"line_start":89,"line_end":89,"column_start":5,"column_end":12},"name":"Linking","qualname":"::primitives::CustomSectionKind::Linking","value":"CustomSectionKind::Linking","parent":{"krate":0,"index":1969},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1969},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":223379,"byte_end":223396,"line_start":83,"line_end":83,"column_start":10,"column_end":27},"name":"CustomSectionKind","qualname":"::primitives::CustomSectionKind","value":"pub enum CustomSectionKind {\n    Unknown,\n    Name,\n    Producers,\n    SourceMappingURL,\n    Reloc,\n    Linking,\n}","parent":null,"children":[{"krate":0,"index":1970},{"krate":0,"index":1972},{"krate":0,"index":1974},{"krate":0,"index":1976},{"krate":0,"index":1978},{"krate":0,"index":1980}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1999},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":223700,"byte_end":223706,"line_start":97,"line_end":97,"column_start":5,"column_end":11},"name":"Custom","qualname":"::primitives::SectionCode::Custom","value":"SectionCode::Custom { name, kind }","parent":{"krate":0,"index":1997},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2002},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":223776,"byte_end":223780,"line_start":101,"line_end":101,"column_start":5,"column_end":9},"name":"Type","qualname":"::primitives::SectionCode::Type","value":"SectionCode::Type","parent":{"krate":0,"index":1997},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2004},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":223827,"byte_end":223832,"line_start":102,"line_end":102,"column_start":5,"column_end":10},"name":"Alias","qualname":"::primitives::SectionCode::Alias","value":"SectionCode::Alias","parent":{"krate":0,"index":1997},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2006},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":223889,"byte_end":223895,"line_start":103,"line_end":103,"column_start":5,"column_end":11},"name":"Import","qualname":"::primitives::SectionCode::Import","value":"SectionCode::Import","parent":{"krate":0,"index":1997},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2008},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":223928,"byte_end":223934,"line_start":104,"line_end":104,"column_start":5,"column_end":11},"name":"Module","qualname":"::primitives::SectionCode::Module","value":"SectionCode::Module","parent":{"krate":0,"index":1997},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2010},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":223967,"byte_end":223975,"line_start":105,"line_end":105,"column_start":5,"column_end":13},"name":"Instance","qualname":"::primitives::SectionCode::Instance","value":"SectionCode::Instance","parent":{"krate":0,"index":1997},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2012},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":224007,"byte_end":224015,"line_start":106,"line_end":106,"column_start":5,"column_end":13},"name":"Function","qualname":"::primitives::SectionCode::Function","value":"SectionCode::Function","parent":{"krate":0,"index":1997},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2014},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":224048,"byte_end":224053,"line_start":107,"line_end":107,"column_start":5,"column_end":10},"name":"Table","qualname":"::primitives::SectionCode::Table","value":"SectionCode::Table","parent":{"krate":0,"index":1997},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2016},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":224108,"byte_end":224114,"line_start":108,"line_end":108,"column_start":5,"column_end":11},"name":"Memory","qualname":"::primitives::SectionCode::Memory","value":"SectionCode::Memory","parent":{"krate":0,"index":1997},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2018},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":224145,"byte_end":224151,"line_start":109,"line_end":109,"column_start":5,"column_end":11},"name":"Global","qualname":"::primitives::SectionCode::Global","value":"SectionCode::Global","parent":{"krate":0,"index":1997},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2020},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":224184,"byte_end":224190,"line_start":110,"line_end":110,"column_start":5,"column_end":11},"name":"Export","qualname":"::primitives::SectionCode::Export","value":"SectionCode::Export","parent":{"krate":0,"index":1997},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2022},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":224211,"byte_end":224216,"line_start":111,"line_end":111,"column_start":5,"column_end":10},"name":"Start","qualname":"::primitives::SectionCode::Start","value":"SectionCode::Start","parent":{"krate":0,"index":1997},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2024},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":224257,"byte_end":224264,"line_start":112,"line_end":112,"column_start":5,"column_end":12},"name":"Element","qualname":"::primitives::SectionCode::Element","value":"SectionCode::Element","parent":{"krate":0,"index":1997},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2026},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":224293,"byte_end":224303,"line_start":113,"line_end":113,"column_start":5,"column_end":15},"name":"ModuleCode","qualname":"::primitives::SectionCode::ModuleCode","value":"SectionCode::ModuleCode","parent":{"krate":0,"index":1997},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2028},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":224331,"byte_end":224335,"line_start":114,"line_end":114,"column_start":5,"column_end":9},"name":"Code","qualname":"::primitives::SectionCode::Code","value":"SectionCode::Code","parent":{"krate":0,"index":1997},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2030},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":224373,"byte_end":224377,"line_start":115,"line_end":115,"column_start":5,"column_end":9},"name":"Data","qualname":"::primitives::SectionCode::Data","value":"SectionCode::Data","parent":{"krate":0,"index":1997},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2032},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":224406,"byte_end":224415,"line_start":116,"line_end":116,"column_start":5,"column_end":14},"name":"DataCount","qualname":"::primitives::SectionCode::DataCount","value":"SectionCode::DataCount","parent":{"krate":0,"index":1997},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1997},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":223678,"byte_end":223689,"line_start":96,"line_end":96,"column_start":10,"column_end":21},"name":"SectionCode","qualname":"::primitives::SectionCode","value":"pub enum SectionCode<'a> {\n    Custom {\n        name: &'a str,\n        kind: CustomSectionKind,\n    },\n    Type,\n    Alias,\n    Import,\n    Module,\n    Instance,\n    Function,\n    Table,\n    Memory,\n    Global,\n    Export,\n    Start,\n    Element,\n    ModuleCode,\n    Code,\n    Data,\n    DataCount,\n}","parent":null,"children":[{"krate":0,"index":1999},{"krate":0,"index":2002},{"krate":0,"index":2004},{"krate":0,"index":2006},{"krate":0,"index":2008},{"krate":0,"index":2010},{"krate":0,"index":2012},{"krate":0,"index":2014},{"krate":0,"index":2016},{"krate":0,"index":2018},{"krate":0,"index":2020},{"krate":0,"index":2022},{"krate":0,"index":2024},{"krate":0,"index":2026},{"krate":0,"index":2028},{"krate":0,"index":2030},{"krate":0,"index":2032}],"decl_id":null,"docs":" Section code as defined [here].","sig":null,"attributes":[{"value":"/ Section code as defined [here].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":223486,"byte_end":223521,"line_start":92,"line_end":92,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":223522,"byte_end":223525,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ [here]: https://webassembly.github.io/spec/core/binary/modules.html#sections","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":223526,"byte_end":223606,"line_start":94,"line_end":94,"column_start":1,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2068},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":224635,"byte_end":224638,"line_start":124,"line_end":124,"column_start":5,"column_end":8},"name":"I32","qualname":"::primitives::Type::I32","value":"Type::I32","parent":{"krate":0,"index":2067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2070},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":224644,"byte_end":224647,"line_start":125,"line_end":125,"column_start":5,"column_end":8},"name":"I64","qualname":"::primitives::Type::I64","value":"Type::I64","parent":{"krate":0,"index":2067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2072},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":224653,"byte_end":224656,"line_start":126,"line_end":126,"column_start":5,"column_end":8},"name":"F32","qualname":"::primitives::Type::F32","value":"Type::F32","parent":{"krate":0,"index":2067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2074},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":224662,"byte_end":224665,"line_start":127,"line_end":127,"column_start":5,"column_end":8},"name":"F64","qualname":"::primitives::Type::F64","value":"Type::F64","parent":{"krate":0,"index":2067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2076},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":224671,"byte_end":224675,"line_start":128,"line_end":128,"column_start":5,"column_end":9},"name":"V128","qualname":"::primitives::Type::V128","value":"Type::V128","parent":{"krate":0,"index":2067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2078},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":224681,"byte_end":224688,"line_start":129,"line_end":129,"column_start":5,"column_end":12},"name":"FuncRef","qualname":"::primitives::Type::FuncRef","value":"Type::FuncRef","parent":{"krate":0,"index":2067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2080},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":224694,"byte_end":224703,"line_start":130,"line_end":130,"column_start":5,"column_end":14},"name":"ExternRef","qualname":"::primitives::Type::ExternRef","value":"Type::ExternRef","parent":{"krate":0,"index":2067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2082},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":224709,"byte_end":224713,"line_start":131,"line_end":131,"column_start":5,"column_end":9},"name":"Func","qualname":"::primitives::Type::Func","value":"Type::Func","parent":{"krate":0,"index":2067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2084},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":224719,"byte_end":224733,"line_start":132,"line_end":132,"column_start":5,"column_end":19},"name":"EmptyBlockType","qualname":"::primitives::Type::EmptyBlockType","value":"Type::EmptyBlockType","parent":{"krate":0,"index":2067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2067},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":224624,"byte_end":224628,"line_start":123,"line_end":123,"column_start":10,"column_end":14},"name":"Type","qualname":"::primitives::Type","value":"pub enum Type {\n    I32,\n    I64,\n    F32,\n    F64,\n    V128,\n    FuncRef,\n    ExternRef,\n    Func,\n    EmptyBlockType,\n}","parent":null,"children":[{"krate":0,"index":2068},{"krate":0,"index":2070},{"krate":0,"index":2072},{"krate":0,"index":2074},{"krate":0,"index":2076},{"krate":0,"index":2078},{"krate":0,"index":2080},{"krate":0,"index":2082},{"krate":0,"index":2084}],"decl_id":null,"docs":" Types as defined [here].","sig":null,"attributes":[{"value":"/ Types as defined [here].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":224455,"byte_end":224483,"line_start":119,"line_end":119,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":224484,"byte_end":224487,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ [here]: https://webassembly.github.io/spec/core/syntax/types.html#types","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":224488,"byte_end":224563,"line_start":121,"line_end":121,"column_start":1,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2101},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":224991,"byte_end":224995,"line_start":142,"line_end":142,"column_start":5,"column_end":9},"name":"Type","qualname":"::primitives::TypeOrFuncType::Type","value":"TypeOrFuncType::Type(Type)","parent":{"krate":0,"index":2100},"children":[],"decl_id":null,"docs":" A value type.","sig":null,"attributes":[{"value":"/ A value type.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":224857,"byte_end":224874,"line_start":138,"line_end":138,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":224879,"byte_end":224882,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ When used as the type for a block, this type is the optional result","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":224887,"byte_end":224958,"line_start":140,"line_end":140,"column_start":5,"column_end":76}},{"value":"/ type: `[] -> [t?]`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":224963,"byte_end":224986,"line_start":141,"line_end":141,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2104},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":225081,"byte_end":225089,"line_start":145,"line_end":145,"column_start":5,"column_end":13},"name":"FuncType","qualname":"::primitives::TypeOrFuncType::FuncType","value":"TypeOrFuncType::FuncType(u32)","parent":{"krate":0,"index":2100},"children":[],"decl_id":null,"docs":" A function type (referenced as an index into the types section).\n","sig":null,"attributes":[{"value":"/ A function type (referenced as an index into the types section).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":225008,"byte_end":225076,"line_start":144,"line_end":144,"column_start":5,"column_end":73}}]},{"kind":"Enum","id":{"krate":0,"index":2100},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":224836,"byte_end":224850,"line_start":137,"line_end":137,"column_start":10,"column_end":24},"name":"TypeOrFuncType","qualname":"::primitives::TypeOrFuncType","value":"pub enum TypeOrFuncType {\n\n    /// A value type.\n    ///\n    /// When used as the type for a block, this type is the optional result\n    /// type: `[] -> [t?]`.\n    Type(Type),\n\n    /// A function type (referenced as an index into the types section).\n    FuncType(u32),\n}","parent":null,"children":[{"krate":0,"index":2101},{"krate":0,"index":2104}],"decl_id":null,"docs":" Either a value type or a function type.\n","sig":null,"attributes":[{"value":"/ Either a value type or a function type.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":224738,"byte_end":224781,"line_start":135,"line_end":135,"column_start":1,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2120},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":225284,"byte_end":225292,"line_start":153,"line_end":153,"column_start":5,"column_end":13},"name":"Function","qualname":"::primitives::ExternalKind::Function","value":"ExternalKind::Function","parent":{"krate":0,"index":2119},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2122},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":225298,"byte_end":225303,"line_start":154,"line_end":154,"column_start":5,"column_end":10},"name":"Table","qualname":"::primitives::ExternalKind::Table","value":"ExternalKind::Table","parent":{"krate":0,"index":2119},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2124},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":225309,"byte_end":225315,"line_start":155,"line_end":155,"column_start":5,"column_end":11},"name":"Memory","qualname":"::primitives::ExternalKind::Memory","value":"ExternalKind::Memory","parent":{"krate":0,"index":2119},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2126},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":225321,"byte_end":225327,"line_start":156,"line_end":156,"column_start":5,"column_end":11},"name":"Global","qualname":"::primitives::ExternalKind::Global","value":"ExternalKind::Global","parent":{"krate":0,"index":2119},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2128},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":225333,"byte_end":225337,"line_start":157,"line_end":157,"column_start":5,"column_end":9},"name":"Type","qualname":"::primitives::ExternalKind::Type","value":"ExternalKind::Type","parent":{"krate":0,"index":2119},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2130},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":225343,"byte_end":225349,"line_start":158,"line_end":158,"column_start":5,"column_end":11},"name":"Module","qualname":"::primitives::ExternalKind::Module","value":"ExternalKind::Module","parent":{"krate":0,"index":2119},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2132},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":225355,"byte_end":225363,"line_start":159,"line_end":159,"column_start":5,"column_end":13},"name":"Instance","qualname":"::primitives::ExternalKind::Instance","value":"ExternalKind::Instance","parent":{"krate":0,"index":2119},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2119},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":225265,"byte_end":225277,"line_start":152,"line_end":152,"column_start":10,"column_end":22},"name":"ExternalKind","qualname":"::primitives::ExternalKind","value":"pub enum ExternalKind {\n    Function,\n    Table,\n    Memory,\n    Global,\n    Type,\n    Module,\n    Instance,\n}","parent":null,"children":[{"krate":0,"index":2120},{"krate":0,"index":2122},{"krate":0,"index":2124},{"krate":0,"index":2126},{"krate":0,"index":2128},{"krate":0,"index":2130},{"krate":0,"index":2132}],"decl_id":null,"docs":" External types as defined [here].","sig":null,"attributes":[{"value":"/ External types as defined [here].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":225099,"byte_end":225136,"line_start":148,"line_end":148,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":225137,"byte_end":225140,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ [here]: https://webassembly.github.io/spec/core/syntax/types.html#external-types","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":225141,"byte_end":225225,"line_start":150,"line_end":150,"column_start":1,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2141},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":225419,"byte_end":225423,"line_start":164,"line_end":164,"column_start":5,"column_end":9},"name":"Func","qualname":"::primitives::TypeDef::Func","value":"TypeDef::Func(FuncType)","parent":{"krate":0,"index":2139},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2144},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":225439,"byte_end":225447,"line_start":165,"line_end":165,"column_start":5,"column_end":13},"name":"Instance","qualname":"::primitives::TypeDef::Instance","value":"TypeDef::Instance(InstanceType)","parent":{"krate":0,"index":2139},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":225471,"byte_end":225477,"line_start":166,"line_end":166,"column_start":5,"column_end":11},"name":"Module","qualname":"::primitives::TypeDef::Module","value":"TypeDef::Module(ModuleType)","parent":{"krate":0,"index":2139},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2139},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":225401,"byte_end":225408,"line_start":163,"line_end":163,"column_start":10,"column_end":17},"name":"TypeDef","qualname":"::primitives::TypeDef","value":"pub enum TypeDef<'a> {\n    Func(FuncType),\n    Instance(InstanceType),\n    Module(ModuleType),\n}","parent":null,"children":[{"krate":0,"index":2141},{"krate":0,"index":2144},{"krate":0,"index":2147}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2156},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":225554,"byte_end":225562,"line_start":170,"line_end":170,"column_start":12,"column_end":20},"name":"FuncType","qualname":"::primitives::FuncType","value":"FuncType { params, returns }","parent":null,"children":[{"krate":0,"index":2157},{"krate":0,"index":2158}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2157},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":225573,"byte_end":225579,"line_start":171,"line_end":171,"column_start":9,"column_end":15},"name":"params","qualname":"::primitives::FuncType::params","value":"std::boxed::Box<[primitives::Type]>","parent":{"krate":0,"index":2156},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2158},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":225602,"byte_end":225609,"line_start":172,"line_end":172,"column_start":9,"column_end":16},"name":"returns","qualname":"::primitives::FuncType::returns","value":"std::boxed::Box<[primitives::Type]>","parent":{"krate":0,"index":2156},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2173},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":225662,"byte_end":225674,"line_start":176,"line_end":176,"column_start":12,"column_end":24},"name":"InstanceType","qualname":"::primitives::InstanceType","value":"InstanceType { exports }","parent":null,"children":[{"krate":0,"index":2175}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2175},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":225689,"byte_end":225696,"line_start":177,"line_end":177,"column_start":9,"column_end":16},"name":"exports","qualname":"::primitives::InstanceType::exports","value":"std::boxed::Box<[primitives::ExportType<'a>]>","parent":{"krate":0,"index":2173},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2182},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":225759,"byte_end":225769,"line_start":181,"line_end":181,"column_start":12,"column_end":22},"name":"ModuleType","qualname":"::primitives::ModuleType","value":"ModuleType { imports, exports }","parent":null,"children":[{"krate":0,"index":2184},{"krate":0,"index":2185}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2184},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":225784,"byte_end":225791,"line_start":182,"line_end":182,"column_start":9,"column_end":16},"name":"imports","qualname":"::primitives::ModuleType::imports","value":"std::boxed::Box<[readers::import_section::Import<'a>]>","parent":{"krate":0,"index":2182},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2185},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":225827,"byte_end":225834,"line_start":183,"line_end":183,"column_start":9,"column_end":16},"name":"exports","qualname":"::primitives::ModuleType::exports","value":"std::boxed::Box<[primitives::ExportType<'a>]>","parent":{"krate":0,"index":2182},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2192},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":225897,"byte_end":225907,"line_start":187,"line_end":187,"column_start":12,"column_end":22},"name":"ExportType","qualname":"::primitives::ExportType","value":"ExportType { name, ty }","parent":null,"children":[{"krate":0,"index":2194},{"krate":0,"index":2195}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2194},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":225922,"byte_end":225926,"line_start":188,"line_end":188,"column_start":9,"column_end":13},"name":"name","qualname":"::primitives::ExportType::name","value":"&'a str","parent":{"krate":0,"index":2192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2195},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":225945,"byte_end":225947,"line_start":189,"line_end":189,"column_start":9,"column_end":11},"name":"ty","qualname":"::primitives::ExportType::ty","value":"primitives::ImportSectionEntryType","parent":{"krate":0,"index":2192},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2202},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":226032,"byte_end":226047,"line_start":193,"line_end":193,"column_start":12,"column_end":27},"name":"ResizableLimits","qualname":"::primitives::ResizableLimits","value":"ResizableLimits { initial, maximum }","parent":null,"children":[{"krate":0,"index":2203},{"krate":0,"index":2204}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2203},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":226058,"byte_end":226065,"line_start":194,"line_end":194,"column_start":9,"column_end":16},"name":"initial","qualname":"::primitives::ResizableLimits::initial","value":"u32","parent":{"krate":0,"index":2202},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2204},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":226080,"byte_end":226087,"line_start":195,"line_end":195,"column_start":9,"column_end":16},"name":"maximum","qualname":"::primitives::ResizableLimits::maximum","value":"std::option::Option<u32>","parent":{"krate":0,"index":2202},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2217},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":226161,"byte_end":226170,"line_start":199,"line_end":199,"column_start":12,"column_end":21},"name":"TableType","qualname":"::primitives::TableType","value":"TableType { element_type, limits }","parent":null,"children":[{"krate":0,"index":2218},{"krate":0,"index":2219}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2218},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":226181,"byte_end":226193,"line_start":200,"line_end":200,"column_start":9,"column_end":21},"name":"element_type","qualname":"::primitives::TableType::element_type","value":"primitives::Type","parent":{"krate":0,"index":2217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2219},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":226209,"byte_end":226215,"line_start":201,"line_end":201,"column_start":9,"column_end":15},"name":"limits","qualname":"::primitives::TableType::limits","value":"primitives::ResizableLimits","parent":{"krate":0,"index":2217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2232},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":226293,"byte_end":226303,"line_start":205,"line_end":205,"column_start":12,"column_end":22},"name":"MemoryType","qualname":"::primitives::MemoryType","value":"MemoryType { limits, shared }","parent":null,"children":[{"krate":0,"index":2233},{"krate":0,"index":2234}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2233},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":226314,"byte_end":226320,"line_start":206,"line_end":206,"column_start":9,"column_end":15},"name":"limits","qualname":"::primitives::MemoryType::limits","value":"primitives::ResizableLimits","parent":{"krate":0,"index":2232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2234},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":226347,"byte_end":226353,"line_start":207,"line_end":207,"column_start":9,"column_end":15},"name":"shared","qualname":"::primitives::MemoryType::shared","value":"bool","parent":{"krate":0,"index":2232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2247},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":226420,"byte_end":226430,"line_start":211,"line_end":211,"column_start":12,"column_end":22},"name":"GlobalType","qualname":"::primitives::GlobalType","value":"GlobalType { content_type, mutable }","parent":null,"children":[{"krate":0,"index":2248},{"krate":0,"index":2249}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2248},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":226441,"byte_end":226453,"line_start":212,"line_end":212,"column_start":9,"column_end":21},"name":"content_type","qualname":"::primitives::GlobalType::content_type","value":"primitives::Type","parent":{"krate":0,"index":2247},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2249},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":226469,"byte_end":226476,"line_start":213,"line_end":213,"column_start":9,"column_end":16},"name":"mutable","qualname":"::primitives::GlobalType::mutable","value":"bool","parent":{"krate":0,"index":2247},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2263},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":226555,"byte_end":226563,"line_start":218,"line_end":218,"column_start":5,"column_end":13},"name":"Function","qualname":"::primitives::ImportSectionEntryType::Function","value":"ImportSectionEntryType::Function(u32)","parent":{"krate":0,"index":2262},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2266},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":226574,"byte_end":226579,"line_start":219,"line_end":219,"column_start":5,"column_end":10},"name":"Table","qualname":"::primitives::ImportSectionEntryType::Table","value":"ImportSectionEntryType::Table(TableType)","parent":{"krate":0,"index":2262},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2269},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":226596,"byte_end":226602,"line_start":220,"line_end":220,"column_start":5,"column_end":11},"name":"Memory","qualname":"::primitives::ImportSectionEntryType::Memory","value":"ImportSectionEntryType::Memory(MemoryType)","parent":{"krate":0,"index":2262},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2272},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":226620,"byte_end":226626,"line_start":221,"line_end":221,"column_start":5,"column_end":11},"name":"Global","qualname":"::primitives::ImportSectionEntryType::Global","value":"ImportSectionEntryType::Global(GlobalType)","parent":{"krate":0,"index":2262},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2275},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":226644,"byte_end":226650,"line_start":222,"line_end":222,"column_start":5,"column_end":11},"name":"Module","qualname":"::primitives::ImportSectionEntryType::Module","value":"ImportSectionEntryType::Module(u32)","parent":{"krate":0,"index":2262},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2278},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":226661,"byte_end":226669,"line_start":223,"line_end":223,"column_start":5,"column_end":13},"name":"Instance","qualname":"::primitives::ImportSectionEntryType::Instance","value":"ImportSectionEntryType::Instance(u32)","parent":{"krate":0,"index":2262},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2262},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":226526,"byte_end":226548,"line_start":217,"line_end":217,"column_start":10,"column_end":32},"name":"ImportSectionEntryType","qualname":"::primitives::ImportSectionEntryType","value":"pub enum ImportSectionEntryType {\n    Function(u32),\n    Table(TableType),\n    Memory(MemoryType),\n    Global(GlobalType),\n    Module(u32),\n    Instance(u32),\n}","parent":null,"children":[{"krate":0,"index":2263},{"krate":0,"index":2266},{"krate":0,"index":2269},{"krate":0,"index":2272},{"krate":0,"index":2275},{"krate":0,"index":2278}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2286},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":226720,"byte_end":226735,"line_start":227,"line_end":227,"column_start":12,"column_end":27},"name":"MemoryImmediate","qualname":"::primitives::MemoryImmediate","value":"MemoryImmediate { flags, offset }","parent":null,"children":[{"krate":0,"index":2287},{"krate":0,"index":2288}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2287},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":226746,"byte_end":226751,"line_start":228,"line_end":228,"column_start":9,"column_end":14},"name":"flags","qualname":"::primitives::MemoryImmediate::flags","value":"u32","parent":{"krate":0,"index":2286},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2288},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":226766,"byte_end":226772,"line_start":229,"line_end":229,"column_start":9,"column_end":15},"name":"offset","qualname":"::primitives::MemoryImmediate::offset","value":"u32","parent":{"krate":0,"index":2286},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2294},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":226823,"byte_end":226829,"line_start":233,"line_end":233,"column_start":12,"column_end":18},"name":"Naming","qualname":"::primitives::Naming","value":"Naming { index, name }","parent":null,"children":[{"krate":0,"index":2296},{"krate":0,"index":2297}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2296},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":226844,"byte_end":226849,"line_start":234,"line_end":234,"column_start":9,"column_end":14},"name":"index","qualname":"::primitives::Naming::index","value":"u32","parent":{"krate":0,"index":2294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2297},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":226864,"byte_end":226868,"line_start":235,"line_end":235,"column_start":9,"column_end":13},"name":"name","qualname":"::primitives::Naming::name","value":"&'a str","parent":{"krate":0,"index":2294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2307},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":226936,"byte_end":226942,"line_start":240,"line_end":240,"column_start":5,"column_end":11},"name":"Module","qualname":"::primitives::NameType::Module","value":"NameType::Module","parent":{"krate":0,"index":2306},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2309},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":226948,"byte_end":226956,"line_start":241,"line_end":241,"column_start":5,"column_end":13},"name":"Function","qualname":"::primitives::NameType::Function","value":"NameType::Function","parent":{"krate":0,"index":2306},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2311},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":226962,"byte_end":226967,"line_start":242,"line_end":242,"column_start":5,"column_end":10},"name":"Local","qualname":"::primitives::NameType::Local","value":"NameType::Local","parent":{"krate":0,"index":2306},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2306},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":226921,"byte_end":226929,"line_start":239,"line_end":239,"column_start":10,"column_end":18},"name":"NameType","qualname":"::primitives::NameType","value":"pub enum NameType { Module, Function, Local, }","parent":null,"children":[{"krate":0,"index":2307},{"krate":0,"index":2309},{"krate":0,"index":2311}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2319},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":227029,"byte_end":227041,"line_start":247,"line_end":247,"column_start":5,"column_end":17},"name":"StackPointer","qualname":"::primitives::LinkingType::StackPointer","value":"LinkingType::StackPointer(u32)","parent":{"krate":0,"index":2318},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2318},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":227011,"byte_end":227022,"line_start":246,"line_end":246,"column_start":10,"column_end":21},"name":"LinkingType","qualname":"::primitives::LinkingType","value":"pub enum LinkingType { StackPointer(u32), }","parent":null,"children":[{"krate":0,"index":2319}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2328},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":227106,"byte_end":227122,"line_start":252,"line_end":252,"column_start":5,"column_end":21},"name":"FunctionIndexLEB","qualname":"::primitives::RelocType::FunctionIndexLEB","value":"RelocType::FunctionIndexLEB","parent":{"krate":0,"index":2327},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2330},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":227128,"byte_end":227142,"line_start":253,"line_end":253,"column_start":5,"column_end":19},"name":"TableIndexSLEB","qualname":"::primitives::RelocType::TableIndexSLEB","value":"RelocType::TableIndexSLEB","parent":{"krate":0,"index":2327},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2332},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":227148,"byte_end":227161,"line_start":254,"line_end":254,"column_start":5,"column_end":18},"name":"TableIndexI32","qualname":"::primitives::RelocType::TableIndexI32","value":"RelocType::TableIndexI32","parent":{"krate":0,"index":2327},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2334},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":227167,"byte_end":227180,"line_start":255,"line_end":255,"column_start":5,"column_end":18},"name":"GlobalAddrLEB","qualname":"::primitives::RelocType::GlobalAddrLEB","value":"RelocType::GlobalAddrLEB","parent":{"krate":0,"index":2327},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2336},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":227186,"byte_end":227200,"line_start":256,"line_end":256,"column_start":5,"column_end":19},"name":"GlobalAddrSLEB","qualname":"::primitives::RelocType::GlobalAddrSLEB","value":"RelocType::GlobalAddrSLEB","parent":{"krate":0,"index":2327},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2338},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":227206,"byte_end":227219,"line_start":257,"line_end":257,"column_start":5,"column_end":18},"name":"GlobalAddrI32","qualname":"::primitives::RelocType::GlobalAddrI32","value":"RelocType::GlobalAddrI32","parent":{"krate":0,"index":2327},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2340},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":227225,"byte_end":227237,"line_start":258,"line_end":258,"column_start":5,"column_end":17},"name":"TypeIndexLEB","qualname":"::primitives::RelocType::TypeIndexLEB","value":"RelocType::TypeIndexLEB","parent":{"krate":0,"index":2327},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2342},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":227243,"byte_end":227257,"line_start":259,"line_end":259,"column_start":5,"column_end":19},"name":"GlobalIndexLEB","qualname":"::primitives::RelocType::GlobalIndexLEB","value":"RelocType::GlobalIndexLEB","parent":{"krate":0,"index":2327},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2327},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":227090,"byte_end":227099,"line_start":251,"line_end":251,"column_start":10,"column_end":19},"name":"RelocType","qualname":"::primitives::RelocType","value":"pub enum RelocType {\n    FunctionIndexLEB,\n    TableIndexSLEB,\n    TableIndexI32,\n    GlobalAddrLEB,\n    GlobalAddrSLEB,\n    GlobalAddrI32,\n    TypeIndexLEB,\n    GlobalIndexLEB,\n}","parent":null,"children":[{"krate":0,"index":2328},{"krate":0,"index":2330},{"krate":0,"index":2332},{"krate":0,"index":2334},{"krate":0,"index":2336},{"krate":0,"index":2338},{"krate":0,"index":2340},{"krate":0,"index":2342}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2349},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":227336,"byte_end":227343,"line_start":264,"line_end":264,"column_start":12,"column_end":19},"name":"BrTable","qualname":"::primitives::BrTable","value":"BrTable {  }","parent":null,"children":[{"krate":0,"index":2351},{"krate":0,"index":2352}],"decl_id":null,"docs":" A br_table entries representation.\n","sig":null,"attributes":[{"value":"/ A br_table entries representation.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":227262,"byte_end":227300,"line_start":262,"line_end":262,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":2359},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":227618,"byte_end":227624,"line_start":274,"line_end":274,"column_start":12,"column_end":18},"name":"Ieee32","qualname":"::primitives::Ieee32","value":"","parent":null,"children":[],"decl_id":null,"docs":" An IEEE binary32 immediate floating point value, represented as a u32\n containing the bitpattern.","sig":null,"attributes":[{"value":"/ An IEEE binary32 immediate floating point value, represented as a u32","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":227413,"byte_end":227486,"line_start":269,"line_end":269,"column_start":1,"column_end":74}},{"value":"/ containing the bitpattern.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":227487,"byte_end":227517,"line_start":270,"line_end":270,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":227518,"byte_end":227521,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ All bit patterns are allowed.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":227522,"byte_end":227555,"line_start":272,"line_end":272,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":227668,"byte_end":227672,"line_start":277,"line_end":277,"column_start":12,"column_end":16},"name":"bits","qualname":"<Ieee32>::bits","value":"pub fn bits(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2377},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":227917,"byte_end":227923,"line_start":287,"line_end":287,"column_start":12,"column_end":18},"name":"Ieee64","qualname":"::primitives::Ieee64","value":"","parent":null,"children":[],"decl_id":null,"docs":" An IEEE binary64 immediate floating point value, represented as a u64\n containing the bitpattern.","sig":null,"attributes":[{"value":"/ An IEEE binary64 immediate floating point value, represented as a u64","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":227712,"byte_end":227785,"line_start":282,"line_end":282,"column_start":1,"column_end":74}},{"value":"/ containing the bitpattern.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":227786,"byte_end":227816,"line_start":283,"line_end":283,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":227817,"byte_end":227820,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ All bit patterns are allowed.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":227821,"byte_end":227854,"line_start":285,"line_end":285,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":227967,"byte_end":227971,"line_start":290,"line_end":290,"column_start":12,"column_end":16},"name":"bits","qualname":"<Ieee64>::bits","value":"pub fn bits(Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2395},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":228073,"byte_end":228077,"line_start":296,"line_end":296,"column_start":12,"column_end":16},"name":"V128","qualname":"::primitives::V128","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":228124,"byte_end":228129,"line_start":299,"line_end":299,"column_start":12,"column_end":17},"name":"bytes","qualname":"<V128>::bytes","value":"pub fn bytes(&Self) -> &[u8; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2418},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":228376,"byte_end":228387,"line_start":311,"line_end":311,"column_start":5,"column_end":16},"name":"Unreachable","qualname":"::primitives::Operator::Unreachable","value":"Operator::Unreachable","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2420},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":228393,"byte_end":228396,"line_start":312,"line_end":312,"column_start":5,"column_end":8},"name":"Nop","qualname":"::primitives::Operator::Nop","value":"Operator::Nop","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2422},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":228402,"byte_end":228407,"line_start":313,"line_end":313,"column_start":5,"column_end":10},"name":"Block","qualname":"::primitives::Operator::Block","value":"Operator::Block { ty }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2424},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":228436,"byte_end":228440,"line_start":314,"line_end":314,"column_start":5,"column_end":9},"name":"Loop","qualname":"::primitives::Operator::Loop","value":"Operator::Loop { ty }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2426},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":228469,"byte_end":228471,"line_start":315,"line_end":315,"column_start":5,"column_end":7},"name":"If","qualname":"::primitives::Operator::If","value":"Operator::If { ty }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2428},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":228500,"byte_end":228504,"line_start":316,"line_end":316,"column_start":5,"column_end":9},"name":"Else","qualname":"::primitives::Operator::Else","value":"Operator::Else","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2430},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":228510,"byte_end":228513,"line_start":317,"line_end":317,"column_start":5,"column_end":8},"name":"End","qualname":"::primitives::Operator::End","value":"Operator::End","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2432},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":228519,"byte_end":228521,"line_start":318,"line_end":318,"column_start":5,"column_end":7},"name":"Br","qualname":"::primitives::Operator::Br","value":"Operator::Br { relative_depth }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2434},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":228551,"byte_end":228555,"line_start":319,"line_end":319,"column_start":5,"column_end":9},"name":"BrIf","qualname":"::primitives::Operator::BrIf","value":"Operator::BrIf { relative_depth }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2436},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":228585,"byte_end":228592,"line_start":320,"line_end":320,"column_start":5,"column_end":12},"name":"BrTable","qualname":"::primitives::Operator::BrTable","value":"Operator::BrTable { table }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2438},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":228621,"byte_end":228627,"line_start":321,"line_end":321,"column_start":5,"column_end":11},"name":"Return","qualname":"::primitives::Operator::Return","value":"Operator::Return","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2440},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":228633,"byte_end":228637,"line_start":322,"line_end":322,"column_start":5,"column_end":9},"name":"Call","qualname":"::primitives::Operator::Call","value":"Operator::Call { function_index }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2442},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":228667,"byte_end":228679,"line_start":323,"line_end":323,"column_start":5,"column_end":17},"name":"CallIndirect","qualname":"::primitives::Operator::CallIndirect","value":"Operator::CallIndirect { index, table_index }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2445},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":228718,"byte_end":228728,"line_start":324,"line_end":324,"column_start":5,"column_end":15},"name":"ReturnCall","qualname":"::primitives::Operator::ReturnCall","value":"Operator::ReturnCall { function_index }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2447},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":228758,"byte_end":228776,"line_start":325,"line_end":325,"column_start":5,"column_end":23},"name":"ReturnCallIndirect","qualname":"::primitives::Operator::ReturnCallIndirect","value":"Operator::ReturnCallIndirect { index, table_index }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2450},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":228815,"byte_end":228819,"line_start":326,"line_end":326,"column_start":5,"column_end":9},"name":"Drop","qualname":"::primitives::Operator::Drop","value":"Operator::Drop","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2452},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":228825,"byte_end":228831,"line_start":327,"line_end":327,"column_start":5,"column_end":11},"name":"Select","qualname":"::primitives::Operator::Select","value":"Operator::Select","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2454},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":228837,"byte_end":228848,"line_start":328,"line_end":328,"column_start":5,"column_end":16},"name":"TypedSelect","qualname":"::primitives::Operator::TypedSelect","value":"Operator::TypedSelect { ty }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2456},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":228867,"byte_end":228875,"line_start":329,"line_end":329,"column_start":5,"column_end":13},"name":"LocalGet","qualname":"::primitives::Operator::LocalGet","value":"Operator::LocalGet { local_index }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2458},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":228902,"byte_end":228910,"line_start":330,"line_end":330,"column_start":5,"column_end":13},"name":"LocalSet","qualname":"::primitives::Operator::LocalSet","value":"Operator::LocalSet { local_index }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2460},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":228937,"byte_end":228945,"line_start":331,"line_end":331,"column_start":5,"column_end":13},"name":"LocalTee","qualname":"::primitives::Operator::LocalTee","value":"Operator::LocalTee { local_index }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2462},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":228972,"byte_end":228981,"line_start":332,"line_end":332,"column_start":5,"column_end":14},"name":"GlobalGet","qualname":"::primitives::Operator::GlobalGet","value":"Operator::GlobalGet { global_index }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2464},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":229009,"byte_end":229018,"line_start":333,"line_end":333,"column_start":5,"column_end":14},"name":"GlobalSet","qualname":"::primitives::Operator::GlobalSet","value":"Operator::GlobalSet { global_index }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2466},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":229046,"byte_end":229053,"line_start":334,"line_end":334,"column_start":5,"column_end":12},"name":"I32Load","qualname":"::primitives::Operator::I32Load","value":"Operator::I32Load { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2468},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":229087,"byte_end":229094,"line_start":335,"line_end":335,"column_start":5,"column_end":12},"name":"I64Load","qualname":"::primitives::Operator::I64Load","value":"Operator::I64Load { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2470},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":229128,"byte_end":229135,"line_start":336,"line_end":336,"column_start":5,"column_end":12},"name":"F32Load","qualname":"::primitives::Operator::F32Load","value":"Operator::F32Load { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2472},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":229169,"byte_end":229176,"line_start":337,"line_end":337,"column_start":5,"column_end":12},"name":"F64Load","qualname":"::primitives::Operator::F64Load","value":"Operator::F64Load { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2474},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":229210,"byte_end":229219,"line_start":338,"line_end":338,"column_start":5,"column_end":14},"name":"I32Load8S","qualname":"::primitives::Operator::I32Load8S","value":"Operator::I32Load8S { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2476},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":229253,"byte_end":229262,"line_start":339,"line_end":339,"column_start":5,"column_end":14},"name":"I32Load8U","qualname":"::primitives::Operator::I32Load8U","value":"Operator::I32Load8U { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2478},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":229296,"byte_end":229306,"line_start":340,"line_end":340,"column_start":5,"column_end":15},"name":"I32Load16S","qualname":"::primitives::Operator::I32Load16S","value":"Operator::I32Load16S { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2480},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":229340,"byte_end":229350,"line_start":341,"line_end":341,"column_start":5,"column_end":15},"name":"I32Load16U","qualname":"::primitives::Operator::I32Load16U","value":"Operator::I32Load16U { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2482},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":229384,"byte_end":229393,"line_start":342,"line_end":342,"column_start":5,"column_end":14},"name":"I64Load8S","qualname":"::primitives::Operator::I64Load8S","value":"Operator::I64Load8S { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2484},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":229427,"byte_end":229436,"line_start":343,"line_end":343,"column_start":5,"column_end":14},"name":"I64Load8U","qualname":"::primitives::Operator::I64Load8U","value":"Operator::I64Load8U { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2486},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":229470,"byte_end":229480,"line_start":344,"line_end":344,"column_start":5,"column_end":15},"name":"I64Load16S","qualname":"::primitives::Operator::I64Load16S","value":"Operator::I64Load16S { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2488},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":229514,"byte_end":229524,"line_start":345,"line_end":345,"column_start":5,"column_end":15},"name":"I64Load16U","qualname":"::primitives::Operator::I64Load16U","value":"Operator::I64Load16U { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2490},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":229558,"byte_end":229568,"line_start":346,"line_end":346,"column_start":5,"column_end":15},"name":"I64Load32S","qualname":"::primitives::Operator::I64Load32S","value":"Operator::I64Load32S { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2492},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":229602,"byte_end":229612,"line_start":347,"line_end":347,"column_start":5,"column_end":15},"name":"I64Load32U","qualname":"::primitives::Operator::I64Load32U","value":"Operator::I64Load32U { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2494},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":229646,"byte_end":229654,"line_start":348,"line_end":348,"column_start":5,"column_end":13},"name":"I32Store","qualname":"::primitives::Operator::I32Store","value":"Operator::I32Store { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2496},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":229688,"byte_end":229696,"line_start":349,"line_end":349,"column_start":5,"column_end":13},"name":"I64Store","qualname":"::primitives::Operator::I64Store","value":"Operator::I64Store { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2498},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":229730,"byte_end":229738,"line_start":350,"line_end":350,"column_start":5,"column_end":13},"name":"F32Store","qualname":"::primitives::Operator::F32Store","value":"Operator::F32Store { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2500},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":229772,"byte_end":229780,"line_start":351,"line_end":351,"column_start":5,"column_end":13},"name":"F64Store","qualname":"::primitives::Operator::F64Store","value":"Operator::F64Store { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2502},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":229814,"byte_end":229823,"line_start":352,"line_end":352,"column_start":5,"column_end":14},"name":"I32Store8","qualname":"::primitives::Operator::I32Store8","value":"Operator::I32Store8 { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2504},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":229857,"byte_end":229867,"line_start":353,"line_end":353,"column_start":5,"column_end":15},"name":"I32Store16","qualname":"::primitives::Operator::I32Store16","value":"Operator::I32Store16 { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2506},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":229901,"byte_end":229910,"line_start":354,"line_end":354,"column_start":5,"column_end":14},"name":"I64Store8","qualname":"::primitives::Operator::I64Store8","value":"Operator::I64Store8 { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2508},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":229944,"byte_end":229954,"line_start":355,"line_end":355,"column_start":5,"column_end":15},"name":"I64Store16","qualname":"::primitives::Operator::I64Store16","value":"Operator::I64Store16 { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2510},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":229988,"byte_end":229998,"line_start":356,"line_end":356,"column_start":5,"column_end":15},"name":"I64Store32","qualname":"::primitives::Operator::I64Store32","value":"Operator::I64Store32 { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2512},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230032,"byte_end":230042,"line_start":357,"line_end":357,"column_start":5,"column_end":15},"name":"MemorySize","qualname":"::primitives::Operator::MemorySize","value":"Operator::MemorySize { reserved }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2514},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230066,"byte_end":230076,"line_start":358,"line_end":358,"column_start":5,"column_end":15},"name":"MemoryGrow","qualname":"::primitives::Operator::MemoryGrow","value":"Operator::MemoryGrow { reserved }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2516},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230100,"byte_end":230108,"line_start":359,"line_end":359,"column_start":5,"column_end":13},"name":"I32Const","qualname":"::primitives::Operator::I32Const","value":"Operator::I32Const { value }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2518},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230129,"byte_end":230137,"line_start":360,"line_end":360,"column_start":5,"column_end":13},"name":"I64Const","qualname":"::primitives::Operator::I64Const","value":"Operator::I64Const { value }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2520},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230158,"byte_end":230166,"line_start":361,"line_end":361,"column_start":5,"column_end":13},"name":"F32Const","qualname":"::primitives::Operator::F32Const","value":"Operator::F32Const { value }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2522},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230190,"byte_end":230198,"line_start":362,"line_end":362,"column_start":5,"column_end":13},"name":"F64Const","qualname":"::primitives::Operator::F64Const","value":"Operator::F64Const { value }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2524},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230222,"byte_end":230229,"line_start":363,"line_end":363,"column_start":5,"column_end":12},"name":"RefNull","qualname":"::primitives::Operator::RefNull","value":"Operator::RefNull { ty }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2526},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230248,"byte_end":230257,"line_start":364,"line_end":364,"column_start":5,"column_end":14},"name":"RefIsNull","qualname":"::primitives::Operator::RefIsNull","value":"Operator::RefIsNull","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2528},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230263,"byte_end":230270,"line_start":365,"line_end":365,"column_start":5,"column_end":12},"name":"RefFunc","qualname":"::primitives::Operator::RefFunc","value":"Operator::RefFunc { function_index }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2530},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230300,"byte_end":230306,"line_start":366,"line_end":366,"column_start":5,"column_end":11},"name":"I32Eqz","qualname":"::primitives::Operator::I32Eqz","value":"Operator::I32Eqz","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2532},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230312,"byte_end":230317,"line_start":367,"line_end":367,"column_start":5,"column_end":10},"name":"I32Eq","qualname":"::primitives::Operator::I32Eq","value":"Operator::I32Eq","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2534},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230323,"byte_end":230328,"line_start":368,"line_end":368,"column_start":5,"column_end":10},"name":"I32Ne","qualname":"::primitives::Operator::I32Ne","value":"Operator::I32Ne","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2536},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230334,"byte_end":230340,"line_start":369,"line_end":369,"column_start":5,"column_end":11},"name":"I32LtS","qualname":"::primitives::Operator::I32LtS","value":"Operator::I32LtS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2538},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230346,"byte_end":230352,"line_start":370,"line_end":370,"column_start":5,"column_end":11},"name":"I32LtU","qualname":"::primitives::Operator::I32LtU","value":"Operator::I32LtU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2540},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230358,"byte_end":230364,"line_start":371,"line_end":371,"column_start":5,"column_end":11},"name":"I32GtS","qualname":"::primitives::Operator::I32GtS","value":"Operator::I32GtS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2542},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230370,"byte_end":230376,"line_start":372,"line_end":372,"column_start":5,"column_end":11},"name":"I32GtU","qualname":"::primitives::Operator::I32GtU","value":"Operator::I32GtU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2544},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230382,"byte_end":230388,"line_start":373,"line_end":373,"column_start":5,"column_end":11},"name":"I32LeS","qualname":"::primitives::Operator::I32LeS","value":"Operator::I32LeS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2546},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230394,"byte_end":230400,"line_start":374,"line_end":374,"column_start":5,"column_end":11},"name":"I32LeU","qualname":"::primitives::Operator::I32LeU","value":"Operator::I32LeU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2548},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230406,"byte_end":230412,"line_start":375,"line_end":375,"column_start":5,"column_end":11},"name":"I32GeS","qualname":"::primitives::Operator::I32GeS","value":"Operator::I32GeS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2550},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230418,"byte_end":230424,"line_start":376,"line_end":376,"column_start":5,"column_end":11},"name":"I32GeU","qualname":"::primitives::Operator::I32GeU","value":"Operator::I32GeU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2552},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230430,"byte_end":230436,"line_start":377,"line_end":377,"column_start":5,"column_end":11},"name":"I64Eqz","qualname":"::primitives::Operator::I64Eqz","value":"Operator::I64Eqz","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2554},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230442,"byte_end":230447,"line_start":378,"line_end":378,"column_start":5,"column_end":10},"name":"I64Eq","qualname":"::primitives::Operator::I64Eq","value":"Operator::I64Eq","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2556},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230453,"byte_end":230458,"line_start":379,"line_end":379,"column_start":5,"column_end":10},"name":"I64Ne","qualname":"::primitives::Operator::I64Ne","value":"Operator::I64Ne","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2558},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230464,"byte_end":230470,"line_start":380,"line_end":380,"column_start":5,"column_end":11},"name":"I64LtS","qualname":"::primitives::Operator::I64LtS","value":"Operator::I64LtS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2560},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230476,"byte_end":230482,"line_start":381,"line_end":381,"column_start":5,"column_end":11},"name":"I64LtU","qualname":"::primitives::Operator::I64LtU","value":"Operator::I64LtU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2562},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230488,"byte_end":230494,"line_start":382,"line_end":382,"column_start":5,"column_end":11},"name":"I64GtS","qualname":"::primitives::Operator::I64GtS","value":"Operator::I64GtS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2564},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230500,"byte_end":230506,"line_start":383,"line_end":383,"column_start":5,"column_end":11},"name":"I64GtU","qualname":"::primitives::Operator::I64GtU","value":"Operator::I64GtU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2566},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230512,"byte_end":230518,"line_start":384,"line_end":384,"column_start":5,"column_end":11},"name":"I64LeS","qualname":"::primitives::Operator::I64LeS","value":"Operator::I64LeS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2568},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230524,"byte_end":230530,"line_start":385,"line_end":385,"column_start":5,"column_end":11},"name":"I64LeU","qualname":"::primitives::Operator::I64LeU","value":"Operator::I64LeU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2570},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230536,"byte_end":230542,"line_start":386,"line_end":386,"column_start":5,"column_end":11},"name":"I64GeS","qualname":"::primitives::Operator::I64GeS","value":"Operator::I64GeS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2572},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230548,"byte_end":230554,"line_start":387,"line_end":387,"column_start":5,"column_end":11},"name":"I64GeU","qualname":"::primitives::Operator::I64GeU","value":"Operator::I64GeU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2574},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230560,"byte_end":230565,"line_start":388,"line_end":388,"column_start":5,"column_end":10},"name":"F32Eq","qualname":"::primitives::Operator::F32Eq","value":"Operator::F32Eq","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2576},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230571,"byte_end":230576,"line_start":389,"line_end":389,"column_start":5,"column_end":10},"name":"F32Ne","qualname":"::primitives::Operator::F32Ne","value":"Operator::F32Ne","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2578},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230582,"byte_end":230587,"line_start":390,"line_end":390,"column_start":5,"column_end":10},"name":"F32Lt","qualname":"::primitives::Operator::F32Lt","value":"Operator::F32Lt","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2580},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230593,"byte_end":230598,"line_start":391,"line_end":391,"column_start":5,"column_end":10},"name":"F32Gt","qualname":"::primitives::Operator::F32Gt","value":"Operator::F32Gt","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2582},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230604,"byte_end":230609,"line_start":392,"line_end":392,"column_start":5,"column_end":10},"name":"F32Le","qualname":"::primitives::Operator::F32Le","value":"Operator::F32Le","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2584},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230615,"byte_end":230620,"line_start":393,"line_end":393,"column_start":5,"column_end":10},"name":"F32Ge","qualname":"::primitives::Operator::F32Ge","value":"Operator::F32Ge","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2586},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230626,"byte_end":230631,"line_start":394,"line_end":394,"column_start":5,"column_end":10},"name":"F64Eq","qualname":"::primitives::Operator::F64Eq","value":"Operator::F64Eq","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2588},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230637,"byte_end":230642,"line_start":395,"line_end":395,"column_start":5,"column_end":10},"name":"F64Ne","qualname":"::primitives::Operator::F64Ne","value":"Operator::F64Ne","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2590},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230648,"byte_end":230653,"line_start":396,"line_end":396,"column_start":5,"column_end":10},"name":"F64Lt","qualname":"::primitives::Operator::F64Lt","value":"Operator::F64Lt","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2592},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230659,"byte_end":230664,"line_start":397,"line_end":397,"column_start":5,"column_end":10},"name":"F64Gt","qualname":"::primitives::Operator::F64Gt","value":"Operator::F64Gt","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2594},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230670,"byte_end":230675,"line_start":398,"line_end":398,"column_start":5,"column_end":10},"name":"F64Le","qualname":"::primitives::Operator::F64Le","value":"Operator::F64Le","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2596},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230681,"byte_end":230686,"line_start":399,"line_end":399,"column_start":5,"column_end":10},"name":"F64Ge","qualname":"::primitives::Operator::F64Ge","value":"Operator::F64Ge","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2598},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230692,"byte_end":230698,"line_start":400,"line_end":400,"column_start":5,"column_end":11},"name":"I32Clz","qualname":"::primitives::Operator::I32Clz","value":"Operator::I32Clz","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2600},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230704,"byte_end":230710,"line_start":401,"line_end":401,"column_start":5,"column_end":11},"name":"I32Ctz","qualname":"::primitives::Operator::I32Ctz","value":"Operator::I32Ctz","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2602},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230716,"byte_end":230725,"line_start":402,"line_end":402,"column_start":5,"column_end":14},"name":"I32Popcnt","qualname":"::primitives::Operator::I32Popcnt","value":"Operator::I32Popcnt","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2604},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230731,"byte_end":230737,"line_start":403,"line_end":403,"column_start":5,"column_end":11},"name":"I32Add","qualname":"::primitives::Operator::I32Add","value":"Operator::I32Add","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2606},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230743,"byte_end":230749,"line_start":404,"line_end":404,"column_start":5,"column_end":11},"name":"I32Sub","qualname":"::primitives::Operator::I32Sub","value":"Operator::I32Sub","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2608},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230755,"byte_end":230761,"line_start":405,"line_end":405,"column_start":5,"column_end":11},"name":"I32Mul","qualname":"::primitives::Operator::I32Mul","value":"Operator::I32Mul","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2610},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230767,"byte_end":230774,"line_start":406,"line_end":406,"column_start":5,"column_end":12},"name":"I32DivS","qualname":"::primitives::Operator::I32DivS","value":"Operator::I32DivS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2612},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230780,"byte_end":230787,"line_start":407,"line_end":407,"column_start":5,"column_end":12},"name":"I32DivU","qualname":"::primitives::Operator::I32DivU","value":"Operator::I32DivU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2614},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230793,"byte_end":230800,"line_start":408,"line_end":408,"column_start":5,"column_end":12},"name":"I32RemS","qualname":"::primitives::Operator::I32RemS","value":"Operator::I32RemS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2616},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230806,"byte_end":230813,"line_start":409,"line_end":409,"column_start":5,"column_end":12},"name":"I32RemU","qualname":"::primitives::Operator::I32RemU","value":"Operator::I32RemU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2618},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230819,"byte_end":230825,"line_start":410,"line_end":410,"column_start":5,"column_end":11},"name":"I32And","qualname":"::primitives::Operator::I32And","value":"Operator::I32And","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2620},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230831,"byte_end":230836,"line_start":411,"line_end":411,"column_start":5,"column_end":10},"name":"I32Or","qualname":"::primitives::Operator::I32Or","value":"Operator::I32Or","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2622},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230842,"byte_end":230848,"line_start":412,"line_end":412,"column_start":5,"column_end":11},"name":"I32Xor","qualname":"::primitives::Operator::I32Xor","value":"Operator::I32Xor","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2624},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230854,"byte_end":230860,"line_start":413,"line_end":413,"column_start":5,"column_end":11},"name":"I32Shl","qualname":"::primitives::Operator::I32Shl","value":"Operator::I32Shl","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2626},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230866,"byte_end":230873,"line_start":414,"line_end":414,"column_start":5,"column_end":12},"name":"I32ShrS","qualname":"::primitives::Operator::I32ShrS","value":"Operator::I32ShrS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2628},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230879,"byte_end":230886,"line_start":415,"line_end":415,"column_start":5,"column_end":12},"name":"I32ShrU","qualname":"::primitives::Operator::I32ShrU","value":"Operator::I32ShrU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2630},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230892,"byte_end":230899,"line_start":416,"line_end":416,"column_start":5,"column_end":12},"name":"I32Rotl","qualname":"::primitives::Operator::I32Rotl","value":"Operator::I32Rotl","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2632},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230905,"byte_end":230912,"line_start":417,"line_end":417,"column_start":5,"column_end":12},"name":"I32Rotr","qualname":"::primitives::Operator::I32Rotr","value":"Operator::I32Rotr","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2634},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230918,"byte_end":230924,"line_start":418,"line_end":418,"column_start":5,"column_end":11},"name":"I64Clz","qualname":"::primitives::Operator::I64Clz","value":"Operator::I64Clz","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2636},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230930,"byte_end":230936,"line_start":419,"line_end":419,"column_start":5,"column_end":11},"name":"I64Ctz","qualname":"::primitives::Operator::I64Ctz","value":"Operator::I64Ctz","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2638},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230942,"byte_end":230951,"line_start":420,"line_end":420,"column_start":5,"column_end":14},"name":"I64Popcnt","qualname":"::primitives::Operator::I64Popcnt","value":"Operator::I64Popcnt","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2640},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230957,"byte_end":230963,"line_start":421,"line_end":421,"column_start":5,"column_end":11},"name":"I64Add","qualname":"::primitives::Operator::I64Add","value":"Operator::I64Add","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2642},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230969,"byte_end":230975,"line_start":422,"line_end":422,"column_start":5,"column_end":11},"name":"I64Sub","qualname":"::primitives::Operator::I64Sub","value":"Operator::I64Sub","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2644},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230981,"byte_end":230987,"line_start":423,"line_end":423,"column_start":5,"column_end":11},"name":"I64Mul","qualname":"::primitives::Operator::I64Mul","value":"Operator::I64Mul","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2646},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":230993,"byte_end":231000,"line_start":424,"line_end":424,"column_start":5,"column_end":12},"name":"I64DivS","qualname":"::primitives::Operator::I64DivS","value":"Operator::I64DivS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2648},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231006,"byte_end":231013,"line_start":425,"line_end":425,"column_start":5,"column_end":12},"name":"I64DivU","qualname":"::primitives::Operator::I64DivU","value":"Operator::I64DivU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2650},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231019,"byte_end":231026,"line_start":426,"line_end":426,"column_start":5,"column_end":12},"name":"I64RemS","qualname":"::primitives::Operator::I64RemS","value":"Operator::I64RemS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2652},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231032,"byte_end":231039,"line_start":427,"line_end":427,"column_start":5,"column_end":12},"name":"I64RemU","qualname":"::primitives::Operator::I64RemU","value":"Operator::I64RemU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2654},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231045,"byte_end":231051,"line_start":428,"line_end":428,"column_start":5,"column_end":11},"name":"I64And","qualname":"::primitives::Operator::I64And","value":"Operator::I64And","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2656},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231057,"byte_end":231062,"line_start":429,"line_end":429,"column_start":5,"column_end":10},"name":"I64Or","qualname":"::primitives::Operator::I64Or","value":"Operator::I64Or","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2658},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231068,"byte_end":231074,"line_start":430,"line_end":430,"column_start":5,"column_end":11},"name":"I64Xor","qualname":"::primitives::Operator::I64Xor","value":"Operator::I64Xor","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2660},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231080,"byte_end":231086,"line_start":431,"line_end":431,"column_start":5,"column_end":11},"name":"I64Shl","qualname":"::primitives::Operator::I64Shl","value":"Operator::I64Shl","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2662},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231092,"byte_end":231099,"line_start":432,"line_end":432,"column_start":5,"column_end":12},"name":"I64ShrS","qualname":"::primitives::Operator::I64ShrS","value":"Operator::I64ShrS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2664},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231105,"byte_end":231112,"line_start":433,"line_end":433,"column_start":5,"column_end":12},"name":"I64ShrU","qualname":"::primitives::Operator::I64ShrU","value":"Operator::I64ShrU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2666},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231118,"byte_end":231125,"line_start":434,"line_end":434,"column_start":5,"column_end":12},"name":"I64Rotl","qualname":"::primitives::Operator::I64Rotl","value":"Operator::I64Rotl","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2668},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231131,"byte_end":231138,"line_start":435,"line_end":435,"column_start":5,"column_end":12},"name":"I64Rotr","qualname":"::primitives::Operator::I64Rotr","value":"Operator::I64Rotr","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2670},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231144,"byte_end":231150,"line_start":436,"line_end":436,"column_start":5,"column_end":11},"name":"F32Abs","qualname":"::primitives::Operator::F32Abs","value":"Operator::F32Abs","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2672},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231156,"byte_end":231162,"line_start":437,"line_end":437,"column_start":5,"column_end":11},"name":"F32Neg","qualname":"::primitives::Operator::F32Neg","value":"Operator::F32Neg","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2674},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231168,"byte_end":231175,"line_start":438,"line_end":438,"column_start":5,"column_end":12},"name":"F32Ceil","qualname":"::primitives::Operator::F32Ceil","value":"Operator::F32Ceil","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2676},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231181,"byte_end":231189,"line_start":439,"line_end":439,"column_start":5,"column_end":13},"name":"F32Floor","qualname":"::primitives::Operator::F32Floor","value":"Operator::F32Floor","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2678},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231195,"byte_end":231203,"line_start":440,"line_end":440,"column_start":5,"column_end":13},"name":"F32Trunc","qualname":"::primitives::Operator::F32Trunc","value":"Operator::F32Trunc","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2680},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231209,"byte_end":231219,"line_start":441,"line_end":441,"column_start":5,"column_end":15},"name":"F32Nearest","qualname":"::primitives::Operator::F32Nearest","value":"Operator::F32Nearest","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2682},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231225,"byte_end":231232,"line_start":442,"line_end":442,"column_start":5,"column_end":12},"name":"F32Sqrt","qualname":"::primitives::Operator::F32Sqrt","value":"Operator::F32Sqrt","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2684},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231238,"byte_end":231244,"line_start":443,"line_end":443,"column_start":5,"column_end":11},"name":"F32Add","qualname":"::primitives::Operator::F32Add","value":"Operator::F32Add","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2686},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231250,"byte_end":231256,"line_start":444,"line_end":444,"column_start":5,"column_end":11},"name":"F32Sub","qualname":"::primitives::Operator::F32Sub","value":"Operator::F32Sub","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2688},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231262,"byte_end":231268,"line_start":445,"line_end":445,"column_start":5,"column_end":11},"name":"F32Mul","qualname":"::primitives::Operator::F32Mul","value":"Operator::F32Mul","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2690},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231274,"byte_end":231280,"line_start":446,"line_end":446,"column_start":5,"column_end":11},"name":"F32Div","qualname":"::primitives::Operator::F32Div","value":"Operator::F32Div","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2692},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231286,"byte_end":231292,"line_start":447,"line_end":447,"column_start":5,"column_end":11},"name":"F32Min","qualname":"::primitives::Operator::F32Min","value":"Operator::F32Min","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2694},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231298,"byte_end":231304,"line_start":448,"line_end":448,"column_start":5,"column_end":11},"name":"F32Max","qualname":"::primitives::Operator::F32Max","value":"Operator::F32Max","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2696},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231310,"byte_end":231321,"line_start":449,"line_end":449,"column_start":5,"column_end":16},"name":"F32Copysign","qualname":"::primitives::Operator::F32Copysign","value":"Operator::F32Copysign","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2698},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231327,"byte_end":231333,"line_start":450,"line_end":450,"column_start":5,"column_end":11},"name":"F64Abs","qualname":"::primitives::Operator::F64Abs","value":"Operator::F64Abs","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2700},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231339,"byte_end":231345,"line_start":451,"line_end":451,"column_start":5,"column_end":11},"name":"F64Neg","qualname":"::primitives::Operator::F64Neg","value":"Operator::F64Neg","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2702},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231351,"byte_end":231358,"line_start":452,"line_end":452,"column_start":5,"column_end":12},"name":"F64Ceil","qualname":"::primitives::Operator::F64Ceil","value":"Operator::F64Ceil","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2704},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231364,"byte_end":231372,"line_start":453,"line_end":453,"column_start":5,"column_end":13},"name":"F64Floor","qualname":"::primitives::Operator::F64Floor","value":"Operator::F64Floor","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2706},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231378,"byte_end":231386,"line_start":454,"line_end":454,"column_start":5,"column_end":13},"name":"F64Trunc","qualname":"::primitives::Operator::F64Trunc","value":"Operator::F64Trunc","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2708},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231392,"byte_end":231402,"line_start":455,"line_end":455,"column_start":5,"column_end":15},"name":"F64Nearest","qualname":"::primitives::Operator::F64Nearest","value":"Operator::F64Nearest","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2710},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231408,"byte_end":231415,"line_start":456,"line_end":456,"column_start":5,"column_end":12},"name":"F64Sqrt","qualname":"::primitives::Operator::F64Sqrt","value":"Operator::F64Sqrt","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2712},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231421,"byte_end":231427,"line_start":457,"line_end":457,"column_start":5,"column_end":11},"name":"F64Add","qualname":"::primitives::Operator::F64Add","value":"Operator::F64Add","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2714},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231433,"byte_end":231439,"line_start":458,"line_end":458,"column_start":5,"column_end":11},"name":"F64Sub","qualname":"::primitives::Operator::F64Sub","value":"Operator::F64Sub","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2716},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231445,"byte_end":231451,"line_start":459,"line_end":459,"column_start":5,"column_end":11},"name":"F64Mul","qualname":"::primitives::Operator::F64Mul","value":"Operator::F64Mul","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2718},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231457,"byte_end":231463,"line_start":460,"line_end":460,"column_start":5,"column_end":11},"name":"F64Div","qualname":"::primitives::Operator::F64Div","value":"Operator::F64Div","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2720},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231469,"byte_end":231475,"line_start":461,"line_end":461,"column_start":5,"column_end":11},"name":"F64Min","qualname":"::primitives::Operator::F64Min","value":"Operator::F64Min","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2722},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231481,"byte_end":231487,"line_start":462,"line_end":462,"column_start":5,"column_end":11},"name":"F64Max","qualname":"::primitives::Operator::F64Max","value":"Operator::F64Max","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2724},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231493,"byte_end":231504,"line_start":463,"line_end":463,"column_start":5,"column_end":16},"name":"F64Copysign","qualname":"::primitives::Operator::F64Copysign","value":"Operator::F64Copysign","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2726},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231510,"byte_end":231520,"line_start":464,"line_end":464,"column_start":5,"column_end":15},"name":"I32WrapI64","qualname":"::primitives::Operator::I32WrapI64","value":"Operator::I32WrapI64","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2728},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231526,"byte_end":231538,"line_start":465,"line_end":465,"column_start":5,"column_end":17},"name":"I32TruncF32S","qualname":"::primitives::Operator::I32TruncF32S","value":"Operator::I32TruncF32S","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2730},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231544,"byte_end":231556,"line_start":466,"line_end":466,"column_start":5,"column_end":17},"name":"I32TruncF32U","qualname":"::primitives::Operator::I32TruncF32U","value":"Operator::I32TruncF32U","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2732},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231562,"byte_end":231574,"line_start":467,"line_end":467,"column_start":5,"column_end":17},"name":"I32TruncF64S","qualname":"::primitives::Operator::I32TruncF64S","value":"Operator::I32TruncF64S","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2734},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231580,"byte_end":231592,"line_start":468,"line_end":468,"column_start":5,"column_end":17},"name":"I32TruncF64U","qualname":"::primitives::Operator::I32TruncF64U","value":"Operator::I32TruncF64U","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2736},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231598,"byte_end":231611,"line_start":469,"line_end":469,"column_start":5,"column_end":18},"name":"I64ExtendI32S","qualname":"::primitives::Operator::I64ExtendI32S","value":"Operator::I64ExtendI32S","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2738},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231617,"byte_end":231630,"line_start":470,"line_end":470,"column_start":5,"column_end":18},"name":"I64ExtendI32U","qualname":"::primitives::Operator::I64ExtendI32U","value":"Operator::I64ExtendI32U","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2740},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231636,"byte_end":231648,"line_start":471,"line_end":471,"column_start":5,"column_end":17},"name":"I64TruncF32S","qualname":"::primitives::Operator::I64TruncF32S","value":"Operator::I64TruncF32S","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2742},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231654,"byte_end":231666,"line_start":472,"line_end":472,"column_start":5,"column_end":17},"name":"I64TruncF32U","qualname":"::primitives::Operator::I64TruncF32U","value":"Operator::I64TruncF32U","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2744},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231672,"byte_end":231684,"line_start":473,"line_end":473,"column_start":5,"column_end":17},"name":"I64TruncF64S","qualname":"::primitives::Operator::I64TruncF64S","value":"Operator::I64TruncF64S","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2746},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231690,"byte_end":231702,"line_start":474,"line_end":474,"column_start":5,"column_end":17},"name":"I64TruncF64U","qualname":"::primitives::Operator::I64TruncF64U","value":"Operator::I64TruncF64U","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2748},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231708,"byte_end":231722,"line_start":475,"line_end":475,"column_start":5,"column_end":19},"name":"F32ConvertI32S","qualname":"::primitives::Operator::F32ConvertI32S","value":"Operator::F32ConvertI32S","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2750},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231728,"byte_end":231742,"line_start":476,"line_end":476,"column_start":5,"column_end":19},"name":"F32ConvertI32U","qualname":"::primitives::Operator::F32ConvertI32U","value":"Operator::F32ConvertI32U","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2752},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231748,"byte_end":231762,"line_start":477,"line_end":477,"column_start":5,"column_end":19},"name":"F32ConvertI64S","qualname":"::primitives::Operator::F32ConvertI64S","value":"Operator::F32ConvertI64S","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2754},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231768,"byte_end":231782,"line_start":478,"line_end":478,"column_start":5,"column_end":19},"name":"F32ConvertI64U","qualname":"::primitives::Operator::F32ConvertI64U","value":"Operator::F32ConvertI64U","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2756},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231788,"byte_end":231800,"line_start":479,"line_end":479,"column_start":5,"column_end":17},"name":"F32DemoteF64","qualname":"::primitives::Operator::F32DemoteF64","value":"Operator::F32DemoteF64","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2758},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231806,"byte_end":231820,"line_start":480,"line_end":480,"column_start":5,"column_end":19},"name":"F64ConvertI32S","qualname":"::primitives::Operator::F64ConvertI32S","value":"Operator::F64ConvertI32S","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2760},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231826,"byte_end":231840,"line_start":481,"line_end":481,"column_start":5,"column_end":19},"name":"F64ConvertI32U","qualname":"::primitives::Operator::F64ConvertI32U","value":"Operator::F64ConvertI32U","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2762},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231846,"byte_end":231860,"line_start":482,"line_end":482,"column_start":5,"column_end":19},"name":"F64ConvertI64S","qualname":"::primitives::Operator::F64ConvertI64S","value":"Operator::F64ConvertI64S","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2764},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231866,"byte_end":231880,"line_start":483,"line_end":483,"column_start":5,"column_end":19},"name":"F64ConvertI64U","qualname":"::primitives::Operator::F64ConvertI64U","value":"Operator::F64ConvertI64U","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2766},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231886,"byte_end":231899,"line_start":484,"line_end":484,"column_start":5,"column_end":18},"name":"F64PromoteF32","qualname":"::primitives::Operator::F64PromoteF32","value":"Operator::F64PromoteF32","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2768},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231905,"byte_end":231922,"line_start":485,"line_end":485,"column_start":5,"column_end":22},"name":"I32ReinterpretF32","qualname":"::primitives::Operator::I32ReinterpretF32","value":"Operator::I32ReinterpretF32","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2770},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231928,"byte_end":231945,"line_start":486,"line_end":486,"column_start":5,"column_end":22},"name":"I64ReinterpretF64","qualname":"::primitives::Operator::I64ReinterpretF64","value":"Operator::I64ReinterpretF64","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2772},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231951,"byte_end":231968,"line_start":487,"line_end":487,"column_start":5,"column_end":22},"name":"F32ReinterpretI32","qualname":"::primitives::Operator::F32ReinterpretI32","value":"Operator::F32ReinterpretI32","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2774},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231974,"byte_end":231991,"line_start":488,"line_end":488,"column_start":5,"column_end":22},"name":"F64ReinterpretI64","qualname":"::primitives::Operator::F64ReinterpretI64","value":"Operator::F64ReinterpretI64","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2776},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":231997,"byte_end":232008,"line_start":489,"line_end":489,"column_start":5,"column_end":16},"name":"I32Extend8S","qualname":"::primitives::Operator::I32Extend8S","value":"Operator::I32Extend8S","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2778},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":232014,"byte_end":232026,"line_start":490,"line_end":490,"column_start":5,"column_end":17},"name":"I32Extend16S","qualname":"::primitives::Operator::I32Extend16S","value":"Operator::I32Extend16S","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2780},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":232032,"byte_end":232043,"line_start":491,"line_end":491,"column_start":5,"column_end":16},"name":"I64Extend8S","qualname":"::primitives::Operator::I64Extend8S","value":"Operator::I64Extend8S","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2782},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":232049,"byte_end":232061,"line_start":492,"line_end":492,"column_start":5,"column_end":17},"name":"I64Extend16S","qualname":"::primitives::Operator::I64Extend16S","value":"Operator::I64Extend16S","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2784},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":232067,"byte_end":232079,"line_start":493,"line_end":493,"column_start":5,"column_end":17},"name":"I64Extend32S","qualname":"::primitives::Operator::I64Extend32S","value":"Operator::I64Extend32S","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2786},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":232153,"byte_end":232168,"line_start":497,"line_end":497,"column_start":5,"column_end":20},"name":"I32TruncSatF32S","qualname":"::primitives::Operator::I32TruncSatF32S","value":"Operator::I32TruncSatF32S","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2788},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":232174,"byte_end":232189,"line_start":498,"line_end":498,"column_start":5,"column_end":20},"name":"I32TruncSatF32U","qualname":"::primitives::Operator::I32TruncSatF32U","value":"Operator::I32TruncSatF32U","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2790},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":232195,"byte_end":232210,"line_start":499,"line_end":499,"column_start":5,"column_end":20},"name":"I32TruncSatF64S","qualname":"::primitives::Operator::I32TruncSatF64S","value":"Operator::I32TruncSatF64S","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2792},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":232216,"byte_end":232231,"line_start":500,"line_end":500,"column_start":5,"column_end":20},"name":"I32TruncSatF64U","qualname":"::primitives::Operator::I32TruncSatF64U","value":"Operator::I32TruncSatF64U","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2794},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":232237,"byte_end":232252,"line_start":501,"line_end":501,"column_start":5,"column_end":20},"name":"I64TruncSatF32S","qualname":"::primitives::Operator::I64TruncSatF32S","value":"Operator::I64TruncSatF32S","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2796},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":232258,"byte_end":232273,"line_start":502,"line_end":502,"column_start":5,"column_end":20},"name":"I64TruncSatF32U","qualname":"::primitives::Operator::I64TruncSatF32U","value":"Operator::I64TruncSatF32U","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2798},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":232279,"byte_end":232294,"line_start":503,"line_end":503,"column_start":5,"column_end":20},"name":"I64TruncSatF64S","qualname":"::primitives::Operator::I64TruncSatF64S","value":"Operator::I64TruncSatF64S","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2800},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":232300,"byte_end":232315,"line_start":504,"line_end":504,"column_start":5,"column_end":20},"name":"I64TruncSatF64U","qualname":"::primitives::Operator::I64TruncSatF64U","value":"Operator::I64TruncSatF64U","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2802},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":232474,"byte_end":232484,"line_start":508,"line_end":508,"column_start":5,"column_end":15},"name":"MemoryInit","qualname":"::primitives::Operator::MemoryInit","value":"Operator::MemoryInit { segment }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2804},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":232507,"byte_end":232515,"line_start":509,"line_end":509,"column_start":5,"column_end":13},"name":"DataDrop","qualname":"::primitives::Operator::DataDrop","value":"Operator::DataDrop { segment }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2806},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":232538,"byte_end":232548,"line_start":510,"line_end":510,"column_start":5,"column_end":15},"name":"MemoryCopy","qualname":"::primitives::Operator::MemoryCopy","value":"Operator::MemoryCopy","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2808},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":232554,"byte_end":232564,"line_start":511,"line_end":511,"column_start":5,"column_end":15},"name":"MemoryFill","qualname":"::primitives::Operator::MemoryFill","value":"Operator::MemoryFill","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2810},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":232570,"byte_end":232579,"line_start":512,"line_end":512,"column_start":5,"column_end":14},"name":"TableInit","qualname":"::primitives::Operator::TableInit","value":"Operator::TableInit { segment, table }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2813},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":232614,"byte_end":232622,"line_start":513,"line_end":513,"column_start":5,"column_end":13},"name":"ElemDrop","qualname":"::primitives::Operator::ElemDrop","value":"Operator::ElemDrop { segment }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2815},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":232645,"byte_end":232654,"line_start":514,"line_end":514,"column_start":5,"column_end":14},"name":"TableCopy","qualname":"::primitives::Operator::TableCopy","value":"Operator::TableCopy { dst_table, src_table }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2818},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":232695,"byte_end":232704,"line_start":515,"line_end":515,"column_start":5,"column_end":14},"name":"TableFill","qualname":"::primitives::Operator::TableFill","value":"Operator::TableFill { table }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2820},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":232725,"byte_end":232733,"line_start":516,"line_end":516,"column_start":5,"column_end":13},"name":"TableGet","qualname":"::primitives::Operator::TableGet","value":"Operator::TableGet { table }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2822},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":232754,"byte_end":232762,"line_start":517,"line_end":517,"column_start":5,"column_end":13},"name":"TableSet","qualname":"::primitives::Operator::TableSet","value":"Operator::TableSet { table }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2824},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":232783,"byte_end":232792,"line_start":518,"line_end":518,"column_start":5,"column_end":14},"name":"TableGrow","qualname":"::primitives::Operator::TableGrow","value":"Operator::TableGrow { table }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2826},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":232813,"byte_end":232822,"line_start":519,"line_end":519,"column_start":5,"column_end":14},"name":"TableSize","qualname":"::primitives::Operator::TableSize","value":"Operator::TableSize { table }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2828},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":232954,"byte_end":232966,"line_start":523,"line_end":523,"column_start":5,"column_end":17},"name":"AtomicNotify","qualname":"::primitives::Operator::AtomicNotify","value":"Operator::AtomicNotify { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2830},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":233000,"byte_end":233013,"line_start":524,"line_end":524,"column_start":5,"column_end":18},"name":"I32AtomicWait","qualname":"::primitives::Operator::I32AtomicWait","value":"Operator::I32AtomicWait { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2832},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":233047,"byte_end":233060,"line_start":525,"line_end":525,"column_start":5,"column_end":18},"name":"I64AtomicWait","qualname":"::primitives::Operator::I64AtomicWait","value":"Operator::I64AtomicWait { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2834},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":233094,"byte_end":233105,"line_start":526,"line_end":526,"column_start":5,"column_end":16},"name":"AtomicFence","qualname":"::primitives::Operator::AtomicFence","value":"Operator::AtomicFence { flags }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2836},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":233125,"byte_end":233138,"line_start":527,"line_end":527,"column_start":5,"column_end":18},"name":"I32AtomicLoad","qualname":"::primitives::Operator::I32AtomicLoad","value":"Operator::I32AtomicLoad { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2838},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":233172,"byte_end":233185,"line_start":528,"line_end":528,"column_start":5,"column_end":18},"name":"I64AtomicLoad","qualname":"::primitives::Operator::I64AtomicLoad","value":"Operator::I64AtomicLoad { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2840},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":233219,"byte_end":233234,"line_start":529,"line_end":529,"column_start":5,"column_end":20},"name":"I32AtomicLoad8U","qualname":"::primitives::Operator::I32AtomicLoad8U","value":"Operator::I32AtomicLoad8U { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2842},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":233268,"byte_end":233284,"line_start":530,"line_end":530,"column_start":5,"column_end":21},"name":"I32AtomicLoad16U","qualname":"::primitives::Operator::I32AtomicLoad16U","value":"Operator::I32AtomicLoad16U { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2844},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":233318,"byte_end":233333,"line_start":531,"line_end":531,"column_start":5,"column_end":20},"name":"I64AtomicLoad8U","qualname":"::primitives::Operator::I64AtomicLoad8U","value":"Operator::I64AtomicLoad8U { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2846},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":233367,"byte_end":233383,"line_start":532,"line_end":532,"column_start":5,"column_end":21},"name":"I64AtomicLoad16U","qualname":"::primitives::Operator::I64AtomicLoad16U","value":"Operator::I64AtomicLoad16U { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2848},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":233417,"byte_end":233433,"line_start":533,"line_end":533,"column_start":5,"column_end":21},"name":"I64AtomicLoad32U","qualname":"::primitives::Operator::I64AtomicLoad32U","value":"Operator::I64AtomicLoad32U { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2850},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":233467,"byte_end":233481,"line_start":534,"line_end":534,"column_start":5,"column_end":19},"name":"I32AtomicStore","qualname":"::primitives::Operator::I32AtomicStore","value":"Operator::I32AtomicStore { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2852},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":233515,"byte_end":233529,"line_start":535,"line_end":535,"column_start":5,"column_end":19},"name":"I64AtomicStore","qualname":"::primitives::Operator::I64AtomicStore","value":"Operator::I64AtomicStore { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2854},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":233563,"byte_end":233578,"line_start":536,"line_end":536,"column_start":5,"column_end":20},"name":"I32AtomicStore8","qualname":"::primitives::Operator::I32AtomicStore8","value":"Operator::I32AtomicStore8 { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2856},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":233612,"byte_end":233628,"line_start":537,"line_end":537,"column_start":5,"column_end":21},"name":"I32AtomicStore16","qualname":"::primitives::Operator::I32AtomicStore16","value":"Operator::I32AtomicStore16 { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2858},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":233662,"byte_end":233677,"line_start":538,"line_end":538,"column_start":5,"column_end":20},"name":"I64AtomicStore8","qualname":"::primitives::Operator::I64AtomicStore8","value":"Operator::I64AtomicStore8 { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2860},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":233711,"byte_end":233727,"line_start":539,"line_end":539,"column_start":5,"column_end":21},"name":"I64AtomicStore16","qualname":"::primitives::Operator::I64AtomicStore16","value":"Operator::I64AtomicStore16 { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2862},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":233761,"byte_end":233777,"line_start":540,"line_end":540,"column_start":5,"column_end":21},"name":"I64AtomicStore32","qualname":"::primitives::Operator::I64AtomicStore32","value":"Operator::I64AtomicStore32 { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2864},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":233811,"byte_end":233826,"line_start":541,"line_end":541,"column_start":5,"column_end":20},"name":"I32AtomicRmwAdd","qualname":"::primitives::Operator::I32AtomicRmwAdd","value":"Operator::I32AtomicRmwAdd { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2866},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":233860,"byte_end":233875,"line_start":542,"line_end":542,"column_start":5,"column_end":20},"name":"I64AtomicRmwAdd","qualname":"::primitives::Operator::I64AtomicRmwAdd","value":"Operator::I64AtomicRmwAdd { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2868},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":233909,"byte_end":233926,"line_start":543,"line_end":543,"column_start":5,"column_end":22},"name":"I32AtomicRmw8AddU","qualname":"::primitives::Operator::I32AtomicRmw8AddU","value":"Operator::I32AtomicRmw8AddU { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2870},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":233960,"byte_end":233978,"line_start":544,"line_end":544,"column_start":5,"column_end":23},"name":"I32AtomicRmw16AddU","qualname":"::primitives::Operator::I32AtomicRmw16AddU","value":"Operator::I32AtomicRmw16AddU { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2872},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":234012,"byte_end":234029,"line_start":545,"line_end":545,"column_start":5,"column_end":22},"name":"I64AtomicRmw8AddU","qualname":"::primitives::Operator::I64AtomicRmw8AddU","value":"Operator::I64AtomicRmw8AddU { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2874},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":234063,"byte_end":234081,"line_start":546,"line_end":546,"column_start":5,"column_end":23},"name":"I64AtomicRmw16AddU","qualname":"::primitives::Operator::I64AtomicRmw16AddU","value":"Operator::I64AtomicRmw16AddU { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2876},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":234115,"byte_end":234133,"line_start":547,"line_end":547,"column_start":5,"column_end":23},"name":"I64AtomicRmw32AddU","qualname":"::primitives::Operator::I64AtomicRmw32AddU","value":"Operator::I64AtomicRmw32AddU { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2878},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":234167,"byte_end":234182,"line_start":548,"line_end":548,"column_start":5,"column_end":20},"name":"I32AtomicRmwSub","qualname":"::primitives::Operator::I32AtomicRmwSub","value":"Operator::I32AtomicRmwSub { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2880},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":234216,"byte_end":234231,"line_start":549,"line_end":549,"column_start":5,"column_end":20},"name":"I64AtomicRmwSub","qualname":"::primitives::Operator::I64AtomicRmwSub","value":"Operator::I64AtomicRmwSub { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2882},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":234265,"byte_end":234282,"line_start":550,"line_end":550,"column_start":5,"column_end":22},"name":"I32AtomicRmw8SubU","qualname":"::primitives::Operator::I32AtomicRmw8SubU","value":"Operator::I32AtomicRmw8SubU { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2884},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":234316,"byte_end":234334,"line_start":551,"line_end":551,"column_start":5,"column_end":23},"name":"I32AtomicRmw16SubU","qualname":"::primitives::Operator::I32AtomicRmw16SubU","value":"Operator::I32AtomicRmw16SubU { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2886},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":234368,"byte_end":234385,"line_start":552,"line_end":552,"column_start":5,"column_end":22},"name":"I64AtomicRmw8SubU","qualname":"::primitives::Operator::I64AtomicRmw8SubU","value":"Operator::I64AtomicRmw8SubU { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2888},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":234419,"byte_end":234437,"line_start":553,"line_end":553,"column_start":5,"column_end":23},"name":"I64AtomicRmw16SubU","qualname":"::primitives::Operator::I64AtomicRmw16SubU","value":"Operator::I64AtomicRmw16SubU { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2890},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":234471,"byte_end":234489,"line_start":554,"line_end":554,"column_start":5,"column_end":23},"name":"I64AtomicRmw32SubU","qualname":"::primitives::Operator::I64AtomicRmw32SubU","value":"Operator::I64AtomicRmw32SubU { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2892},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":234523,"byte_end":234538,"line_start":555,"line_end":555,"column_start":5,"column_end":20},"name":"I32AtomicRmwAnd","qualname":"::primitives::Operator::I32AtomicRmwAnd","value":"Operator::I32AtomicRmwAnd { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2894},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":234572,"byte_end":234587,"line_start":556,"line_end":556,"column_start":5,"column_end":20},"name":"I64AtomicRmwAnd","qualname":"::primitives::Operator::I64AtomicRmwAnd","value":"Operator::I64AtomicRmwAnd { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2896},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":234621,"byte_end":234638,"line_start":557,"line_end":557,"column_start":5,"column_end":22},"name":"I32AtomicRmw8AndU","qualname":"::primitives::Operator::I32AtomicRmw8AndU","value":"Operator::I32AtomicRmw8AndU { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2898},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":234672,"byte_end":234690,"line_start":558,"line_end":558,"column_start":5,"column_end":23},"name":"I32AtomicRmw16AndU","qualname":"::primitives::Operator::I32AtomicRmw16AndU","value":"Operator::I32AtomicRmw16AndU { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2900},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":234724,"byte_end":234741,"line_start":559,"line_end":559,"column_start":5,"column_end":22},"name":"I64AtomicRmw8AndU","qualname":"::primitives::Operator::I64AtomicRmw8AndU","value":"Operator::I64AtomicRmw8AndU { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2902},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":234775,"byte_end":234793,"line_start":560,"line_end":560,"column_start":5,"column_end":23},"name":"I64AtomicRmw16AndU","qualname":"::primitives::Operator::I64AtomicRmw16AndU","value":"Operator::I64AtomicRmw16AndU { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2904},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":234827,"byte_end":234845,"line_start":561,"line_end":561,"column_start":5,"column_end":23},"name":"I64AtomicRmw32AndU","qualname":"::primitives::Operator::I64AtomicRmw32AndU","value":"Operator::I64AtomicRmw32AndU { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2906},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":234879,"byte_end":234893,"line_start":562,"line_end":562,"column_start":5,"column_end":19},"name":"I32AtomicRmwOr","qualname":"::primitives::Operator::I32AtomicRmwOr","value":"Operator::I32AtomicRmwOr { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2908},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":234927,"byte_end":234941,"line_start":563,"line_end":563,"column_start":5,"column_end":19},"name":"I64AtomicRmwOr","qualname":"::primitives::Operator::I64AtomicRmwOr","value":"Operator::I64AtomicRmwOr { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2910},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":234975,"byte_end":234991,"line_start":564,"line_end":564,"column_start":5,"column_end":21},"name":"I32AtomicRmw8OrU","qualname":"::primitives::Operator::I32AtomicRmw8OrU","value":"Operator::I32AtomicRmw8OrU { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2912},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":235025,"byte_end":235042,"line_start":565,"line_end":565,"column_start":5,"column_end":22},"name":"I32AtomicRmw16OrU","qualname":"::primitives::Operator::I32AtomicRmw16OrU","value":"Operator::I32AtomicRmw16OrU { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2914},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":235076,"byte_end":235092,"line_start":566,"line_end":566,"column_start":5,"column_end":21},"name":"I64AtomicRmw8OrU","qualname":"::primitives::Operator::I64AtomicRmw8OrU","value":"Operator::I64AtomicRmw8OrU { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2916},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":235126,"byte_end":235143,"line_start":567,"line_end":567,"column_start":5,"column_end":22},"name":"I64AtomicRmw16OrU","qualname":"::primitives::Operator::I64AtomicRmw16OrU","value":"Operator::I64AtomicRmw16OrU { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2918},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":235177,"byte_end":235194,"line_start":568,"line_end":568,"column_start":5,"column_end":22},"name":"I64AtomicRmw32OrU","qualname":"::primitives::Operator::I64AtomicRmw32OrU","value":"Operator::I64AtomicRmw32OrU { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2920},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":235228,"byte_end":235243,"line_start":569,"line_end":569,"column_start":5,"column_end":20},"name":"I32AtomicRmwXor","qualname":"::primitives::Operator::I32AtomicRmwXor","value":"Operator::I32AtomicRmwXor { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2922},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":235277,"byte_end":235292,"line_start":570,"line_end":570,"column_start":5,"column_end":20},"name":"I64AtomicRmwXor","qualname":"::primitives::Operator::I64AtomicRmwXor","value":"Operator::I64AtomicRmwXor { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2924},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":235326,"byte_end":235343,"line_start":571,"line_end":571,"column_start":5,"column_end":22},"name":"I32AtomicRmw8XorU","qualname":"::primitives::Operator::I32AtomicRmw8XorU","value":"Operator::I32AtomicRmw8XorU { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2926},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":235377,"byte_end":235395,"line_start":572,"line_end":572,"column_start":5,"column_end":23},"name":"I32AtomicRmw16XorU","qualname":"::primitives::Operator::I32AtomicRmw16XorU","value":"Operator::I32AtomicRmw16XorU { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2928},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":235429,"byte_end":235446,"line_start":573,"line_end":573,"column_start":5,"column_end":22},"name":"I64AtomicRmw8XorU","qualname":"::primitives::Operator::I64AtomicRmw8XorU","value":"Operator::I64AtomicRmw8XorU { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2930},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":235480,"byte_end":235498,"line_start":574,"line_end":574,"column_start":5,"column_end":23},"name":"I64AtomicRmw16XorU","qualname":"::primitives::Operator::I64AtomicRmw16XorU","value":"Operator::I64AtomicRmw16XorU { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2932},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":235532,"byte_end":235550,"line_start":575,"line_end":575,"column_start":5,"column_end":23},"name":"I64AtomicRmw32XorU","qualname":"::primitives::Operator::I64AtomicRmw32XorU","value":"Operator::I64AtomicRmw32XorU { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2934},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":235584,"byte_end":235600,"line_start":576,"line_end":576,"column_start":5,"column_end":21},"name":"I32AtomicRmwXchg","qualname":"::primitives::Operator::I32AtomicRmwXchg","value":"Operator::I32AtomicRmwXchg { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2936},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":235634,"byte_end":235650,"line_start":577,"line_end":577,"column_start":5,"column_end":21},"name":"I64AtomicRmwXchg","qualname":"::primitives::Operator::I64AtomicRmwXchg","value":"Operator::I64AtomicRmwXchg { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2938},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":235684,"byte_end":235702,"line_start":578,"line_end":578,"column_start":5,"column_end":23},"name":"I32AtomicRmw8XchgU","qualname":"::primitives::Operator::I32AtomicRmw8XchgU","value":"Operator::I32AtomicRmw8XchgU { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2940},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":235736,"byte_end":235755,"line_start":579,"line_end":579,"column_start":5,"column_end":24},"name":"I32AtomicRmw16XchgU","qualname":"::primitives::Operator::I32AtomicRmw16XchgU","value":"Operator::I32AtomicRmw16XchgU { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2942},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":235789,"byte_end":235807,"line_start":580,"line_end":580,"column_start":5,"column_end":23},"name":"I64AtomicRmw8XchgU","qualname":"::primitives::Operator::I64AtomicRmw8XchgU","value":"Operator::I64AtomicRmw8XchgU { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2944},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":235841,"byte_end":235860,"line_start":581,"line_end":581,"column_start":5,"column_end":24},"name":"I64AtomicRmw16XchgU","qualname":"::primitives::Operator::I64AtomicRmw16XchgU","value":"Operator::I64AtomicRmw16XchgU { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2946},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":235894,"byte_end":235913,"line_start":582,"line_end":582,"column_start":5,"column_end":24},"name":"I64AtomicRmw32XchgU","qualname":"::primitives::Operator::I64AtomicRmw32XchgU","value":"Operator::I64AtomicRmw32XchgU { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2948},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":235947,"byte_end":235966,"line_start":583,"line_end":583,"column_start":5,"column_end":24},"name":"I32AtomicRmwCmpxchg","qualname":"::primitives::Operator::I32AtomicRmwCmpxchg","value":"Operator::I32AtomicRmwCmpxchg { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2950},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":236000,"byte_end":236019,"line_start":584,"line_end":584,"column_start":5,"column_end":24},"name":"I64AtomicRmwCmpxchg","qualname":"::primitives::Operator::I64AtomicRmwCmpxchg","value":"Operator::I64AtomicRmwCmpxchg { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2952},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":236053,"byte_end":236074,"line_start":585,"line_end":585,"column_start":5,"column_end":26},"name":"I32AtomicRmw8CmpxchgU","qualname":"::primitives::Operator::I32AtomicRmw8CmpxchgU","value":"Operator::I32AtomicRmw8CmpxchgU { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2954},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":236108,"byte_end":236130,"line_start":586,"line_end":586,"column_start":5,"column_end":27},"name":"I32AtomicRmw16CmpxchgU","qualname":"::primitives::Operator::I32AtomicRmw16CmpxchgU","value":"Operator::I32AtomicRmw16CmpxchgU { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2956},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":236164,"byte_end":236185,"line_start":587,"line_end":587,"column_start":5,"column_end":26},"name":"I64AtomicRmw8CmpxchgU","qualname":"::primitives::Operator::I64AtomicRmw8CmpxchgU","value":"Operator::I64AtomicRmw8CmpxchgU { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2958},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":236219,"byte_end":236241,"line_start":588,"line_end":588,"column_start":5,"column_end":27},"name":"I64AtomicRmw16CmpxchgU","qualname":"::primitives::Operator::I64AtomicRmw16CmpxchgU","value":"Operator::I64AtomicRmw16CmpxchgU { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2960},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":236275,"byte_end":236297,"line_start":589,"line_end":589,"column_start":5,"column_end":27},"name":"I64AtomicRmw32CmpxchgU","qualname":"::primitives::Operator::I64AtomicRmw32CmpxchgU","value":"Operator::I64AtomicRmw32CmpxchgU { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2962},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":236443,"byte_end":236451,"line_start":593,"line_end":593,"column_start":5,"column_end":13},"name":"V128Load","qualname":"::primitives::Operator::V128Load","value":"Operator::V128Load { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2964},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":236485,"byte_end":236494,"line_start":594,"line_end":594,"column_start":5,"column_end":14},"name":"V128Store","qualname":"::primitives::Operator::V128Store","value":"Operator::V128Store { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2966},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":236528,"byte_end":236537,"line_start":595,"line_end":595,"column_start":5,"column_end":14},"name":"V128Const","qualname":"::primitives::Operator::V128Const","value":"Operator::V128Const { value }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2968},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":236559,"byte_end":236569,"line_start":596,"line_end":596,"column_start":5,"column_end":15},"name":"I8x16Splat","qualname":"::primitives::Operator::I8x16Splat","value":"Operator::I8x16Splat","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2970},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":236575,"byte_end":236592,"line_start":597,"line_end":597,"column_start":5,"column_end":22},"name":"I8x16ExtractLaneS","qualname":"::primitives::Operator::I8x16ExtractLaneS","value":"Operator::I8x16ExtractLaneS { lane }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2972},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":236622,"byte_end":236639,"line_start":598,"line_end":598,"column_start":5,"column_end":22},"name":"I8x16ExtractLaneU","qualname":"::primitives::Operator::I8x16ExtractLaneU","value":"Operator::I8x16ExtractLaneU { lane }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2974},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":236669,"byte_end":236685,"line_start":599,"line_end":599,"column_start":5,"column_end":21},"name":"I8x16ReplaceLane","qualname":"::primitives::Operator::I8x16ReplaceLane","value":"Operator::I8x16ReplaceLane { lane }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2976},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":236715,"byte_end":236725,"line_start":600,"line_end":600,"column_start":5,"column_end":15},"name":"I16x8Splat","qualname":"::primitives::Operator::I16x8Splat","value":"Operator::I16x8Splat","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2978},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":236731,"byte_end":236748,"line_start":601,"line_end":601,"column_start":5,"column_end":22},"name":"I16x8ExtractLaneS","qualname":"::primitives::Operator::I16x8ExtractLaneS","value":"Operator::I16x8ExtractLaneS { lane }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2980},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":236778,"byte_end":236795,"line_start":602,"line_end":602,"column_start":5,"column_end":22},"name":"I16x8ExtractLaneU","qualname":"::primitives::Operator::I16x8ExtractLaneU","value":"Operator::I16x8ExtractLaneU { lane }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2982},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":236825,"byte_end":236841,"line_start":603,"line_end":603,"column_start":5,"column_end":21},"name":"I16x8ReplaceLane","qualname":"::primitives::Operator::I16x8ReplaceLane","value":"Operator::I16x8ReplaceLane { lane }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2984},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":236871,"byte_end":236881,"line_start":604,"line_end":604,"column_start":5,"column_end":15},"name":"I32x4Splat","qualname":"::primitives::Operator::I32x4Splat","value":"Operator::I32x4Splat","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2986},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":236887,"byte_end":236903,"line_start":605,"line_end":605,"column_start":5,"column_end":21},"name":"I32x4ExtractLane","qualname":"::primitives::Operator::I32x4ExtractLane","value":"Operator::I32x4ExtractLane { lane }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2988},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":236933,"byte_end":236949,"line_start":606,"line_end":606,"column_start":5,"column_end":21},"name":"I32x4ReplaceLane","qualname":"::primitives::Operator::I32x4ReplaceLane","value":"Operator::I32x4ReplaceLane { lane }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2990},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":236979,"byte_end":236989,"line_start":607,"line_end":607,"column_start":5,"column_end":15},"name":"I64x2Splat","qualname":"::primitives::Operator::I64x2Splat","value":"Operator::I64x2Splat","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2992},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":236995,"byte_end":237011,"line_start":608,"line_end":608,"column_start":5,"column_end":21},"name":"I64x2ExtractLane","qualname":"::primitives::Operator::I64x2ExtractLane","value":"Operator::I64x2ExtractLane { lane }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2994},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237041,"byte_end":237057,"line_start":609,"line_end":609,"column_start":5,"column_end":21},"name":"I64x2ReplaceLane","qualname":"::primitives::Operator::I64x2ReplaceLane","value":"Operator::I64x2ReplaceLane { lane }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2996},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237087,"byte_end":237097,"line_start":610,"line_end":610,"column_start":5,"column_end":15},"name":"F32x4Splat","qualname":"::primitives::Operator::F32x4Splat","value":"Operator::F32x4Splat","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2998},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237103,"byte_end":237119,"line_start":611,"line_end":611,"column_start":5,"column_end":21},"name":"F32x4ExtractLane","qualname":"::primitives::Operator::F32x4ExtractLane","value":"Operator::F32x4ExtractLane { lane }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3000},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237149,"byte_end":237165,"line_start":612,"line_end":612,"column_start":5,"column_end":21},"name":"F32x4ReplaceLane","qualname":"::primitives::Operator::F32x4ReplaceLane","value":"Operator::F32x4ReplaceLane { lane }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3002},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237195,"byte_end":237205,"line_start":613,"line_end":613,"column_start":5,"column_end":15},"name":"F64x2Splat","qualname":"::primitives::Operator::F64x2Splat","value":"Operator::F64x2Splat","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3004},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237211,"byte_end":237227,"line_start":614,"line_end":614,"column_start":5,"column_end":21},"name":"F64x2ExtractLane","qualname":"::primitives::Operator::F64x2ExtractLane","value":"Operator::F64x2ExtractLane { lane }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3006},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237257,"byte_end":237273,"line_start":615,"line_end":615,"column_start":5,"column_end":21},"name":"F64x2ReplaceLane","qualname":"::primitives::Operator::F64x2ReplaceLane","value":"Operator::F64x2ReplaceLane { lane }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3008},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237303,"byte_end":237310,"line_start":616,"line_end":616,"column_start":5,"column_end":12},"name":"I8x16Eq","qualname":"::primitives::Operator::I8x16Eq","value":"Operator::I8x16Eq","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3010},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237316,"byte_end":237323,"line_start":617,"line_end":617,"column_start":5,"column_end":12},"name":"I8x16Ne","qualname":"::primitives::Operator::I8x16Ne","value":"Operator::I8x16Ne","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3012},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237329,"byte_end":237337,"line_start":618,"line_end":618,"column_start":5,"column_end":13},"name":"I8x16LtS","qualname":"::primitives::Operator::I8x16LtS","value":"Operator::I8x16LtS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3014},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237343,"byte_end":237351,"line_start":619,"line_end":619,"column_start":5,"column_end":13},"name":"I8x16LtU","qualname":"::primitives::Operator::I8x16LtU","value":"Operator::I8x16LtU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3016},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237357,"byte_end":237365,"line_start":620,"line_end":620,"column_start":5,"column_end":13},"name":"I8x16GtS","qualname":"::primitives::Operator::I8x16GtS","value":"Operator::I8x16GtS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3018},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237371,"byte_end":237379,"line_start":621,"line_end":621,"column_start":5,"column_end":13},"name":"I8x16GtU","qualname":"::primitives::Operator::I8x16GtU","value":"Operator::I8x16GtU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3020},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237385,"byte_end":237393,"line_start":622,"line_end":622,"column_start":5,"column_end":13},"name":"I8x16LeS","qualname":"::primitives::Operator::I8x16LeS","value":"Operator::I8x16LeS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3022},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237399,"byte_end":237407,"line_start":623,"line_end":623,"column_start":5,"column_end":13},"name":"I8x16LeU","qualname":"::primitives::Operator::I8x16LeU","value":"Operator::I8x16LeU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3024},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237413,"byte_end":237421,"line_start":624,"line_end":624,"column_start":5,"column_end":13},"name":"I8x16GeS","qualname":"::primitives::Operator::I8x16GeS","value":"Operator::I8x16GeS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3026},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237427,"byte_end":237435,"line_start":625,"line_end":625,"column_start":5,"column_end":13},"name":"I8x16GeU","qualname":"::primitives::Operator::I8x16GeU","value":"Operator::I8x16GeU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3028},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237441,"byte_end":237448,"line_start":626,"line_end":626,"column_start":5,"column_end":12},"name":"I16x8Eq","qualname":"::primitives::Operator::I16x8Eq","value":"Operator::I16x8Eq","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3030},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237454,"byte_end":237461,"line_start":627,"line_end":627,"column_start":5,"column_end":12},"name":"I16x8Ne","qualname":"::primitives::Operator::I16x8Ne","value":"Operator::I16x8Ne","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3032},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237467,"byte_end":237475,"line_start":628,"line_end":628,"column_start":5,"column_end":13},"name":"I16x8LtS","qualname":"::primitives::Operator::I16x8LtS","value":"Operator::I16x8LtS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3034},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237481,"byte_end":237489,"line_start":629,"line_end":629,"column_start":5,"column_end":13},"name":"I16x8LtU","qualname":"::primitives::Operator::I16x8LtU","value":"Operator::I16x8LtU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3036},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237495,"byte_end":237503,"line_start":630,"line_end":630,"column_start":5,"column_end":13},"name":"I16x8GtS","qualname":"::primitives::Operator::I16x8GtS","value":"Operator::I16x8GtS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3038},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237509,"byte_end":237517,"line_start":631,"line_end":631,"column_start":5,"column_end":13},"name":"I16x8GtU","qualname":"::primitives::Operator::I16x8GtU","value":"Operator::I16x8GtU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3040},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237523,"byte_end":237531,"line_start":632,"line_end":632,"column_start":5,"column_end":13},"name":"I16x8LeS","qualname":"::primitives::Operator::I16x8LeS","value":"Operator::I16x8LeS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3042},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237537,"byte_end":237545,"line_start":633,"line_end":633,"column_start":5,"column_end":13},"name":"I16x8LeU","qualname":"::primitives::Operator::I16x8LeU","value":"Operator::I16x8LeU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3044},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237551,"byte_end":237559,"line_start":634,"line_end":634,"column_start":5,"column_end":13},"name":"I16x8GeS","qualname":"::primitives::Operator::I16x8GeS","value":"Operator::I16x8GeS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3046},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237565,"byte_end":237573,"line_start":635,"line_end":635,"column_start":5,"column_end":13},"name":"I16x8GeU","qualname":"::primitives::Operator::I16x8GeU","value":"Operator::I16x8GeU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3048},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237579,"byte_end":237586,"line_start":636,"line_end":636,"column_start":5,"column_end":12},"name":"I32x4Eq","qualname":"::primitives::Operator::I32x4Eq","value":"Operator::I32x4Eq","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3050},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237592,"byte_end":237599,"line_start":637,"line_end":637,"column_start":5,"column_end":12},"name":"I32x4Ne","qualname":"::primitives::Operator::I32x4Ne","value":"Operator::I32x4Ne","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3052},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237605,"byte_end":237613,"line_start":638,"line_end":638,"column_start":5,"column_end":13},"name":"I32x4LtS","qualname":"::primitives::Operator::I32x4LtS","value":"Operator::I32x4LtS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3054},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237619,"byte_end":237627,"line_start":639,"line_end":639,"column_start":5,"column_end":13},"name":"I32x4LtU","qualname":"::primitives::Operator::I32x4LtU","value":"Operator::I32x4LtU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3056},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237633,"byte_end":237641,"line_start":640,"line_end":640,"column_start":5,"column_end":13},"name":"I32x4GtS","qualname":"::primitives::Operator::I32x4GtS","value":"Operator::I32x4GtS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3058},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237647,"byte_end":237655,"line_start":641,"line_end":641,"column_start":5,"column_end":13},"name":"I32x4GtU","qualname":"::primitives::Operator::I32x4GtU","value":"Operator::I32x4GtU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3060},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237661,"byte_end":237669,"line_start":642,"line_end":642,"column_start":5,"column_end":13},"name":"I32x4LeS","qualname":"::primitives::Operator::I32x4LeS","value":"Operator::I32x4LeS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3062},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237675,"byte_end":237683,"line_start":643,"line_end":643,"column_start":5,"column_end":13},"name":"I32x4LeU","qualname":"::primitives::Operator::I32x4LeU","value":"Operator::I32x4LeU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3064},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237689,"byte_end":237697,"line_start":644,"line_end":644,"column_start":5,"column_end":13},"name":"I32x4GeS","qualname":"::primitives::Operator::I32x4GeS","value":"Operator::I32x4GeS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3066},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237703,"byte_end":237711,"line_start":645,"line_end":645,"column_start":5,"column_end":13},"name":"I32x4GeU","qualname":"::primitives::Operator::I32x4GeU","value":"Operator::I32x4GeU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3068},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237717,"byte_end":237724,"line_start":646,"line_end":646,"column_start":5,"column_end":12},"name":"F32x4Eq","qualname":"::primitives::Operator::F32x4Eq","value":"Operator::F32x4Eq","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3070},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237730,"byte_end":237737,"line_start":647,"line_end":647,"column_start":5,"column_end":12},"name":"F32x4Ne","qualname":"::primitives::Operator::F32x4Ne","value":"Operator::F32x4Ne","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3072},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237743,"byte_end":237750,"line_start":648,"line_end":648,"column_start":5,"column_end":12},"name":"F32x4Lt","qualname":"::primitives::Operator::F32x4Lt","value":"Operator::F32x4Lt","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3074},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237756,"byte_end":237763,"line_start":649,"line_end":649,"column_start":5,"column_end":12},"name":"F32x4Gt","qualname":"::primitives::Operator::F32x4Gt","value":"Operator::F32x4Gt","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3076},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237769,"byte_end":237776,"line_start":650,"line_end":650,"column_start":5,"column_end":12},"name":"F32x4Le","qualname":"::primitives::Operator::F32x4Le","value":"Operator::F32x4Le","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3078},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237782,"byte_end":237789,"line_start":651,"line_end":651,"column_start":5,"column_end":12},"name":"F32x4Ge","qualname":"::primitives::Operator::F32x4Ge","value":"Operator::F32x4Ge","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3080},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237795,"byte_end":237802,"line_start":652,"line_end":652,"column_start":5,"column_end":12},"name":"F64x2Eq","qualname":"::primitives::Operator::F64x2Eq","value":"Operator::F64x2Eq","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3082},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237808,"byte_end":237815,"line_start":653,"line_end":653,"column_start":5,"column_end":12},"name":"F64x2Ne","qualname":"::primitives::Operator::F64x2Ne","value":"Operator::F64x2Ne","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3084},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237821,"byte_end":237828,"line_start":654,"line_end":654,"column_start":5,"column_end":12},"name":"F64x2Lt","qualname":"::primitives::Operator::F64x2Lt","value":"Operator::F64x2Lt","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3086},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237834,"byte_end":237841,"line_start":655,"line_end":655,"column_start":5,"column_end":12},"name":"F64x2Gt","qualname":"::primitives::Operator::F64x2Gt","value":"Operator::F64x2Gt","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3088},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237847,"byte_end":237854,"line_start":656,"line_end":656,"column_start":5,"column_end":12},"name":"F64x2Le","qualname":"::primitives::Operator::F64x2Le","value":"Operator::F64x2Le","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3090},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237860,"byte_end":237867,"line_start":657,"line_end":657,"column_start":5,"column_end":12},"name":"F64x2Ge","qualname":"::primitives::Operator::F64x2Ge","value":"Operator::F64x2Ge","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3092},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237873,"byte_end":237880,"line_start":658,"line_end":658,"column_start":5,"column_end":12},"name":"V128Not","qualname":"::primitives::Operator::V128Not","value":"Operator::V128Not","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3094},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237886,"byte_end":237893,"line_start":659,"line_end":659,"column_start":5,"column_end":12},"name":"V128And","qualname":"::primitives::Operator::V128And","value":"Operator::V128And","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3096},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237899,"byte_end":237909,"line_start":660,"line_end":660,"column_start":5,"column_end":15},"name":"V128AndNot","qualname":"::primitives::Operator::V128AndNot","value":"Operator::V128AndNot","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3098},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237915,"byte_end":237921,"line_start":661,"line_end":661,"column_start":5,"column_end":11},"name":"V128Or","qualname":"::primitives::Operator::V128Or","value":"Operator::V128Or","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3100},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237927,"byte_end":237934,"line_start":662,"line_end":662,"column_start":5,"column_end":12},"name":"V128Xor","qualname":"::primitives::Operator::V128Xor","value":"Operator::V128Xor","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3102},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237940,"byte_end":237953,"line_start":663,"line_end":663,"column_start":5,"column_end":18},"name":"V128Bitselect","qualname":"::primitives::Operator::V128Bitselect","value":"Operator::V128Bitselect","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3104},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237959,"byte_end":237967,"line_start":664,"line_end":664,"column_start":5,"column_end":13},"name":"I8x16Abs","qualname":"::primitives::Operator::I8x16Abs","value":"Operator::I8x16Abs","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3106},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237973,"byte_end":237981,"line_start":665,"line_end":665,"column_start":5,"column_end":13},"name":"I8x16Neg","qualname":"::primitives::Operator::I8x16Neg","value":"Operator::I8x16Neg","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3108},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":237987,"byte_end":237999,"line_start":666,"line_end":666,"column_start":5,"column_end":17},"name":"I8x16AnyTrue","qualname":"::primitives::Operator::I8x16AnyTrue","value":"Operator::I8x16AnyTrue","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3110},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238005,"byte_end":238017,"line_start":667,"line_end":667,"column_start":5,"column_end":17},"name":"I8x16AllTrue","qualname":"::primitives::Operator::I8x16AllTrue","value":"Operator::I8x16AllTrue","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3112},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238023,"byte_end":238035,"line_start":668,"line_end":668,"column_start":5,"column_end":17},"name":"I8x16Bitmask","qualname":"::primitives::Operator::I8x16Bitmask","value":"Operator::I8x16Bitmask","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3114},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238041,"byte_end":238049,"line_start":669,"line_end":669,"column_start":5,"column_end":13},"name":"I8x16Shl","qualname":"::primitives::Operator::I8x16Shl","value":"Operator::I8x16Shl","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3116},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238055,"byte_end":238064,"line_start":670,"line_end":670,"column_start":5,"column_end":14},"name":"I8x16ShrS","qualname":"::primitives::Operator::I8x16ShrS","value":"Operator::I8x16ShrS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3118},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238070,"byte_end":238079,"line_start":671,"line_end":671,"column_start":5,"column_end":14},"name":"I8x16ShrU","qualname":"::primitives::Operator::I8x16ShrU","value":"Operator::I8x16ShrU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3120},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238085,"byte_end":238093,"line_start":672,"line_end":672,"column_start":5,"column_end":13},"name":"I8x16Add","qualname":"::primitives::Operator::I8x16Add","value":"Operator::I8x16Add","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3122},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238099,"byte_end":238116,"line_start":673,"line_end":673,"column_start":5,"column_end":22},"name":"I8x16AddSaturateS","qualname":"::primitives::Operator::I8x16AddSaturateS","value":"Operator::I8x16AddSaturateS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3124},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238122,"byte_end":238139,"line_start":674,"line_end":674,"column_start":5,"column_end":22},"name":"I8x16AddSaturateU","qualname":"::primitives::Operator::I8x16AddSaturateU","value":"Operator::I8x16AddSaturateU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3126},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238145,"byte_end":238153,"line_start":675,"line_end":675,"column_start":5,"column_end":13},"name":"I8x16Sub","qualname":"::primitives::Operator::I8x16Sub","value":"Operator::I8x16Sub","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3128},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238159,"byte_end":238176,"line_start":676,"line_end":676,"column_start":5,"column_end":22},"name":"I8x16SubSaturateS","qualname":"::primitives::Operator::I8x16SubSaturateS","value":"Operator::I8x16SubSaturateS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3130},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238182,"byte_end":238199,"line_start":677,"line_end":677,"column_start":5,"column_end":22},"name":"I8x16SubSaturateU","qualname":"::primitives::Operator::I8x16SubSaturateU","value":"Operator::I8x16SubSaturateU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3132},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238205,"byte_end":238214,"line_start":678,"line_end":678,"column_start":5,"column_end":14},"name":"I8x16MinS","qualname":"::primitives::Operator::I8x16MinS","value":"Operator::I8x16MinS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3134},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238220,"byte_end":238229,"line_start":679,"line_end":679,"column_start":5,"column_end":14},"name":"I8x16MinU","qualname":"::primitives::Operator::I8x16MinU","value":"Operator::I8x16MinU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3136},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238235,"byte_end":238244,"line_start":680,"line_end":680,"column_start":5,"column_end":14},"name":"I8x16MaxS","qualname":"::primitives::Operator::I8x16MaxS","value":"Operator::I8x16MaxS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3138},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238250,"byte_end":238259,"line_start":681,"line_end":681,"column_start":5,"column_end":14},"name":"I8x16MaxU","qualname":"::primitives::Operator::I8x16MaxU","value":"Operator::I8x16MaxU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3140},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238265,"byte_end":238273,"line_start":682,"line_end":682,"column_start":5,"column_end":13},"name":"I16x8Abs","qualname":"::primitives::Operator::I16x8Abs","value":"Operator::I16x8Abs","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3142},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238279,"byte_end":238287,"line_start":683,"line_end":683,"column_start":5,"column_end":13},"name":"I16x8Neg","qualname":"::primitives::Operator::I16x8Neg","value":"Operator::I16x8Neg","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3144},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238293,"byte_end":238305,"line_start":684,"line_end":684,"column_start":5,"column_end":17},"name":"I16x8AnyTrue","qualname":"::primitives::Operator::I16x8AnyTrue","value":"Operator::I16x8AnyTrue","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3146},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238311,"byte_end":238323,"line_start":685,"line_end":685,"column_start":5,"column_end":17},"name":"I16x8AllTrue","qualname":"::primitives::Operator::I16x8AllTrue","value":"Operator::I16x8AllTrue","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3148},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238329,"byte_end":238341,"line_start":686,"line_end":686,"column_start":5,"column_end":17},"name":"I16x8Bitmask","qualname":"::primitives::Operator::I16x8Bitmask","value":"Operator::I16x8Bitmask","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3150},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238347,"byte_end":238355,"line_start":687,"line_end":687,"column_start":5,"column_end":13},"name":"I16x8Shl","qualname":"::primitives::Operator::I16x8Shl","value":"Operator::I16x8Shl","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3152},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238361,"byte_end":238370,"line_start":688,"line_end":688,"column_start":5,"column_end":14},"name":"I16x8ShrS","qualname":"::primitives::Operator::I16x8ShrS","value":"Operator::I16x8ShrS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3154},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238376,"byte_end":238385,"line_start":689,"line_end":689,"column_start":5,"column_end":14},"name":"I16x8ShrU","qualname":"::primitives::Operator::I16x8ShrU","value":"Operator::I16x8ShrU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3156},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238391,"byte_end":238399,"line_start":690,"line_end":690,"column_start":5,"column_end":13},"name":"I16x8Add","qualname":"::primitives::Operator::I16x8Add","value":"Operator::I16x8Add","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3158},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238405,"byte_end":238422,"line_start":691,"line_end":691,"column_start":5,"column_end":22},"name":"I16x8AddSaturateS","qualname":"::primitives::Operator::I16x8AddSaturateS","value":"Operator::I16x8AddSaturateS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3160},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238428,"byte_end":238445,"line_start":692,"line_end":692,"column_start":5,"column_end":22},"name":"I16x8AddSaturateU","qualname":"::primitives::Operator::I16x8AddSaturateU","value":"Operator::I16x8AddSaturateU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3162},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238451,"byte_end":238459,"line_start":693,"line_end":693,"column_start":5,"column_end":13},"name":"I16x8Sub","qualname":"::primitives::Operator::I16x8Sub","value":"Operator::I16x8Sub","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3164},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238465,"byte_end":238482,"line_start":694,"line_end":694,"column_start":5,"column_end":22},"name":"I16x8SubSaturateS","qualname":"::primitives::Operator::I16x8SubSaturateS","value":"Operator::I16x8SubSaturateS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3166},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238488,"byte_end":238505,"line_start":695,"line_end":695,"column_start":5,"column_end":22},"name":"I16x8SubSaturateU","qualname":"::primitives::Operator::I16x8SubSaturateU","value":"Operator::I16x8SubSaturateU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3168},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238511,"byte_end":238519,"line_start":696,"line_end":696,"column_start":5,"column_end":13},"name":"I16x8Mul","qualname":"::primitives::Operator::I16x8Mul","value":"Operator::I16x8Mul","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3170},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238525,"byte_end":238534,"line_start":697,"line_end":697,"column_start":5,"column_end":14},"name":"I16x8MinS","qualname":"::primitives::Operator::I16x8MinS","value":"Operator::I16x8MinS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3172},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238540,"byte_end":238549,"line_start":698,"line_end":698,"column_start":5,"column_end":14},"name":"I16x8MinU","qualname":"::primitives::Operator::I16x8MinU","value":"Operator::I16x8MinU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3174},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238555,"byte_end":238564,"line_start":699,"line_end":699,"column_start":5,"column_end":14},"name":"I16x8MaxS","qualname":"::primitives::Operator::I16x8MaxS","value":"Operator::I16x8MaxS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3176},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238570,"byte_end":238579,"line_start":700,"line_end":700,"column_start":5,"column_end":14},"name":"I16x8MaxU","qualname":"::primitives::Operator::I16x8MaxU","value":"Operator::I16x8MaxU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3178},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238585,"byte_end":238593,"line_start":701,"line_end":701,"column_start":5,"column_end":13},"name":"I32x4Abs","qualname":"::primitives::Operator::I32x4Abs","value":"Operator::I32x4Abs","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3180},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238599,"byte_end":238607,"line_start":702,"line_end":702,"column_start":5,"column_end":13},"name":"I32x4Neg","qualname":"::primitives::Operator::I32x4Neg","value":"Operator::I32x4Neg","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3182},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238613,"byte_end":238625,"line_start":703,"line_end":703,"column_start":5,"column_end":17},"name":"I32x4AnyTrue","qualname":"::primitives::Operator::I32x4AnyTrue","value":"Operator::I32x4AnyTrue","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3184},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238631,"byte_end":238643,"line_start":704,"line_end":704,"column_start":5,"column_end":17},"name":"I32x4AllTrue","qualname":"::primitives::Operator::I32x4AllTrue","value":"Operator::I32x4AllTrue","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3186},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238649,"byte_end":238661,"line_start":705,"line_end":705,"column_start":5,"column_end":17},"name":"I32x4Bitmask","qualname":"::primitives::Operator::I32x4Bitmask","value":"Operator::I32x4Bitmask","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3188},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238667,"byte_end":238675,"line_start":706,"line_end":706,"column_start":5,"column_end":13},"name":"I32x4Shl","qualname":"::primitives::Operator::I32x4Shl","value":"Operator::I32x4Shl","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3190},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238681,"byte_end":238690,"line_start":707,"line_end":707,"column_start":5,"column_end":14},"name":"I32x4ShrS","qualname":"::primitives::Operator::I32x4ShrS","value":"Operator::I32x4ShrS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3192},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238696,"byte_end":238705,"line_start":708,"line_end":708,"column_start":5,"column_end":14},"name":"I32x4ShrU","qualname":"::primitives::Operator::I32x4ShrU","value":"Operator::I32x4ShrU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3194},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238711,"byte_end":238719,"line_start":709,"line_end":709,"column_start":5,"column_end":13},"name":"I32x4Add","qualname":"::primitives::Operator::I32x4Add","value":"Operator::I32x4Add","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3196},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238725,"byte_end":238733,"line_start":710,"line_end":710,"column_start":5,"column_end":13},"name":"I32x4Sub","qualname":"::primitives::Operator::I32x4Sub","value":"Operator::I32x4Sub","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3198},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238739,"byte_end":238747,"line_start":711,"line_end":711,"column_start":5,"column_end":13},"name":"I32x4Mul","qualname":"::primitives::Operator::I32x4Mul","value":"Operator::I32x4Mul","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3200},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238753,"byte_end":238762,"line_start":712,"line_end":712,"column_start":5,"column_end":14},"name":"I32x4MinS","qualname":"::primitives::Operator::I32x4MinS","value":"Operator::I32x4MinS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3202},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238768,"byte_end":238777,"line_start":713,"line_end":713,"column_start":5,"column_end":14},"name":"I32x4MinU","qualname":"::primitives::Operator::I32x4MinU","value":"Operator::I32x4MinU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3204},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238783,"byte_end":238792,"line_start":714,"line_end":714,"column_start":5,"column_end":14},"name":"I32x4MaxS","qualname":"::primitives::Operator::I32x4MaxS","value":"Operator::I32x4MaxS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3206},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238798,"byte_end":238807,"line_start":715,"line_end":715,"column_start":5,"column_end":14},"name":"I32x4MaxU","qualname":"::primitives::Operator::I32x4MaxU","value":"Operator::I32x4MaxU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3208},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238813,"byte_end":238821,"line_start":716,"line_end":716,"column_start":5,"column_end":13},"name":"I64x2Neg","qualname":"::primitives::Operator::I64x2Neg","value":"Operator::I64x2Neg","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3210},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238827,"byte_end":238835,"line_start":717,"line_end":717,"column_start":5,"column_end":13},"name":"I64x2Shl","qualname":"::primitives::Operator::I64x2Shl","value":"Operator::I64x2Shl","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3212},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238841,"byte_end":238850,"line_start":718,"line_end":718,"column_start":5,"column_end":14},"name":"I64x2ShrS","qualname":"::primitives::Operator::I64x2ShrS","value":"Operator::I64x2ShrS","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3214},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238856,"byte_end":238865,"line_start":719,"line_end":719,"column_start":5,"column_end":14},"name":"I64x2ShrU","qualname":"::primitives::Operator::I64x2ShrU","value":"Operator::I64x2ShrU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3216},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238871,"byte_end":238879,"line_start":720,"line_end":720,"column_start":5,"column_end":13},"name":"I64x2Add","qualname":"::primitives::Operator::I64x2Add","value":"Operator::I64x2Add","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3218},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238885,"byte_end":238893,"line_start":721,"line_end":721,"column_start":5,"column_end":13},"name":"I64x2Sub","qualname":"::primitives::Operator::I64x2Sub","value":"Operator::I64x2Sub","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3220},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238899,"byte_end":238907,"line_start":722,"line_end":722,"column_start":5,"column_end":13},"name":"I64x2Mul","qualname":"::primitives::Operator::I64x2Mul","value":"Operator::I64x2Mul","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3222},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238913,"byte_end":238921,"line_start":723,"line_end":723,"column_start":5,"column_end":13},"name":"F32x4Abs","qualname":"::primitives::Operator::F32x4Abs","value":"Operator::F32x4Abs","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3224},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238927,"byte_end":238935,"line_start":724,"line_end":724,"column_start":5,"column_end":13},"name":"F32x4Neg","qualname":"::primitives::Operator::F32x4Neg","value":"Operator::F32x4Neg","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3226},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238941,"byte_end":238950,"line_start":725,"line_end":725,"column_start":5,"column_end":14},"name":"F32x4Sqrt","qualname":"::primitives::Operator::F32x4Sqrt","value":"Operator::F32x4Sqrt","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3228},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238956,"byte_end":238964,"line_start":726,"line_end":726,"column_start":5,"column_end":13},"name":"F32x4Add","qualname":"::primitives::Operator::F32x4Add","value":"Operator::F32x4Add","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3230},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238970,"byte_end":238978,"line_start":727,"line_end":727,"column_start":5,"column_end":13},"name":"F32x4Sub","qualname":"::primitives::Operator::F32x4Sub","value":"Operator::F32x4Sub","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3232},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238984,"byte_end":238992,"line_start":728,"line_end":728,"column_start":5,"column_end":13},"name":"F32x4Mul","qualname":"::primitives::Operator::F32x4Mul","value":"Operator::F32x4Mul","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3234},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":238998,"byte_end":239006,"line_start":729,"line_end":729,"column_start":5,"column_end":13},"name":"F32x4Div","qualname":"::primitives::Operator::F32x4Div","value":"Operator::F32x4Div","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3236},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":239012,"byte_end":239020,"line_start":730,"line_end":730,"column_start":5,"column_end":13},"name":"F32x4Min","qualname":"::primitives::Operator::F32x4Min","value":"Operator::F32x4Min","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3238},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":239026,"byte_end":239034,"line_start":731,"line_end":731,"column_start":5,"column_end":13},"name":"F32x4Max","qualname":"::primitives::Operator::F32x4Max","value":"Operator::F32x4Max","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3240},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":239040,"byte_end":239048,"line_start":732,"line_end":732,"column_start":5,"column_end":13},"name":"F64x2Abs","qualname":"::primitives::Operator::F64x2Abs","value":"Operator::F64x2Abs","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3242},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":239054,"byte_end":239062,"line_start":733,"line_end":733,"column_start":5,"column_end":13},"name":"F64x2Neg","qualname":"::primitives::Operator::F64x2Neg","value":"Operator::F64x2Neg","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3244},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":239068,"byte_end":239077,"line_start":734,"line_end":734,"column_start":5,"column_end":14},"name":"F64x2Sqrt","qualname":"::primitives::Operator::F64x2Sqrt","value":"Operator::F64x2Sqrt","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3246},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":239083,"byte_end":239091,"line_start":735,"line_end":735,"column_start":5,"column_end":13},"name":"F64x2Add","qualname":"::primitives::Operator::F64x2Add","value":"Operator::F64x2Add","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3248},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":239097,"byte_end":239105,"line_start":736,"line_end":736,"column_start":5,"column_end":13},"name":"F64x2Sub","qualname":"::primitives::Operator::F64x2Sub","value":"Operator::F64x2Sub","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3250},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":239111,"byte_end":239119,"line_start":737,"line_end":737,"column_start":5,"column_end":13},"name":"F64x2Mul","qualname":"::primitives::Operator::F64x2Mul","value":"Operator::F64x2Mul","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3252},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":239125,"byte_end":239133,"line_start":738,"line_end":738,"column_start":5,"column_end":13},"name":"F64x2Div","qualname":"::primitives::Operator::F64x2Div","value":"Operator::F64x2Div","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3254},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":239139,"byte_end":239147,"line_start":739,"line_end":739,"column_start":5,"column_end":13},"name":"F64x2Min","qualname":"::primitives::Operator::F64x2Min","value":"Operator::F64x2Min","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3256},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":239153,"byte_end":239161,"line_start":740,"line_end":740,"column_start":5,"column_end":13},"name":"F64x2Max","qualname":"::primitives::Operator::F64x2Max","value":"Operator::F64x2Max","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3258},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":239167,"byte_end":239186,"line_start":741,"line_end":741,"column_start":5,"column_end":24},"name":"I32x4TruncSatF32x4S","qualname":"::primitives::Operator::I32x4TruncSatF32x4S","value":"Operator::I32x4TruncSatF32x4S","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3260},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":239192,"byte_end":239211,"line_start":742,"line_end":742,"column_start":5,"column_end":24},"name":"I32x4TruncSatF32x4U","qualname":"::primitives::Operator::I32x4TruncSatF32x4U","value":"Operator::I32x4TruncSatF32x4U","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3262},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":239217,"byte_end":239235,"line_start":743,"line_end":743,"column_start":5,"column_end":23},"name":"F32x4ConvertI32x4S","qualname":"::primitives::Operator::F32x4ConvertI32x4S","value":"Operator::F32x4ConvertI32x4S","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3264},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":239241,"byte_end":239259,"line_start":744,"line_end":744,"column_start":5,"column_end":23},"name":"F32x4ConvertI32x4U","qualname":"::primitives::Operator::F32x4ConvertI32x4U","value":"Operator::F32x4ConvertI32x4U","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3266},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":239265,"byte_end":239277,"line_start":745,"line_end":745,"column_start":5,"column_end":17},"name":"V8x16Swizzle","qualname":"::primitives::Operator::V8x16Swizzle","value":"Operator::V8x16Swizzle","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3268},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":239283,"byte_end":239295,"line_start":746,"line_end":746,"column_start":5,"column_end":17},"name":"V8x16Shuffle","qualname":"::primitives::Operator::V8x16Shuffle","value":"Operator::V8x16Shuffle { lanes }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3271},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":239332,"byte_end":239346,"line_start":747,"line_end":747,"column_start":5,"column_end":19},"name":"V8x16LoadSplat","qualname":"::primitives::Operator::V8x16LoadSplat","value":"Operator::V8x16LoadSplat { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3273},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":239380,"byte_end":239394,"line_start":748,"line_end":748,"column_start":5,"column_end":19},"name":"V16x8LoadSplat","qualname":"::primitives::Operator::V16x8LoadSplat","value":"Operator::V16x8LoadSplat { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3275},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":239428,"byte_end":239442,"line_start":749,"line_end":749,"column_start":5,"column_end":19},"name":"V32x4LoadSplat","qualname":"::primitives::Operator::V32x4LoadSplat","value":"Operator::V32x4LoadSplat { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3277},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":239476,"byte_end":239490,"line_start":750,"line_end":750,"column_start":5,"column_end":19},"name":"V64x2LoadSplat","qualname":"::primitives::Operator::V64x2LoadSplat","value":"Operator::V64x2LoadSplat { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3279},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":239524,"byte_end":239541,"line_start":751,"line_end":751,"column_start":5,"column_end":22},"name":"I8x16NarrowI16x8S","qualname":"::primitives::Operator::I8x16NarrowI16x8S","value":"Operator::I8x16NarrowI16x8S","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3281},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":239547,"byte_end":239564,"line_start":752,"line_end":752,"column_start":5,"column_end":22},"name":"I8x16NarrowI16x8U","qualname":"::primitives::Operator::I8x16NarrowI16x8U","value":"Operator::I8x16NarrowI16x8U","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3283},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":239570,"byte_end":239587,"line_start":753,"line_end":753,"column_start":5,"column_end":22},"name":"I16x8NarrowI32x4S","qualname":"::primitives::Operator::I16x8NarrowI32x4S","value":"Operator::I16x8NarrowI32x4S","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3285},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":239593,"byte_end":239610,"line_start":754,"line_end":754,"column_start":5,"column_end":22},"name":"I16x8NarrowI32x4U","qualname":"::primitives::Operator::I16x8NarrowI32x4U","value":"Operator::I16x8NarrowI32x4U","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3287},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":239616,"byte_end":239635,"line_start":755,"line_end":755,"column_start":5,"column_end":24},"name":"I16x8WidenLowI8x16S","qualname":"::primitives::Operator::I16x8WidenLowI8x16S","value":"Operator::I16x8WidenLowI8x16S","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3289},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":239641,"byte_end":239661,"line_start":756,"line_end":756,"column_start":5,"column_end":25},"name":"I16x8WidenHighI8x16S","qualname":"::primitives::Operator::I16x8WidenHighI8x16S","value":"Operator::I16x8WidenHighI8x16S","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3291},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":239667,"byte_end":239686,"line_start":757,"line_end":757,"column_start":5,"column_end":24},"name":"I16x8WidenLowI8x16U","qualname":"::primitives::Operator::I16x8WidenLowI8x16U","value":"Operator::I16x8WidenLowI8x16U","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3293},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":239692,"byte_end":239712,"line_start":758,"line_end":758,"column_start":5,"column_end":25},"name":"I16x8WidenHighI8x16U","qualname":"::primitives::Operator::I16x8WidenHighI8x16U","value":"Operator::I16x8WidenHighI8x16U","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3295},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":239718,"byte_end":239737,"line_start":759,"line_end":759,"column_start":5,"column_end":24},"name":"I32x4WidenLowI16x8S","qualname":"::primitives::Operator::I32x4WidenLowI16x8S","value":"Operator::I32x4WidenLowI16x8S","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3297},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":239743,"byte_end":239763,"line_start":760,"line_end":760,"column_start":5,"column_end":25},"name":"I32x4WidenHighI16x8S","qualname":"::primitives::Operator::I32x4WidenHighI16x8S","value":"Operator::I32x4WidenHighI16x8S","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3299},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":239769,"byte_end":239788,"line_start":761,"line_end":761,"column_start":5,"column_end":24},"name":"I32x4WidenLowI16x8U","qualname":"::primitives::Operator::I32x4WidenLowI16x8U","value":"Operator::I32x4WidenLowI16x8U","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3301},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":239794,"byte_end":239814,"line_start":762,"line_end":762,"column_start":5,"column_end":25},"name":"I32x4WidenHighI16x8U","qualname":"::primitives::Operator::I32x4WidenHighI16x8U","value":"Operator::I32x4WidenHighI16x8U","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3303},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":239820,"byte_end":239833,"line_start":763,"line_end":763,"column_start":5,"column_end":18},"name":"I16x8Load8x8S","qualname":"::primitives::Operator::I16x8Load8x8S","value":"Operator::I16x8Load8x8S { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3305},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":239867,"byte_end":239880,"line_start":764,"line_end":764,"column_start":5,"column_end":18},"name":"I16x8Load8x8U","qualname":"::primitives::Operator::I16x8Load8x8U","value":"Operator::I16x8Load8x8U { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3307},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":239914,"byte_end":239928,"line_start":765,"line_end":765,"column_start":5,"column_end":19},"name":"I32x4Load16x4S","qualname":"::primitives::Operator::I32x4Load16x4S","value":"Operator::I32x4Load16x4S { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3309},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":239962,"byte_end":239976,"line_start":766,"line_end":766,"column_start":5,"column_end":19},"name":"I32x4Load16x4U","qualname":"::primitives::Operator::I32x4Load16x4U","value":"Operator::I32x4Load16x4U { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3311},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":240010,"byte_end":240024,"line_start":767,"line_end":767,"column_start":5,"column_end":19},"name":"I64x2Load32x2S","qualname":"::primitives::Operator::I64x2Load32x2S","value":"Operator::I64x2Load32x2S { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3313},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":240058,"byte_end":240072,"line_start":768,"line_end":768,"column_start":5,"column_end":19},"name":"I64x2Load32x2U","qualname":"::primitives::Operator::I64x2Load32x2U","value":"Operator::I64x2Load32x2U { memarg }","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3315},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":240106,"byte_end":240127,"line_start":769,"line_end":769,"column_start":5,"column_end":26},"name":"I8x16RoundingAverageU","qualname":"::primitives::Operator::I8x16RoundingAverageU","value":"Operator::I8x16RoundingAverageU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3317},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":240133,"byte_end":240154,"line_start":770,"line_end":770,"column_start":5,"column_end":26},"name":"I16x8RoundingAverageU","qualname":"::primitives::Operator::I16x8RoundingAverageU","value":"Operator::I16x8RoundingAverageU","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2416},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":228357,"byte_end":228365,"line_start":310,"line_end":310,"column_start":10,"column_end":18},"name":"Operator","qualname":"::primitives::Operator","value":"pub enum Operator<'a> {\n    Unreachable,\n    Nop,\n    Block {\n        ty: TypeOrFuncType,\n    },\n    Loop {\n        ty: TypeOrFuncType,\n    },\n    If {\n        ty: TypeOrFuncType,\n    },\n    Else,\n    End,\n    Br {\n        relative_depth: u32,\n    },\n    BrIf {\n        relative_depth: u32,\n    },\n    BrTable {\n        table: BrTable,\n    },\n    Return,\n    Call {\n        function_index: u32,\n    },\n    CallIndirect {\n        index: u32,\n        table_index: u32,\n    },\n    ReturnCall {\n        function_index: u32,\n    },\n    ReturnCallIndirect {\n        index: u32,\n        table_index: u32,\n    },\n    Drop,\n    Select,\n    TypedSelect {\n        ty: Type,\n    },\n    LocalGet {\n        local_index: u32,\n    },\n    LocalSet {\n        local_index: u32,\n    },\n    LocalTee {\n        local_index: u32,\n    },\n    GlobalGet {\n        global_index: u32,\n    },\n    GlobalSet {\n        global_index: u32,\n    },\n    I32Load {\n        memarg: MemoryImmediate,\n    },\n    I64Load {\n        memarg: MemoryImmediate,\n    },\n    F32Load {\n        memarg: MemoryImmediate,\n    },\n    F64Load {\n        memarg: MemoryImmediate,\n    },\n    I32Load8S {\n        memarg: MemoryImmediate,\n    },\n    I32Load8U {\n        memarg: MemoryImmediate,\n    },\n    I32Load16S {\n        memarg: MemoryImmediate,\n    },\n    I32Load16U {\n        memarg: MemoryImmediate,\n    },\n    I64Load8S {\n        memarg: MemoryImmediate,\n    },\n    I64Load8U {\n        memarg: MemoryImmediate,\n    },\n    I64Load16S {\n        memarg: MemoryImmediate,\n    },\n    I64Load16U {\n        memarg: MemoryImmediate,\n    },\n    I64Load32S {\n        memarg: MemoryImmediate,\n    },\n    I64Load32U {\n        memarg: MemoryImmediate,\n    },\n    I32Store {\n        memarg: MemoryImmediate,\n    },\n    I64Store {\n        memarg: MemoryImmediate,\n    },\n    F32Store {\n        memarg: MemoryImmediate,\n    },\n    F64Store {\n        memarg: MemoryImmediate,\n    },\n    I32Store8 {\n        memarg: MemoryImmediate,\n    },\n    I32Store16 {\n        memarg: MemoryImmediate,\n    },\n    I64Store8 {\n        memarg: MemoryImmediate,\n    },\n    I64Store16 {\n        memarg: MemoryImmediate,\n    },\n    I64Store32 {\n        memarg: MemoryImmediate,\n    },\n    MemorySize {\n        reserved: u32,\n    },\n    MemoryGrow {\n        reserved: u32,\n    },\n    I32Const {\n        value: i32,\n    },\n    I64Const {\n        value: i64,\n    },\n    F32Const {\n        value: Ieee32,\n    },\n    F64Const {\n        value: Ieee64,\n    },\n    RefNull {\n        ty: Type,\n    },\n    RefIsNull,\n    RefFunc {\n        function_index: u32,\n    },\n    I32Eqz,\n    I32Eq,\n    I32Ne,\n    I32LtS,\n    I32LtU,\n    I32GtS,\n    I32GtU,\n    I32LeS,\n    I32LeU,\n    I32GeS,\n    I32GeU,\n    I64Eqz,\n    I64Eq,\n    I64Ne,\n    I64LtS,\n    I64LtU,\n    I64GtS,\n    I64GtU,\n    I64LeS,\n    I64LeU,\n    I64GeS,\n    I64GeU,\n    F32Eq,\n    F32Ne,\n    F32Lt,\n    F32Gt,\n    F32Le,\n    F32Ge,\n    F64Eq,\n    F64Ne,\n    F64Lt,\n    F64Gt,\n    F64Le,\n    F64Ge,\n    I32Clz,\n    I32Ctz,\n    I32Popcnt,\n    I32Add,\n    I32Sub,\n    I32Mul,\n    I32DivS,\n    I32DivU,\n    I32RemS,\n    I32RemU,\n    I32And,\n    I32Or,\n    I32Xor,\n    I32Shl,\n    I32ShrS,\n    I32ShrU,\n    I32Rotl,\n    I32Rotr,\n    I64Clz,\n    I64Ctz,\n    I64Popcnt,\n    I64Add,\n    I64Sub,\n    I64Mul,\n    I64DivS,\n    I64DivU,\n    I64RemS,\n    I64RemU,\n    I64And,\n    I64Or,\n    I64Xor,\n    I64Shl,\n    I64ShrS,\n    I64ShrU,\n    I64Rotl,\n    I64Rotr,\n    F32Abs,\n    F32Neg,\n    F32Ceil,\n    F32Floor,\n    F32Trunc,\n    F32Nearest,\n    F32Sqrt,\n    F32Add,\n    F32Sub,\n    F32Mul,\n    F32Div,\n    F32Min,\n    F32Max,\n    F32Copysign,\n    F64Abs,\n    F64Neg,\n    F64Ceil,\n    F64Floor,\n    F64Trunc,\n    F64Nearest,\n    F64Sqrt,\n    F64Add,\n    F64Sub,\n    F64Mul,\n    F64Div,\n    F64Min,\n    F64Max,\n    F64Copysign,\n    I32WrapI64,\n    I32TruncF32S,\n    I32TruncF32U,\n    I32TruncF64S,\n    I32TruncF64U,\n    I64ExtendI32S,\n    I64ExtendI32U,\n    I64TruncF32S,\n    I64TruncF32U,\n    I64TruncF64S,\n    I64TruncF64U,\n    F32ConvertI32S,\n    F32ConvertI32U,\n    F32ConvertI64S,\n    F32ConvertI64U,\n    F32DemoteF64,\n    F64ConvertI32S,\n    F64ConvertI32U,\n    F64ConvertI64S,\n    F64ConvertI64U,\n    F64PromoteF32,\n    I32ReinterpretF32,\n    I64ReinterpretF64,\n    F32ReinterpretI32,\n    F64ReinterpretI64,\n    I32Extend8S,\n    I32Extend16S,\n    I64Extend8S,\n    I64Extend16S,\n    I64Extend32S,\n    I32TruncSatF32S,\n    I32TruncSatF32U,\n    I32TruncSatF64S,\n    I32TruncSatF64U,\n    I64TruncSatF32S,\n    I64TruncSatF32U,\n    I64TruncSatF64S,\n    I64TruncSatF64U,\n    MemoryInit {\n        segment: u32,\n    },\n    DataDrop {\n        segment: u32,\n    },\n    MemoryCopy,\n    MemoryFill,\n    TableInit {\n        segment: u32,\n        table: u32,\n    },\n    ElemDrop {\n        segment: u32,\n    },\n    TableCopy {\n        dst_table: u32,\n        src_table: u32,\n    },\n    TableFill {\n        table: u32,\n    },\n    TableGet {\n        table: u32,\n    },\n    TableSet {\n        table: u32,\n    },\n    TableGrow {\n        table: u32,\n    },\n    TableSize {\n        table: u32,\n    },\n    AtomicNotify {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicWait {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicWait {\n        memarg: MemoryImmediate,\n    },\n    AtomicFence {\n        flags: u8,\n    },\n    I32AtomicLoad {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicLoad {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicLoad8U {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicLoad16U {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicLoad8U {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicLoad16U {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicLoad32U {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicStore {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicStore {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicStore8 {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicStore16 {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicStore8 {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicStore16 {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicStore32 {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmwAdd {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmwAdd {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmw8AddU {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmw16AddU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw8AddU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw16AddU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw32AddU {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmwSub {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmwSub {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmw8SubU {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmw16SubU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw8SubU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw16SubU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw32SubU {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmwAnd {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmwAnd {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmw8AndU {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmw16AndU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw8AndU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw16AndU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw32AndU {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmwOr {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmwOr {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmw8OrU {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmw16OrU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw8OrU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw16OrU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw32OrU {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmwXor {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmwXor {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmw8XorU {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmw16XorU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw8XorU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw16XorU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw32XorU {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmwXchg {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmwXchg {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmw8XchgU {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmw16XchgU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw8XchgU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw16XchgU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw32XchgU {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmwCmpxchg {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmwCmpxchg {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmw8CmpxchgU {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmw16CmpxchgU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw8CmpxchgU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw16CmpxchgU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw32CmpxchgU {\n        memarg: MemoryImmediate,\n    },\n    V128Load {\n        memarg: MemoryImmediate,\n    },\n    V128Store {\n        memarg: MemoryImmediate,\n    },\n    V128Const {\n        value: V128,\n    },\n    I8x16Splat,\n    I8x16ExtractLaneS {\n        lane: SIMDLaneIndex,\n    },\n    I8x16ExtractLaneU {\n        lane: SIMDLaneIndex,\n    },\n    I8x16ReplaceLane {\n        lane: SIMDLaneIndex,\n    },\n    I16x8Splat,\n    I16x8ExtractLaneS {\n        lane: SIMDLaneIndex,\n    },\n    I16x8ExtractLaneU {\n        lane: SIMDLaneIndex,\n    },\n    I16x8ReplaceLane {\n        lane: SIMDLaneIndex,\n    },\n    I32x4Splat,\n    I32x4ExtractLane {\n        lane: SIMDLaneIndex,\n    },\n    I32x4ReplaceLane {\n        lane: SIMDLaneIndex,\n    },\n    I64x2Splat,\n    I64x2ExtractLane {\n        lane: SIMDLaneIndex,\n    },\n    I64x2ReplaceLane {\n        lane: SIMDLaneIndex,\n    },\n    F32x4Splat,\n    F32x4ExtractLane {\n        lane: SIMDLaneIndex,\n    },\n    F32x4ReplaceLane {\n        lane: SIMDLaneIndex,\n    },\n    F64x2Splat,\n    F64x2ExtractLane {\n        lane: SIMDLaneIndex,\n    },\n    F64x2ReplaceLane {\n        lane: SIMDLaneIndex,\n    },\n    I8x16Eq,\n    I8x16Ne,\n    I8x16LtS,\n    I8x16LtU,\n    I8x16GtS,\n    I8x16GtU,\n    I8x16LeS,\n    I8x16LeU,\n    I8x16GeS,\n    I8x16GeU,\n    I16x8Eq,\n    I16x8Ne,\n    I16x8LtS,\n    I16x8LtU,\n    I16x8GtS,\n    I16x8GtU,\n    I16x8LeS,\n    I16x8LeU,\n    I16x8GeS,\n    I16x8GeU,\n    I32x4Eq,\n    I32x4Ne,\n    I32x4LtS,\n    I32x4LtU,\n    I32x4GtS,\n    I32x4GtU,\n    I32x4LeS,\n    I32x4LeU,\n    I32x4GeS,\n    I32x4GeU,\n    F32x4Eq,\n    F32x4Ne,\n    F32x4Lt,\n    F32x4Gt,\n    F32x4Le,\n    F32x4Ge,\n    F64x2Eq,\n    F64x2Ne,\n    F64x2Lt,\n    F64x2Gt,\n    F64x2Le,\n    F64x2Ge,\n    V128Not,\n    V128And,\n    V128AndNot,\n    V128Or,\n    V128Xor,\n    V128Bitselect,\n    I8x16Abs,\n    I8x16Neg,\n    I8x16AnyTrue,\n    I8x16AllTrue,\n    I8x16Bitmask,\n    I8x16Shl,\n    I8x16ShrS,\n    I8x16ShrU,\n    I8x16Add,\n    I8x16AddSaturateS,\n    I8x16AddSaturateU,\n    I8x16Sub,\n    I8x16SubSaturateS,\n    I8x16SubSaturateU,\n    I8x16MinS,\n    I8x16MinU,\n    I8x16MaxS,\n    I8x16MaxU,\n    I16x8Abs,\n    I16x8Neg,\n    I16x8AnyTrue,\n    I16x8AllTrue,\n    I16x8Bitmask,\n    I16x8Shl,\n    I16x8ShrS,\n    I16x8ShrU,\n    I16x8Add,\n    I16x8AddSaturateS,\n    I16x8AddSaturateU,\n    I16x8Sub,\n    I16x8SubSaturateS,\n    I16x8SubSaturateU,\n    I16x8Mul,\n    I16x8MinS,\n    I16x8MinU,\n    I16x8MaxS,\n    I16x8MaxU,\n    I32x4Abs,\n    I32x4Neg,\n    I32x4AnyTrue,\n    I32x4AllTrue,\n    I32x4Bitmask,\n    I32x4Shl,\n    I32x4ShrS,\n    I32x4ShrU,\n    I32x4Add,\n    I32x4Sub,\n    I32x4Mul,\n    I32x4MinS,\n    I32x4MinU,\n    I32x4MaxS,\n    I32x4MaxU,\n    I64x2Neg,\n    I64x2Shl,\n    I64x2ShrS,\n    I64x2ShrU,\n    I64x2Add,\n    I64x2Sub,\n    I64x2Mul,\n    F32x4Abs,\n    F32x4Neg,\n    F32x4Sqrt,\n    F32x4Add,\n    F32x4Sub,\n    F32x4Mul,\n    F32x4Div,\n    F32x4Min,\n    F32x4Max,\n    F64x2Abs,\n    F64x2Neg,\n    F64x2Sqrt,\n    F64x2Add,\n    F64x2Sub,\n    F64x2Mul,\n    F64x2Div,\n    F64x2Min,\n    F64x2Max,\n    I32x4TruncSatF32x4S,\n    I32x4TruncSatF32x4U,\n    F32x4ConvertI32x4S,\n    F32x4ConvertI32x4U,\n    V8x16Swizzle,\n    V8x16Shuffle {\n        lanes: [SIMDLaneIndex; ],\n    },\n    V8x16LoadSplat {\n        memarg: MemoryImmediate,\n    },\n    V16x8LoadSplat {\n        memarg: MemoryImmediate,\n    },\n    V32x4LoadSplat {\n        memarg: MemoryImmediate,\n    },\n    V64x2LoadSplat {\n        memarg: MemoryImmediate,\n    },\n    I8x16NarrowI16x8S,\n    I8x16NarrowI16x8U,\n    I16x8NarrowI32x4S,\n    I16x8NarrowI32x4U,\n    I16x8WidenLowI8x16S,\n    I16x8WidenHighI8x16S,\n    I16x8WidenLowI8x16U,\n    I16x8WidenHighI8x16U,\n    I32x4WidenLowI16x8S,\n    I32x4WidenHighI16x8S,\n    I32x4WidenLowI16x8U,\n    I32x4WidenHighI16x8U,\n    I16x8Load8x8S {\n        memarg: MemoryImmediate,\n    },\n    I16x8Load8x8U {\n        memarg: MemoryImmediate,\n    },\n    I32x4Load16x4S {\n        memarg: MemoryImmediate,\n    },\n    I32x4Load16x4U {\n        memarg: MemoryImmediate,\n    },\n    I64x2Load32x2S {\n        memarg: MemoryImmediate,\n    },\n    I64x2Load32x2U {\n        memarg: MemoryImmediate,\n    },\n    I8x16RoundingAverageU,\n    I16x8RoundingAverageU,\n}","parent":null,"children":[{"krate":0,"index":2418},{"krate":0,"index":2420},{"krate":0,"index":2422},{"krate":0,"index":2424},{"krate":0,"index":2426},{"krate":0,"index":2428},{"krate":0,"index":2430},{"krate":0,"index":2432},{"krate":0,"index":2434},{"krate":0,"index":2436},{"krate":0,"index":2438},{"krate":0,"index":2440},{"krate":0,"index":2442},{"krate":0,"index":2445},{"krate":0,"index":2447},{"krate":0,"index":2450},{"krate":0,"index":2452},{"krate":0,"index":2454},{"krate":0,"index":2456},{"krate":0,"index":2458},{"krate":0,"index":2460},{"krate":0,"index":2462},{"krate":0,"index":2464},{"krate":0,"index":2466},{"krate":0,"index":2468},{"krate":0,"index":2470},{"krate":0,"index":2472},{"krate":0,"index":2474},{"krate":0,"index":2476},{"krate":0,"index":2478},{"krate":0,"index":2480},{"krate":0,"index":2482},{"krate":0,"index":2484},{"krate":0,"index":2486},{"krate":0,"index":2488},{"krate":0,"index":2490},{"krate":0,"index":2492},{"krate":0,"index":2494},{"krate":0,"index":2496},{"krate":0,"index":2498},{"krate":0,"index":2500},{"krate":0,"index":2502},{"krate":0,"index":2504},{"krate":0,"index":2506},{"krate":0,"index":2508},{"krate":0,"index":2510},{"krate":0,"index":2512},{"krate":0,"index":2514},{"krate":0,"index":2516},{"krate":0,"index":2518},{"krate":0,"index":2520},{"krate":0,"index":2522},{"krate":0,"index":2524},{"krate":0,"index":2526},{"krate":0,"index":2528},{"krate":0,"index":2530},{"krate":0,"index":2532},{"krate":0,"index":2534},{"krate":0,"index":2536},{"krate":0,"index":2538},{"krate":0,"index":2540},{"krate":0,"index":2542},{"krate":0,"index":2544},{"krate":0,"index":2546},{"krate":0,"index":2548},{"krate":0,"index":2550},{"krate":0,"index":2552},{"krate":0,"index":2554},{"krate":0,"index":2556},{"krate":0,"index":2558},{"krate":0,"index":2560},{"krate":0,"index":2562},{"krate":0,"index":2564},{"krate":0,"index":2566},{"krate":0,"index":2568},{"krate":0,"index":2570},{"krate":0,"index":2572},{"krate":0,"index":2574},{"krate":0,"index":2576},{"krate":0,"index":2578},{"krate":0,"index":2580},{"krate":0,"index":2582},{"krate":0,"index":2584},{"krate":0,"index":2586},{"krate":0,"index":2588},{"krate":0,"index":2590},{"krate":0,"index":2592},{"krate":0,"index":2594},{"krate":0,"index":2596},{"krate":0,"index":2598},{"krate":0,"index":2600},{"krate":0,"index":2602},{"krate":0,"index":2604},{"krate":0,"index":2606},{"krate":0,"index":2608},{"krate":0,"index":2610},{"krate":0,"index":2612},{"krate":0,"index":2614},{"krate":0,"index":2616},{"krate":0,"index":2618},{"krate":0,"index":2620},{"krate":0,"index":2622},{"krate":0,"index":2624},{"krate":0,"index":2626},{"krate":0,"index":2628},{"krate":0,"index":2630},{"krate":0,"index":2632},{"krate":0,"index":2634},{"krate":0,"index":2636},{"krate":0,"index":2638},{"krate":0,"index":2640},{"krate":0,"index":2642},{"krate":0,"index":2644},{"krate":0,"index":2646},{"krate":0,"index":2648},{"krate":0,"index":2650},{"krate":0,"index":2652},{"krate":0,"index":2654},{"krate":0,"index":2656},{"krate":0,"index":2658},{"krate":0,"index":2660},{"krate":0,"index":2662},{"krate":0,"index":2664},{"krate":0,"index":2666},{"krate":0,"index":2668},{"krate":0,"index":2670},{"krate":0,"index":2672},{"krate":0,"index":2674},{"krate":0,"index":2676},{"krate":0,"index":2678},{"krate":0,"index":2680},{"krate":0,"index":2682},{"krate":0,"index":2684},{"krate":0,"index":2686},{"krate":0,"index":2688},{"krate":0,"index":2690},{"krate":0,"index":2692},{"krate":0,"index":2694},{"krate":0,"index":2696},{"krate":0,"index":2698},{"krate":0,"index":2700},{"krate":0,"index":2702},{"krate":0,"index":2704},{"krate":0,"index":2706},{"krate":0,"index":2708},{"krate":0,"index":2710},{"krate":0,"index":2712},{"krate":0,"index":2714},{"krate":0,"index":2716},{"krate":0,"index":2718},{"krate":0,"index":2720},{"krate":0,"index":2722},{"krate":0,"index":2724},{"krate":0,"index":2726},{"krate":0,"index":2728},{"krate":0,"index":2730},{"krate":0,"index":2732},{"krate":0,"index":2734},{"krate":0,"index":2736},{"krate":0,"index":2738},{"krate":0,"index":2740},{"krate":0,"index":2742},{"krate":0,"index":2744},{"krate":0,"index":2746},{"krate":0,"index":2748},{"krate":0,"index":2750},{"krate":0,"index":2752},{"krate":0,"index":2754},{"krate":0,"index":2756},{"krate":0,"index":2758},{"krate":0,"index":2760},{"krate":0,"index":2762},{"krate":0,"index":2764},{"krate":0,"index":2766},{"krate":0,"index":2768},{"krate":0,"index":2770},{"krate":0,"index":2772},{"krate":0,"index":2774},{"krate":0,"index":2776},{"krate":0,"index":2778},{"krate":0,"index":2780},{"krate":0,"index":2782},{"krate":0,"index":2784},{"krate":0,"index":2786},{"krate":0,"index":2788},{"krate":0,"index":2790},{"krate":0,"index":2792},{"krate":0,"index":2794},{"krate":0,"index":2796},{"krate":0,"index":2798},{"krate":0,"index":2800},{"krate":0,"index":2802},{"krate":0,"index":2804},{"krate":0,"index":2806},{"krate":0,"index":2808},{"krate":0,"index":2810},{"krate":0,"index":2813},{"krate":0,"index":2815},{"krate":0,"index":2818},{"krate":0,"index":2820},{"krate":0,"index":2822},{"krate":0,"index":2824},{"krate":0,"index":2826},{"krate":0,"index":2828},{"krate":0,"index":2830},{"krate":0,"index":2832},{"krate":0,"index":2834},{"krate":0,"index":2836},{"krate":0,"index":2838},{"krate":0,"index":2840},{"krate":0,"index":2842},{"krate":0,"index":2844},{"krate":0,"index":2846},{"krate":0,"index":2848},{"krate":0,"index":2850},{"krate":0,"index":2852},{"krate":0,"index":2854},{"krate":0,"index":2856},{"krate":0,"index":2858},{"krate":0,"index":2860},{"krate":0,"index":2862},{"krate":0,"index":2864},{"krate":0,"index":2866},{"krate":0,"index":2868},{"krate":0,"index":2870},{"krate":0,"index":2872},{"krate":0,"index":2874},{"krate":0,"index":2876},{"krate":0,"index":2878},{"krate":0,"index":2880},{"krate":0,"index":2882},{"krate":0,"index":2884},{"krate":0,"index":2886},{"krate":0,"index":2888},{"krate":0,"index":2890},{"krate":0,"index":2892},{"krate":0,"index":2894},{"krate":0,"index":2896},{"krate":0,"index":2898},{"krate":0,"index":2900},{"krate":0,"index":2902},{"krate":0,"index":2904},{"krate":0,"index":2906},{"krate":0,"index":2908},{"krate":0,"index":2910},{"krate":0,"index":2912},{"krate":0,"index":2914},{"krate":0,"index":2916},{"krate":0,"index":2918},{"krate":0,"index":2920},{"krate":0,"index":2922},{"krate":0,"index":2924},{"krate":0,"index":2926},{"krate":0,"index":2928},{"krate":0,"index":2930},{"krate":0,"index":2932},{"krate":0,"index":2934},{"krate":0,"index":2936},{"krate":0,"index":2938},{"krate":0,"index":2940},{"krate":0,"index":2942},{"krate":0,"index":2944},{"krate":0,"index":2946},{"krate":0,"index":2948},{"krate":0,"index":2950},{"krate":0,"index":2952},{"krate":0,"index":2954},{"krate":0,"index":2956},{"krate":0,"index":2958},{"krate":0,"index":2960},{"krate":0,"index":2962},{"krate":0,"index":2964},{"krate":0,"index":2966},{"krate":0,"index":2968},{"krate":0,"index":2970},{"krate":0,"index":2972},{"krate":0,"index":2974},{"krate":0,"index":2976},{"krate":0,"index":2978},{"krate":0,"index":2980},{"krate":0,"index":2982},{"krate":0,"index":2984},{"krate":0,"index":2986},{"krate":0,"index":2988},{"krate":0,"index":2990},{"krate":0,"index":2992},{"krate":0,"index":2994},{"krate":0,"index":2996},{"krate":0,"index":2998},{"krate":0,"index":3000},{"krate":0,"index":3002},{"krate":0,"index":3004},{"krate":0,"index":3006},{"krate":0,"index":3008},{"krate":0,"index":3010},{"krate":0,"index":3012},{"krate":0,"index":3014},{"krate":0,"index":3016},{"krate":0,"index":3018},{"krate":0,"index":3020},{"krate":0,"index":3022},{"krate":0,"index":3024},{"krate":0,"index":3026},{"krate":0,"index":3028},{"krate":0,"index":3030},{"krate":0,"index":3032},{"krate":0,"index":3034},{"krate":0,"index":3036},{"krate":0,"index":3038},{"krate":0,"index":3040},{"krate":0,"index":3042},{"krate":0,"index":3044},{"krate":0,"index":3046},{"krate":0,"index":3048},{"krate":0,"index":3050},{"krate":0,"index":3052},{"krate":0,"index":3054},{"krate":0,"index":3056},{"krate":0,"index":3058},{"krate":0,"index":3060},{"krate":0,"index":3062},{"krate":0,"index":3064},{"krate":0,"index":3066},{"krate":0,"index":3068},{"krate":0,"index":3070},{"krate":0,"index":3072},{"krate":0,"index":3074},{"krate":0,"index":3076},{"krate":0,"index":3078},{"krate":0,"index":3080},{"krate":0,"index":3082},{"krate":0,"index":3084},{"krate":0,"index":3086},{"krate":0,"index":3088},{"krate":0,"index":3090},{"krate":0,"index":3092},{"krate":0,"index":3094},{"krate":0,"index":3096},{"krate":0,"index":3098},{"krate":0,"index":3100},{"krate":0,"index":3102},{"krate":0,"index":3104},{"krate":0,"index":3106},{"krate":0,"index":3108},{"krate":0,"index":3110},{"krate":0,"index":3112},{"krate":0,"index":3114},{"krate":0,"index":3116},{"krate":0,"index":3118},{"krate":0,"index":3120},{"krate":0,"index":3122},{"krate":0,"index":3124},{"krate":0,"index":3126},{"krate":0,"index":3128},{"krate":0,"index":3130},{"krate":0,"index":3132},{"krate":0,"index":3134},{"krate":0,"index":3136},{"krate":0,"index":3138},{"krate":0,"index":3140},{"krate":0,"index":3142},{"krate":0,"index":3144},{"krate":0,"index":3146},{"krate":0,"index":3148},{"krate":0,"index":3150},{"krate":0,"index":3152},{"krate":0,"index":3154},{"krate":0,"index":3156},{"krate":0,"index":3158},{"krate":0,"index":3160},{"krate":0,"index":3162},{"krate":0,"index":3164},{"krate":0,"index":3166},{"krate":0,"index":3168},{"krate":0,"index":3170},{"krate":0,"index":3172},{"krate":0,"index":3174},{"krate":0,"index":3176},{"krate":0,"index":3178},{"krate":0,"index":3180},{"krate":0,"index":3182},{"krate":0,"index":3184},{"krate":0,"index":3186},{"krate":0,"index":3188},{"krate":0,"index":3190},{"krate":0,"index":3192},{"krate":0,"index":3194},{"krate":0,"index":3196},{"krate":0,"index":3198},{"krate":0,"index":3200},{"krate":0,"index":3202},{"krate":0,"index":3204},{"krate":0,"index":3206},{"krate":0,"index":3208},{"krate":0,"index":3210},{"krate":0,"index":3212},{"krate":0,"index":3214},{"krate":0,"index":3216},{"krate":0,"index":3218},{"krate":0,"index":3220},{"krate":0,"index":3222},{"krate":0,"index":3224},{"krate":0,"index":3226},{"krate":0,"index":3228},{"krate":0,"index":3230},{"krate":0,"index":3232},{"krate":0,"index":3234},{"krate":0,"index":3236},{"krate":0,"index":3238},{"krate":0,"index":3240},{"krate":0,"index":3242},{"krate":0,"index":3244},{"krate":0,"index":3246},{"krate":0,"index":3248},{"krate":0,"index":3250},{"krate":0,"index":3252},{"krate":0,"index":3254},{"krate":0,"index":3256},{"krate":0,"index":3258},{"krate":0,"index":3260},{"krate":0,"index":3262},{"krate":0,"index":3264},{"krate":0,"index":3266},{"krate":0,"index":3268},{"krate":0,"index":3271},{"krate":0,"index":3273},{"krate":0,"index":3275},{"krate":0,"index":3277},{"krate":0,"index":3279},{"krate":0,"index":3281},{"krate":0,"index":3283},{"krate":0,"index":3285},{"krate":0,"index":3287},{"krate":0,"index":3289},{"krate":0,"index":3291},{"krate":0,"index":3293},{"krate":0,"index":3295},{"krate":0,"index":3297},{"krate":0,"index":3299},{"krate":0,"index":3301},{"krate":0,"index":3303},{"krate":0,"index":3305},{"krate":0,"index":3307},{"krate":0,"index":3309},{"krate":0,"index":3311},{"krate":0,"index":3313},{"krate":0,"index":3315},{"krate":0,"index":3317}],"decl_id":null,"docs":" Instructions as defined [here].","sig":null,"attributes":[{"value":"/ Instructions as defined [here].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":228207,"byte_end":228242,"line_start":306,"line_end":306,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":228243,"byte_end":228246,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ [here]: https://webassembly.github.io/spec/core/binary/instructions.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":228247,"byte_end":228323,"line_start":308,"line_end":308,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":3325},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/alias_section.rs","byte_start":242232,"byte_end":242250,"line_start":7,"line_end":7,"column_start":12,"column_end":30},"name":"AliasSectionReader","qualname":"::readers::alias_section::AliasSectionReader","value":"AliasSectionReader {  }","parent":null,"children":[{"krate":0,"index":3327},{"krate":0,"index":3328}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3332},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/alias_section.rs","byte_start":242334,"byte_end":242339,"line_start":13,"line_end":13,"column_start":12,"column_end":17},"name":"Alias","qualname":"::readers::alias_section::Alias","value":"Alias { instance, kind, index }","parent":null,"children":[{"krate":0,"index":3333},{"krate":0,"index":3334},{"krate":0,"index":3335}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3333},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/alias_section.rs","byte_start":242350,"byte_end":242358,"line_start":14,"line_end":14,"column_start":9,"column_end":17},"name":"instance","qualname":"::readers::alias_section::Alias::instance","value":"readers::alias_section::AliasedInstance","parent":{"krate":0,"index":3332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3334},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/alias_section.rs","byte_start":242385,"byte_end":242389,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"kind","qualname":"::readers::alias_section::Alias::kind","value":"primitives::ExternalKind","parent":{"krate":0,"index":3332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3335},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/alias_section.rs","byte_start":242413,"byte_end":242418,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"index","qualname":"::readers::alias_section::Alias::index","value":"u32","parent":{"krate":0,"index":3332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3339},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/alias_section.rs","byte_start":242476,"byte_end":242482,"line_start":21,"line_end":21,"column_start":5,"column_end":11},"name":"Parent","qualname":"::readers::alias_section::AliasedInstance::Parent","value":"AliasedInstance::Parent","parent":{"krate":0,"index":3338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3341},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/alias_section.rs","byte_start":242488,"byte_end":242493,"line_start":22,"line_end":22,"column_start":5,"column_end":10},"name":"Child","qualname":"::readers::alias_section::AliasedInstance::Child","value":"AliasedInstance::Child(u32)","parent":{"krate":0,"index":3338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3338},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/alias_section.rs","byte_start":242454,"byte_end":242469,"line_start":20,"line_end":20,"column_start":10,"column_end":25},"name":"AliasedInstance","qualname":"::readers::alias_section::AliasedInstance","value":"pub enum AliasedInstance { Parent, Child(u32), }","parent":null,"children":[{"krate":0,"index":3339},{"krate":0,"index":3341}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/alias_section.rs","byte_start":242548,"byte_end":242551,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"new","qualname":"<AliasSectionReader>::new","value":"pub fn new(&'a [u8], usize) -> Result<AliasSectionReader>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/alias_section.rs","byte_start":242800,"byte_end":242817,"line_start":32,"line_end":32,"column_start":12,"column_end":29},"name":"original_position","qualname":"<AliasSectionReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/alias_section.rs","byte_start":242894,"byte_end":242903,"line_start":36,"line_end":36,"column_start":12,"column_end":21},"name":"get_count","qualname":"<AliasSectionReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/alias_section.rs","byte_start":242957,"byte_end":242961,"line_start":40,"line_end":40,"column_start":12,"column_end":16},"name":"read","qualname":"<AliasSectionReader>::read","value":"pub fn read(&mut Self) -> Result<Alias>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3346},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":245126,"byte_end":245138,"line_start":22,"line_end":22,"column_start":12,"column_end":24},"name":"FunctionBody","qualname":"::readers::code_section::FunctionBody","value":"FunctionBody {  }","parent":null,"children":[{"krate":0,"index":3348},{"krate":0,"index":3349}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":245226,"byte_end":245229,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<FunctionBody>::new","value":"pub fn new(usize, &'a [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":245319,"byte_end":245336,"line_start":32,"line_end":32,"column_start":12,"column_end":29},"name":"get_binary_reader","qualname":"<FunctionBody>::get_binary_reader","value":"pub fn get_binary_reader<'b>(&Self) -> BinaryReader where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":245714,"byte_end":245731,"line_start":48,"line_end":48,"column_start":12,"column_end":29},"name":"get_locals_reader","qualname":"<FunctionBody>::get_locals_reader","value":"pub fn get_locals_reader<'b>(&Self) -> Result<LocalsReader> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":245988,"byte_end":246008,"line_start":57,"line_end":57,"column_start":12,"column_end":32},"name":"get_operators_reader","qualname":"<FunctionBody>::get_operators_reader","value":"pub fn get_operators_reader<'b>(&Self) -> Result<OperatorsReader> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":246328,"byte_end":246333,"line_start":67,"line_end":67,"column_start":12,"column_end":17},"name":"range","qualname":"<FunctionBody>::range","value":"pub fn range(&Self) -> Range","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":691},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":246478,"byte_end":246490,"line_start":75,"line_end":75,"column_start":12,"column_end":24},"name":"LocalsReader","qualname":"::readers::code_section::LocalsReader","value":"LocalsReader {  }","parent":null,"children":[{"krate":0,"index":693},{"krate":0,"index":694}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":246585,"byte_end":246594,"line_start":81,"line_end":81,"column_start":12,"column_end":21},"name":"get_count","qualname":"<LocalsReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":246648,"byte_end":246665,"line_start":85,"line_end":85,"column_start":12,"column_end":29},"name":"original_position","qualname":"<LocalsReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":246742,"byte_end":246746,"line_start":89,"line_end":89,"column_start":12,"column_end":16},"name":"read","qualname":"<LocalsReader>::read","value":"pub fn read(&mut Self) -> Result<(u32, Type)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":700},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":246935,"byte_end":246952,"line_start":96,"line_end":96,"column_start":12,"column_end":29},"name":"CodeSectionReader","qualname":"::readers::code_section::CodeSectionReader","value":"CodeSectionReader {  }","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":703}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":709},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":247335,"byte_end":247349,"line_start":114,"line_end":114,"column_start":12,"column_end":26},"name":"LocalsIterator","qualname":"::readers::code_section::LocalsIterator","value":"LocalsIterator {  }","parent":null,"children":[{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":247937,"byte_end":247940,"line_start":138,"line_end":138,"column_start":12,"column_end":15},"name":"new","qualname":"<CodeSectionReader>::new","value":"pub fn new(&'a [u8], usize) -> Result<CodeSectionReader>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":248187,"byte_end":248204,"line_start":144,"line_end":144,"column_start":12,"column_end":29},"name":"original_position","qualname":"<CodeSectionReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":248281,"byte_end":248290,"line_start":148,"line_end":148,"column_start":12,"column_end":21},"name":"get_count","qualname":"<CodeSectionReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":249362,"byte_end":249366,"line_start":178,"line_end":178,"column_start":12,"column_end":16},"name":"read","qualname":"<CodeSectionReader>::read","value":"pub fn read<'b>(&mut Self) -> Result<FunctionBody> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":" Reads content of the code section.","sig":null,"attributes":[{"value":"/ Reads content of the code section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":248676,"byte_end":248714,"line_start":162,"line_end":162,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":248719,"byte_end":248722,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":248727,"byte_end":248741,"line_start":164,"line_end":164,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":248746,"byte_end":248753,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ use wasmparser::CodeSectionReader;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":248758,"byte_end":248796,"line_start":166,"line_end":166,"column_start":5,"column_end":43}},{"value":"/ # let data: &[u8] = &[","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":248801,"byte_end":248827,"line_start":167,"line_end":167,"column_start":5,"column_end":31}},{"value":"/ #     0x01, 0x03, 0x00, 0x01, 0x0b];","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":248832,"byte_end":248872,"line_start":168,"line_end":168,"column_start":5,"column_end":45}},{"value":"/ let mut code_reader = CodeSectionReader::new(data, 0).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":248877,"byte_end":248944,"line_start":169,"line_end":169,"column_start":5,"column_end":72}},{"value":"/ for _ in 0..code_reader.get_count() {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":248949,"byte_end":248990,"line_start":170,"line_end":170,"column_start":5,"column_end":46}},{"value":"/     let body = code_reader.read().expect(\"function body\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":248995,"byte_end":249057,"line_start":171,"line_end":171,"column_start":5,"column_end":67}},{"value":"/     let mut binary_reader = body.get_binary_reader();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":249062,"byte_end":249119,"line_start":172,"line_end":172,"column_start":5,"column_end":62}},{"value":"/     assert!(binary_reader.read_local_count().expect(\"local count\") == 0);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":249124,"byte_end":249201,"line_start":173,"line_end":173,"column_start":5,"column_end":82}},{"value":"/     let op = binary_reader.read_operator().expect(\"first operator\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":249206,"byte_end":249278,"line_start":174,"line_end":174,"column_start":5,"column_end":77}},{"value":"/     println!(\"First operator: {:?}\", op);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":249283,"byte_end":249328,"line_start":175,"line_end":175,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":249333,"byte_end":249338,"line_start":176,"line_end":176,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":249343,"byte_end":249350,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3353},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/data_section.rs","byte_start":252049,"byte_end":252053,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"name":"Data","qualname":"::readers::data_section::Data","value":"Data { kind, data }","parent":null,"children":[{"krate":0,"index":3355},{"krate":0,"index":3356}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3355},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/data_section.rs","byte_start":252068,"byte_end":252072,"line_start":23,"line_end":23,"column_start":9,"column_end":13},"name":"kind","qualname":"::readers::data_section::Data::kind","value":"readers::data_section::DataKind<'a>","parent":{"krate":0,"index":3353},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3356},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/data_section.rs","byte_start":252096,"byte_end":252100,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"name":"data","qualname":"::readers::data_section::Data::data","value":"&'a [u8]","parent":{"krate":0,"index":3353},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3367},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/data_section.rs","byte_start":252173,"byte_end":252180,"line_start":29,"line_end":29,"column_start":5,"column_end":12},"name":"Passive","qualname":"::readers::data_section::DataKind::Passive","value":"DataKind::Passive","parent":{"krate":0,"index":3365},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3369},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/data_section.rs","byte_start":252186,"byte_end":252192,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Active","qualname":"::readers::data_section::DataKind::Active","value":"DataKind::Active { memory_index, init_expr }","parent":{"krate":0,"index":3365},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3365},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/data_section.rs","byte_start":252154,"byte_end":252162,"line_start":28,"line_end":28,"column_start":10,"column_end":18},"name":"DataKind","qualname":"::readers::data_section::DataKind","value":"pub enum DataKind<'a> {\n    Passive,\n    Active {\n        memory_index: u32,\n        init_expr: InitExpr,\n    },\n}","parent":null,"children":[{"krate":0,"index":3367},{"krate":0,"index":3369}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3380},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/data_section.rs","byte_start":252293,"byte_end":252310,"line_start":37,"line_end":37,"column_start":12,"column_end":29},"name":"DataSectionReader","qualname":"::readers::data_section::DataSectionReader","value":"DataSectionReader {  }","parent":null,"children":[{"krate":0,"index":3382},{"krate":0,"index":3383}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/data_section.rs","byte_start":252410,"byte_end":252413,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<DataSectionReader>::new","value":"pub fn new(&'a [u8], usize) -> Result<DataSectionReader>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/data_section.rs","byte_start":252660,"byte_end":252677,"line_start":49,"line_end":49,"column_start":12,"column_end":29},"name":"original_position","qualname":"<DataSectionReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/data_section.rs","byte_start":252754,"byte_end":252763,"line_start":53,"line_end":53,"column_start":12,"column_end":21},"name":"get_count","qualname":"<DataSectionReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/data_section.rs","byte_start":253922,"byte_end":253926,"line_start":85,"line_end":85,"column_start":12,"column_end":16},"name":"read","qualname":"<DataSectionReader>::read","value":"pub fn read<'b>(&mut Self) -> Result<Data> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":" Reads content of the data section.","sig":null,"attributes":[{"value":"/ Reads content of the data section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/data_section.rs","byte_start":253148,"byte_end":253186,"line_start":67,"line_end":67,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/data_section.rs","byte_start":253191,"byte_end":253194,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/data_section.rs","byte_start":253199,"byte_end":253213,"line_start":69,"line_end":69,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/data_section.rs","byte_start":253218,"byte_end":253225,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ use wasmparser::{DataSectionReader, DataKind};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/data_section.rs","byte_start":253230,"byte_end":253280,"line_start":71,"line_end":71,"column_start":5,"column_end":55}},{"value":"/ # let data: &[u8] = &[","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/data_section.rs","byte_start":253285,"byte_end":253311,"line_start":72,"line_end":72,"column_start":5,"column_end":31}},{"value":"/ #     0x01, 0x00, 0x41, 0x80, 0x08, 0x0b, 0x04, 0x00, 0x00, 0x00, 0x00];","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/data_section.rs","byte_start":253316,"byte_end":253392,"line_start":73,"line_end":73,"column_start":5,"column_end":81}},{"value":"/ let mut data_reader = DataSectionReader::new(data, 0).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/data_section.rs","byte_start":253397,"byte_end":253464,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/ for _ in 0..data_reader.get_count() {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/data_section.rs","byte_start":253469,"byte_end":253510,"line_start":75,"line_end":75,"column_start":5,"column_end":46}},{"value":"/     let data = data_reader.read().expect(\"data\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/data_section.rs","byte_start":253515,"byte_end":253568,"line_start":76,"line_end":76,"column_start":5,"column_end":58}},{"value":"/     println!(\"Data: {:?}\", data);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/data_section.rs","byte_start":253573,"byte_end":253610,"line_start":77,"line_end":77,"column_start":5,"column_end":42}},{"value":"/     if let DataKind::Active { init_expr, .. } = data.kind {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/data_section.rs","byte_start":253615,"byte_end":253678,"line_start":78,"line_end":78,"column_start":5,"column_end":68}},{"value":"/         let mut init_expr_reader = init_expr.get_binary_reader();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/data_section.rs","byte_start":253683,"byte_end":253752,"line_start":79,"line_end":79,"column_start":5,"column_end":74}},{"value":"/         let op = init_expr_reader.read_operator().expect(\"op\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/data_section.rs","byte_start":253757,"byte_end":253824,"line_start":80,"line_end":80,"column_start":5,"column_end":72}},{"value":"/         println!(\"Init const: {:?}\", op);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/data_section.rs","byte_start":253829,"byte_end":253874,"line_start":81,"line_end":81,"column_start":5,"column_end":50}},{"value":"/     }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/data_section.rs","byte_start":253879,"byte_end":253888,"line_start":82,"line_end":82,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/data_section.rs","byte_start":253893,"byte_end":253898,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/data_section.rs","byte_start":253903,"byte_end":253910,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3387},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":256841,"byte_end":256848,"line_start":23,"line_end":23,"column_start":12,"column_end":19},"name":"Element","qualname":"::readers::element_section::Element","value":"Element { kind, items, ty }","parent":null,"children":[{"krate":0,"index":3389},{"krate":0,"index":3390},{"krate":0,"index":3391}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3389},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":256863,"byte_end":256867,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"name":"kind","qualname":"::readers::element_section::Element::kind","value":"readers::element_section::ElementKind<'a>","parent":{"krate":0,"index":3387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3390},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":256894,"byte_end":256899,"line_start":25,"line_end":25,"column_start":9,"column_end":14},"name":"items","qualname":"::readers::element_section::Element::items","value":"readers::element_section::ElementItems<'a>","parent":{"krate":0,"index":3387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3391},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":256927,"byte_end":256929,"line_start":26,"line_end":26,"column_start":9,"column_end":11},"name":"ty","qualname":"::readers::element_section::Element::ty","value":"primitives::Type","parent":{"krate":0,"index":3387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3397},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":256988,"byte_end":256995,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Passive","qualname":"::readers::element_section::ElementKind::Passive","value":"ElementKind::Passive","parent":{"krate":0,"index":3395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3399},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":257001,"byte_end":257007,"line_start":32,"line_end":32,"column_start":5,"column_end":11},"name":"Active","qualname":"::readers::element_section::ElementKind::Active","value":"ElementKind::Active { table_index, init_expr }","parent":{"krate":0,"index":3395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3402},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":257080,"byte_end":257088,"line_start":36,"line_end":36,"column_start":5,"column_end":13},"name":"Declared","qualname":"::readers::element_section::ElementKind::Declared","value":"ElementKind::Declared","parent":{"krate":0,"index":3395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3395},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":256966,"byte_end":256977,"line_start":30,"line_end":30,"column_start":10,"column_end":21},"name":"ElementKind","qualname":"::readers::element_section::ElementKind","value":"pub enum ElementKind<'a> {\n    Passive,\n    Active {\n        table_index: u32,\n        init_expr: InitExpr,\n    },\n    Declared,\n}","parent":null,"children":[{"krate":0,"index":3397},{"krate":0,"index":3399},{"krate":0,"index":3402}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3407},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":257134,"byte_end":257146,"line_start":40,"line_end":40,"column_start":12,"column_end":24},"name":"ElementItems","qualname":"::readers::element_section::ElementItems","value":"ElementItems {  }","parent":null,"children":[{"krate":0,"index":3409},{"krate":0,"index":3410},{"krate":0,"index":3411}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3421},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":257256,"byte_end":257260,"line_start":48,"line_end":48,"column_start":5,"column_end":9},"name":"Null","qualname":"::readers::element_section::ElementItem::Null","value":"ElementItem::Null(Type)","parent":{"krate":0,"index":3420},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3424},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":257272,"byte_end":257276,"line_start":49,"line_end":49,"column_start":5,"column_end":9},"name":"Func","qualname":"::readers::element_section::ElementItem::Func","value":"ElementItem::Func(u32)","parent":{"krate":0,"index":3420},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3420},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":257238,"byte_end":257249,"line_start":47,"line_end":47,"column_start":10,"column_end":21},"name":"ElementItem","qualname":"::readers::element_section::ElementItem","value":"pub enum ElementItem { Null(Type), Func(u32), }","parent":null,"children":[{"krate":0,"index":3421},{"krate":0,"index":3424}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":257325,"byte_end":257341,"line_start":53,"line_end":53,"column_start":12,"column_end":28},"name":"get_items_reader","qualname":"<ElementItems>::get_items_reader","value":"pub fn get_items_reader<'b>(&Self) -> Result<ElementItemsReader> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":793},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":257507,"byte_end":257525,"line_start":61,"line_end":61,"column_start":12,"column_end":30},"name":"ElementItemsReader","qualname":"::readers::element_section::ElementItemsReader","value":"ElementItemsReader {  }","parent":null,"children":[{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":257643,"byte_end":257646,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"new","qualname":"<ElementItemsReader>::new","value":"pub fn new(&[u8], usize, bool) -> Result<ElementItemsReader>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":257953,"byte_end":257970,"line_start":78,"line_end":78,"column_start":12,"column_end":29},"name":"original_position","qualname":"<ElementItemsReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":258047,"byte_end":258056,"line_start":82,"line_end":82,"column_start":12,"column_end":21},"name":"get_count","qualname":"<ElementItemsReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":258110,"byte_end":258120,"line_start":86,"line_end":86,"column_start":12,"column_end":22},"name":"uses_exprs","qualname":"<ElementItemsReader>::uses_exprs","value":"pub fn uses_exprs(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":258175,"byte_end":258179,"line_start":90,"line_end":90,"column_start":12,"column_end":16},"name":"read","qualname":"<ElementItemsReader>::read","value":"pub fn read(&mut Self) -> Result<ElementItem>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":810},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":259276,"byte_end":259296,"line_start":122,"line_end":122,"column_start":12,"column_end":32},"name":"ElementItemsIterator","qualname":"::readers::element_section::ElementItemsIterator","value":"ElementItemsIterator {  }","parent":null,"children":[{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3429},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":259880,"byte_end":259900,"line_start":146,"line_end":146,"column_start":12,"column_end":32},"name":"ElementSectionReader","qualname":"::readers::element_section::ElementSectionReader","value":"ElementSectionReader {  }","parent":null,"children":[{"krate":0,"index":3431},{"krate":0,"index":3432}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":260003,"byte_end":260006,"line_start":152,"line_end":152,"column_start":12,"column_end":15},"name":"new","qualname":"<ElementSectionReader>::new","value":"pub fn new(&'a [u8], usize) -> Result<ElementSectionReader>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":260259,"byte_end":260276,"line_start":158,"line_end":158,"column_start":12,"column_end":29},"name":"original_position","qualname":"<ElementSectionReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":260353,"byte_end":260362,"line_start":162,"line_end":162,"column_start":12,"column_end":21},"name":"get_count","qualname":"<ElementSectionReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":261377,"byte_end":261381,"line_start":188,"line_end":188,"column_start":12,"column_end":16},"name":"read","qualname":"<ElementSectionReader>::read","value":"pub fn read<'b>(&mut Self) -> Result<Element> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":" Reads content of the element section.","sig":null,"attributes":[{"value":"/ Reads content of the element section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":260409,"byte_end":260450,"line_start":166,"line_end":166,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":260455,"byte_end":260458,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":260463,"byte_end":260477,"line_start":168,"line_end":168,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":260482,"byte_end":260485,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":260490,"byte_end":260503,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/ # let data: &[u8] = &[];","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":260508,"byte_end":260536,"line_start":171,"line_end":171,"column_start":5,"column_end":33}},{"value":"/ use wasmparser::{ElementSectionReader, ElementKind};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":260541,"byte_end":260597,"line_start":172,"line_end":172,"column_start":5,"column_end":61}},{"value":"/ let mut element_reader = ElementSectionReader::new(data, 0).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":260602,"byte_end":260675,"line_start":173,"line_end":173,"column_start":5,"column_end":78}},{"value":"/ for _ in 0..element_reader.get_count() {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":260680,"byte_end":260724,"line_start":174,"line_end":174,"column_start":5,"column_end":49}},{"value":"/     let element = element_reader.read().expect(\"element\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":260729,"byte_end":260791,"line_start":175,"line_end":175,"column_start":5,"column_end":67}},{"value":"/     if let ElementKind::Active { init_expr, .. } = element.kind {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":260796,"byte_end":260865,"line_start":176,"line_end":176,"column_start":5,"column_end":74}},{"value":"/         let mut init_expr_reader = init_expr.get_binary_reader();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":260870,"byte_end":260939,"line_start":177,"line_end":177,"column_start":5,"column_end":74}},{"value":"/         let op = init_expr_reader.read_operator().expect(\"op\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":260944,"byte_end":261011,"line_start":178,"line_end":178,"column_start":5,"column_end":72}},{"value":"/         println!(\"Init const: {:?}\", op);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":261016,"byte_end":261061,"line_start":179,"line_end":179,"column_start":5,"column_end":50}},{"value":"/     }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":261066,"byte_end":261075,"line_start":180,"line_end":180,"column_start":5,"column_end":14}},{"value":"/     let mut items_reader = element.items.get_items_reader().expect(\"items reader\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":261080,"byte_end":261167,"line_start":181,"line_end":181,"column_start":5,"column_end":92}},{"value":"/     for _ in 0..items_reader.get_count() {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":261172,"byte_end":261218,"line_start":182,"line_end":182,"column_start":5,"column_end":51}},{"value":"/         let item = items_reader.read().expect(\"item\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":261223,"byte_end":261281,"line_start":183,"line_end":183,"column_start":5,"column_end":63}},{"value":"/         println!(\"  Item: {:?}\", item);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":261286,"byte_end":261329,"line_start":184,"line_end":184,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":261334,"byte_end":261343,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":261348,"byte_end":261353,"line_start":186,"line_end":186,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":261358,"byte_end":261365,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3436},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/export_section.rs","byte_start":265379,"byte_end":265385,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"Export","qualname":"::readers::export_section::Export","value":"Export { field, kind, index }","parent":null,"children":[{"krate":0,"index":3438},{"krate":0,"index":3439},{"krate":0,"index":3440}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3438},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/export_section.rs","byte_start":265400,"byte_end":265405,"line_start":23,"line_end":23,"column_start":9,"column_end":14},"name":"field","qualname":"::readers::export_section::Export::field","value":"&'a str","parent":{"krate":0,"index":3436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3439},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/export_section.rs","byte_start":265424,"byte_end":265428,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"name":"kind","qualname":"::readers::export_section::Export::kind","value":"primitives::ExternalKind","parent":{"krate":0,"index":3436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3440},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/export_section.rs","byte_start":265452,"byte_end":265457,"line_start":25,"line_end":25,"column_start":9,"column_end":14},"name":"index","qualname":"::readers::export_section::Export::index","value":"u32","parent":{"krate":0,"index":3436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3449},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/export_section.rs","byte_start":265495,"byte_end":265514,"line_start":29,"line_end":29,"column_start":12,"column_end":31},"name":"ExportSectionReader","qualname":"::readers::export_section::ExportSectionReader","value":"ExportSectionReader {  }","parent":null,"children":[{"krate":0,"index":3451},{"krate":0,"index":3452}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/export_section.rs","byte_start":265616,"byte_end":265619,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<ExportSectionReader>::new","value":"pub fn new(&'a [u8], usize) -> Result<ExportSectionReader>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/export_section.rs","byte_start":265870,"byte_end":265887,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"original_position","qualname":"<ExportSectionReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/export_section.rs","byte_start":265964,"byte_end":265973,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"get_count","qualname":"<ExportSectionReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/export_section.rs","byte_start":266481,"byte_end":266485,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"read","qualname":"<ExportSectionReader>::read","value":"pub fn read<'b>(&mut Self) -> Result<Export> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":" Reads content of the export section.","sig":null,"attributes":[{"value":"/ Reads content of the export section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/export_section.rs","byte_start":266020,"byte_end":266060,"line_start":49,"line_end":49,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/export_section.rs","byte_start":266065,"byte_end":266068,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/export_section.rs","byte_start":266073,"byte_end":266087,"line_start":51,"line_end":51,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/export_section.rs","byte_start":266092,"byte_end":266099,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use wasmparser::ExportSectionReader;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/export_section.rs","byte_start":266104,"byte_end":266144,"line_start":53,"line_end":53,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/export_section.rs","byte_start":266149,"byte_end":266152,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # let data: &[u8] = &[0x01, 0x01, 0x65, 0x00, 0x00];","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/export_section.rs","byte_start":266157,"byte_end":266213,"line_start":55,"line_end":55,"column_start":5,"column_end":61}},{"value":"/ let mut export_reader = ExportSectionReader::new(data, 0).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/export_section.rs","byte_start":266218,"byte_end":266289,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"/ for _ in 0..export_reader.get_count() {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/export_section.rs","byte_start":266294,"byte_end":266337,"line_start":57,"line_end":57,"column_start":5,"column_end":48}},{"value":"/     let export = export_reader.read().expect(\"export\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/export_section.rs","byte_start":266342,"byte_end":266401,"line_start":58,"line_end":58,"column_start":5,"column_end":64}},{"value":"/     println!(\"Export: {:?}\", export);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/export_section.rs","byte_start":266406,"byte_end":266447,"line_start":59,"line_end":59,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/export_section.rs","byte_start":266452,"byte_end":266457,"line_start":60,"line_end":60,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/export_section.rs","byte_start":266462,"byte_end":266469,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3456},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/function_section.rs","byte_start":268305,"byte_end":268326,"line_start":21,"line_end":21,"column_start":12,"column_end":33},"name":"FunctionSectionReader","qualname":"::readers::function_section::FunctionSectionReader","value":"FunctionSectionReader {  }","parent":null,"children":[{"krate":0,"index":3458},{"krate":0,"index":3459}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/function_section.rs","byte_start":268430,"byte_end":268433,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<FunctionSectionReader>::new","value":"pub fn new(&'a [u8], usize) -> Result<FunctionSectionReader>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/function_section.rs","byte_start":268688,"byte_end":268705,"line_start":33,"line_end":33,"column_start":12,"column_end":29},"name":"original_position","qualname":"<FunctionSectionReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/function_section.rs","byte_start":268782,"byte_end":268791,"line_start":37,"line_end":37,"column_start":12,"column_end":21},"name":"get_count","qualname":"<FunctionSectionReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/function_section.rs","byte_start":269323,"byte_end":269327,"line_start":54,"line_end":54,"column_start":12,"column_end":16},"name":"read","qualname":"<FunctionSectionReader>::read","value":"pub fn read(&mut Self) -> Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Reads function type index from the function section.","sig":null,"attributes":[{"value":"/ Reads function type index from the function section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/function_section.rs","byte_start":268838,"byte_end":268894,"line_start":41,"line_end":41,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/function_section.rs","byte_start":268899,"byte_end":268902,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/function_section.rs","byte_start":268907,"byte_end":268921,"line_start":43,"line_end":43,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/function_section.rs","byte_start":268926,"byte_end":268929,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/function_section.rs","byte_start":268934,"byte_end":268941,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ use wasmparser::FunctionSectionReader;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/function_section.rs","byte_start":268946,"byte_end":268988,"line_start":46,"line_end":46,"column_start":5,"column_end":47}},{"value":"/ # let data: &[u8] = &[0x01, 0x00];","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/function_section.rs","byte_start":268993,"byte_end":269031,"line_start":47,"line_end":47,"column_start":5,"column_end":43}},{"value":"/ let mut function_reader = FunctionSectionReader::new(data, 0).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/function_section.rs","byte_start":269036,"byte_end":269111,"line_start":48,"line_end":48,"column_start":5,"column_end":80}},{"value":"/ for _ in 0..function_reader.get_count() {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/function_section.rs","byte_start":269116,"byte_end":269161,"line_start":49,"line_end":49,"column_start":5,"column_end":50}},{"value":"/     let ty = function_reader.read().expect(\"function type index\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/function_section.rs","byte_start":269166,"byte_end":269236,"line_start":50,"line_end":50,"column_start":5,"column_end":75}},{"value":"/     println!(\"Function type index: {}\", ty);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/function_section.rs","byte_start":269241,"byte_end":269289,"line_start":51,"line_end":51,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/function_section.rs","byte_start":269294,"byte_end":269299,"line_start":52,"line_end":52,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/function_section.rs","byte_start":269304,"byte_end":269311,"line_start":53,"line_end":53,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3463},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/global_section.rs","byte_start":270987,"byte_end":270993,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"Global","qualname":"::readers::global_section::Global","value":"Global { ty, init_expr }","parent":null,"children":[{"krate":0,"index":3465},{"krate":0,"index":3466}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3465},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/global_section.rs","byte_start":271008,"byte_end":271010,"line_start":23,"line_end":23,"column_start":9,"column_end":11},"name":"ty","qualname":"::readers::global_section::Global::ty","value":"primitives::GlobalType","parent":{"krate":0,"index":3463},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3466},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/global_section.rs","byte_start":271032,"byte_end":271041,"line_start":24,"line_end":24,"column_start":9,"column_end":18},"name":"init_expr","qualname":"::readers::global_section::Global::init_expr","value":"readers::init_expr::InitExpr<'a>","parent":{"krate":0,"index":3463},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3475},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/global_section.rs","byte_start":271088,"byte_end":271107,"line_start":28,"line_end":28,"column_start":12,"column_end":31},"name":"GlobalSectionReader","qualname":"::readers::global_section::GlobalSectionReader","value":"GlobalSectionReader {  }","parent":null,"children":[{"krate":0,"index":3477},{"krate":0,"index":3478}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/global_section.rs","byte_start":271209,"byte_end":271212,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"new","qualname":"<GlobalSectionReader>::new","value":"pub fn new(&'a [u8], usize) -> Result<GlobalSectionReader>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/global_section.rs","byte_start":271463,"byte_end":271480,"line_start":40,"line_end":40,"column_start":12,"column_end":29},"name":"original_position","qualname":"<GlobalSectionReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/global_section.rs","byte_start":271557,"byte_end":271566,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"name":"get_count","qualname":"<GlobalSectionReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/global_section.rs","byte_start":272275,"byte_end":272279,"line_start":63,"line_end":63,"column_start":12,"column_end":16},"name":"read","qualname":"<GlobalSectionReader>::read","value":"pub fn read<'b>(&mut Self) -> Result<Global> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":" Reads content of the global section.","sig":null,"attributes":[{"value":"/ Reads content of the global section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/global_section.rs","byte_start":271613,"byte_end":271653,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/global_section.rs","byte_start":271658,"byte_end":271661,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/global_section.rs","byte_start":271666,"byte_end":271680,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/global_section.rs","byte_start":271685,"byte_end":271692,"line_start":51,"line_end":51,"column_start":5,"column_end":12}},{"value":"/ use wasmparser::GlobalSectionReader;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/global_section.rs","byte_start":271697,"byte_end":271737,"line_start":52,"line_end":52,"column_start":5,"column_end":45}},{"value":"/ # let data: &[u8] = &[0x01, 0x7F, 0x01, 0x41, 0x90, 0x88, 0x04, 0x0B];","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/global_section.rs","byte_start":271742,"byte_end":271816,"line_start":53,"line_end":53,"column_start":5,"column_end":79}},{"value":"/ let mut global_reader = GlobalSectionReader::new(data, 0).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/global_section.rs","byte_start":271821,"byte_end":271892,"line_start":54,"line_end":54,"column_start":5,"column_end":76}},{"value":"/ for _ in 0..global_reader.get_count() {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/global_section.rs","byte_start":271897,"byte_end":271940,"line_start":55,"line_end":55,"column_start":5,"column_end":48}},{"value":"/     let global = global_reader.read().expect(\"global\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/global_section.rs","byte_start":271945,"byte_end":272004,"line_start":56,"line_end":56,"column_start":5,"column_end":64}},{"value":"/     println!(\"Global: {:?}\", global);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/global_section.rs","byte_start":272009,"byte_end":272050,"line_start":57,"line_end":57,"column_start":5,"column_end":46}},{"value":"/     let mut init_expr_reader = global.init_expr.get_binary_reader();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/global_section.rs","byte_start":272055,"byte_end":272127,"line_start":58,"line_end":58,"column_start":5,"column_end":77}},{"value":"/     let op = init_expr_reader.read_operator().expect(\"op\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/global_section.rs","byte_start":272132,"byte_end":272195,"line_start":59,"line_end":59,"column_start":5,"column_end":68}},{"value":"/     println!(\"Init const: {:?}\", op);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/global_section.rs","byte_start":272200,"byte_end":272241,"line_start":60,"line_end":60,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/global_section.rs","byte_start":272246,"byte_end":272251,"line_start":61,"line_end":61,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/global_section.rs","byte_start":272256,"byte_end":272263,"line_start":62,"line_end":62,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3482},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/import_section.rs","byte_start":274284,"byte_end":274290,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"Import","qualname":"::readers::import_section::Import","value":"Import { module, field, ty }","parent":null,"children":[{"krate":0,"index":3484},{"krate":0,"index":3485},{"krate":0,"index":3486}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3484},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/import_section.rs","byte_start":274305,"byte_end":274311,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"name":"module","qualname":"::readers::import_section::Import::module","value":"&'a str","parent":{"krate":0,"index":3482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3485},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/import_section.rs","byte_start":274330,"byte_end":274335,"line_start":24,"line_end":24,"column_start":9,"column_end":14},"name":"field","qualname":"::readers::import_section::Import::field","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":3482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3486},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/import_section.rs","byte_start":274362,"byte_end":274364,"line_start":25,"line_end":25,"column_start":9,"column_end":11},"name":"ty","qualname":"::readers::import_section::Import::ty","value":"primitives::ImportSectionEntryType","parent":{"krate":0,"index":3482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3495},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/import_section.rs","byte_start":274421,"byte_end":274440,"line_start":29,"line_end":29,"column_start":12,"column_end":31},"name":"ImportSectionReader","qualname":"::readers::import_section::ImportSectionReader","value":"ImportSectionReader {  }","parent":null,"children":[{"krate":0,"index":3497},{"krate":0,"index":3498}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/import_section.rs","byte_start":274542,"byte_end":274545,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<ImportSectionReader>::new","value":"pub fn new(&'a [u8], usize) -> Result<ImportSectionReader>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/import_section.rs","byte_start":274796,"byte_end":274813,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"original_position","qualname":"<ImportSectionReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/import_section.rs","byte_start":274890,"byte_end":274899,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"get_count","qualname":"<ImportSectionReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/import_section.rs","byte_start":275411,"byte_end":275415,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"read","qualname":"<ImportSectionReader>::read","value":"pub fn read<'b>(&mut Self) -> Result<Import> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":" Reads content of the import section.","sig":null,"attributes":[{"value":"/ Reads content of the import section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/import_section.rs","byte_start":274946,"byte_end":274986,"line_start":49,"line_end":49,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/import_section.rs","byte_start":274991,"byte_end":274994,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/import_section.rs","byte_start":274999,"byte_end":275013,"line_start":51,"line_end":51,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/import_section.rs","byte_start":275018,"byte_end":275025,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use wasmparser::ImportSectionReader;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/import_section.rs","byte_start":275030,"byte_end":275070,"line_start":53,"line_end":53,"column_start":5,"column_end":45}},{"value":"/ # let data: &[u8] = &[0x01, 0x01, 0x41, 0x01, 0x66, 0x00, 0x00];","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/import_section.rs","byte_start":275075,"byte_end":275143,"line_start":54,"line_end":54,"column_start":5,"column_end":73}},{"value":"/ let mut import_reader = ImportSectionReader::new(data, 0).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/import_section.rs","byte_start":275148,"byte_end":275219,"line_start":55,"line_end":55,"column_start":5,"column_end":76}},{"value":"/ for _ in 0..import_reader.get_count() {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/import_section.rs","byte_start":275224,"byte_end":275267,"line_start":56,"line_end":56,"column_start":5,"column_end":48}},{"value":"/     let import = import_reader.read().expect(\"import\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/import_section.rs","byte_start":275272,"byte_end":275331,"line_start":57,"line_end":57,"column_start":5,"column_end":64}},{"value":"/     println!(\"Import: {:?}\", import);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/import_section.rs","byte_start":275336,"byte_end":275377,"line_start":58,"line_end":58,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/import_section.rs","byte_start":275382,"byte_end":275387,"line_start":59,"line_end":59,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/import_section.rs","byte_start":275392,"byte_end":275399,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3502},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/init_expr.rs","byte_start":277020,"byte_end":277028,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"InitExpr","qualname":"::readers::init_expr::InitExpr","value":"InitExpr {  }","parent":null,"children":[{"krate":0,"index":3504},{"krate":0,"index":3505}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":971},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/init_expr.rs","byte_start":277112,"byte_end":277115,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<InitExpr>::new","value":"pub fn new(&[u8], usize) -> InitExpr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":972},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/init_expr.rs","byte_start":277210,"byte_end":277227,"line_start":29,"line_end":29,"column_start":12,"column_end":29},"name":"get_binary_reader","qualname":"<InitExpr>::get_binary_reader","value":"pub fn get_binary_reader<'b>(&Self) -> BinaryReader where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/init_expr.rs","byte_start":277371,"byte_end":277391,"line_start":36,"line_end":36,"column_start":12,"column_end":32},"name":"get_operators_reader","qualname":"<InitExpr>::get_operators_reader","value":"pub fn get_operators_reader<'b>(&Self) -> OperatorsReader where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3514},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/instance_section.rs","byte_start":277699,"byte_end":277720,"line_start":7,"line_end":7,"column_start":12,"column_end":33},"name":"InstanceSectionReader","qualname":"::readers::instance_section::InstanceSectionReader","value":"InstanceSectionReader {  }","parent":null,"children":[{"krate":0,"index":3516},{"krate":0,"index":3517}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/instance_section.rs","byte_start":277824,"byte_end":277827,"line_start":13,"line_end":13,"column_start":12,"column_end":15},"name":"new","qualname":"<InstanceSectionReader>::new","value":"pub fn new(&'a [u8], usize) -> Result<InstanceSectionReader>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":989},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/instance_section.rs","byte_start":278082,"byte_end":278099,"line_start":19,"line_end":19,"column_start":12,"column_end":29},"name":"original_position","qualname":"<InstanceSectionReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/instance_section.rs","byte_start":278176,"byte_end":278185,"line_start":23,"line_end":23,"column_start":12,"column_end":21},"name":"get_count","qualname":"<InstanceSectionReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/instance_section.rs","byte_start":278239,"byte_end":278243,"line_start":27,"line_end":27,"column_start":12,"column_end":16},"name":"read","qualname":"<InstanceSectionReader>::read","value":"pub fn read(&mut Self) -> Result<Instance>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1007},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/instance_section.rs","byte_start":279531,"byte_end":279539,"line_start":75,"line_end":75,"column_start":12,"column_end":20},"name":"Instance","qualname":"::readers::instance_section::Instance","value":"Instance {  }","parent":null,"children":[{"krate":0,"index":1009},{"krate":0,"index":1010}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/instance_section.rs","byte_start":279631,"byte_end":279634,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"new","qualname":"<Instance>::new","value":"pub fn new(&'a [u8], usize) -> Result<Instance>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/instance_section.rs","byte_start":280051,"byte_end":280068,"line_start":93,"line_end":93,"column_start":12,"column_end":29},"name":"original_position","qualname":"<Instance>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/instance_section.rs","byte_start":280145,"byte_end":280151,"line_start":97,"line_end":97,"column_start":12,"column_end":18},"name":"module","qualname":"<Instance>::module","value":"pub fn module(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/instance_section.rs","byte_start":280206,"byte_end":280210,"line_start":101,"line_end":101,"column_start":12,"column_end":16},"name":"args","qualname":"<Instance>::args","value":"pub fn args(&Self) -> Result<InstanceArgsReader>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3521},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/instance_section.rs","byte_start":280493,"byte_end":280511,"line_start":113,"line_end":113,"column_start":12,"column_end":30},"name":"InstanceArgsReader","qualname":"::readers::instance_section::InstanceArgsReader","value":"InstanceArgsReader {  }","parent":null,"children":[{"krate":0,"index":3523},{"krate":0,"index":3524},{"krate":0,"index":3525}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/instance_section.rs","byte_start":280632,"byte_end":280649,"line_start":120,"line_end":120,"column_start":12,"column_end":29},"name":"original_position","qualname":"<InstanceArgsReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1020},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/instance_section.rs","byte_start":280726,"byte_end":280730,"line_start":124,"line_end":124,"column_start":12,"column_end":16},"name":"read","qualname":"<InstanceArgsReader>::read","value":"pub fn read(&mut Self) -> Result<(ExternalKind, u32)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1045},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/linking_section.rs","byte_start":282479,"byte_end":282499,"line_start":21,"line_end":21,"column_start":12,"column_end":32},"name":"LinkingSectionReader","qualname":"::readers::linking_section::LinkingSectionReader","value":"LinkingSectionReader {  }","parent":null,"children":[{"krate":0,"index":1047},{"krate":0,"index":1048}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/linking_section.rs","byte_start":282602,"byte_end":282605,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<LinkingSectionReader>::new","value":"pub fn new(&'a [u8], usize) -> Result<LinkingSectionReader>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/linking_section.rs","byte_start":282858,"byte_end":282867,"line_start":33,"line_end":33,"column_start":12,"column_end":21},"name":"get_count","qualname":"<LinkingSectionReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1053},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/linking_section.rs","byte_start":282921,"byte_end":282938,"line_start":37,"line_end":37,"column_start":12,"column_end":29},"name":"original_position","qualname":"<LinkingSectionReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1054},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/linking_section.rs","byte_start":283015,"byte_end":283019,"line_start":41,"line_end":41,"column_start":12,"column_end":16},"name":"read","qualname":"<LinkingSectionReader>::read","value":"pub fn read<'b>(&mut Self) -> Result<LinkingType> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3529},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/memory_section.rs","byte_start":284717,"byte_end":284736,"line_start":22,"line_end":22,"column_start":12,"column_end":31},"name":"MemorySectionReader","qualname":"::readers::memory_section::MemorySectionReader","value":"MemorySectionReader {  }","parent":null,"children":[{"krate":0,"index":3531},{"krate":0,"index":3532}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/memory_section.rs","byte_start":284838,"byte_end":284841,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<MemorySectionReader>::new","value":"pub fn new(&'a [u8], usize) -> Result<MemorySectionReader>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1083},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/memory_section.rs","byte_start":285092,"byte_end":285109,"line_start":34,"line_end":34,"column_start":12,"column_end":29},"name":"original_position","qualname":"<MemorySectionReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/memory_section.rs","byte_start":285186,"byte_end":285195,"line_start":38,"line_end":38,"column_start":12,"column_end":21},"name":"get_count","qualname":"<MemorySectionReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/memory_section.rs","byte_start":285683,"byte_end":285687,"line_start":54,"line_end":54,"column_start":12,"column_end":16},"name":"read","qualname":"<MemorySectionReader>::read","value":"pub fn read(&mut Self) -> Result<MemoryType>","parent":null,"children":[],"decl_id":null,"docs":" Reads content of the memory section.","sig":null,"attributes":[{"value":"/ Reads content of the memory section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/memory_section.rs","byte_start":285242,"byte_end":285282,"line_start":42,"line_end":42,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/memory_section.rs","byte_start":285287,"byte_end":285290,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/memory_section.rs","byte_start":285295,"byte_end":285309,"line_start":44,"line_end":44,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/memory_section.rs","byte_start":285314,"byte_end":285321,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ use wasmparser::MemorySectionReader;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/memory_section.rs","byte_start":285326,"byte_end":285366,"line_start":46,"line_end":46,"column_start":5,"column_end":45}},{"value":"/ # let data: &[u8] = &[0x01, 0x00, 0x02];","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/memory_section.rs","byte_start":285371,"byte_end":285415,"line_start":47,"line_end":47,"column_start":5,"column_end":49}},{"value":"/ let mut memory_reader = MemorySectionReader::new(data, 0).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/memory_section.rs","byte_start":285420,"byte_end":285491,"line_start":48,"line_end":48,"column_start":5,"column_end":76}},{"value":"/ for _ in 0..memory_reader.get_count() {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/memory_section.rs","byte_start":285496,"byte_end":285539,"line_start":49,"line_end":49,"column_start":5,"column_end":48}},{"value":"/     let memory = memory_reader.read().expect(\"memory\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/memory_section.rs","byte_start":285544,"byte_end":285603,"line_start":50,"line_end":50,"column_start":5,"column_end":64}},{"value":"/     println!(\"Memory: {:?}\", memory);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/memory_section.rs","byte_start":285608,"byte_end":285649,"line_start":51,"line_end":51,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/memory_section.rs","byte_start":285654,"byte_end":285659,"line_start":52,"line_end":52,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/memory_section.rs","byte_start":285664,"byte_end":285671,"line_start":53,"line_end":53,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1110},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/module_code_section.rs","byte_start":286725,"byte_end":286748,"line_start":6,"line_end":6,"column_start":12,"column_end":35},"name":"ModuleCodeSectionReader","qualname":"::readers::module_code_section::ModuleCodeSectionReader","value":"ModuleCodeSectionReader {  }","parent":null,"children":[{"krate":0,"index":1112},{"krate":0,"index":1113}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3536},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/module_code_section.rs","byte_start":286832,"byte_end":286842,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"ModuleCode","qualname":"::readers::module_code_section::ModuleCode","value":"ModuleCode {  }","parent":null,"children":[{"krate":0,"index":3538}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1116},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/module_code_section.rs","byte_start":286932,"byte_end":286935,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"new","qualname":"<ModuleCodeSectionReader>::new","value":"pub fn new(&'a [u8], usize) -> Result<ModuleCodeSectionReader>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1117},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/module_code_section.rs","byte_start":287194,"byte_end":287211,"line_start":23,"line_end":23,"column_start":12,"column_end":29},"name":"original_position","qualname":"<ModuleCodeSectionReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1118},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/module_code_section.rs","byte_start":287288,"byte_end":287297,"line_start":27,"line_end":27,"column_start":12,"column_end":21},"name":"get_count","qualname":"<ModuleCodeSectionReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/module_code_section.rs","byte_start":287697,"byte_end":287701,"line_start":41,"line_end":41,"column_start":12,"column_end":16},"name":"read","qualname":"<ModuleCodeSectionReader>::read","value":"pub fn read(&mut Self) -> Result<ModuleCode>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/module_code_section.rs","byte_start":289092,"byte_end":289101,"line_start":89,"line_end":89,"column_start":12,"column_end":21},"name":"raw_bytes","qualname":"<ModuleCode>::raw_bytes","value":"pub fn raw_bytes(&Self) -> (usize, &[u8])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/module_code_section.rs","byte_start":289209,"byte_end":289226,"line_start":93,"line_end":93,"column_start":12,"column_end":29},"name":"original_position","qualname":"<ModuleCode>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3542},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/module_section.rs","byte_start":289436,"byte_end":289455,"line_start":6,"line_end":6,"column_start":12,"column_end":31},"name":"ModuleSectionReader","qualname":"::readers::module_section::ModuleSectionReader","value":"ModuleSectionReader {  }","parent":null,"children":[{"krate":0,"index":3544},{"krate":0,"index":3545}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1150},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/module_section.rs","byte_start":289557,"byte_end":289560,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"new","qualname":"<ModuleSectionReader>::new","value":"pub fn new(&'a [u8], usize) -> Result<ModuleSectionReader>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1151},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/module_section.rs","byte_start":289811,"byte_end":289828,"line_start":18,"line_end":18,"column_start":12,"column_end":29},"name":"original_position","qualname":"<ModuleSectionReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1152},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/module_section.rs","byte_start":289905,"byte_end":289914,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"get_count","qualname":"<ModuleSectionReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1153},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/module_section.rs","byte_start":289968,"byte_end":289972,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"read","qualname":"<ModuleSectionReader>::read","value":"pub fn read(&mut Self) -> Result<u32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3549},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":291602,"byte_end":291612,"line_start":22,"line_end":22,"column_start":12,"column_end":22},"name":"ModuleName","qualname":"::readers::name_section::ModuleName","value":"ModuleName {  }","parent":null,"children":[{"krate":0,"index":3551},{"krate":0,"index":3552}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1181},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":291698,"byte_end":291706,"line_start":28,"line_end":28,"column_start":12,"column_end":20},"name":"get_name","qualname":"<ModuleName>::get_name","value":"pub fn get_name<'b>(&Self) -> Result<&'b str> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1183},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":291896,"byte_end":291913,"line_start":36,"line_end":36,"column_start":12,"column_end":29},"name":"original_position","qualname":"<ModuleName>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1184},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":291972,"byte_end":291984,"line_start":41,"line_end":41,"column_start":12,"column_end":24},"name":"NamingReader","qualname":"::readers::name_section::NamingReader","value":"NamingReader {  }","parent":null,"children":[{"krate":0,"index":1186},{"krate":0,"index":1187}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1192},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":292544,"byte_end":292561,"line_start":62,"line_end":62,"column_start":12,"column_end":29},"name":"original_position","qualname":"<NamingReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1193},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":292638,"byte_end":292647,"line_start":66,"line_end":66,"column_start":12,"column_end":21},"name":"get_count","qualname":"<NamingReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1194},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":292701,"byte_end":292705,"line_start":70,"line_end":70,"column_start":12,"column_end":16},"name":"read","qualname":"<NamingReader>::read","value":"pub fn read<'b>(&mut Self) -> Result<Naming> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3561},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":292956,"byte_end":292968,"line_start":81,"line_end":81,"column_start":12,"column_end":24},"name":"FunctionName","qualname":"::readers::name_section::FunctionName","value":"FunctionName {  }","parent":null,"children":[{"krate":0,"index":3563},{"krate":0,"index":3564}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1198},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":293056,"byte_end":293063,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"get_map","qualname":"<FunctionName>::get_map","value":"pub fn get_map<'b>(&Self) -> Result<NamingReader> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1200},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":293203,"byte_end":293220,"line_start":94,"line_end":94,"column_start":12,"column_end":29},"name":"original_position","qualname":"<FunctionName>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3573},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":293309,"byte_end":293326,"line_start":100,"line_end":100,"column_start":12,"column_end":29},"name":"FunctionLocalName","qualname":"::readers::name_section::FunctionLocalName","value":"FunctionLocalName { func_index }","parent":null,"children":[{"krate":0,"index":3575},{"krate":0,"index":3576},{"krate":0,"index":3577}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3575},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":293341,"byte_end":293351,"line_start":101,"line_end":101,"column_start":9,"column_end":19},"name":"func_index","qualname":"::readers::name_section::FunctionLocalName::func_index","value":"u32","parent":{"krate":0,"index":3573},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1203},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":293444,"byte_end":293451,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_map","qualname":"<FunctionLocalName>::get_map","value":"pub fn get_map<'b>(&Self) -> Result<NamingReader> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1205},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":293591,"byte_end":293608,"line_start":114,"line_end":114,"column_start":12,"column_end":29},"name":"original_position","qualname":"<FunctionLocalName>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1206},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":293667,"byte_end":293686,"line_start":119,"line_end":119,"column_start":12,"column_end":31},"name":"FunctionLocalReader","qualname":"::readers::name_section::FunctionLocalReader","value":"FunctionLocalReader {  }","parent":null,"children":[{"krate":0,"index":1208},{"krate":0,"index":1209}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1213},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":294038,"byte_end":294047,"line_start":131,"line_end":131,"column_start":12,"column_end":21},"name":"get_count","qualname":"<FunctionLocalReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1214},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":294101,"byte_end":294118,"line_start":135,"line_end":135,"column_start":12,"column_end":29},"name":"original_position","qualname":"<FunctionLocalReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1215},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":294195,"byte_end":294199,"line_start":139,"line_end":139,"column_start":12,"column_end":16},"name":"read","qualname":"<FunctionLocalReader>::read","value":"pub fn read<'b>(&mut Self) -> Result<FunctionLocalName> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3586},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":294687,"byte_end":294696,"line_start":156,"line_end":156,"column_start":12,"column_end":21},"name":"LocalName","qualname":"::readers::name_section::LocalName","value":"LocalName {  }","parent":null,"children":[{"krate":0,"index":3588},{"krate":0,"index":3589}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1219},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":294781,"byte_end":294806,"line_start":162,"line_end":162,"column_start":12,"column_end":37},"name":"get_function_local_reader","qualname":"<LocalName>::get_function_local_reader","value":"pub fn get_function_local_reader<'b>(&Self) -> Result<FunctionLocalReader>\nwhere 'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1221},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":294960,"byte_end":294977,"line_start":169,"line_end":169,"column_start":12,"column_end":29},"name":"original_position","qualname":"<LocalName>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3600},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":295079,"byte_end":295085,"line_start":176,"line_end":176,"column_start":5,"column_end":11},"name":"Module","qualname":"::readers::name_section::Name::Module","value":"Name::Module(ModuleName)","parent":{"krate":0,"index":3598},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3603},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":295107,"byte_end":295115,"line_start":177,"line_end":177,"column_start":5,"column_end":13},"name":"Function","qualname":"::readers::name_section::Name::Function","value":"Name::Function(FunctionName)","parent":{"krate":0,"index":3598},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3606},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":295139,"byte_end":295144,"line_start":178,"line_end":178,"column_start":5,"column_end":10},"name":"Local","qualname":"::readers::name_section::Name::Local","value":"Name::Local(LocalName)","parent":{"krate":0,"index":3598},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3598},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":295064,"byte_end":295068,"line_start":175,"line_end":175,"column_start":10,"column_end":14},"name":"Name","qualname":"::readers::name_section::Name","value":"pub enum Name<'a> {\n    Module(ModuleName),\n    Function(FunctionName),\n    Local(LocalName),\n}","parent":null,"children":[{"krate":0,"index":3600},{"krate":0,"index":3603},{"krate":0,"index":3606}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1222},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":295175,"byte_end":295192,"line_start":181,"line_end":181,"column_start":12,"column_end":29},"name":"NameSectionReader","qualname":"::readers::name_section::NameSectionReader","value":"NameSectionReader {  }","parent":null,"children":[{"krate":0,"index":1224}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1227},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":295276,"byte_end":295279,"line_start":186,"line_end":186,"column_start":12,"column_end":15},"name":"new","qualname":"<NameSectionReader>::new","value":"pub fn new(&'a [u8], usize) -> Result<NameSectionReader>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1229},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":295810,"byte_end":295813,"line_start":202,"line_end":202,"column_start":12,"column_end":15},"name":"eof","qualname":"<NameSectionReader>::eof","value":"pub fn eof(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1230},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":295875,"byte_end":295892,"line_start":206,"line_end":206,"column_start":12,"column_end":29},"name":"original_position","qualname":"<NameSectionReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1231},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":295969,"byte_end":295973,"line_start":210,"line_end":210,"column_start":12,"column_end":16},"name":"read","qualname":"<NameSectionReader>::read","value":"pub fn read<'b>(&mut Self) -> Result<Name> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3617},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/operators.rs","byte_start":298083,"byte_end":298098,"line_start":19,"line_end":19,"column_start":12,"column_end":27},"name":"OperatorsReader","qualname":"::readers::operators::OperatorsReader","value":"OperatorsReader {  }","parent":null,"children":[{"krate":0,"index":3619}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1255},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/operators.rs","byte_start":298411,"byte_end":298414,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"eof","qualname":"<OperatorsReader>::eof","value":"pub fn eof(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1256},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/operators.rs","byte_start":298476,"byte_end":298493,"line_start":37,"line_end":37,"column_start":12,"column_end":29},"name":"original_position","qualname":"<OperatorsReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1257},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/operators.rs","byte_start":298570,"byte_end":298580,"line_start":41,"line_end":41,"column_start":12,"column_end":22},"name":"ensure_end","qualname":"<OperatorsReader>::ensure_end","value":"pub fn ensure_end(&Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1258},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/operators.rs","byte_start":298830,"byte_end":298834,"line_start":51,"line_end":51,"column_start":12,"column_end":16},"name":"read","qualname":"<OperatorsReader>::read","value":"pub fn read<'b>(&mut Self) -> Result<Operator> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1260},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/operators.rs","byte_start":298960,"byte_end":298982,"line_start":58,"line_end":58,"column_start":12,"column_end":34},"name":"into_iter_with_offsets","qualname":"<OperatorsReader>::into_iter_with_offsets","value":"pub fn into_iter_with_offsets<'b>(Self) -> OperatorsIteratorWithOffsets where\n'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1262},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/operators.rs","byte_start":299178,"byte_end":299194,"line_start":68,"line_end":68,"column_start":12,"column_end":28},"name":"read_with_offset","qualname":"<OperatorsReader>::read_with_offset","value":"pub fn read_with_offset<'b>(&mut Self) -> Result<(Operator, usize)> where\n'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1269},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/operators.rs","byte_start":300433,"byte_end":300450,"line_start":108,"line_end":108,"column_start":12,"column_end":29},"name":"OperatorsIterator","qualname":"::readers::operators::OperatorsIterator","value":"OperatorsIterator {  }","parent":null,"children":[{"krate":0,"index":1271},{"krate":0,"index":1272}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1277},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/operators.rs","byte_start":300836,"byte_end":300864,"line_start":126,"line_end":126,"column_start":12,"column_end":40},"name":"OperatorsIteratorWithOffsets","qualname":"::readers::operators::OperatorsIteratorWithOffsets","value":"OperatorsIteratorWithOffsets {  }","parent":null,"children":[{"krate":0,"index":1279},{"krate":0,"index":1280}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3623},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":302877,"byte_end":302896,"line_start":21,"line_end":21,"column_start":12,"column_end":31},"name":"ProducersFieldValue","qualname":"::readers::producers_section::ProducersFieldValue","value":"ProducersFieldValue { name, version }","parent":null,"children":[{"krate":0,"index":3625},{"krate":0,"index":3626}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3625},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":302911,"byte_end":302915,"line_start":22,"line_end":22,"column_start":9,"column_end":13},"name":"name","qualname":"::readers::producers_section::ProducersFieldValue::name","value":"&'a str","parent":{"krate":0,"index":3623},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3626},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":302934,"byte_end":302941,"line_start":23,"line_end":23,"column_start":9,"column_end":16},"name":"version","qualname":"::readers::producers_section::ProducersFieldValue::version","value":"&'a str","parent":{"krate":0,"index":3623},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1293},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":302966,"byte_end":302992,"line_start":26,"line_end":26,"column_start":12,"column_end":38},"name":"ProducersFieldValuesReader","qualname":"::readers::producers_section::ProducersFieldValuesReader","value":"ProducersFieldValuesReader {  }","parent":null,"children":[{"krate":0,"index":1295},{"krate":0,"index":1296}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1299},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":303101,"byte_end":303110,"line_start":32,"line_end":32,"column_start":12,"column_end":21},"name":"get_count","qualname":"<ProducersFieldValuesReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1300},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":303164,"byte_end":303181,"line_start":36,"line_end":36,"column_start":12,"column_end":29},"name":"original_position","qualname":"<ProducersFieldValuesReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1302},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":303469,"byte_end":303473,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"read","qualname":"<ProducersFieldValuesReader>::read","value":"pub fn read<'b>(&mut Self) -> Result<ProducersFieldValue> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1309},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":304093,"byte_end":304121,"line_start":71,"line_end":71,"column_start":12,"column_end":40},"name":"ProducersFieldValuesIterator","qualname":"::readers::producers_section::ProducersFieldValuesIterator","value":"ProducersFieldValuesIterator {  }","parent":null,"children":[{"krate":0,"index":1311},{"krate":0,"index":1312},{"krate":0,"index":1313}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3635},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":304746,"byte_end":304760,"line_start":95,"line_end":95,"column_start":12,"column_end":26},"name":"ProducersField","qualname":"::readers::producers_section::ProducersField","value":"ProducersField { name }","parent":null,"children":[{"krate":0,"index":3637},{"krate":0,"index":3638},{"krate":0,"index":3639},{"krate":0,"index":3640}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3637},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":304775,"byte_end":304779,"line_start":96,"line_end":96,"column_start":9,"column_end":13},"name":"name","qualname":"::readers::producers_section::ProducersField::name","value":"&'a str","parent":{"krate":0,"index":3635},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1321},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":304910,"byte_end":304942,"line_start":103,"line_end":103,"column_start":12,"column_end":44},"name":"get_producer_field_values_reader","qualname":"<ProducersField>::get_producer_field_values_reader","value":"pub fn get_producer_field_values_reader<'b>(&Self)\n-> Result<ProducersFieldValuesReader> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1323},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":305226,"byte_end":305248,"line_start":114,"line_end":114,"column_start":12,"column_end":34},"name":"ProducersSectionReader","qualname":"::readers::producers_section::ProducersSectionReader","value":"ProducersSectionReader {  }","parent":null,"children":[{"krate":0,"index":1325},{"krate":0,"index":1326}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1329},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":306289,"byte_end":306292,"line_start":136,"line_end":136,"column_start":12,"column_end":15},"name":"new","qualname":"<ProducersSectionReader>::new","value":"pub fn new(&'a [u8], usize) -> Result<ProducersSectionReader>","parent":null,"children":[],"decl_id":null,"docs":" Creates reader for the producers section.","sig":null,"attributes":[{"value":"/ Creates reader for the producers section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":305346,"byte_end":305391,"line_start":120,"line_end":120,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":305396,"byte_end":305399,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":305404,"byte_end":305418,"line_start":122,"line_end":122,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":305423,"byte_end":305430,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ # let data: &[u8] = &[0x01, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":305435,"byte_end":305520,"line_start":124,"line_end":124,"column_start":5,"column_end":90}},{"value":"/ #     0x02, 0x03, 0x77, 0x61, 0x74, 0x01, 0x31, 0x01, 0x43, 0x03, 0x39, 0x2e, 0x30];","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":305525,"byte_end":305613,"line_start":125,"line_end":125,"column_start":5,"column_end":93}},{"value":"/ use wasmparser::{ProducersSectionReader, ProducersFieldValue, Result};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":305618,"byte_end":305692,"line_start":126,"line_end":126,"column_start":5,"column_end":79}},{"value":"/ let mut reader = ProducersSectionReader::new(data, 0).expect(\"producers reader\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":305697,"byte_end":305782,"line_start":127,"line_end":127,"column_start":5,"column_end":90}},{"value":"/ let field = reader.read().expect(\"producers field\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":305787,"byte_end":305843,"line_start":128,"line_end":128,"column_start":5,"column_end":61}},{"value":"/ assert!(field.name == \"language\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":305848,"byte_end":305886,"line_start":129,"line_end":129,"column_start":5,"column_end":43}},{"value":"/ let mut values_reader = field.get_producer_field_values_reader().expect(\"values reader\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":305891,"byte_end":305984,"line_start":130,"line_end":130,"column_start":5,"column_end":98}},{"value":"/ let value = values_reader.into_iter().collect::<Result<Vec<ProducersFieldValue>>>().expect(\"values\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":305989,"byte_end":306094,"line_start":131,"line_end":131,"column_start":5,"column_end":110}},{"value":"/ assert!(value.len() == 2);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":306099,"byte_end":306129,"line_start":132,"line_end":132,"column_start":5,"column_end":35}},{"value":"/ assert!(value[0].name == \"wat\" && value[0].version == \"1\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":306134,"byte_end":306197,"line_start":133,"line_end":133,"column_start":5,"column_end":68}},{"value":"/ assert!(value[1].name == \"C\" && value[1].version == \"9.0\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":306202,"byte_end":306265,"line_start":134,"line_end":134,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":306270,"byte_end":306277,"line_start":135,"line_end":135,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1330},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":306549,"byte_end":306566,"line_start":142,"line_end":142,"column_start":12,"column_end":29},"name":"original_position","qualname":"<ProducersSectionReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1331},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":306643,"byte_end":306652,"line_start":146,"line_end":146,"column_start":12,"column_end":21},"name":"get_count","qualname":"<ProducersSectionReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1332},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":306706,"byte_end":306710,"line_start":150,"line_end":150,"column_start":12,"column_end":16},"name":"read","qualname":"<ProducersSectionReader>::read","value":"pub fn read<'b>(&mut Self) -> Result<ProducersField> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3649},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/reloc_section.rs","byte_start":308923,"byte_end":308928,"line_start":22,"line_end":22,"column_start":12,"column_end":17},"name":"Reloc","qualname":"::readers::reloc_section::Reloc","value":"Reloc { ty, offset, index, addend }","parent":null,"children":[{"krate":0,"index":3650},{"krate":0,"index":3651},{"krate":0,"index":3652},{"krate":0,"index":3653}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3650},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/reloc_section.rs","byte_start":308939,"byte_end":308941,"line_start":23,"line_end":23,"column_start":9,"column_end":11},"name":"ty","qualname":"::readers::reloc_section::Reloc::ty","value":"primitives::RelocType","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3651},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/reloc_section.rs","byte_start":308962,"byte_end":308968,"line_start":24,"line_end":24,"column_start":9,"column_end":15},"name":"offset","qualname":"::readers::reloc_section::Reloc::offset","value":"u32","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3652},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/reloc_section.rs","byte_start":308983,"byte_end":308988,"line_start":25,"line_end":25,"column_start":9,"column_end":14},"name":"index","qualname":"::readers::reloc_section::Reloc::index","value":"u32","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3653},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/reloc_section.rs","byte_start":309003,"byte_end":309009,"line_start":26,"line_end":26,"column_start":9,"column_end":15},"name":"addend","qualname":"::readers::reloc_section::Reloc::addend","value":"std::option::Option<u32>","parent":{"krate":0,"index":3649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1359},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/reloc_section.rs","byte_start":309038,"byte_end":309056,"line_start":29,"line_end":29,"column_start":12,"column_end":30},"name":"RelocSectionReader","qualname":"::readers::reloc_section::RelocSectionReader","value":"RelocSectionReader {  }","parent":null,"children":[{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1363}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1366},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/reloc_section.rs","byte_start":309192,"byte_end":309195,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<RelocSectionReader>::new","value":"pub fn new(&'a [u8], usize) -> Result<RelocSectionReader>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1367},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/reloc_section.rs","byte_start":309691,"byte_end":309700,"line_start":51,"line_end":51,"column_start":12,"column_end":21},"name":"get_count","qualname":"<RelocSectionReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1368},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/reloc_section.rs","byte_start":309754,"byte_end":309770,"line_start":55,"line_end":55,"column_start":12,"column_end":28},"name":"get_section_code","qualname":"<RelocSectionReader>::get_section_code","value":"pub fn get_section_code<'b>(&Self) -> SectionCode where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1370},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/reloc_section.rs","byte_start":309877,"byte_end":309894,"line_start":62,"line_end":62,"column_start":12,"column_end":29},"name":"original_position","qualname":"<RelocSectionReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1371},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/reloc_section.rs","byte_start":309971,"byte_end":309975,"line_start":66,"line_end":66,"column_start":12,"column_end":16},"name":"read","qualname":"<RelocSectionReader>::read","value":"pub fn read(&mut Self) -> Result<Reloc>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1392},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/section_reader.rs","byte_start":312125,"byte_end":312138,"line_start":18,"line_end":18,"column_start":11,"column_end":24},"name":"SectionReader","qualname":"::readers::section_reader::SectionReader","value":"SectionReader","parent":null,"children":[{"krate":0,"index":1393},{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1398}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1393},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/section_reader.rs","byte_start":312150,"byte_end":312154,"line_start":19,"line_end":19,"column_start":10,"column_end":14},"name":"Item","qualname":"::readers::section_reader::SectionReader::Item","value":"type Item;","parent":{"krate":0,"index":1392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1394},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/section_reader.rs","byte_start":312163,"byte_end":312167,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"read","qualname":"::readers::section_reader::SectionReader::read","value":"pub fn read(&mut Self) -> Result<Self::Item>","parent":{"krate":0,"index":1392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1395},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/section_reader.rs","byte_start":312209,"byte_end":312212,"line_start":21,"line_end":21,"column_start":8,"column_end":11},"name":"eof","qualname":"::readers::section_reader::SectionReader::eof","value":"pub fn eof(&Self) -> bool","parent":{"krate":0,"index":1392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1396},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/section_reader.rs","byte_start":312236,"byte_end":312253,"line_start":22,"line_end":22,"column_start":8,"column_end":25},"name":"original_position","qualname":"::readers::section_reader::SectionReader::original_position","value":"pub fn original_position(&Self) -> usize","parent":{"krate":0,"index":1392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1397},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/section_reader.rs","byte_start":312278,"byte_end":312283,"line_start":23,"line_end":23,"column_start":8,"column_end":13},"name":"range","qualname":"::readers::section_reader::SectionReader::range","value":"pub fn range(&Self) -> Range","parent":{"krate":0,"index":1392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1398},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/section_reader.rs","byte_start":312308,"byte_end":312318,"line_start":24,"line_end":24,"column_start":8,"column_end":18},"name":"ensure_end","qualname":"::readers::section_reader::SectionReader::ensure_end","value":"pub fn ensure_end(&Self) -> Result<()>","parent":{"krate":0,"index":1392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1399},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/section_reader.rs","byte_start":312564,"byte_end":312587,"line_start":35,"line_end":35,"column_start":11,"column_end":34},"name":"SectionWithLimitedItems","qualname":"::readers::section_reader::SectionWithLimitedItems","value":"SectionWithLimitedItems","parent":null,"children":[{"krate":0,"index":1400}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1400},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/section_reader.rs","byte_start":312597,"byte_end":312606,"line_start":36,"line_end":36,"column_start":8,"column_end":17},"name":"get_count","qualname":"::readers::section_reader::SectionWithLimitedItems::get_count","value":"pub fn get_count(&Self) -> u32","parent":{"krate":0,"index":1399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1401},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/section_reader.rs","byte_start":312636,"byte_end":312651,"line_start":39,"line_end":39,"column_start":12,"column_end":27},"name":"SectionIterator","qualname":"::readers::section_reader::SectionIterator","value":"SectionIterator {  }","parent":null,"children":[{"krate":0,"index":1403},{"krate":0,"index":1404}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1407},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/section_reader.rs","byte_start":312786,"byte_end":312789,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"new","qualname":"<SectionIterator<R>>::new","value":"pub fn new(R) -> SectionIterator<R>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1412},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/section_reader.rs","byte_start":313228,"byte_end":313250,"line_start":72,"line_end":72,"column_start":12,"column_end":34},"name":"SectionIteratorLimited","qualname":"::readers::section_reader::SectionIteratorLimited","value":"SectionIteratorLimited {  }","parent":null,"children":[{"krate":0,"index":1414},{"krate":0,"index":1415},{"krate":0,"index":1416}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1419},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/section_reader.rs","byte_start":313459,"byte_end":313462,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"new","qualname":"<SectionIteratorLimited<R>>::new","value":"pub fn new(R) -> SectionIteratorLimited<R>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3659},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/table_section.rs","byte_start":315186,"byte_end":315204,"line_start":22,"line_end":22,"column_start":12,"column_end":30},"name":"TableSectionReader","qualname":"::readers::table_section::TableSectionReader","value":"TableSectionReader {  }","parent":null,"children":[{"krate":0,"index":3661},{"krate":0,"index":3662}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1436},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/table_section.rs","byte_start":315305,"byte_end":315308,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<TableSectionReader>::new","value":"pub fn new(&'a [u8], usize) -> Result<TableSectionReader>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1437},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/table_section.rs","byte_start":315557,"byte_end":315574,"line_start":34,"line_end":34,"column_start":12,"column_end":29},"name":"original_position","qualname":"<TableSectionReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1438},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/table_section.rs","byte_start":315651,"byte_end":315660,"line_start":38,"line_end":38,"column_start":12,"column_end":21},"name":"get_count","qualname":"<TableSectionReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1439},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/table_section.rs","byte_start":316158,"byte_end":316162,"line_start":55,"line_end":55,"column_start":12,"column_end":16},"name":"read","qualname":"<TableSectionReader>::read","value":"pub fn read(&mut Self) -> Result<TableType>","parent":null,"children":[],"decl_id":null,"docs":" Reads content of the table section.","sig":null,"attributes":[{"value":"/ Reads content of the table section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/table_section.rs","byte_start":315707,"byte_end":315746,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/table_section.rs","byte_start":315751,"byte_end":315754,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/table_section.rs","byte_start":315759,"byte_end":315773,"line_start":44,"line_end":44,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/table_section.rs","byte_start":315778,"byte_end":315785,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ use wasmparser::TableSectionReader;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/table_section.rs","byte_start":315790,"byte_end":315829,"line_start":46,"line_end":46,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/table_section.rs","byte_start":315834,"byte_end":315837,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # let data: &[u8] = &[0x01, 0x70, 0x01, 0x01, 0x01];","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/table_section.rs","byte_start":315842,"byte_end":315898,"line_start":48,"line_end":48,"column_start":5,"column_end":61}},{"value":"/ let mut table_reader = TableSectionReader::new(data, 0).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/table_section.rs","byte_start":315903,"byte_end":315972,"line_start":49,"line_end":49,"column_start":5,"column_end":74}},{"value":"/ for _ in 0..table_reader.get_count() {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/table_section.rs","byte_start":315977,"byte_end":316019,"line_start":50,"line_end":50,"column_start":5,"column_end":47}},{"value":"/     let table = table_reader.read().expect(\"table\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/table_section.rs","byte_start":316024,"byte_end":316080,"line_start":51,"line_end":51,"column_start":5,"column_end":61}},{"value":"/     println!(\"Table: {:?}\", table);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/table_section.rs","byte_start":316085,"byte_end":316124,"line_start":52,"line_end":52,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/table_section.rs","byte_start":316129,"byte_end":316134,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/table_section.rs","byte_start":316139,"byte_end":316146,"line_start":54,"line_end":54,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3666},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/type_section.rs","byte_start":317815,"byte_end":317832,"line_start":22,"line_end":22,"column_start":12,"column_end":29},"name":"TypeSectionReader","qualname":"::readers::type_section::TypeSectionReader","value":"TypeSectionReader {  }","parent":null,"children":[{"krate":0,"index":3668},{"krate":0,"index":3669}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1467},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/type_section.rs","byte_start":317932,"byte_end":317935,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<TypeSectionReader>::new","value":"pub fn new(&'a [u8], usize) -> Result<TypeSectionReader>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1468},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/type_section.rs","byte_start":318182,"byte_end":318199,"line_start":34,"line_end":34,"column_start":12,"column_end":29},"name":"original_position","qualname":"<TypeSectionReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1469},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/type_section.rs","byte_start":318276,"byte_end":318285,"line_start":38,"line_end":38,"column_start":12,"column_end":21},"name":"get_count","qualname":"<TypeSectionReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1470},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/type_section.rs","byte_start":318754,"byte_end":318758,"line_start":54,"line_end":54,"column_start":12,"column_end":16},"name":"read","qualname":"<TypeSectionReader>::read","value":"pub fn read(&mut Self) -> Result<TypeDef>","parent":null,"children":[],"decl_id":null,"docs":" Reads content of the type section.","sig":null,"attributes":[{"value":"/ Reads content of the type section.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/type_section.rs","byte_start":318332,"byte_end":318370,"line_start":42,"line_end":42,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/type_section.rs","byte_start":318375,"byte_end":318378,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/type_section.rs","byte_start":318383,"byte_end":318397,"line_start":44,"line_end":44,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/type_section.rs","byte_start":318402,"byte_end":318409,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ use wasmparser::TypeSectionReader;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/type_section.rs","byte_start":318414,"byte_end":318452,"line_start":46,"line_end":46,"column_start":5,"column_end":43}},{"value":"/ # let data: &[u8] = &[0x01, 0x60, 0x00, 0x00];","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/type_section.rs","byte_start":318457,"byte_end":318507,"line_start":47,"line_end":47,"column_start":5,"column_end":55}},{"value":"/ let mut type_reader = TypeSectionReader::new(data, 0).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/type_section.rs","byte_start":318512,"byte_end":318579,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/ for _ in 0..type_reader.get_count() {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/type_section.rs","byte_start":318584,"byte_end":318625,"line_start":49,"line_end":49,"column_start":5,"column_end":46}},{"value":"/     let ty = type_reader.read().expect(\"type\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/type_section.rs","byte_start":318630,"byte_end":318681,"line_start":50,"line_end":50,"column_start":5,"column_end":56}},{"value":"/     println!(\"Type {:?}\", ty);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/type_section.rs","byte_start":318686,"byte_end":318720,"line_start":51,"line_end":51,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/type_section.rs","byte_start":318725,"byte_end":318730,"line_start":52,"line_end":52,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/type_section.rs","byte_start":318735,"byte_end":318742,"line_start":53,"line_end":53,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1532},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":321865,"byte_end":321887,"line_start":32,"line_end":32,"column_start":8,"column_end":30},"name":"validate_function_body","qualname":"::validator::validate_function_body","value":"pub fn validate_function_body<impl WasmModuleResources: WasmModuleResources>(&[u8],\n                                                                             usize,\n                                                                             u32,\n                                                                             impl WasmModuleResources,\n                                                                             Option<OperatorValidatorConfig>)\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Test whether the given buffer contains a valid WebAssembly function.\n The resources parameter contains all needed data to validate the operators.\n","sig":null,"attributes":[{"value":"/ Test whether the given buffer contains a valid WebAssembly function.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":321705,"byte_end":321777,"line_start":30,"line_end":30,"column_start":1,"column_end":73}},{"value":"/ The resources parameter contains all needed data to validate the operators.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":321778,"byte_end":321857,"line_start":31,"line_end":31,"column_start":1,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":1537},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":324954,"byte_end":324962,"line_start":106,"line_end":106,"column_start":8,"column_end":16},"name":"validate","qualname":"::validator::validate","value":"pub fn validate(&[u8]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Test whether the given buffer contains a valid WebAssembly module,\n analogous to [`WebAssembly.validate`][js] in the JS API.","sig":null,"attributes":[{"value":"/ Test whether the given buffer contains a valid WebAssembly module,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":324346,"byte_end":324416,"line_start":95,"line_end":95,"column_start":1,"column_end":71}},{"value":"/ analogous to [`WebAssembly.validate`][js] in the JS API.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":324417,"byte_end":324477,"line_start":96,"line_end":96,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":324478,"byte_end":324481,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ This functions requires the wasm module is entirely resident in memory and","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":324482,"byte_end":324560,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ is specified by `bytes`. Additionally this validates the given bytes with","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":324561,"byte_end":324638,"line_start":99,"line_end":99,"column_start":1,"column_end":78}},{"value":"/ the default set of WebAssembly features implemented by `wasmparser`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":324639,"byte_end":324711,"line_start":100,"line_end":100,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":324712,"byte_end":324715,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ For more fine-tuned control over validation it's recommended to review the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":324716,"byte_end":324794,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/ documentation of [`Validator`].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":324795,"byte_end":324830,"line_start":103,"line_end":103,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":324831,"byte_end":324834,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ [js]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/validate","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":324835,"byte_end":324946,"line_start":105,"line_end":105,"column_start":1,"column_end":112}}]},{"kind":"Struct","id":{"krate":0,"index":1552},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator/func.rs","byte_start":394236,"byte_end":394249,"line_start":14,"line_end":14,"column_start":12,"column_end":25},"name":"FuncValidator","qualname":"::validator::func::FuncValidator","value":"FuncValidator {  }","parent":null,"children":[{"krate":0,"index":1553},{"krate":0,"index":1554},{"krate":0,"index":1555},{"krate":0,"index":1556}],"decl_id":null,"docs":" Validation context for a WebAssembly function.","sig":null,"attributes":[{"value":"/ Validation context for a WebAssembly function.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator/func.rs","byte_start":393851,"byte_end":393901,"line_start":7,"line_end":7,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator/func.rs","byte_start":393902,"byte_end":393905,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This structure is created by","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator/func.rs","byte_start":393906,"byte_end":393938,"line_start":9,"line_end":9,"column_start":1,"column_end":33}},{"value":"/ [`Validator::code_section_entry`](crate::Validator::code_section_entry)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator/func.rs","byte_start":393939,"byte_end":394014,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ and is created per-function in a WebAssembly module. This structure is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator/func.rs","byte_start":394015,"byte_end":394089,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ suitable for sending to other threads while the original","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator/func.rs","byte_start":394090,"byte_end":394150,"line_start":12,"line_end":12,"column_start":1,"column_end":61}},{"value":"/ [`Validator`](crate::Validator) continues processing other functions.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator/func.rs","byte_start":394151,"byte_end":394224,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1558},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator/func.rs","byte_start":394701,"byte_end":394703,"line_start":27,"line_end":27,"column_start":12,"column_end":14},"name":"op","qualname":"<FuncValidator>::op","value":"pub fn op(&mut Self, usize, &Operator) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates the next operator in a function.","sig":null,"attributes":[{"value":"/ Validates the next operator in a function.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator/func.rs","byte_start":394427,"byte_end":394473,"line_start":22,"line_end":22,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator/func.rs","byte_start":394478,"byte_end":394481,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This functions is expected to be called once-per-operator in a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator/func.rs","byte_start":394486,"byte_end":394552,"line_start":24,"line_end":24,"column_start":5,"column_end":71}},{"value":"/ WebAssembly function. Each operator's offset in the original binary and","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator/func.rs","byte_start":394557,"byte_end":394632,"line_start":25,"line_end":25,"column_start":5,"column_end":80}},{"value":"/ the operator itself are passed to this function.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator/func.rs","byte_start":394637,"byte_end":394689,"line_start":26,"line_end":26,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1560},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator/func.rs","byte_start":395378,"byte_end":395384,"line_start":45,"line_end":45,"column_start":12,"column_end":18},"name":"finish","qualname":"<FuncValidator>::finish","value":"pub fn finish(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Function that must be called after the last opcode has been processed.","sig":null,"attributes":[{"value":"/ Function that must be called after the last opcode has been processed.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator/func.rs","byte_start":395095,"byte_end":395169,"line_start":40,"line_end":40,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator/func.rs","byte_start":395174,"byte_end":395177,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This will validate that the function was properly terminated with the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator/func.rs","byte_start":395182,"byte_end":395255,"line_start":42,"line_end":42,"column_start":5,"column_end":78}},{"value":"/ `end` opcode. If this function is not called then the function will not","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator/func.rs","byte_start":395260,"byte_end":395335,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/ be properly validated.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator/func.rs","byte_start":395340,"byte_end":395366,"line_start":44,"line_end":44,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":3673},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":326719,"byte_end":326728,"line_start":145,"line_end":145,"column_start":12,"column_end":21},"name":"Validator","qualname":"::validator::Validator","value":"Validator {  }","parent":null,"children":[{"krate":0,"index":3674},{"krate":0,"index":3675},{"krate":0,"index":3676},{"krate":0,"index":3677},{"krate":0,"index":3678},{"krate":0,"index":3679},{"krate":0,"index":3680},{"krate":0,"index":3681},{"krate":0,"index":3682},{"krate":0,"index":3683},{"krate":0,"index":3684},{"krate":0,"index":3685}],"decl_id":null,"docs":" Validator for a WebAssembly binary module.","sig":null,"attributes":[{"value":"/ Validator for a WebAssembly binary module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":325264,"byte_end":325310,"line_start":119,"line_end":119,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":325311,"byte_end":325314,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ This structure encapsulates state necessary to validate a WebAssembly","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":325315,"byte_end":325388,"line_start":121,"line_end":121,"column_start":1,"column_end":74}},{"value":"/ binary. This implements validation as defined by the [core","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":325389,"byte_end":325451,"line_start":122,"line_end":122,"column_start":1,"column_end":63}},{"value":"/ specification][core]. A `Validator` is designed, like","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":325452,"byte_end":325509,"line_start":123,"line_end":123,"column_start":1,"column_end":58}},{"value":"/ [`Parser`], to accept incremental input over time.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":325510,"byte_end":325564,"line_start":124,"line_end":124,"column_start":1,"column_end":55}},{"value":"/ Additionally a `Validator` is also designed for parallel validation of","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":325565,"byte_end":325639,"line_start":125,"line_end":125,"column_start":1,"column_end":75}},{"value":"/ functions as they are received.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":325640,"byte_end":325675,"line_start":126,"line_end":126,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":325676,"byte_end":325679,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ It's expected that you'll be using a [`Parser`] in tandem with a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":325680,"byte_end":325748,"line_start":128,"line_end":128,"column_start":1,"column_end":69}},{"value":"/ `Validator`. As each [`Payload`](crate::Payload) is received from a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":325749,"byte_end":325820,"line_start":129,"line_end":129,"column_start":1,"column_end":72}},{"value":"/ [`Parser`] you'll pass it into a `Validator` to test the validity of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":325821,"byte_end":325897,"line_start":130,"line_end":130,"column_start":1,"column_end":77}},{"value":"/ payload. Note that all payloads received from a [`Parser`] are expected to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":325898,"byte_end":325976,"line_start":131,"line_end":131,"column_start":1,"column_end":79}},{"value":"/ be passed to a [`Validator`]. For example if you receive","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":325977,"byte_end":326037,"line_start":132,"line_end":132,"column_start":1,"column_end":61}},{"value":"/ [`Payload::TypeSection`](crate::Payload) you'll call","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":326038,"byte_end":326094,"line_start":133,"line_end":133,"column_start":1,"column_end":57}},{"value":"/ [`Validator::type_section`] to validate this.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":326095,"byte_end":326144,"line_start":134,"line_end":134,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":326145,"byte_end":326148,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ The design of [`Validator`] is intended that you'll interleave, in your own","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":326149,"byte_end":326228,"line_start":136,"line_end":136,"column_start":1,"column_end":80}},{"value":"/ application's processing, calls to validation. Each variant, after it's","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":326229,"byte_end":326304,"line_start":137,"line_end":137,"column_start":1,"column_end":76}},{"value":"/ received, will be validated and then your application would proceed as","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":326305,"byte_end":326379,"line_start":138,"line_end":138,"column_start":1,"column_end":75}},{"value":"/ usual. At all times, however, you'll have access to the [`Validator`] and","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":326380,"byte_end":326457,"line_start":139,"line_end":139,"column_start":1,"column_end":78}},{"value":"/ the validation context up to that point. This enables applications to check","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":326458,"byte_end":326537,"line_start":140,"line_end":140,"column_start":1,"column_end":80}},{"value":"/ the types of functions and learn how many globals there are, for example.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":326538,"byte_end":326615,"line_start":141,"line_end":141,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":326616,"byte_end":326619,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ [core]: https://webassembly.github.io/spec/core/valid/index.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":326620,"byte_end":326688,"line_start":143,"line_end":143,"column_start":1,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1617},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":331380,"byte_end":331382,"line_start":309,"line_end":309,"column_start":5,"column_end":7},"name":"Ok","qualname":"::validator::ValidPayload::Ok","value":"ValidPayload::Ok","parent":{"krate":0,"index":1615},"children":[],"decl_id":null,"docs":" The payload validated, no further action need be taken.\n","sig":null,"attributes":[{"value":"/ The payload validated, no further action need be taken.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":331316,"byte_end":331375,"line_start":308,"line_end":308,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1619},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":331613,"byte_end":331617,"line_start":314,"line_end":314,"column_start":5,"column_end":9},"name":"Push","qualname":"::validator::ValidPayload::Push","value":"ValidPayload::Push(Parser, Validator)","parent":{"krate":0,"index":1615},"children":[],"decl_id":null,"docs":" The payload validated, but it started a nested module.","sig":null,"attributes":[{"value":"/ The payload validated, but it started a nested module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":331388,"byte_end":331446,"line_start":310,"line_end":310,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":331451,"byte_end":331454,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ This result indicates that the current validator needs to be saved until","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":331459,"byte_end":331535,"line_start":312,"line_end":312,"column_start":5,"column_end":81}},{"value":"/ later. The returned parser and validator should be used instead.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":331540,"byte_end":331608,"line_start":313,"line_end":313,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1623},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":331797,"byte_end":331800,"line_start":317,"line_end":317,"column_start":5,"column_end":8},"name":"Pop","qualname":"::validator::ValidPayload::Pop","value":"ValidPayload::Pop","parent":{"krate":0,"index":1615},"children":[],"decl_id":null,"docs":" The payload validated, and the current validator is finished. The last\n validator that was in use should be popped off the stack to resume.\n","sig":null,"attributes":[{"value":"/ The payload validated, and the current validator is finished. The last","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":331642,"byte_end":331716,"line_start":315,"line_end":315,"column_start":5,"column_end":79}},{"value":"/ validator that was in use should be popped off the stack to resume.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":331721,"byte_end":331792,"line_start":316,"line_end":316,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1625},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":331982,"byte_end":331986,"line_start":322,"line_end":322,"column_start":5,"column_end":9},"name":"Func","qualname":"::validator::ValidPayload::Func","value":"ValidPayload::Func(FuncValidator, OperatorsReader)","parent":{"krate":0,"index":1615},"children":[],"decl_id":null,"docs":" A function was found to be validate.","sig":null,"attributes":[{"value":"/ A function was found to be validate.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":331806,"byte_end":331846,"line_start":318,"line_end":318,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":331851,"byte_end":331854,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ The function validator will need to be run over the operators in","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":331859,"byte_end":331927,"line_start":320,"line_end":320,"column_start":5,"column_end":73}},{"value":"/ [`OperatorsReader`] to finish validation.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":331932,"byte_end":331977,"line_start":321,"line_end":321,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":1615},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":331293,"byte_end":331305,"line_start":307,"line_end":307,"column_start":10,"column_end":22},"name":"ValidPayload","qualname":"::validator::ValidPayload","value":"pub enum ValidPayload<'a> {\n\n    /// The payload validated, no further action need be taken.\n    Ok,\n\n    /// The payload validated, but it started a nested module.\n    ///\n    /// This result indicates that the current validator needs to be saved until\n    /// later. The returned parser and validator should be used instead.\n    Push(Parser, Validator),\n\n    /// The payload validated, and the current validator is finished. The last\n    /// validator that was in use should be popped off the stack to resume.\n    Pop,\n\n    /// A function was found to be validate.\n    ///\n    /// The function validator will need to be run over the operators in\n    /// [`OperatorsReader`] to finish validation.\n    Func(FuncValidator, OperatorsReader),\n}","parent":null,"children":[{"krate":0,"index":1617},{"krate":0,"index":1619},{"krate":0,"index":1623},{"krate":0,"index":1625}],"decl_id":null,"docs":" Possible return values from [`Validator::payload`].\n","sig":null,"attributes":[{"value":"/ Possible return values from [`Validator::payload`].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":331228,"byte_end":331283,"line_start":306,"line_end":306,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1630},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":332308,"byte_end":332311,"line_start":331,"line_end":331,"column_start":12,"column_end":15},"name":"new","qualname":"<Validator>::new","value":"pub fn new() -> Validator","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Validator`] ready to validate a WebAssembly module.","sig":null,"attributes":[{"value":"/ Creates a new [`Validator`] ready to validate a WebAssembly module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":332048,"byte_end":332119,"line_start":326,"line_end":326,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":332124,"byte_end":332127,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ The new validator will receive payloads parsed from","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":332132,"byte_end":332187,"line_start":328,"line_end":328,"column_start":5,"column_end":60}},{"value":"/ [`Parser`], and expects the first payload received to be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":332192,"byte_end":332252,"line_start":329,"line_end":329,"column_start":5,"column_end":65}},{"value":"/ the version header from the parser.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":332257,"byte_end":332296,"line_start":330,"line_end":330,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1631},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":332524,"byte_end":332544,"line_start":339,"line_end":339,"column_start":12,"column_end":32},"name":"wasm_reference_types","qualname":"<Validator>::wasm_reference_types","value":"pub fn wasm_reference_types(&mut Self, bool) -> &mut Validator","parent":null,"children":[],"decl_id":null,"docs":" Configures whether the reference types proposal for WebAssembly is\n enabled.","sig":null,"attributes":[{"value":"/ Configures whether the reference types proposal for WebAssembly is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":332369,"byte_end":332439,"line_start":335,"line_end":335,"column_start":5,"column_end":75}},{"value":"/ enabled.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":332444,"byte_end":332456,"line_start":336,"line_end":336,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":332461,"byte_end":332464,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ The default for this option is `false`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":332469,"byte_end":332512,"line_start":338,"line_end":338,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1632},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":332818,"byte_end":332837,"line_start":348,"line_end":348,"column_start":12,"column_end":31},"name":"wasm_module_linking","qualname":"<Validator>::wasm_module_linking","value":"pub fn wasm_module_linking(&mut Self, bool) -> &mut Validator","parent":null,"children":[],"decl_id":null,"docs":" Configures whether the module linking proposal for WebAssembly is\n enabled.","sig":null,"attributes":[{"value":"/ Configures whether the module linking proposal for WebAssembly is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":332664,"byte_end":332733,"line_start":344,"line_end":344,"column_start":5,"column_end":74}},{"value":"/ enabled.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":332738,"byte_end":332750,"line_start":345,"line_end":345,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":332755,"byte_end":332758,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ The default for this option is `false`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":332763,"byte_end":332806,"line_start":347,"line_end":347,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1633},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":333100,"byte_end":333109,"line_start":357,"line_end":357,"column_start":12,"column_end":21},"name":"wasm_simd","qualname":"<Validator>::wasm_simd","value":"pub fn wasm_simd(&mut Self, bool) -> &mut Validator","parent":null,"children":[],"decl_id":null,"docs":" Configures whether the SIMD proposal for WebAssembly is\n enabled.","sig":null,"attributes":[{"value":"/ Configures whether the SIMD proposal for WebAssembly is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":332956,"byte_end":333015,"line_start":353,"line_end":353,"column_start":5,"column_end":64}},{"value":"/ enabled.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":333020,"byte_end":333032,"line_start":354,"line_end":354,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":333037,"byte_end":333040,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ The default for this option is `false`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":333045,"byte_end":333088,"line_start":356,"line_end":356,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1634},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":333365,"byte_end":333377,"line_start":366,"line_end":366,"column_start":12,"column_end":24},"name":"wasm_threads","qualname":"<Validator>::wasm_threads","value":"pub fn wasm_threads(&mut Self, bool) -> &mut Validator","parent":null,"children":[],"decl_id":null,"docs":" Configures whether the threads proposal for WebAssembly is\n enabled.","sig":null,"attributes":[{"value":"/ Configures whether the threads proposal for WebAssembly is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":333218,"byte_end":333280,"line_start":362,"line_end":362,"column_start":5,"column_end":67}},{"value":"/ enabled.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":333285,"byte_end":333297,"line_start":363,"line_end":363,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":333302,"byte_end":333305,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ The default for this option is `false`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":333310,"byte_end":333353,"line_start":365,"line_end":365,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1635},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":333638,"byte_end":333652,"line_start":375,"line_end":375,"column_start":12,"column_end":26},"name":"wasm_tail_call","qualname":"<Validator>::wasm_tail_call","value":"pub fn wasm_tail_call(&mut Self, bool) -> &mut Validator","parent":null,"children":[],"decl_id":null,"docs":" Configures whether the tail call proposal for WebAssembly is\n enabled.","sig":null,"attributes":[{"value":"/ Configures whether the tail call proposal for WebAssembly is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":333489,"byte_end":333553,"line_start":371,"line_end":371,"column_start":5,"column_end":69}},{"value":"/ enabled.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":333558,"byte_end":333570,"line_start":372,"line_end":372,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":333575,"byte_end":333578,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ The default for this option is `false`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":333583,"byte_end":333626,"line_start":374,"line_end":374,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1636},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":333916,"byte_end":333932,"line_start":384,"line_end":384,"column_start":12,"column_end":28},"name":"wasm_multi_value","qualname":"<Validator>::wasm_multi_value","value":"pub fn wasm_multi_value(&mut Self, bool) -> &mut Validator","parent":null,"children":[],"decl_id":null,"docs":" Configures whether the multi-value proposal for WebAssembly is\n enabled.","sig":null,"attributes":[{"value":"/ Configures whether the multi-value proposal for WebAssembly is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":333766,"byte_end":333832,"line_start":380,"line_end":380,"column_start":5,"column_end":71}},{"value":"/ enabled.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":333837,"byte_end":333849,"line_start":381,"line_end":381,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":333854,"byte_end":333857,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ The default for this option is `true`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":333862,"byte_end":333904,"line_start":383,"line_end":383,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1637},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":334198,"byte_end":334214,"line_start":393,"line_end":393,"column_start":12,"column_end":28},"name":"wasm_bulk_memory","qualname":"<Validator>::wasm_bulk_memory","value":"pub fn wasm_bulk_memory(&mut Self, bool) -> &mut Validator","parent":null,"children":[],"decl_id":null,"docs":" Configures whether the bulk-memory proposal for WebAssembly is\n enabled.","sig":null,"attributes":[{"value":"/ Configures whether the bulk-memory proposal for WebAssembly is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":334048,"byte_end":334114,"line_start":389,"line_end":389,"column_start":5,"column_end":71}},{"value":"/ enabled.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":334119,"byte_end":334131,"line_start":390,"line_end":390,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":334136,"byte_end":334139,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ The default for this option is `true`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":334144,"byte_end":334186,"line_start":392,"line_end":392,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1638},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":334476,"byte_end":334494,"line_start":401,"line_end":401,"column_start":12,"column_end":30},"name":"deterministic_only","qualname":"<Validator>::deterministic_only","value":"pub fn deterministic_only(&mut Self, bool) -> &mut Validator","parent":null,"children":[],"decl_id":null,"docs":" Configures whether only deterministic instructions are allowed to validate.","sig":null,"attributes":[{"value":"/ Configures whether only deterministic instructions are allowed to validate.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":334330,"byte_end":334409,"line_start":398,"line_end":398,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":334414,"byte_end":334417,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ The default for this option is `true`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":334422,"byte_end":334464,"line_start":400,"line_end":400,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1639},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":335022,"byte_end":335034,"line_start":413,"line_end":413,"column_start":12,"column_end":24},"name":"validate_all","qualname":"<Validator>::validate_all","value":"pub fn validate_all(Self, &[u8]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates an entire in-memory module with this validator.","sig":null,"attributes":[{"value":"/ Validates an entire in-memory module with this validator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":334617,"byte_end":334678,"line_start":406,"line_end":406,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":334683,"byte_end":334686,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ This function will internally create a [`Parser`] to parse the `bytes`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":334691,"byte_end":334765,"line_start":408,"line_end":408,"column_start":5,"column_end":79}},{"value":"/ provided. The entire wasm module specified by `bytes` will be parsed and","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":334770,"byte_end":334846,"line_start":409,"line_end":409,"column_start":5,"column_end":81}},{"value":"/ validated. Parse and validation errors will be returned through","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":334851,"byte_end":334918,"line_start":410,"line_end":410,"column_start":5,"column_end":72}},{"value":"/ `Err(_)`, and otherwise a successful validation means `Ok(())` is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":334923,"byte_end":334992,"line_start":411,"line_end":411,"column_start":5,"column_end":74}},{"value":"/ returned.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":334997,"byte_end":335010,"line_start":412,"line_end":412,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1640},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":336801,"byte_end":336808,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"payload","qualname":"<Validator>::payload","value":"pub fn payload<'a>(&mut Self, &Payload) -> Result<ValidPayload>","parent":null,"children":[],"decl_id":null,"docs":" Convenience function to validate a single [`Payload`].","sig":null,"attributes":[{"value":"/ Convenience function to validate a single [`Payload`].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":335952,"byte_end":336010,"line_start":439,"line_end":439,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":336015,"byte_end":336018,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used as a convenience. It will","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":336023,"byte_end":336089,"line_start":441,"line_end":441,"column_start":5,"column_end":71}},{"value":"/ internally perform any validation necessary to validate the [`Payload`]","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":336094,"byte_end":336169,"line_start":442,"line_end":442,"column_start":5,"column_end":80}},{"value":"/ provided. The convenience part is that you're likely already going to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":336174,"byte_end":336247,"line_start":443,"line_end":443,"column_start":5,"column_end":78}},{"value":"/ be matching on [`Payload`] in your application, at which point it's more","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":336252,"byte_end":336328,"line_start":444,"line_end":444,"column_start":5,"column_end":81}},{"value":"/ appropriate to call the individual methods on [`Validator`] per-variant","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":336333,"byte_end":336408,"line_start":445,"line_end":445,"column_start":5,"column_end":80}},{"value":"/ in [`Payload`], such as [`Validator::type_section`].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":336413,"byte_end":336469,"line_start":446,"line_end":446,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":336474,"byte_end":336477,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ This function returns a [`ValidPayload`] variant on success, indicating","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":336482,"byte_end":336557,"line_start":448,"line_end":448,"column_start":5,"column_end":80}},{"value":"/ one of a few possible actions that need to be taken after a payload is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":336562,"byte_end":336636,"line_start":449,"line_end":449,"column_start":5,"column_end":79}},{"value":"/ validated. For example function contents are not validated here, they're","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":336641,"byte_end":336717,"line_start":450,"line_end":450,"column_start":5,"column_end":81}},{"value":"/ returned through [`ValidPayload`] for validation by the caller.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":336722,"byte_end":336789,"line_start":451,"line_end":451,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1646},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":339246,"byte_end":339253,"line_start":508,"line_end":508,"column_start":12,"column_end":19},"name":"version","qualname":"<Validator>::version","value":"pub fn version(&mut Self, u32, &Range) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::Version`](crate::Payload)\n","sig":null,"attributes":[{"value":"/ Validates [`Payload::Version`](crate::Payload)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":339184,"byte_end":339234,"line_start":507,"line_end":507,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1674},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":344698,"byte_end":344710,"line_start":664,"line_end":664,"column_start":12,"column_end":24},"name":"type_section","qualname":"<Validator>::type_section","value":"pub fn type_section(&mut Self, &crate::TypeSectionReader) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::TypeSection`](crate::Payload)\n","sig":null,"attributes":[{"value":"/ Validates [`Payload::TypeSection`](crate::Payload)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":344632,"byte_end":344686,"line_start":663,"line_end":663,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1687},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":350886,"byte_end":350900,"line_start":826,"line_end":826,"column_start":12,"column_end":26},"name":"import_section","qualname":"<Validator>::import_section","value":"pub fn import_section(&mut Self, &crate::ImportSectionReader) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::ImportSection`](crate::Payload)\n","sig":null,"attributes":[{"value":"/ Validates [`Payload::ImportSection`](crate::Payload)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":350818,"byte_end":350874,"line_start":825,"line_end":825,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1690},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":353810,"byte_end":353823,"line_start":894,"line_end":894,"column_start":12,"column_end":25},"name":"alias_section","qualname":"<Validator>::alias_section","value":"pub fn alias_section(&mut Self, &crate::AliasSectionReader) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::AliasSection`](crate::Payload)\n","sig":null,"attributes":[{"value":"/ Validates [`Payload::AliasSection`](crate::Payload)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":353743,"byte_end":353798,"line_start":893,"line_end":893,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1695},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":357940,"byte_end":357954,"line_start":980,"line_end":980,"column_start":12,"column_end":26},"name":"module_section","qualname":"<Validator>::module_section","value":"pub fn module_section(&mut Self, &crate::ModuleSectionReader) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::ModuleSection`](crate::Payload)\n","sig":null,"attributes":[{"value":"/ Validates [`Payload::ModuleSection`](crate::Payload)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":357872,"byte_end":357928,"line_start":979,"line_end":979,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1697},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":358781,"byte_end":358797,"line_start":1000,"line_end":1000,"column_start":12,"column_end":28},"name":"instance_section","qualname":"<Validator>::instance_section","value":"pub fn instance_section(&mut Self, &crate::InstanceSectionReader)\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::InstanceSection`](crate::Payload)\n","sig":null,"attributes":[{"value":"/ Validates [`Payload::InstanceSection`](crate::Payload)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":358711,"byte_end":358769,"line_start":999,"line_end":999,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1721},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":367547,"byte_end":367563,"line_start":1193,"line_end":1193,"column_start":12,"column_end":28},"name":"function_section","qualname":"<Validator>::function_section","value":"pub fn function_section(&mut Self, &crate::FunctionSectionReader)\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::FunctionSection`](crate::Payload)\n","sig":null,"attributes":[{"value":"/ Validates [`Payload::FunctionSection`](crate::Payload)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":367477,"byte_end":367535,"line_start":1192,"line_end":1192,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1724},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":368502,"byte_end":368515,"line_start":1220,"line_end":1220,"column_start":12,"column_end":25},"name":"table_section","qualname":"<Validator>::table_section","value":"pub fn table_section(&mut Self, &crate::TableSectionReader) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::TableSection`](crate::Payload)\n","sig":null,"attributes":[{"value":"/ Validates [`Payload::TableSection`](crate::Payload)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":368435,"byte_end":368490,"line_start":1219,"line_end":1219,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1726},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":368971,"byte_end":368985,"line_start":1235,"line_end":1235,"column_start":12,"column_end":26},"name":"memory_section","qualname":"<Validator>::memory_section","value":"pub fn memory_section(&mut Self, &crate::MemorySectionReader) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1728},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":369470,"byte_end":369484,"line_start":1250,"line_end":1250,"column_start":12,"column_end":26},"name":"global_section","qualname":"<Validator>::global_section","value":"pub fn global_section(&mut Self, &crate::GlobalSectionReader) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::GlobalSection`](crate::Payload)\n","sig":null,"attributes":[{"value":"/ Validates [`Payload::GlobalSection`](crate::Payload)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":369402,"byte_end":369458,"line_start":1249,"line_end":1249,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1731},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":372462,"byte_end":372476,"line_start":1326,"line_end":1326,"column_start":12,"column_end":26},"name":"export_section","qualname":"<Validator>::export_section","value":"pub fn export_section(&mut Self, &crate::ExportSectionReader) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::ExportSection`](crate::Payload)\n","sig":null,"attributes":[{"value":"/ Validates [`Payload::ExportSection`](crate::Payload)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":372394,"byte_end":372450,"line_start":1325,"line_end":1325,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1743},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":379958,"byte_end":379971,"line_start":1486,"line_end":1486,"column_start":12,"column_end":25},"name":"start_section","qualname":"<Validator>::start_section","value":"pub fn start_section(&mut Self, u32, &Range) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::StartSection`](crate::Payload)\n","sig":null,"attributes":[{"value":"/ Validates [`Payload::StartSection`](crate::Payload)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":379891,"byte_end":379946,"line_start":1485,"line_end":1485,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1744},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":380454,"byte_end":380469,"line_start":1498,"line_end":1498,"column_start":12,"column_end":27},"name":"element_section","qualname":"<Validator>::element_section","value":"pub fn element_section(&mut Self, &crate::ElementSectionReader) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::ElementSection`](crate::Payload)\n","sig":null,"attributes":[{"value":"/ Validates [`Payload::ElementSection`](crate::Payload)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":380385,"byte_end":380442,"line_start":1497,"line_end":1497,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1746},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":382697,"byte_end":382715,"line_start":1551,"line_end":1551,"column_start":12,"column_end":30},"name":"data_count_section","qualname":"<Validator>::data_count_section","value":"pub fn data_count_section(&mut Self, u32, &Range) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::DataCountSection`](crate::Payload)\n","sig":null,"attributes":[{"value":"/ Validates [`Payload::DataCountSection`](crate::Payload)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":382626,"byte_end":382685,"line_start":1550,"line_end":1550,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1747},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":383012,"byte_end":383037,"line_start":1559,"line_end":1559,"column_start":12,"column_end":37},"name":"module_code_section_start","qualname":"<Validator>::module_code_section_start","value":"pub fn module_code_section_start(&mut Self, u32, &Range) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::ModuleCodeSectionStart`](crate::Payload)\n","sig":null,"attributes":[{"value":"/ Validates [`Payload::ModuleCodeSectionStart`](crate::Payload)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":382935,"byte_end":383000,"line_start":1558,"line_end":1558,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1748},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":384497,"byte_end":384522,"line_start":1589,"line_end":1589,"column_start":12,"column_end":37},"name":"module_code_section_entry","qualname":"<Validator>::module_code_section_entry","value":"pub fn module_code_section_entry<'a>(&mut Self) -> Validator","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::ModuleCodeSectionEntry`](crate::Payload).","sig":null,"attributes":[{"value":"/ Validates [`Payload::ModuleCodeSectionEntry`](crate::Payload).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":383814,"byte_end":383880,"line_start":1578,"line_end":1578,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":383885,"byte_end":383888,"line_start":1579,"line_end":1579,"column_start":5,"column_end":8}},{"value":"/ Note that this does not actually perform any validation itself. The","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":383893,"byte_end":383964,"line_start":1580,"line_end":1580,"column_start":5,"column_end":76}},{"value":"/ `ModuleCodeSectionEntry` payload is associated with a sub-parser for the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":383969,"byte_end":384045,"line_start":1581,"line_end":1581,"column_start":5,"column_end":81}},{"value":"/ sub-module, and it's expected that the returned [`Validator`] will be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":384050,"byte_end":384123,"line_start":1582,"line_end":1582,"column_start":5,"column_end":78}},{"value":"/ paired with the [`Parser`] otherwise used with the module.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":384128,"byte_end":384190,"line_start":1583,"line_end":1583,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":384195,"byte_end":384198,"line_start":1584,"line_end":1584,"column_start":5,"column_end":8}},{"value":"/ Note that the returned [`Validator`] should be used for the nested","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":384203,"byte_end":384273,"line_start":1585,"line_end":1585,"column_start":5,"column_end":75}},{"value":"/ module. It will correctly work with parent aliases as well as ensure the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":384278,"byte_end":384354,"line_start":1586,"line_end":1586,"column_start":5,"column_end":81}},{"value":"/ type of the inline module matches the declared type. Using","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":384359,"byte_end":384421,"line_start":1587,"line_end":1587,"column_start":5,"column_end":67}},{"value":"/ [`Validator::new`] will result in incorrect validation.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":384426,"byte_end":384485,"line_start":1588,"line_end":1588,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1750},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":385032,"byte_end":385050,"line_start":1601,"line_end":1601,"column_start":12,"column_end":30},"name":"code_section_start","qualname":"<Validator>::code_section_start","value":"pub fn code_section_start(&mut Self, u32, &Range) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::CodeSectionStart`](crate::Payload).\n","sig":null,"attributes":[{"value":"/ Validates [`Payload::CodeSectionStart`](crate::Payload).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":384960,"byte_end":385020,"line_start":1600,"line_end":1600,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1751},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":386534,"byte_end":386552,"line_start":1631,"line_end":1631,"column_start":12,"column_end":30},"name":"code_section_entry","qualname":"<Validator>::code_section_entry","value":"pub fn code_section_entry<'a>(&mut Self, &FunctionBody)\n-> Result<(FuncValidator, OperatorsReader)>","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::CodeSectionEntry`](crate::Payload).","sig":null,"attributes":[{"value":"/ Validates [`Payload::CodeSectionEntry`](crate::Payload).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":385757,"byte_end":385817,"line_start":1618,"line_end":1618,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":385822,"byte_end":385825,"line_start":1619,"line_end":1619,"column_start":5,"column_end":8}},{"value":"/ This function will prepare a [`FuncValidator`] which can be used to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":385830,"byte_end":385901,"line_start":1620,"line_end":1620,"column_start":5,"column_end":76}},{"value":"/ validate the function. The function body provided will be parsed only","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":385906,"byte_end":385979,"line_start":1621,"line_end":1621,"column_start":5,"column_end":78}},{"value":"/ enough to create the function validation context. After this the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":385984,"byte_end":386052,"line_start":1622,"line_end":1622,"column_start":5,"column_end":73}},{"value":"/ [`OperatorsReader`] returned can be used to read the opcodes of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":386057,"byte_end":386128,"line_start":1623,"line_end":1623,"column_start":5,"column_end":76}},{"value":"/ function as well as feed information into the validator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":386133,"byte_end":386193,"line_start":1624,"line_end":1624,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":386198,"byte_end":386201,"line_start":1625,"line_end":1625,"column_start":5,"column_end":8}},{"value":"/ Note that the returned [`FuncValidator`] is \"connected\" to this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":386206,"byte_end":386273,"line_start":1626,"line_end":1626,"column_start":5,"column_end":72}},{"value":"/ [`Validator`] in that it uses the internal context of this validator for","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":386278,"byte_end":386354,"line_start":1627,"line_end":1627,"column_start":5,"column_end":81}},{"value":"/ validating the function. The [`FuncValidator`] can be sent to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":386359,"byte_end":386424,"line_start":1628,"line_end":1628,"column_start":5,"column_end":70}},{"value":"/ another thread, for example, to offload actual processing of functions","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":386429,"byte_end":386503,"line_start":1629,"line_end":1629,"column_start":5,"column_end":79}},{"value":"/ elsewhere.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":386508,"byte_end":386522,"line_start":1630,"line_end":1630,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1754},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":388648,"byte_end":388660,"line_start":1683,"line_end":1683,"column_start":12,"column_end":24},"name":"data_section","qualname":"<Validator>::data_section","value":"pub fn data_section(&mut Self, &crate::DataSectionReader) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::DataSection`](crate::Payload).\n","sig":null,"attributes":[{"value":"/ Validates [`Payload::DataSection`](crate::Payload).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":388581,"byte_end":388636,"line_start":1682,"line_end":1682,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1756},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":389334,"byte_end":389349,"line_start":1703,"line_end":1703,"column_start":12,"column_end":27},"name":"unknown_section","qualname":"<Validator>::unknown_section","value":"pub fn unknown_section(&mut Self, u8, &Range) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::UnknownSection`](crate::Payload).","sig":null,"attributes":[{"value":"/ Validates [`Payload::UnknownSection`](crate::Payload).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":389213,"byte_end":389271,"line_start":1700,"line_end":1700,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":389276,"byte_end":389279,"line_start":1701,"line_end":1701,"column_start":5,"column_end":8}},{"value":"/ Currently always returns an error.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":389284,"byte_end":389322,"line_start":1702,"line_end":1702,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1757},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":389572,"byte_end":389575,"line_start":1709,"line_end":1709,"column_start":12,"column_end":15},"name":"end","qualname":"<Validator>::end","value":"pub fn end(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::End`](crate::Payload).\n","sig":null,"attributes":[{"value":"/ Validates [`Payload::End`](crate::Payload).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":389513,"byte_end":389560,"line_start":1708,"line_end":1708,"column_start":5,"column_end":52}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":4815,"byte_end":4820,"line_start":60,"line_end":60,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":5460,"byte_end":5472,"line_start":84,"line_end":84,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":66718,"byte_end":66725,"line_start":1768,"line_end":1768,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":68844,"byte_end":68859,"line_start":1840,"line_end":1840,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":73147,"byte_end":73165,"line_start":76,"line_end":76,"column_start":16,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":73431,"byte_end":73449,"line_start":90,"line_end":90,"column_start":29,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":74059,"byte_end":74077,"line_start":115,"line_end":115,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":74564,"byte_end":74582,"line_start":134,"line_end":134,"column_start":38,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":75089,"byte_end":75108,"line_start":158,"line_end":158,"column_start":16,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":75375,"byte_end":75394,"line_start":172,"line_end":172,"column_start":29,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":76005,"byte_end":76024,"line_start":197,"line_end":197,"column_start":40,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":76512,"byte_end":76531,"line_start":216,"line_end":216,"column_start":38,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":81356,"byte_end":81360,"line_start":357,"line_end":357,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":81457,"byte_end":81464,"line_start":363,"line_end":363,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":81686,"byte_end":81694,"line_start":374,"line_end":374,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":82104,"byte_end":82114,"line_start":394,"line_end":394,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":82320,"byte_end":82329,"line_start":406,"line_end":406,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":82625,"byte_end":82635,"line_start":422,"line_end":422,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/operators_validator.rs","byte_start":84296,"byte_end":84306,"line_start":41,"line_end":41,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/operators_validator.rs","byte_start":84558,"byte_end":84567,"line_start":55,"line_end":55,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":373},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/operators_validator.rs","byte_start":94008,"byte_end":94030,"line_start":299,"line_end":299,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/operators_validator.rs","byte_start":96446,"byte_end":96463,"line_start":376,"line_end":376,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":417},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":177879,"byte_end":177885,"line_start":244,"line_end":244,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":545},{"krate":0,"index":553},{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":204970,"byte_end":204976,"line_start":876,"line_end":876,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":205060,"byte_end":205067,"line_start":882,"line_end":882,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":222161,"byte_end":222178,"line_start":37,"line_end":37,"column_start":16,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":222205,"byte_end":222222,"line_start":39,"line_end":39,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":222422,"byte_end":222439,"line_start":49,"line_end":49,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":587},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":227648,"byte_end":227654,"line_start":276,"line_end":276,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":227947,"byte_end":227953,"line_start":289,"line_end":289,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":228106,"byte_end":228110,"line_start":298,"line_end":298,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/alias_section.rs","byte_start":242512,"byte_end":242530,"line_start":25,"line_end":25,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/alias_section.rs","byte_start":243575,"byte_end":243593,"line_start":58,"line_end":58,"column_start":28,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/alias_section.rs","byte_start":243982,"byte_end":244000,"line_start":75,"line_end":75,"column_start":38,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/alias_section.rs","byte_start":244119,"byte_end":244137,"line_start":81,"line_end":81,"column_start":27,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":245196,"byte_end":245208,"line_start":27,"line_end":27,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":688},{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":246555,"byte_end":246567,"line_start":80,"line_end":80,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":247034,"byte_end":247046,"line_start":101,"line_end":101,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":247441,"byte_end":247455,"line_start":120,"line_end":120,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":247902,"byte_end":247919,"line_start":137,"line_end":137,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":249864,"byte_end":249881,"line_start":194,"line_end":194,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":250278,"byte_end":250295,"line_start":210,"line_end":210,"column_start":38,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":736}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":250413,"byte_end":250430,"line_start":216,"line_end":216,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/data_section.rs","byte_start":252375,"byte_end":252392,"line_start":42,"line_end":42,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/data_section.rs","byte_start":255262,"byte_end":255279,"line_start":123,"line_end":123,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/data_section.rs","byte_start":255668,"byte_end":255685,"line_start":139,"line_end":139,"column_start":38,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/data_section.rs","byte_start":255803,"byte_end":255820,"line_start":145,"line_end":145,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":257295,"byte_end":257307,"line_start":52,"line_end":52,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":257607,"byte_end":257625,"line_start":67,"line_end":67,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":258957,"byte_end":258975,"line_start":109,"line_end":109,"column_start":27,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":259394,"byte_end":259414,"line_start":128,"line_end":128,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":259965,"byte_end":259985,"line_start":151,"line_end":151,"column_start":10,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":263818,"byte_end":263838,"line_start":261,"line_end":261,"column_start":28,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":264236,"byte_end":264256,"line_start":277,"line_end":277,"column_start":38,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":264377,"byte_end":264397,"line_start":283,"line_end":283,"column_start":27,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/export_section.rs","byte_start":265579,"byte_end":265598,"line_start":34,"line_end":34,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/export_section.rs","byte_start":266784,"byte_end":266803,"line_start":73,"line_end":73,"column_start":28,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/export_section.rs","byte_start":267198,"byte_end":267217,"line_start":89,"line_end":89,"column_start":38,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":867}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/export_section.rs","byte_start":267337,"byte_end":267356,"line_start":95,"line_end":95,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/function_section.rs","byte_start":268391,"byte_end":268412,"line_start":26,"line_end":26,"column_start":10,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/function_section.rs","byte_start":269427,"byte_end":269448,"line_start":59,"line_end":59,"column_start":28,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/function_section.rs","byte_start":269840,"byte_end":269861,"line_start":75,"line_end":75,"column_start":38,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":896}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/function_section.rs","byte_start":269983,"byte_end":270004,"line_start":81,"line_end":81,"column_start":27,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/global_section.rs","byte_start":271172,"byte_end":271191,"line_start":33,"line_end":33,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/global_section.rs","byte_start":272722,"byte_end":272741,"line_start":76,"line_end":76,"column_start":28,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/global_section.rs","byte_start":273136,"byte_end":273155,"line_start":92,"line_end":92,"column_start":38,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":928}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/global_section.rs","byte_start":273275,"byte_end":273294,"line_start":98,"line_end":98,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/import_section.rs","byte_start":274505,"byte_end":274524,"line_start":34,"line_end":34,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/import_section.rs","byte_start":275555,"byte_end":275574,"line_start":69,"line_end":69,"column_start":28,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/import_section.rs","byte_start":275969,"byte_end":275988,"line_start":85,"line_end":85,"column_start":38,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/import_section.rs","byte_start":276108,"byte_end":276127,"line_start":91,"line_end":91,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/init_expr.rs","byte_start":277086,"byte_end":277094,"line_start":24,"line_end":24,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":974}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/instance_section.rs","byte_start":277785,"byte_end":277806,"line_start":12,"line_end":12,"column_start":10,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/instance_section.rs","byte_start":278722,"byte_end":278743,"line_start":43,"line_end":43,"column_start":28,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/instance_section.rs","byte_start":279145,"byte_end":279166,"line_start":60,"line_end":60,"column_start":38,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/instance_section.rs","byte_start":279288,"byte_end":279309,"line_start":66,"line_end":66,"column_start":27,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/instance_section.rs","byte_start":279605,"byte_end":279613,"line_start":80,"line_end":80,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/instance_section.rs","byte_start":280596,"byte_end":280614,"line_start":119,"line_end":119,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1019},{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/instance_section.rs","byte_start":280969,"byte_end":280987,"line_start":132,"line_end":132,"column_start":28,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/instance_section.rs","byte_start":281392,"byte_end":281410,"line_start":149,"line_end":149,"column_start":38,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/instance_section.rs","byte_start":281504,"byte_end":281522,"line_start":155,"line_end":155,"column_start":27,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/linking_section.rs","byte_start":282564,"byte_end":282584,"line_start":26,"line_end":26,"column_start":10,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/linking_section.rs","byte_start":283171,"byte_end":283191,"line_start":49,"line_end":49,"column_start":28,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/linking_section.rs","byte_start":283589,"byte_end":283609,"line_start":65,"line_end":65,"column_start":38,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1065}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/linking_section.rs","byte_start":283730,"byte_end":283750,"line_start":71,"line_end":71,"column_start":27,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/memory_section.rs","byte_start":284801,"byte_end":284820,"line_start":27,"line_end":27,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/memory_section.rs","byte_start":285798,"byte_end":285817,"line_start":59,"line_end":59,"column_start":28,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/memory_section.rs","byte_start":286212,"byte_end":286231,"line_start":75,"line_end":75,"column_start":38,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/memory_section.rs","byte_start":286351,"byte_end":286370,"line_start":81,"line_end":81,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1100}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/module_code_section.rs","byte_start":286891,"byte_end":286914,"line_start":16,"line_end":16,"column_start":10,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/module_code_section.rs","byte_start":288239,"byte_end":288262,"line_start":56,"line_end":56,"column_start":28,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1127}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/module_code_section.rs","byte_start":288670,"byte_end":288693,"line_start":73,"line_end":73,"column_start":38,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/module_code_section.rs","byte_start":288817,"byte_end":288840,"line_start":79,"line_end":79,"column_start":27,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/module_code_section.rs","byte_start":289064,"byte_end":289074,"line_start":88,"line_end":88,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1138},{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/module_section.rs","byte_start":289520,"byte_end":289539,"line_start":11,"line_end":11,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1150},{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1153}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/module_section.rs","byte_start":290072,"byte_end":290091,"line_start":31,"line_end":31,"column_start":28,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/module_section.rs","byte_start":290480,"byte_end":290499,"line_start":48,"line_end":48,"column_start":38,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1163}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/module_section.rs","byte_start":290619,"byte_end":290638,"line_start":54,"line_end":54,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":291670,"byte_end":291680,"line_start":27,"line_end":27,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1181},{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":292049,"byte_end":292061,"line_start":46,"line_end":46,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1190},{"krate":0,"index":1191},{"krate":0,"index":1192},{"krate":0,"index":1193},{"krate":0,"index":1194}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":293026,"byte_end":293038,"line_start":86,"line_end":86,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1198},{"krate":0,"index":1200}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":293409,"byte_end":293426,"line_start":106,"line_end":106,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1203},{"krate":0,"index":1205}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":293751,"byte_end":293770,"line_start":124,"line_end":124,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1215}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":294754,"byte_end":294763,"line_start":161,"line_end":161,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1219},{"krate":0,"index":1221}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":295241,"byte_end":295258,"line_start":185,"line_end":185,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1227},{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1231}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":296778,"byte_end":296795,"line_start":230,"line_end":230,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1239}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":297184,"byte_end":297201,"line_start":246,"line_end":246,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/operators.rs","byte_start":298158,"byte_end":298173,"line_start":23,"line_end":23,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1253},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1260},{"krate":0,"index":1262}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/operators.rs","byte_start":299393,"byte_end":299408,"line_start":77,"line_end":77,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/operators.rs","byte_start":300530,"byte_end":300547,"line_start":113,"line_end":113,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1275},{"krate":0,"index":1276}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/operators.rs","byte_start":300944,"byte_end":300972,"line_start":131,"line_end":131,"column_start":23,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1283},{"krate":0,"index":1284}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":303057,"byte_end":303083,"line_start":31,"line_end":31,"column_start":10,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1299},{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1302}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":303738,"byte_end":303764,"line_start":58,"line_end":58,"column_start":27,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1308}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":304227,"byte_end":304255,"line_start":77,"line_end":77,"column_start":23,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1316},{"krate":0,"index":1317},{"krate":0,"index":1318}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":304878,"byte_end":304892,"line_start":102,"line_end":102,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":305313,"byte_end":305335,"line_start":119,"line_end":119,"column_start":10,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1332}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":307324,"byte_end":307346,"line_start":168,"line_end":168,"column_start":28,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1340}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":307755,"byte_end":307777,"line_start":184,"line_end":184,"column_start":38,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1343}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":307900,"byte_end":307922,"line_start":190,"line_end":190,"column_start":27,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1346},{"krate":0,"index":1347},{"krate":0,"index":1348}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/reloc_section.rs","byte_start":309156,"byte_end":309174,"line_start":35,"line_end":35,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1370},{"krate":0,"index":1371}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/reloc_section.rs","byte_start":310705,"byte_end":310723,"line_start":89,"line_end":89,"column_start":28,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1378}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/reloc_section.rs","byte_start":311111,"byte_end":311129,"line_start":105,"line_end":105,"column_start":38,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1381}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/reloc_section.rs","byte_start":311248,"byte_end":311266,"line_start":111,"line_end":111,"column_start":27,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1386}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/section_reader.rs","byte_start":312726,"byte_end":312741,"line_start":47,"line_end":47,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1407}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/section_reader.rs","byte_start":312902,"byte_end":312917,"line_start":56,"line_end":56,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1410},{"krate":0,"index":1411}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/section_reader.rs","byte_start":313366,"byte_end":313388,"line_start":81,"line_end":81,"column_start":9,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1419}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/section_reader.rs","byte_start":313679,"byte_end":313701,"line_start":95,"line_end":95,"column_start":22,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1424}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/table_section.rs","byte_start":315269,"byte_end":315287,"line_start":27,"line_end":27,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1439}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/table_section.rs","byte_start":316271,"byte_end":316289,"line_start":60,"line_end":60,"column_start":28,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1442},{"krate":0,"index":1443},{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1446}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/table_section.rs","byte_start":316681,"byte_end":316699,"line_start":76,"line_end":76,"column_start":38,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1449}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/table_section.rs","byte_start":316818,"byte_end":316836,"line_start":82,"line_end":82,"column_start":27,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1452},{"krate":0,"index":1453},{"krate":0,"index":1454}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/type_section.rs","byte_start":317897,"byte_end":317914,"line_start":27,"line_end":27,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1470}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/type_section.rs","byte_start":319310,"byte_end":319327,"line_start":69,"line_end":69,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1473},{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1477}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/type_section.rs","byte_start":319719,"byte_end":319736,"line_start":85,"line_end":85,"column_start":38,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1480}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/type_section.rs","byte_start":319854,"byte_end":319871,"line_start":91,"line_end":91,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1483},{"krate":0,"index":1484},{"krate":0,"index":1485}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator/func.rs","byte_start":394407,"byte_end":394420,"line_start":21,"line_end":21,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1558},{"krate":0,"index":1560}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator/func.rs","byte_start":395641,"byte_end":395652,"line_start":56,"line_end":56,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1562},{"krate":0,"index":1563},{"krate":0,"index":1564},{"krate":0,"index":1565},{"krate":0,"index":1566},{"krate":0,"index":1568},{"krate":0,"index":1570},{"krate":0,"index":1571},{"krate":0,"index":1573},{"krate":0,"index":1574},{"krate":0,"index":1575},{"krate":0,"index":1576},{"krate":0,"index":1577}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator/func.rs","byte_start":396961,"byte_end":396968,"line_start":103,"line_end":103,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1579},{"krate":0,"index":1580}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":329605,"byte_end":329617,"line_start":222,"line_end":222,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1583}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":330365,"byte_end":330370,"line_start":260,"line_end":260,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1585}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":332032,"byte_end":332041,"line_start":325,"line_end":325,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1630},{"krate":0,"index":1631},{"krate":0,"index":1632},{"krate":0,"index":1633},{"krate":0,"index":1634},{"krate":0,"index":1635},{"krate":0,"index":1636},{"krate":0,"index":1637},{"krate":0,"index":1638},{"krate":0,"index":1639},{"krate":0,"index":1640},{"krate":0,"index":1643},{"krate":0,"index":1646},{"krate":0,"index":1647},{"krate":0,"index":1648},{"krate":0,"index":1649},{"krate":0,"index":1651},{"krate":0,"index":1653},{"krate":0,"index":1655},{"krate":0,"index":1657},{"krate":0,"index":1659},{"krate":0,"index":1661},{"krate":0,"index":1663},{"krate":0,"index":1665},{"krate":0,"index":1667},{"krate":0,"index":1669},{"krate":0,"index":1671},{"krate":0,"index":1674},{"krate":0,"index":1676},{"krate":0,"index":1681},{"krate":0,"index":1682},{"krate":0,"index":1683},{"krate":0,"index":1684},{"krate":0,"index":1685},{"krate":0,"index":1686},{"krate":0,"index":1687},{"krate":0,"index":1689},{"krate":0,"index":1690},{"krate":0,"index":1692},{"krate":0,"index":1695},{"krate":0,"index":1697},{"krate":0,"index":1699},{"krate":0,"index":1703},{"krate":0,"index":1717},{"krate":0,"index":1721},{"krate":0,"index":1723},{"krate":0,"index":1724},{"krate":0,"index":1726},{"krate":0,"index":1728},{"krate":0,"index":1730},{"krate":0,"index":1731},{"krate":0,"index":1733},{"krate":0,"index":1734},{"krate":0,"index":1737},{"krate":0,"index":1738},{"krate":0,"index":1739},{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1746},{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":1750},{"krate":0,"index":1751},{"krate":0,"index":1754},{"krate":0,"index":1756},{"krate":0,"index":1757}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":390640,"byte_end":390651,"line_start":1738,"line_end":1738,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1759},{"krate":0,"index":1761},{"krate":0,"index":1765},{"krate":0,"index":1768},{"krate":0,"index":1771},{"krate":0,"index":1774},{"krate":0,"index":1777},{"krate":0,"index":1780},{"krate":0,"index":1783}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":392346,"byte_end":392349,"line_start":1799,"line_end":1799,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1788},{"krate":0,"index":1791}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":392792,"byte_end":392802,"line_start":1824,"line_end":1824,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1802},{"krate":0,"index":1803},{"krate":0,"index":1804}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":393322,"byte_end":393332,"line_start":1843,"line_end":1843,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1807}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":393522,"byte_end":393532,"line_start":1852,"line_end":1852,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1810},{"krate":0,"index":1811}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":4815,"byte_end":4820,"line_start":60,"line_end":60,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1820},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":5460,"byte_end":5472,"line_start":84,"line_end":84,"column_start":10,"column_end":22},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1850},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":66718,"byte_end":66725,"line_start":1768,"line_end":1768,"column_start":10,"column_end":17},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2349},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/binary_reader.rs","byte_start":68844,"byte_end":68859,"line_start":1840,"line_end":1840,"column_start":23,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1861},"to":{"krate":2,"index":4984}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":71534,"byte_end":71543,"line_start":22,"line_end":22,"column_start":21,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1648},"to":{"krate":0,"index":200}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":71559,"byte_end":71568,"line_start":22,"line_end":22,"column_start":46,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":1648},"to":{"krate":0,"index":200}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":71571,"byte_end":71573,"line_start":22,"line_end":22,"column_start":58,"column_end":60},"kind":"SuperTrait","from":{"krate":2,"index":1653},"to":{"krate":0,"index":200}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":73147,"byte_end":73165,"line_start":76,"line_end":76,"column_start":16,"column_end":34},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":73431,"byte_end":73449,"line_start":90,"line_end":90,"column_start":29,"column_end":47},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":211},"to":{"krate":2,"index":4984}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":74059,"byte_end":74077,"line_start":115,"line_end":115,"column_start":40,"column_end":58},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":211},"to":{"krate":2,"index":4916}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":74564,"byte_end":74582,"line_start":134,"line_end":134,"column_start":38,"column_end":56},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":211},"to":{"krate":2,"index":4939}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":75089,"byte_end":75108,"line_start":158,"line_end":158,"column_start":16,"column_end":35},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":75375,"byte_end":75394,"line_start":172,"line_end":172,"column_start":29,"column_end":48},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":240},"to":{"krate":2,"index":4984}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":76005,"byte_end":76024,"line_start":197,"line_end":197,"column_start":40,"column_end":59},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":240},"to":{"krate":2,"index":4916}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":76512,"byte_end":76531,"line_start":216,"line_end":216,"column_start":38,"column_end":57},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":240},"to":{"krate":2,"index":4939}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":81356,"byte_end":81360,"line_start":357,"line_end":357,"column_start":26,"column_end":30},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2067},"to":{"krate":0,"index":200}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":81457,"byte_end":81464,"line_start":363,"line_end":363,"column_start":26,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2139},"to":{"krate":0,"index":202}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":81686,"byte_end":81694,"line_start":374,"line_end":374,"column_start":30,"column_end":38},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2156},"to":{"krate":0,"index":205}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":82104,"byte_end":82114,"line_start":394,"line_end":394,"column_start":32,"column_end":42},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2247},"to":{"krate":0,"index":286}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":82320,"byte_end":82329,"line_start":406,"line_end":406,"column_start":31,"column_end":40},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2217},"to":{"krate":0,"index":277}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/module_resources.rs","byte_start":82625,"byte_end":82635,"line_start":422,"line_end":422,"column_start":32,"column_end":42},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2232},"to":{"krate":0,"index":282}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/operators_validator.rs","byte_start":84296,"byte_end":84306,"line_start":41,"line_end":41,"column_start":6,"column_end":16},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/operators_validator.rs","byte_start":84558,"byte_end":84567,"line_start":55,"line_end":55,"column_start":6,"column_end":15},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1880},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/operators_validator.rs","byte_start":94008,"byte_end":94030,"line_start":299,"line_end":299,"column_start":6,"column_end":28},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/operators_validator.rs","byte_start":96446,"byte_end":96463,"line_start":376,"line_end":376,"column_start":6,"column_end":23},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1916},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":177879,"byte_end":177885,"line_start":244,"line_end":244,"column_start":6,"column_end":12},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1921},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":204970,"byte_end":204976,"line_start":876,"line_end":876,"column_start":18,"column_end":24},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1921},"to":{"krate":2,"index":1910}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/parser.rs","byte_start":205060,"byte_end":205067,"line_start":882,"line_end":882,"column_start":21,"column_end":28},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":470},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":222161,"byte_end":222178,"line_start":37,"line_end":37,"column_start":16,"column_end":33},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1955},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":222205,"byte_end":222222,"line_start":39,"line_end":39,"column_start":23,"column_end":40},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1955},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":222422,"byte_end":222439,"line_start":49,"line_end":49,"column_start":6,"column_end":23},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1955},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":227648,"byte_end":227654,"line_start":276,"line_end":276,"column_start":6,"column_end":12},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":2359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":227947,"byte_end":227953,"line_start":289,"line_end":289,"column_start":6,"column_end":12},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":2377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/primitives.rs","byte_start":228106,"byte_end":228110,"line_start":298,"line_end":298,"column_start":6,"column_end":10},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":2395},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/alias_section.rs","byte_start":242512,"byte_end":242530,"line_start":25,"line_end":25,"column_start":10,"column_end":28},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":3325},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/alias_section.rs","byte_start":243575,"byte_end":243593,"line_start":58,"line_end":58,"column_start":28,"column_end":46},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":3325},"to":{"krate":0,"index":1392}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/alias_section.rs","byte_start":243982,"byte_end":244000,"line_start":75,"line_end":75,"column_start":38,"column_end":56},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":3325},"to":{"krate":0,"index":1399}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/alias_section.rs","byte_start":244119,"byte_end":244137,"line_start":81,"line_end":81,"column_start":27,"column_end":45},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":3325},"to":{"krate":2,"index":4894}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":245196,"byte_end":245208,"line_start":27,"line_end":27,"column_start":10,"column_end":22},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":3346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":246555,"byte_end":246567,"line_start":80,"line_end":80,"column_start":10,"column_end":22},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":247034,"byte_end":247046,"line_start":101,"line_end":101,"column_start":27,"column_end":39},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":691},"to":{"krate":2,"index":4894}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":247441,"byte_end":247455,"line_start":120,"line_end":120,"column_start":23,"column_end":37},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":709},"to":{"krate":2,"index":4984}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":247902,"byte_end":247919,"line_start":137,"line_end":137,"column_start":10,"column_end":27},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":700},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":249864,"byte_end":249881,"line_start":194,"line_end":194,"column_start":28,"column_end":45},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":700},"to":{"krate":0,"index":1392}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":250278,"byte_end":250295,"line_start":210,"line_end":210,"column_start":38,"column_end":55},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":700},"to":{"krate":0,"index":1399}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/code_section.rs","byte_start":250413,"byte_end":250430,"line_start":216,"line_end":216,"column_start":27,"column_end":44},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":700},"to":{"krate":2,"index":4894}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/data_section.rs","byte_start":252375,"byte_end":252392,"line_start":42,"line_end":42,"column_start":10,"column_end":27},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":3380},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/data_section.rs","byte_start":255262,"byte_end":255279,"line_start":123,"line_end":123,"column_start":28,"column_end":45},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":3380},"to":{"krate":0,"index":1392}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/data_section.rs","byte_start":255668,"byte_end":255685,"line_start":139,"line_end":139,"column_start":38,"column_end":55},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":3380},"to":{"krate":0,"index":1399}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/data_section.rs","byte_start":255803,"byte_end":255820,"line_start":145,"line_end":145,"column_start":27,"column_end":44},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":3380},"to":{"krate":2,"index":4894}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":257295,"byte_end":257307,"line_start":52,"line_end":52,"column_start":10,"column_end":22},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":3407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":257607,"byte_end":257625,"line_start":67,"line_end":67,"column_start":10,"column_end":28},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":793},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":258957,"byte_end":258975,"line_start":109,"line_end":109,"column_start":27,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":793},"to":{"krate":2,"index":4894}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":259394,"byte_end":259414,"line_start":128,"line_end":128,"column_start":23,"column_end":43},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":810},"to":{"krate":2,"index":4984}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":259965,"byte_end":259985,"line_start":151,"line_end":151,"column_start":10,"column_end":30},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":3429},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":263818,"byte_end":263838,"line_start":261,"line_end":261,"column_start":28,"column_end":48},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":3429},"to":{"krate":0,"index":1392}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":264236,"byte_end":264256,"line_start":277,"line_end":277,"column_start":38,"column_end":58},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":3429},"to":{"krate":0,"index":1399}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/element_section.rs","byte_start":264377,"byte_end":264397,"line_start":283,"line_end":283,"column_start":27,"column_end":47},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":3429},"to":{"krate":2,"index":4894}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/export_section.rs","byte_start":265579,"byte_end":265598,"line_start":34,"line_end":34,"column_start":10,"column_end":29},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":3449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/export_section.rs","byte_start":266784,"byte_end":266803,"line_start":73,"line_end":73,"column_start":28,"column_end":47},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":3449},"to":{"krate":0,"index":1392}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/export_section.rs","byte_start":267198,"byte_end":267217,"line_start":89,"line_end":89,"column_start":38,"column_end":57},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":3449},"to":{"krate":0,"index":1399}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/export_section.rs","byte_start":267337,"byte_end":267356,"line_start":95,"line_end":95,"column_start":27,"column_end":46},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":3449},"to":{"krate":2,"index":4894}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/function_section.rs","byte_start":268391,"byte_end":268412,"line_start":26,"line_end":26,"column_start":10,"column_end":31},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":3456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/function_section.rs","byte_start":269427,"byte_end":269448,"line_start":59,"line_end":59,"column_start":28,"column_end":49},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":3456},"to":{"krate":0,"index":1392}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/function_section.rs","byte_start":269840,"byte_end":269861,"line_start":75,"line_end":75,"column_start":38,"column_end":59},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":3456},"to":{"krate":0,"index":1399}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/function_section.rs","byte_start":269983,"byte_end":270004,"line_start":81,"line_end":81,"column_start":27,"column_end":48},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":3456},"to":{"krate":2,"index":4894}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/global_section.rs","byte_start":271172,"byte_end":271191,"line_start":33,"line_end":33,"column_start":10,"column_end":29},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":3475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/global_section.rs","byte_start":272722,"byte_end":272741,"line_start":76,"line_end":76,"column_start":28,"column_end":47},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":3475},"to":{"krate":0,"index":1392}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/global_section.rs","byte_start":273136,"byte_end":273155,"line_start":92,"line_end":92,"column_start":38,"column_end":57},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":3475},"to":{"krate":0,"index":1399}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/global_section.rs","byte_start":273275,"byte_end":273294,"line_start":98,"line_end":98,"column_start":27,"column_end":46},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":3475},"to":{"krate":2,"index":4894}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/import_section.rs","byte_start":274505,"byte_end":274524,"line_start":34,"line_end":34,"column_start":10,"column_end":29},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":3495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/import_section.rs","byte_start":275555,"byte_end":275574,"line_start":69,"line_end":69,"column_start":28,"column_end":47},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":3495},"to":{"krate":0,"index":1392}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/import_section.rs","byte_start":275969,"byte_end":275988,"line_start":85,"line_end":85,"column_start":38,"column_end":57},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":3495},"to":{"krate":0,"index":1399}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/import_section.rs","byte_start":276108,"byte_end":276127,"line_start":91,"line_end":91,"column_start":27,"column_end":46},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":3495},"to":{"krate":2,"index":4894}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/init_expr.rs","byte_start":277086,"byte_end":277094,"line_start":24,"line_end":24,"column_start":10,"column_end":18},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":3502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/instance_section.rs","byte_start":277785,"byte_end":277806,"line_start":12,"line_end":12,"column_start":10,"column_end":31},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":3514},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/instance_section.rs","byte_start":278722,"byte_end":278743,"line_start":43,"line_end":43,"column_start":28,"column_end":49},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":3514},"to":{"krate":0,"index":1392}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/instance_section.rs","byte_start":279145,"byte_end":279166,"line_start":60,"line_end":60,"column_start":38,"column_end":59},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":3514},"to":{"krate":0,"index":1399}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/instance_section.rs","byte_start":279288,"byte_end":279309,"line_start":66,"line_end":66,"column_start":27,"column_end":48},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":3514},"to":{"krate":2,"index":4894}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/instance_section.rs","byte_start":279605,"byte_end":279613,"line_start":80,"line_end":80,"column_start":10,"column_end":18},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1007},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/instance_section.rs","byte_start":280596,"byte_end":280614,"line_start":119,"line_end":119,"column_start":10,"column_end":28},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":3521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/instance_section.rs","byte_start":280969,"byte_end":280987,"line_start":132,"line_end":132,"column_start":28,"column_end":46},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":3521},"to":{"krate":0,"index":1392}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/instance_section.rs","byte_start":281392,"byte_end":281410,"line_start":149,"line_end":149,"column_start":38,"column_end":56},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":3521},"to":{"krate":0,"index":1399}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/instance_section.rs","byte_start":281504,"byte_end":281522,"line_start":155,"line_end":155,"column_start":27,"column_end":45},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":3521},"to":{"krate":2,"index":4894}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/linking_section.rs","byte_start":282564,"byte_end":282584,"line_start":26,"line_end":26,"column_start":10,"column_end":30},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1045},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/linking_section.rs","byte_start":283171,"byte_end":283191,"line_start":49,"line_end":49,"column_start":28,"column_end":48},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1045},"to":{"krate":0,"index":1392}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/linking_section.rs","byte_start":283589,"byte_end":283609,"line_start":65,"line_end":65,"column_start":38,"column_end":58},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1045},"to":{"krate":0,"index":1399}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/linking_section.rs","byte_start":283730,"byte_end":283750,"line_start":71,"line_end":71,"column_start":27,"column_end":47},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":4894}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/memory_section.rs","byte_start":284801,"byte_end":284820,"line_start":27,"line_end":27,"column_start":10,"column_end":29},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":3529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/memory_section.rs","byte_start":285798,"byte_end":285817,"line_start":59,"line_end":59,"column_start":28,"column_end":47},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":3529},"to":{"krate":0,"index":1392}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/memory_section.rs","byte_start":286212,"byte_end":286231,"line_start":75,"line_end":75,"column_start":38,"column_end":57},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":3529},"to":{"krate":0,"index":1399}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/memory_section.rs","byte_start":286351,"byte_end":286370,"line_start":81,"line_end":81,"column_start":27,"column_end":46},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":3529},"to":{"krate":2,"index":4894}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/module_code_section.rs","byte_start":286891,"byte_end":286914,"line_start":16,"line_end":16,"column_start":10,"column_end":33},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/module_code_section.rs","byte_start":288239,"byte_end":288262,"line_start":56,"line_end":56,"column_start":28,"column_end":51},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1110},"to":{"krate":0,"index":1392}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/module_code_section.rs","byte_start":288670,"byte_end":288693,"line_start":73,"line_end":73,"column_start":38,"column_end":61},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1110},"to":{"krate":0,"index":1399}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/module_code_section.rs","byte_start":288817,"byte_end":288840,"line_start":79,"line_end":79,"column_start":27,"column_end":50},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1110},"to":{"krate":2,"index":4894}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/module_code_section.rs","byte_start":289064,"byte_end":289074,"line_start":88,"line_end":88,"column_start":10,"column_end":20},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":3536},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/module_section.rs","byte_start":289520,"byte_end":289539,"line_start":11,"line_end":11,"column_start":10,"column_end":29},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":3542},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/module_section.rs","byte_start":290072,"byte_end":290091,"line_start":31,"line_end":31,"column_start":28,"column_end":47},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":3542},"to":{"krate":0,"index":1392}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/module_section.rs","byte_start":290480,"byte_end":290499,"line_start":48,"line_end":48,"column_start":38,"column_end":57},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":3542},"to":{"krate":0,"index":1399}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/module_section.rs","byte_start":290619,"byte_end":290638,"line_start":54,"line_end":54,"column_start":27,"column_end":46},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3542},"to":{"krate":2,"index":4894}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":291670,"byte_end":291680,"line_start":27,"line_end":27,"column_start":10,"column_end":20},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":3549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":292049,"byte_end":292061,"line_start":46,"line_end":46,"column_start":10,"column_end":22},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":293026,"byte_end":293038,"line_start":86,"line_end":86,"column_start":10,"column_end":22},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":3561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":293409,"byte_end":293426,"line_start":106,"line_end":106,"column_start":10,"column_end":27},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":3573},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":293751,"byte_end":293770,"line_start":124,"line_end":124,"column_start":10,"column_end":29},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":294754,"byte_end":294763,"line_start":161,"line_end":161,"column_start":10,"column_end":19},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":3586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":295241,"byte_end":295258,"line_start":185,"line_end":185,"column_start":10,"column_end":27},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":296778,"byte_end":296795,"line_start":230,"line_end":230,"column_start":28,"column_end":45},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1222},"to":{"krate":0,"index":1392}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/name_section.rs","byte_start":297184,"byte_end":297201,"line_start":246,"line_end":246,"column_start":27,"column_end":44},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1222},"to":{"krate":2,"index":4894}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/operators.rs","byte_start":298158,"byte_end":298173,"line_start":23,"line_end":23,"column_start":10,"column_end":25},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":3617},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/operators.rs","byte_start":299393,"byte_end":299408,"line_start":77,"line_end":77,"column_start":27,"column_end":42},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":3617},"to":{"krate":2,"index":4894}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/operators.rs","byte_start":300530,"byte_end":300547,"line_start":113,"line_end":113,"column_start":23,"column_end":40},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1269},"to":{"krate":2,"index":4984}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/operators.rs","byte_start":300944,"byte_end":300972,"line_start":131,"line_end":131,"column_start":23,"column_end":51},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1277},"to":{"krate":2,"index":4984}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":303057,"byte_end":303083,"line_start":31,"line_end":31,"column_start":10,"column_end":36},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":303738,"byte_end":303764,"line_start":58,"line_end":58,"column_start":27,"column_end":53},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1293},"to":{"krate":2,"index":4894}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":304227,"byte_end":304255,"line_start":77,"line_end":77,"column_start":23,"column_end":51},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1309},"to":{"krate":2,"index":4984}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":304878,"byte_end":304892,"line_start":102,"line_end":102,"column_start":10,"column_end":24},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":3635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":305313,"byte_end":305335,"line_start":119,"line_end":119,"column_start":10,"column_end":32},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":307324,"byte_end":307346,"line_start":168,"line_end":168,"column_start":28,"column_end":50},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1323},"to":{"krate":0,"index":1392}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":307755,"byte_end":307777,"line_start":184,"line_end":184,"column_start":38,"column_end":60},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1323},"to":{"krate":0,"index":1399}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/producers_section.rs","byte_start":307900,"byte_end":307922,"line_start":190,"line_end":190,"column_start":27,"column_end":49},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1323},"to":{"krate":2,"index":4894}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/reloc_section.rs","byte_start":309156,"byte_end":309174,"line_start":35,"line_end":35,"column_start":10,"column_end":28},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/reloc_section.rs","byte_start":310705,"byte_end":310723,"line_start":89,"line_end":89,"column_start":28,"column_end":46},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1359},"to":{"krate":0,"index":1392}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/reloc_section.rs","byte_start":311111,"byte_end":311129,"line_start":105,"line_end":105,"column_start":38,"column_end":56},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1359},"to":{"krate":0,"index":1399}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/reloc_section.rs","byte_start":311248,"byte_end":311266,"line_start":111,"line_end":111,"column_start":27,"column_end":45},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1359},"to":{"krate":2,"index":4894}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/section_reader.rs","byte_start":312726,"byte_end":312741,"line_start":47,"line_end":47,"column_start":9,"column_end":24},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1401},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/section_reader.rs","byte_start":312902,"byte_end":312917,"line_start":56,"line_end":56,"column_start":22,"column_end":37},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1401},"to":{"krate":2,"index":4984}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/section_reader.rs","byte_start":313366,"byte_end":313388,"line_start":81,"line_end":81,"column_start":9,"column_end":31},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/section_reader.rs","byte_start":313679,"byte_end":313701,"line_start":95,"line_end":95,"column_start":22,"column_end":44},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1412},"to":{"krate":2,"index":4984}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/table_section.rs","byte_start":315269,"byte_end":315287,"line_start":27,"line_end":27,"column_start":10,"column_end":28},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":3659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/table_section.rs","byte_start":316271,"byte_end":316289,"line_start":60,"line_end":60,"column_start":28,"column_end":46},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":3659},"to":{"krate":0,"index":1392}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/table_section.rs","byte_start":316681,"byte_end":316699,"line_start":76,"line_end":76,"column_start":38,"column_end":56},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":3659},"to":{"krate":0,"index":1399}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/table_section.rs","byte_start":316818,"byte_end":316836,"line_start":82,"line_end":82,"column_start":27,"column_end":45},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":3659},"to":{"krate":2,"index":4894}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/type_section.rs","byte_start":317897,"byte_end":317914,"line_start":27,"line_end":27,"column_start":10,"column_end":27},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":3666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/type_section.rs","byte_start":319310,"byte_end":319327,"line_start":69,"line_end":69,"column_start":28,"column_end":45},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":3666},"to":{"krate":0,"index":1392}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/type_section.rs","byte_start":319719,"byte_end":319736,"line_start":85,"line_end":85,"column_start":38,"column_end":55},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":3666},"to":{"krate":0,"index":1399}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/readers/type_section.rs","byte_start":319854,"byte_end":319871,"line_start":91,"line_end":91,"column_start":27,"column_end":44},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":3666},"to":{"krate":2,"index":4894}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator/func.rs","byte_start":394407,"byte_end":394420,"line_start":21,"line_end":21,"column_start":6,"column_end":19},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1552},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator/func.rs","byte_start":395641,"byte_end":395652,"line_start":56,"line_end":56,"column_start":30,"column_end":41},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":3688},"to":{"krate":0,"index":290}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator/func.rs","byte_start":396961,"byte_end":396968,"line_start":103,"line_end":103,"column_start":29,"column_end":36},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1598},"to":{"krate":0,"index":202}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":329605,"byte_end":329617,"line_start":222,"line_end":222,"column_start":18,"column_end":30},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":3703},"to":{"krate":2,"index":1910}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":330365,"byte_end":330370,"line_start":260,"line_end":260,"column_start":18,"column_end":23},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":3714},"to":{"krate":2,"index":1910}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":332032,"byte_end":332041,"line_start":325,"line_end":325,"column_start":6,"column_end":15},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":3673},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":390640,"byte_end":390651,"line_start":1738,"line_end":1738,"column_start":6,"column_end":17},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3688},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":392346,"byte_end":392349,"line_start":1799,"line_end":1799,"column_start":9,"column_end":12},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":3762},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":392792,"byte_end":392802,"line_start":1824,"line_end":1824,"column_start":13,"column_end":23},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1796},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":393322,"byte_end":393332,"line_start":1843,"line_end":1843,"column_start":34,"column_end":44},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1796},"to":{"krate":2,"index":1910}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.59.0/src/validator.rs","byte_start":393522,"byte_end":393532,"line_start":1852,"line_end":1852,"column_start":23,"column_end":33},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1796},"to":{"krate":2,"index":2093}}]}