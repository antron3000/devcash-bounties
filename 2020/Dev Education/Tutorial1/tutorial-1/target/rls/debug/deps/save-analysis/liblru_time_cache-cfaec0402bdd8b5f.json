{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0","program":"/home/alansky/.rustup/toolchains/nightly-2020-07-02-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","lru_time_cache","--edition=2018","/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=cfaec0402bdd8b5f","-C","extra-filename=-cfaec0402bdd8b5f","--out-dir","/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps","-L","dependency=/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/alansky/.rustup/toolchains/nightly-2020-07-02-x86_64-unknown-linux-gnu"],"output":"/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps/liblru_time_cache-cfaec0402bdd8b5f.rmeta"},"prelude":{"crate_id":{"name":"lru_time_cache","disambiguator":[3970391821496486699,10067510474109937121]},"crate_root":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src","external_crates":[{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15171822389981698586,9596930288317159773]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[309489290393175025,9116230521283433112]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4391997853131671271,2752570053062459009]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[680011651820151502,5018330578075825921]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4249137077638888796,17834651879708154657]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[13082819734751436340,16140962863799451331]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8371738565553744270,17943531712744420027]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17468180561489458258,7285327718060701271]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[14551538593801126895,13478667531910088620]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[16022708609364593127,529027819734980321]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[18024135037275500963,3187671833432925572]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5194268306266264186,14551347693776345482]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[18097577876301876973,855323625195415836]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[5106557709654100294,13294098602154984522]}}],"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":507,"byte_end":31058,"line_start":10,"line_end":982,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":16},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":2968,"byte_end":2972,"line_start":95,"line_end":95,"column_start":23,"column_end":27},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":48},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":2974,"byte_end":2984,"line_start":95,"line_end":95,"column_start":29,"column_end":39},"alias_span":null,"name":"NotifyIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":67},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":2986,"byte_end":2994,"line_start":95,"line_end":95,"column_start":41,"column_end":49},"alias_span":null,"name":"PeekIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":36},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":2996,"byte_end":3006,"line_start":95,"line_end":95,"column_start":51,"column_end":61},"alias_span":null,"name":"TimedEntry","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":507,"byte_end":31058,"line_start":10,"line_end":982,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":102},{"krate":0,"index":108},{"krate":0,"index":112},{"krate":0,"index":119},{"krate":0,"index":176},{"krate":0,"index":180},{"krate":0,"index":185},{"krate":0,"index":189}],"decl_id":null,"docs":" # Least Recently Used (LRU) Cache","sig":null,"attributes":[{"value":"! # Least Recently Used (LRU) Cache","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":507,"byte_end":544,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":545,"byte_end":548,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! Implementation of a Least Recently Used","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":549,"byte_end":592,"line_start":12,"line_end":12,"column_start":1,"column_end":44}},{"value":"! [caching algorithm](http://en.wikipedia.org/wiki/Cache_algorithms) in a container which may be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":593,"byte_end":691,"line_start":13,"line_end":13,"column_start":1,"column_end":99}},{"value":"! limited by size or time, ordered by most recently seen.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":692,"byte_end":751,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":752,"byte_end":755,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":756,"byte_end":770,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":771,"byte_end":774,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":775,"byte_end":782,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"! extern crate lru_time_cache;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":783,"byte_end":815,"line_start":19,"line_end":19,"column_start":1,"column_end":33}},{"value":"! use lru_time_cache::LruCache;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":816,"byte_end":849,"line_start":20,"line_end":20,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":850,"byte_end":853,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! # fn main() {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":854,"byte_end":871,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"! // Construct an `LruCache` of `<u8, String>`s, limited by key count","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":872,"byte_end":943,"line_start":23,"line_end":23,"column_start":1,"column_end":72}},{"value":"! let max_count = 10;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":944,"byte_end":967,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"! let _lru_cache = LruCache::<u8, String>::with_capacity(max_count);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":968,"byte_end":1038,"line_start":25,"line_end":25,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":1039,"byte_end":1042,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! // Construct an `LruCache` of `<String, i64>`s, limited by expiry time","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":1043,"byte_end":1117,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"! let time_to_live = ::std::time::Duration::from_millis(100);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":1118,"byte_end":1181,"line_start":28,"line_end":28,"column_start":1,"column_end":64}},{"value":"! let _lru_cache = LruCache::<String, i64>::with_expiry_duration(time_to_live);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":1182,"byte_end":1263,"line_start":29,"line_end":29,"column_start":1,"column_end":82}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":1264,"byte_end":1267,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! // Construct an `LruCache` of `<u64, Vec<u8>>`s, limited by key count and expiry time","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":1268,"byte_end":1357,"line_start":31,"line_end":31,"column_start":1,"column_end":90}},{"value":"! let _lru_cache = LruCache::<u64, Vec<u8>>::with_expiry_duration_and_capacity(time_to_live,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":1358,"byte_end":1452,"line_start":32,"line_end":32,"column_start":1,"column_end":95}},{"value":"!                                                                              max_count);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":1453,"byte_end":1545,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"! # }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":1546,"byte_end":1553,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":1554,"byte_end":1561,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"forbid(bad_style, exceeding_bitshifts, mutable_transmutes,\n         no_mangle_const_items, unknown_crate_types, warnings)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":1917,"byte_end":2059,"line_start":44,"line_end":51,"column_start":1,"column_end":3}},{"value":"deny(deprecated, improper_ctypes, missing_docs,\n       non_shorthand_field_patterns, overflowing_literals, stable_features,\n       unconditional_recursion, unknown_lints, unsafe_code, unused,\n       unused_allocation, unused_attributes, unused_comparisons,\n       unused_features, unused_parens, while_true)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":2060,"byte_end":2409,"line_start":52,"line_end":69,"column_start":1,"column_end":3}},{"value":"warn(trivial_casts, trivial_numeric_casts, unused_extern_crates,\n       unused_import_braces, unused_qualifications, unused_results)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":2410,"byte_end":2565,"line_start":70,"line_end":77,"column_start":1,"column_end":3}},{"value":"allow(box_pointers, missing_copy_implementations,\n        missing_debug_implementations, variant_size_differences)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":2566,"byte_end":2694,"line_start":78,"line_end":83,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":16},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/iter.rs","byte_start":31963,"byte_end":31967,"line_start":21,"line_end":21,"column_start":12,"column_end":16},"name":"Iter","qualname":"::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23}],"decl_id":null,"docs":" An iterator over an `LruCache`'s entries that updates the timestamps as values are traversed.\n Values are produced in the most recently used order.\n","sig":null,"attributes":[{"value":"/ An iterator over an `LruCache`'s entries that updates the timestamps as values are traversed.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/iter.rs","byte_start":31797,"byte_end":31894,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"/ Values are produced in the most recently used order.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/iter.rs","byte_start":31895,"byte_end":31951,"line_start":20,"line_end":20,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/iter.rs","byte_start":32400,"byte_end":32403,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<Iter>::new","value":"pub fn new(&'a mut BTreeMap<Key, (Value, Instant)>, &'a mut VecDeque<Key>,\n           Option<Duration>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":40},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/iter.rs","byte_start":34328,"byte_end":34333,"line_start":99,"line_end":99,"column_start":5,"column_end":10},"name":"Valid","qualname":"::iter::TimedEntry::Valid","value":"TimedEntry::Valid(&'a Key, &'a Value)","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" Entry has not yet expired.\n","sig":null,"attributes":[{"value":"/ Entry has not yet expired.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/iter.rs","byte_start":34293,"byte_end":34323,"line_start":98,"line_end":98,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":44},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/iter.rs","byte_start":34417,"byte_end":34424,"line_start":101,"line_end":101,"column_start":5,"column_end":12},"name":"Expired","qualname":"::iter::TimedEntry::Expired","value":"TimedEntry::Expired(Key, Value)","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" Entry got expired and was evicted from the cache.\n","sig":null,"attributes":[{"value":"/ Entry got expired and was evicted from the cache.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/iter.rs","byte_start":34359,"byte_end":34412,"line_start":100,"line_end":100,"column_start":5,"column_end":58}}]},{"kind":"Enum","id":{"krate":0,"index":36},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/iter.rs","byte_start":34252,"byte_end":34262,"line_start":97,"line_end":97,"column_start":10,"column_end":20},"name":"TimedEntry","qualname":"::iter::TimedEntry","value":"pub enum TimedEntry<'a, Key: 'a, Value: 'a> {\n\n    /// Entry has not yet expired.\n    Valid(&'a Key, &'a Value),\n\n    /// Entry got expired and was evicted from the cache.\n    Expired(Key, Value),\n}","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":44}],"decl_id":null,"docs":" Entry produced by `NotifyIter` that might be still valid or expired.\n","sig":null,"attributes":[{"value":"/ Entry produced by `NotifyIter` that might be still valid or expired.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/iter.rs","byte_start":34170,"byte_end":34242,"line_start":96,"line_end":96,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":48},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/iter.rs","byte_start":34547,"byte_end":34557,"line_start":105,"line_end":105,"column_start":12,"column_end":22},"name":"NotifyIter","qualname":"::iter::NotifyIter","value":"NotifyIter {  }","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55}],"decl_id":null,"docs":" Much like `Iter` except will produce expired entries too where `Iter` silently drops them.\n","sig":null,"attributes":[{"value":"/ Much like `Iter` except will produce expired entries too where `Iter` silently drops them.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/iter.rs","byte_start":34441,"byte_end":34535,"line_start":104,"line_end":104,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/iter.rs","byte_start":35004,"byte_end":35007,"line_start":120,"line_end":120,"column_start":12,"column_end":15},"name":"new","qualname":"<NotifyIter>::new","value":"pub fn new(&'a mut BTreeMap<Key, (Value, Instant)>, &'a mut VecDeque<Key>,\n           Option<Duration>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":67},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/iter.rs","byte_start":36496,"byte_end":36504,"line_start":169,"line_end":169,"column_start":12,"column_end":20},"name":"PeekIter","qualname":"::iter::PeekIter","value":"PeekIter {  }","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74}],"decl_id":null,"docs":" An iterator over an `LruCache`'s entries that does not modify the timestamp.\n","sig":null,"attributes":[{"value":"/ An iterator over an `LruCache`'s entries that does not modify the timestamp.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/iter.rs","byte_start":36404,"byte_end":36484,"line_start":168,"line_end":168,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/iter.rs","byte_start":36933,"byte_end":36936,"line_start":184,"line_end":184,"column_start":12,"column_end":15},"name":"new","qualname":"<PeekIter>::new","value":"pub fn new(&'a BTreeMap<Key, (Value, Instant)>, &'a VecDeque<Key>,\n           Option<Duration>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":96},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":3166,"byte_end":3172,"line_start":100,"line_end":100,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":" A vacant Entry\n","sig":null,"attributes":[{"value":"/ A vacant Entry","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":3143,"byte_end":3161,"line_start":99,"line_end":99,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":99},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":3233,"byte_end":3241,"line_start":102,"line_end":102,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":" An occupied Entry\n","sig":null,"attributes":[{"value":"/ An occupied Entry","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":3207,"byte_end":3228,"line_start":101,"line_end":101,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":92},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":3107,"byte_end":3112,"line_start":98,"line_end":98,"column_start":10,"column_end":15},"name":"Entry","qualname":"::Entry","value":"pub enum Entry<'a, Key: 'a, Value: 'a> {\n\n    /// A vacant Entry\n    Vacant(VacantEntry),\n\n    /// An occupied Entry\n    Occupied(OccupiedEntry),\n}","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":99}],"decl_id":null,"docs":" A view into a single entry in an LRU cache, which may either be vacant or occupied.\n","sig":null,"attributes":[{"value":"/ A view into a single entry in an LRU cache, which may either be vacant or occupied.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":3010,"byte_end":3097,"line_start":97,"line_end":97,"column_start":1,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":102},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":3303,"byte_end":3314,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107}],"decl_id":null,"docs":" A vacant Entry.\n","sig":null,"attributes":[{"value":"/ A vacant Entry.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":3272,"byte_end":3291,"line_start":105,"line_end":105,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":108},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":3425,"byte_end":3438,"line_start":112,"line_end":112,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":111}],"decl_id":null,"docs":" An occupied Entry.\n","sig":null,"attributes":[{"value":"/ An occupied Entry.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":3391,"byte_end":3413,"line_start":111,"line_end":111,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":112},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":3569,"byte_end":3577,"line_start":117,"line_end":117,"column_start":12,"column_end":20},"name":"LruCache","qualname":"::LruCache","value":"LruCache {  }","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118}],"decl_id":null,"docs":" Implementation of [LRU cache](index.html#least-recently-used-lru-cache).\n","sig":null,"attributes":[{"value":"/ Implementation of [LRU cache](index.html#least-recently-used-lru-cache).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":3481,"byte_end":3557,"line_start":116,"line_end":116,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":3849,"byte_end":3862,"line_start":129,"line_end":129,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<LruCache<Key, Value>>::with_capacity","value":"pub fn with_capacity(usize) -> LruCache<Key, Value>","parent":null,"children":[],"decl_id":null,"docs":" Constructor for capacity based `LruCache`.\n","sig":null,"attributes":[{"value":"/ Constructor for capacity based `LruCache`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":3791,"byte_end":3837,"line_start":128,"line_end":128,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":4141,"byte_end":4161,"line_start":139,"line_end":139,"column_start":12,"column_end":32},"name":"with_expiry_duration","qualname":"<LruCache<Key, Value>>::with_expiry_duration","value":"pub fn with_expiry_duration(Duration) -> LruCache<Key, Value>","parent":null,"children":[],"decl_id":null,"docs":" Constructor for time based `LruCache`.\n","sig":null,"attributes":[{"value":"/ Constructor for time based `LruCache`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":4087,"byte_end":4129,"line_start":138,"line_end":138,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":4481,"byte_end":4514,"line_start":149,"line_end":149,"column_start":12,"column_end":45},"name":"with_expiry_duration_and_capacity","qualname":"<LruCache<Key, Value>>::with_expiry_duration_and_capacity","value":"pub fn with_expiry_duration_and_capacity(Duration, usize)\n-> LruCache<Key, Value>","parent":null,"children":[],"decl_id":null,"docs":" Constructor for dual-feature capacity and time based `LruCache`.\n","sig":null,"attributes":[{"value":"/ Constructor for dual-feature capacity and time based `LruCache`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":4401,"byte_end":4469,"line_start":148,"line_end":148,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":5093,"byte_end":5106,"line_start":166,"line_end":166,"column_start":12,"column_end":25},"name":"notify_insert","qualname":"<LruCache<Key, Value>>::notify_insert","value":"pub fn notify_insert(&mut Self, Key, Value)\n-> (Option<Value>, Vec<(Key, Value)>)","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the cache.","sig":null,"attributes":[{"value":"/ Inserts a key-value pair into the cache.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":4800,"byte_end":4844,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":4849,"byte_end":4852,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ If the key already existed in the cache, the existing value is returned and overwritten in","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":4857,"byte_end":4951,"line_start":163,"line_end":163,"column_start":5,"column_end":99}},{"value":"/ the cache.  Otherwise, the key-value pair is inserted and `None` is returned.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":4956,"byte_end":5037,"line_start":164,"line_end":164,"column_start":5,"column_end":86}},{"value":"/ Evicts and returns expired entries.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":5042,"byte_end":5081,"line_start":165,"line_end":165,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":5523,"byte_end":5529,"line_start":175,"line_end":175,"column_start":12,"column_end":18},"name":"insert","qualname":"<LruCache<Key, Value>>::insert","value":"pub fn insert(&mut Self, Key, Value) -> Option<Value>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the cache.","sig":null,"attributes":[{"value":"/ Inserts a key-value pair into the cache.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":5274,"byte_end":5318,"line_start":171,"line_end":171,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":5323,"byte_end":5326,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ If the key already existed in the cache, the existing value is returned and overwritten in","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":5331,"byte_end":5425,"line_start":173,"line_end":173,"column_start":5,"column_end":99}},{"value":"/ the cache.  Otherwise, the key-value pair is inserted and `None` is returned.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":5430,"byte_end":5511,"line_start":174,"line_end":174,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":5692,"byte_end":5698,"line_start":180,"line_end":180,"column_start":12,"column_end":18},"name":"remove","qualname":"<LruCache<Key, Value>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> Option<Value> where Key: Borrow<Q>,\nQ: Ord","parent":null,"children":[],"decl_id":null,"docs":" Removes a key-value pair from the cache.\n","sig":null,"attributes":[{"value":"/ Removes a key-value pair from the cache.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":5636,"byte_end":5680,"line_start":179,"line_end":179,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":6117,"byte_end":6122,"line_start":196,"line_end":196,"column_start":12,"column_end":17},"name":"clear","qualname":"<LruCache<Key, Value>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the `LruCache`, removing all values.\n","sig":null,"attributes":[{"value":"/ Clears the `LruCache`, removing all values.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":6058,"byte_end":6105,"line_start":195,"line_end":195,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":6278,"byte_end":6288,"line_start":202,"line_end":202,"column_start":12,"column_end":22},"name":"notify_get","qualname":"<LruCache<Key, Value>>::notify_get","value":"pub fn notify_get<Q: ?Sized>(&mut Self, &Q)\n-> (Option<&Value>, Vec<(Key, Value)>) where Key: Borrow<Q>, Q: Ord","parent":null,"children":[],"decl_id":null,"docs":" Much like `get()`, except in addition returns expired entries.\n","sig":null,"attributes":[{"value":"/ Much like `get()`, except in addition returns expired entries.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":6200,"byte_end":6266,"line_start":201,"line_end":201,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":6687,"byte_end":6690,"line_start":213,"line_end":213,"column_start":12,"column_end":15},"name":"get","qualname":"<LruCache<Key, Value>>::get","value":"pub fn get<Q: ?Sized>(&mut Self, &Q) -> Option<&Value> where Key: Borrow<Q>,\nQ: Ord","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a reference to the value stored under `key`, or `None` if the key doesn't exist.\n Also removes expired elements and updates the time.\n","sig":null,"attributes":[{"value":"/ Retrieves a reference to the value stored under `key`, or `None` if the key doesn't exist.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":6521,"byte_end":6615,"line_start":211,"line_end":211,"column_start":5,"column_end":99}},{"value":"/ Also removes expired elements and updates the time.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":6620,"byte_end":6675,"line_start":212,"line_end":212,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":6984,"byte_end":6988,"line_start":223,"line_end":223,"column_start":12,"column_end":16},"name":"peek","qualname":"<LruCache<Key, Value>>::peek","value":"pub fn peek<Q: ?Sized>(&Self, &Q) -> Option<&Value> where Key: Borrow<Q>,\nQ: Ord","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value with the given `key`, if present and not expired, without\n updating the timestamp.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the value with the given `key`, if present and not expired, without","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":6846,"byte_end":6940,"line_start":221,"line_end":221,"column_start":5,"column_end":99}},{"value":"/ updating the timestamp.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":6945,"byte_end":6972,"line_start":222,"line_end":222,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":7317,"byte_end":7331,"line_start":233,"line_end":233,"column_start":12,"column_end":26},"name":"notify_get_mut","qualname":"<LruCache<Key, Value>>::notify_get_mut","value":"pub fn notify_get_mut<Q: ?Sized>(&mut Self, &Q)\n-> (Option<&mut Value>, Vec<(Key, Value)>) where Key: Borrow<Q>, Q: Ord","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a mutable reference to the value stored under `key`, or `None` if the key doesn't\n exist. Also removes expired elements and updates the time.\n","sig":null,"attributes":[{"value":"/ Retrieves a mutable reference to the value stored under `key`, or `None` if the key doesn't","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":7143,"byte_end":7238,"line_start":231,"line_end":231,"column_start":5,"column_end":100}},{"value":"/ exist. Also removes expired elements and updates the time.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":7243,"byte_end":7305,"line_start":232,"line_end":232,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":7723,"byte_end":7730,"line_start":244,"line_end":244,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<LruCache<Key, Value>>::get_mut","value":"pub fn get_mut<Q: ?Sized>(&mut Self, &Q) -> Option<&mut Value> where\nKey: Borrow<Q>, Q: Ord","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a mutable reference to the value stored under `key`, or `None` if the key doesn't\n exist.  Also removes expired elements and updates the time.\n","sig":null,"attributes":[{"value":"/ Retrieves a mutable reference to the value stored under `key`, or `None` if the key doesn't","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":7548,"byte_end":7643,"line_start":242,"line_end":242,"column_start":5,"column_end":100}},{"value":"/ exist.  Also removes expired elements and updates the time.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":7648,"byte_end":7711,"line_start":243,"line_end":243,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":7951,"byte_end":7963,"line_start":253,"line_end":253,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<LruCache<Key, Value>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where Key: Borrow<Q>, Q: Ord","parent":null,"children":[],"decl_id":null,"docs":" Returns whether `key` exists in the cache or not.\n","sig":null,"attributes":[{"value":"/ Returns whether `key` exists in the cache or not.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":7886,"byte_end":7939,"line_start":252,"line_end":252,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":8200,"byte_end":8203,"line_start":262,"line_end":262,"column_start":12,"column_end":15},"name":"len","qualname":"<LruCache<Key, Value>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the cache, i.e. the number of cached non-expired key-value pairs.\n","sig":null,"attributes":[{"value":"/ Returns the size of the cache, i.e. the number of cached non-expired key-value pairs.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":8099,"byte_end":8188,"line_start":261,"line_end":261,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":8899,"byte_end":8907,"line_start":278,"line_end":278,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<LruCache<Key, Value>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there are no non-expired entries in the cache.\n","sig":null,"attributes":[{"value":"/ Returns `true` if there are no non-expired entries in the cache.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":8819,"byte_end":8887,"line_start":277,"line_end":277,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":9290,"byte_end":9295,"line_start":289,"line_end":289,"column_start":12,"column_end":17},"name":"entry","qualname":"<LruCache<Key, Value>>::entry","value":"pub fn entry(&mut Self, Key) -> Entry<, Key, Value>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given key's corresponding entry in the map for in-place manipulation.\n","sig":null,"attributes":[{"value":"/ Gets the given key's corresponding entry in the map for in-place manipulation.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":9196,"byte_end":9278,"line_start":288,"line_end":288,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":10281,"byte_end":10292,"line_start":311,"line_end":311,"column_start":12,"column_end":23},"name":"notify_iter","qualname":"<LruCache<Key, Value>>::notify_iter","value":"pub fn notify_iter(&mut Self) -> NotifyIter<, Key, Value>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all entries that updates the timestamps as values are\n traversed. Also removes expired elements before creating the iterator.\n Values are produced in the most recently used order.","sig":null,"attributes":[{"value":"/ Returns an iterator over all entries that updates the timestamps as values are","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":9989,"byte_end":10071,"line_start":306,"line_end":306,"column_start":5,"column_end":87}},{"value":"/ traversed. Also removes expired elements before creating the iterator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":10076,"byte_end":10150,"line_start":307,"line_end":307,"column_start":5,"column_end":79}},{"value":"/ Values are produced in the most recently used order.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":10155,"byte_end":10211,"line_start":308,"line_end":308,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":10216,"byte_end":10219,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ Also, evicts and returns expired entries.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":10224,"byte_end":10269,"line_start":310,"line_end":310,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":10655,"byte_end":10659,"line_start":318,"line_end":318,"column_start":12,"column_end":16},"name":"iter","qualname":"<LruCache<Key, Value>>::iter","value":"pub fn iter(&mut Self) -> Iter<, Key, Value>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all entries that updates the timestamps as values are\n traversed. Also removes expired elements before creating the iterator.\n Values are produced in the most recently used order.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over all entries that updates the timestamps as values are","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":10421,"byte_end":10503,"line_start":315,"line_end":315,"column_start":5,"column_end":87}},{"value":"/ traversed. Also removes expired elements before creating the iterator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":10508,"byte_end":10582,"line_start":316,"line_end":316,"column_start":5,"column_end":79}},{"value":"/ Values are produced in the most recently used order.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":10587,"byte_end":10643,"line_start":317,"line_end":317,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":10918,"byte_end":10927,"line_start":324,"line_end":324,"column_start":12,"column_end":21},"name":"peek_iter","qualname":"<LruCache<Key, Value>>::peek_iter","value":"pub fn peek_iter(&Self) -> PeekIter<, Key, Value>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all entries that does not modify the timestamps.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over all entries that does not modify the timestamps.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":10829,"byte_end":10906,"line_start":323,"line_end":323,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":14295,"byte_end":14301,"line_start":446,"line_end":446,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, Value) -> &'a mut Value","parent":null,"children":[],"decl_id":null,"docs":" Inserts a value\n","sig":null,"attributes":[{"value":"/ Inserts a value","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":14264,"byte_end":14283,"line_start":445,"line_end":445,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":14697,"byte_end":14705,"line_start":458,"line_end":458,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut Value","parent":null,"children":[],"decl_id":null,"docs":" Converts the entry into a mutable reference to its value.\n","sig":null,"attributes":[{"value":"/ Converts the entry into a mutable reference to its value.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":14624,"byte_end":14685,"line_start":457,"line_end":457,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":14970,"byte_end":14979,"line_start":466,"line_end":466,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, Value) -> &'a mut Value","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty, and returns","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":14821,"byte_end":14903,"line_start":464,"line_end":464,"column_start":5,"column_end":87}},{"value":"/ a mutable reference to the value in the entry.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":14908,"byte_end":14958,"line_start":465,"line_end":465,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":15350,"byte_end":15364,"line_start":475,"line_end":475,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F: FnOnce() -> Value>(Self, F) -> &'a mut Value","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty,\n and returns a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default function if empty,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":15178,"byte_end":15271,"line_start":473,"line_end":473,"column_start":5,"column_end":98}},{"value":"/ and returns a mutable reference to the value in the entry.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":15276,"byte_end":15338,"line_start":474,"line_end":474,"column_start":5,"column_end":67}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/iter.rs","byte_start":32327,"byte_end":32331,"line_start":31,"line_end":31,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/iter.rs","byte_start":33428,"byte_end":33432,"line_start":71,"line_end":71,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/iter.rs","byte_start":34917,"byte_end":34927,"line_start":115,"line_end":115,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/iter.rs","byte_start":35348,"byte_end":35358,"line_start":135,"line_end":135,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/iter.rs","byte_start":36856,"byte_end":36864,"line_start":179,"line_end":179,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/iter.rs","byte_start":37789,"byte_end":37797,"line_start":215,"line_end":215,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":3736,"byte_end":3744,"line_start":124,"line_end":124,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":147},{"krate":0,"index":152},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":169},{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":13895,"byte_end":13903,"line_start":429,"line_end":429,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":14230,"byte_end":14241,"line_start":444,"line_end":444,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":14593,"byte_end":14606,"line_start":456,"line_end":456,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":14793,"byte_end":14798,"line_start":463,"line_end":463,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/iter.rs","byte_start":32327,"byte_end":32331,"line_start":31,"line_end":31,"column_start":22,"column_end":26},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":16},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/iter.rs","byte_start":33428,"byte_end":33432,"line_start":71,"line_end":71,"column_start":35,"column_end":39},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":16},"to":{"krate":2,"index":4984}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/iter.rs","byte_start":34917,"byte_end":34927,"line_start":115,"line_end":115,"column_start":22,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":48},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/iter.rs","byte_start":35348,"byte_end":35358,"line_start":135,"line_end":135,"column_start":35,"column_end":45},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":48},"to":{"krate":2,"index":4984}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/iter.rs","byte_start":36856,"byte_end":36864,"line_start":179,"line_end":179,"column_start":22,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":67},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/iter.rs","byte_start":37789,"byte_end":37797,"line_start":215,"line_end":215,"column_start":35,"column_end":43},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":67},"to":{"krate":2,"index":4984}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":3736,"byte_end":3744,"line_start":124,"line_end":124,"column_start":18,"column_end":26},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":13895,"byte_end":13903,"line_start":429,"line_end":429,"column_start":28,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":112},"to":{"krate":2,"index":1620}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":14230,"byte_end":14241,"line_start":444,"line_end":444,"column_start":35,"column_end":46},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":14593,"byte_end":14606,"line_start":456,"line_end":456,"column_start":17,"column_end":30},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/lru_time_cache-0.10.0/src/lib.rs","byte_start":14793,"byte_end":14798,"line_start":463,"line_end":463,"column_start":35,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":92},"to":{"krate":4294967295,"index":4294967295}}]}