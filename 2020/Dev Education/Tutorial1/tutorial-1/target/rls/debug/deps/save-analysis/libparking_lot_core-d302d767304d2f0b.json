{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0","program":"/home/alansky/.rustup/toolchains/nightly-2020-07-02-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","parking_lot_core","--edition=2018","/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=d302d767304d2f0b","-C","extra-filename=-d302d767304d2f0b","--out-dir","/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps","-L","dependency=/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps","--extern","cfg_if=/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps/libcfg_if-4cb4e0a215a79e72.rmeta","--extern","instant=/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps/libinstant-f698ed181084b775.rmeta","--extern","libc=/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps/liblibc-1ba5d5d7d5664c6d.rmeta","--extern","smallvec=/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps/libsmallvec-c6a45bab8cba3f95.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/alansky/.rustup/toolchains/nightly-2020-07-02-x86_64-unknown-linux-gnu"],"output":"/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps/libparking_lot_core-d302d767304d2f0b.rmeta"},"prelude":{"crate_id":{"name":"parking_lot_core","disambiguator":[1400078830077226834,15282075481525816810]},"crate_root":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src","external_crates":[{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15171822389981698586,9596930288317159773]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","num":2,"id":{"name":"core","disambiguator":[309489290393175025,9116230521283433112]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4391997853131671271,2752570053062459009]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[680011651820151502,5018330578075825921]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4249137077638888796,17834651879708154657]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[13082819734751436340,16140962863799451331]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8371738565553744270,17943531712744420027]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17468180561489458258,7285327718060701271]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[14551538593801126895,13478667531910088620]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[16022708609364593127,529027819734980321]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[18024135037275500963,3187671833432925572]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5194268306266264186,14551347693776345482]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[18097577876301876973,855323625195415836]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[5106557709654100294,13294098602154984522]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","num":15,"id":{"name":"cfg_if","disambiguator":[7714184797746965624,2556834864094820256]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","num":16,"id":{"name":"instant","disambiguator":[16741967445135636976,875177525138491656]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","num":17,"id":{"name":"smallvec","disambiguator":[10542451656544325124,11196187688015791765]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/thread_parker/linux.rs","num":18,"id":{"name":"libc","disambiguator":[17564936745718570749,17069914869687619034]}}],"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":333,"byte_end":2761,"line_start":8,"line_end":71,"column_start":1,"column_end":34}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":91},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":2450,"byte_end":2458,"line_start":65,"line_end":65,"column_start":28,"column_end":36},"alias_span":null,"name":"deadlock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":75},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":2488,"byte_end":2492,"line_start":66,"line_end":66,"column_start":29,"column_end":33},"alias_span":null,"name":"park","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":82},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":2494,"byte_end":2504,"line_start":66,"line_end":66,"column_start":35,"column_end":45},"alias_span":null,"name":"unpark_all","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":87},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":2506,"byte_end":2519,"line_start":66,"line_end":66,"column_start":47,"column_end":60},"alias_span":null,"name":"unpark_filter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":80},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":2521,"byte_end":2531,"line_start":66,"line_end":66,"column_start":62,"column_end":72},"alias_span":null,"name":"unpark_one","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":84},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":2533,"byte_end":2547,"line_start":66,"line_end":66,"column_start":74,"column_end":88},"alias_span":null,"name":"unpark_requeue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":262},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":2583,"byte_end":2591,"line_start":68,"line_end":68,"column_start":5,"column_end":13},"alias_span":null,"name":"FilterOp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":200},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":2593,"byte_end":2603,"line_start":68,"line_end":68,"column_start":15,"column_end":25},"alias_span":null,"name":"ParkResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":295},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":2605,"byte_end":2614,"line_start":68,"line_end":68,"column_start":27,"column_end":36},"alias_span":null,"name":"ParkToken","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":296},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":2605,"byte_end":2614,"line_start":68,"line_end":68,"column_start":27,"column_end":36},"alias_span":null,"name":"ParkToken","value":"","parent":{"krate":0,"index":187}},{"kind":"Use","ref_id":{"krate":0,"index":240},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":2616,"byte_end":2625,"line_start":68,"line_end":68,"column_start":38,"column_end":47},"alias_span":null,"name":"RequeueOp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":220},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":2627,"byte_end":2639,"line_start":68,"line_end":68,"column_start":49,"column_end":61},"alias_span":null,"name":"UnparkResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":280},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":2641,"byte_end":2652,"line_start":68,"line_end":68,"column_start":63,"column_end":74},"alias_span":null,"name":"UnparkToken","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":281},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":2641,"byte_end":2652,"line_start":68,"line_end":68,"column_start":63,"column_end":74},"alias_span":null,"name":"UnparkToken","value":"","parent":{"krate":0,"index":190}},{"kind":"Use","ref_id":{"krate":0,"index":74},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":2685,"byte_end":2703,"line_start":70,"line_end":70,"column_start":29,"column_end":47},"alias_span":null,"name":"DEFAULT_PARK_TOKEN","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":73},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":2705,"byte_end":2725,"line_start":70,"line_end":70,"column_start":49,"column_end":69},"alias_span":null,"name":"DEFAULT_UNPARK_TOKEN","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":310},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":2752,"byte_end":2760,"line_start":71,"line_end":71,"column_start":25,"column_end":33},"alias_span":null,"name":"SpinWait","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":333,"byte_end":2761,"line_start":8,"line_end":71,"column_start":1,"column_end":34},"name":"","qualname":"::","value":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":95},{"krate":0,"index":104},{"krate":0,"index":122},{"krate":0,"index":130},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":440},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":446},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194}],"decl_id":null,"docs":" This library exposes a low-level API for creating your own efficient\n synchronization primitives.","sig":null,"attributes":[{"value":"! This library exposes a low-level API for creating your own efficient","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":333,"byte_end":405,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"! synchronization primitives.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":406,"byte_end":437,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":438,"byte_end":441,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! # The parking lot","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":442,"byte_end":463,"line_start":11,"line_end":11,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":464,"byte_end":467,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! To keep synchronization primitives small, all thread queuing and suspending","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":468,"byte_end":547,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"! functionality is offloaded to the *parking lot*. The idea behind this is based","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":548,"byte_end":630,"line_start":14,"line_end":14,"column_start":1,"column_end":83}},{"value":"! on the Webkit [`WTF::ParkingLot`](https://webkit.org/blog/6161/locking-in-webkit/)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":631,"byte_end":717,"line_start":15,"line_end":15,"column_start":1,"column_end":87}},{"value":"! class, which essentially consists of a hash table mapping of lock addresses","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":718,"byte_end":797,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"! to queues of parked (sleeping) threads. The Webkit parking lot was itself","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":798,"byte_end":875,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"! inspired by Linux [futexes](http://man7.org/linux/man-pages/man2/futex.2.html),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":876,"byte_end":959,"line_start":18,"line_end":18,"column_start":1,"column_end":84}},{"value":"! but it is more powerful since it allows invoking callbacks while holding a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":960,"byte_end":1038,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"! queue lock.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":1039,"byte_end":1054,"line_start":20,"line_end":20,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":1055,"byte_end":1058,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! There are two main operations that can be performed on the parking lot:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":1059,"byte_end":1134,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":1135,"byte_end":1138,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"!  - *Parking* refers to suspending the thread while simultaneously enqueuing it","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":1139,"byte_end":1221,"line_start":24,"line_end":24,"column_start":1,"column_end":83}},{"value":"! on a queue keyed by some address.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":1222,"byte_end":1259,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"! - *Unparking* refers to dequeuing a thread from a queue keyed by some address","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":1260,"byte_end":1341,"line_start":26,"line_end":26,"column_start":1,"column_end":82}},{"value":"! and resuming it.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":1342,"byte_end":1362,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":1363,"byte_end":1366,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! See the documentation of the individual functions for more details.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":1367,"byte_end":1438,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":1439,"byte_end":1442,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! # Building custom synchronization primitives","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":1443,"byte_end":1491,"line_start":31,"line_end":31,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":1492,"byte_end":1495,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! Building custom synchronization primitives is very simple since the parking","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":1496,"byte_end":1575,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"! lot takes care of all the hard parts for you. A simple example for a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":1576,"byte_end":1648,"line_start":34,"line_end":34,"column_start":1,"column_end":73}},{"value":"! custom primitive would be to integrate a `Mutex` inside another data type.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":1649,"byte_end":1727,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"! Since a mutex only requires 2 bits, it can share space with other data.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":1728,"byte_end":1803,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"! For example, one could create an `ArcMutex` type that combines the atomic","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":1804,"byte_end":1881,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"! reference count and the two mutex bits in the same atomic word.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":1882,"byte_end":1949,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"warn(missing_docs)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":1951,"byte_end":1973,"line_start":40,"line_end":40,"column_start":1,"column_end":23}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/lib.rs","byte_start":1974,"byte_end":2000,"line_start":41,"line_end":41,"column_start":1,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":201},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":19513,"byte_end":19521,"line_start":490,"line_end":490,"column_start":5,"column_end":13},"name":"Unparked","qualname":"::parking_lot::ParkResult::Unparked","value":"ParkResult::Unparked(UnparkToken)","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":" We were unparked by another thread with the given token.\n","sig":null,"attributes":[{"value":"/ We were unparked by another thread with the given token.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":19448,"byte_end":19508,"line_start":489,"line_end":489,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":204},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":19589,"byte_end":19596,"line_start":493,"line_end":493,"column_start":5,"column_end":12},"name":"Invalid","qualname":"::parking_lot::ParkResult::Invalid","value":"ParkResult::Invalid","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":" The validation callback returned false.\n","sig":null,"attributes":[{"value":"/ The validation callback returned false.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":19541,"byte_end":19584,"line_start":492,"line_end":492,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":206},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":19632,"byte_end":19640,"line_start":496,"line_end":496,"column_start":5,"column_end":13},"name":"TimedOut","qualname":"::parking_lot::ParkResult::TimedOut","value":"ParkResult::TimedOut","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":" The timeout expired.\n","sig":null,"attributes":[{"value":"/ The timeout expired.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":19603,"byte_end":19627,"line_start":495,"line_end":495,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":200},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":19431,"byte_end":19441,"line_start":488,"line_end":488,"column_start":10,"column_end":20},"name":"ParkResult","qualname":"::parking_lot::ParkResult","value":"pub enum ParkResult {\n\n    /// We were unparked by another thread with the given token.\n    Unparked(UnparkToken),\n\n    /// The validation callback returned false.\n    Invalid,\n\n    /// The timeout expired.\n    TimedOut,\n}","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":206}],"decl_id":null,"docs":" Result of a park operation.\n","sig":null,"attributes":[{"value":"/ Result of a park operation.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":19345,"byte_end":19376,"line_start":486,"line_end":486,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":19748,"byte_end":19759,"line_start":502,"line_end":502,"column_start":12,"column_end":23},"name":"is_unparked","qualname":"<ParkResult>::is_unparked","value":"pub fn is_unparked(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if we were unparked by another thread.\n","sig":null,"attributes":[{"value":"/ Returns true if we were unparked by another thread.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":19667,"byte_end":19722,"line_start":500,"line_end":500,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":19727,"byte_end":19736,"line_start":501,"line_end":501,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":220},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":19995,"byte_end":20007,"line_start":513,"line_end":513,"column_start":12,"column_end":24},"name":"UnparkResult","qualname":"::parking_lot::UnparkResult","value":"UnparkResult { unparked_threads, requeued_threads, have_more_threads, be_fair }","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225}],"decl_id":null,"docs":" Result of an unpark operation.\n","sig":null,"attributes":[{"value":"/ Result of an unpark operation.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":19895,"byte_end":19929,"line_start":511,"line_end":511,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":221},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":20068,"byte_end":20084,"line_start":515,"line_end":515,"column_start":9,"column_end":25},"name":"unparked_threads","qualname":"::parking_lot::UnparkResult::unparked_threads","value":"usize","parent":{"krate":0,"index":220},"children":[],"decl_id":null,"docs":" The number of threads that were unparked.\n","sig":null,"attributes":[{"value":"/ The number of threads that were unparked.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":20014,"byte_end":20059,"line_start":514,"line_end":514,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":222},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":20152,"byte_end":20168,"line_start":518,"line_end":518,"column_start":9,"column_end":25},"name":"requeued_threads","qualname":"::parking_lot::UnparkResult::requeued_threads","value":"usize","parent":{"krate":0,"index":220},"children":[],"decl_id":null,"docs":" The number of threads that were requeued.\n","sig":null,"attributes":[{"value":"/ The number of threads that were requeued.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":20098,"byte_end":20143,"line_start":517,"line_end":517,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":223},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":20305,"byte_end":20322,"line_start":522,"line_end":522,"column_start":9,"column_end":26},"name":"have_more_threads","qualname":"::parking_lot::UnparkResult::have_more_threads","value":"bool","parent":{"krate":0,"index":220},"children":[],"decl_id":null,"docs":" Whether there are any threads remaining in the queue. This only returns\n true if a thread was unparked.\n","sig":null,"attributes":[{"value":"/ Whether there are any threads remaining in the queue. This only returns","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":20182,"byte_end":20257,"line_start":520,"line_end":520,"column_start":5,"column_end":80}},{"value":"/ true if a thread was unparked.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":20262,"byte_end":20296,"line_start":521,"line_end":521,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":224},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":20513,"byte_end":20520,"line_start":527,"line_end":527,"column_start":9,"column_end":16},"name":"be_fair","qualname":"::parking_lot::UnparkResult::be_fair","value":"bool","parent":{"krate":0,"index":220},"children":[],"decl_id":null,"docs":" This is set to true on average once every 0.5ms for any given key. It\n should be used to switch to a fair unlocking mechanism for a particular\n unlock.\n","sig":null,"attributes":[{"value":"/ This is set to true on average once every 0.5ms for any given key. It","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":20335,"byte_end":20408,"line_start":524,"line_end":524,"column_start":5,"column_end":78}},{"value":"/ should be used to switch to a fair unlocking mechanism for a particular","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":20413,"byte_end":20488,"line_start":525,"line_end":525,"column_start":5,"column_end":80}},{"value":"/ unlock.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":20493,"byte_end":20504,"line_start":526,"line_end":526,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":241},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":20790,"byte_end":20795,"line_start":537,"line_end":537,"column_start":5,"column_end":10},"name":"Abort","qualname":"::parking_lot::RequeueOp::Abort","value":"RequeueOp::Abort","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Abort the operation without doing anything.\n","sig":null,"attributes":[{"value":"/ Abort the operation without doing anything.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":20738,"byte_end":20785,"line_start":536,"line_end":536,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":243},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":20872,"byte_end":20892,"line_start":540,"line_end":540,"column_start":5,"column_end":25},"name":"UnparkOneRequeueRest","qualname":"::parking_lot::RequeueOp::UnparkOneRequeueRest","value":"RequeueOp::UnparkOneRequeueRest","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Unpark one thread and requeue the rest onto the target queue.\n","sig":null,"attributes":[{"value":"/ Unpark one thread and requeue the rest onto the target queue.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":20802,"byte_end":20867,"line_start":539,"line_end":539,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":245},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":20950,"byte_end":20960,"line_start":543,"line_end":543,"column_start":5,"column_end":15},"name":"RequeueAll","qualname":"::parking_lot::RequeueOp::RequeueAll","value":"RequeueOp::RequeueAll","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Requeue all threads onto the target queue.\n","sig":null,"attributes":[{"value":"/ Requeue all threads onto the target queue.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":20899,"byte_end":20945,"line_start":542,"line_end":542,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":247},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":21042,"byte_end":21051,"line_start":546,"line_end":546,"column_start":5,"column_end":14},"name":"UnparkOne","qualname":"::parking_lot::RequeueOp::UnparkOne","value":"RequeueOp::UnparkOne","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Unpark one thread and leave the rest parked. No requeuing is done.\n","sig":null,"attributes":[{"value":"/ Unpark one thread and leave the rest parked. No requeuing is done.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":20967,"byte_end":21037,"line_start":545,"line_end":545,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":249},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":21134,"byte_end":21144,"line_start":549,"line_end":549,"column_start":5,"column_end":15},"name":"RequeueOne","qualname":"::parking_lot::RequeueOp::RequeueOne","value":"RequeueOp::RequeueOne","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Requeue one thread and leave the rest parked on the original queue.\n","sig":null,"attributes":[{"value":"/ Requeue one thread and leave the rest parked on the original queue.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":21058,"byte_end":21129,"line_start":548,"line_end":548,"column_start":5,"column_end":76}}]},{"kind":"Enum","id":{"krate":0,"index":240},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":20722,"byte_end":20731,"line_start":535,"line_end":535,"column_start":10,"column_end":19},"name":"RequeueOp","qualname":"::parking_lot::RequeueOp","value":"pub enum RequeueOp {\n\n    /// Abort the operation without doing anything.\n    Abort,\n\n    /// Unpark one thread and requeue the rest onto the target queue.\n    UnparkOneRequeueRest,\n\n    /// Requeue all threads onto the target queue.\n    RequeueAll,\n\n    /// Unpark one thread and leave the rest parked. No requeuing is done.\n    UnparkOne,\n\n    /// Requeue one thread and leave the rest parked on the original queue.\n    RequeueOne,\n}","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":247},{"krate":0,"index":249}],"decl_id":null,"docs":" Operation that `unpark_requeue` should perform.\n","sig":null,"attributes":[{"value":"/ Operation that `unpark_requeue` should perform.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":20616,"byte_end":20667,"line_start":533,"line_end":533,"column_start":1,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":263},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":21361,"byte_end":21367,"line_start":556,"line_end":556,"column_start":5,"column_end":11},"name":"Unpark","qualname":"::parking_lot::FilterOp::Unpark","value":"FilterOp::Unpark","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Unpark the thread and continue scanning the list of parked threads.\n","sig":null,"attributes":[{"value":"/ Unpark the thread and continue scanning the list of parked threads.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":21285,"byte_end":21356,"line_start":555,"line_end":555,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":265},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":21456,"byte_end":21460,"line_start":559,"line_end":559,"column_start":5,"column_end":9},"name":"Skip","qualname":"::parking_lot::FilterOp::Skip","value":"FilterOp::Skip","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Don't unpark the thread and continue scanning the list of parked threads.\n","sig":null,"attributes":[{"value":"/ Don't unpark the thread and continue scanning the list of parked threads.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":21374,"byte_end":21451,"line_start":558,"line_end":558,"column_start":5,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":267},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":21545,"byte_end":21549,"line_start":562,"line_end":562,"column_start":5,"column_end":9},"name":"Stop","qualname":"::parking_lot::FilterOp::Stop","value":"FilterOp::Stop","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Don't unpark the thread and stop scanning the list of parked threads.\n","sig":null,"attributes":[{"value":"/ Don't unpark the thread and stop scanning the list of parked threads.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":21467,"byte_end":21540,"line_start":561,"line_end":561,"column_start":5,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":262},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":21270,"byte_end":21278,"line_start":554,"line_end":554,"column_start":10,"column_end":18},"name":"FilterOp","qualname":"::parking_lot::FilterOp","value":"pub enum FilterOp {\n\n    /// Unpark the thread and continue scanning the list of parked threads.\n    Unpark,\n\n    /// Don't unpark the thread and continue scanning the list of parked threads.\n    Skip,\n\n    /// Don't unpark the thread and stop scanning the list of parked threads.\n    Stop,\n}","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":265},{"krate":0,"index":267}],"decl_id":null,"docs":" Operation that `unpark_filter` should perform for each thread.\n","sig":null,"attributes":[{"value":"/ Operation that `unpark_filter` should perform for each thread.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":21149,"byte_end":21215,"line_start":552,"line_end":552,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":280},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":21675,"byte_end":21686,"line_start":567,"line_end":567,"column_start":12,"column_end":23},"name":"UnparkToken","qualname":"::parking_lot::UnparkToken","value":"","parent":null,"children":[],"decl_id":null,"docs":" A value which is passed from an unparker to a parked thread.\n","sig":null,"attributes":[{"value":"/ A value which is passed from an unparker to a parked thread.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":21554,"byte_end":21618,"line_start":565,"line_end":565,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":282},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":21687,"byte_end":21696,"line_start":567,"line_end":567,"column_start":24,"column_end":33},"name":"0","qualname":"::parking_lot::UnparkToken::0","value":"usize","parent":{"krate":0,"index":280},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":295},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":21838,"byte_end":21847,"line_start":571,"line_end":571,"column_start":12,"column_end":21},"name":"ParkToken","qualname":"::parking_lot::ParkToken","value":"","parent":null,"children":[],"decl_id":null,"docs":" A value associated with a parked thread which can be used by `unpark_filter`.\n","sig":null,"attributes":[{"value":"/ A value associated with a parked thread which can be used by `unpark_filter`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":21700,"byte_end":21781,"line_start":569,"line_end":569,"column_start":1,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":297},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":21848,"byte_end":21857,"line_start":571,"line_end":571,"column_start":22,"column_end":31},"name":"0","qualname":"::parking_lot::ParkToken::0","value":"usize","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":73},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":21906,"byte_end":21926,"line_start":574,"line_end":574,"column_start":11,"column_end":31},"name":"DEFAULT_UNPARK_TOKEN","qualname":"::parking_lot::DEFAULT_UNPARK_TOKEN","value":"UnparkToken","parent":null,"children":[],"decl_id":null,"docs":" A default unpark token to use.\n","sig":null,"attributes":[{"value":"/ A default unpark token to use.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":21861,"byte_end":21895,"line_start":573,"line_end":573,"column_start":1,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":74},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":22002,"byte_end":22020,"line_start":577,"line_end":577,"column_start":11,"column_end":29},"name":"DEFAULT_PARK_TOKEN","qualname":"::parking_lot::DEFAULT_PARK_TOKEN","value":"ParkToken","parent":null,"children":[],"decl_id":null,"docs":" A default park token to use.\n","sig":null,"attributes":[{"value":"/ A default park token to use.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":21959,"byte_end":21991,"line_start":576,"line_end":576,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":75},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":23488,"byte_end":23492,"line_start":608,"line_end":608,"column_start":15,"column_end":19},"name":"park","qualname":"::parking_lot::park","value":"pub unsafe fn park<impl FnOnce() -> bool: FnOnce() -> bool,\n                   impl FnOnce(): FnOnce() -> (),\n                   impl FnOnce(usize, bool): FnOnce(usize, bool) ->\n                   ()>(usize, impl FnOnce() -> bool, impl FnOnce(),\n                       impl FnOnce(usize, bool), ParkToken, Option<Instant>)\n-> ParkResult","parent":null,"children":[],"decl_id":null,"docs":" Parks the current thread in the queue associated with the given key.","sig":null,"attributes":[{"value":"/ Parks the current thread in the queue associated with the given key.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":22049,"byte_end":22121,"line_start":579,"line_end":579,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":22122,"byte_end":22125,"line_start":580,"line_end":580,"column_start":1,"column_end":4}},{"value":"/ The `validate` function is called while the queue is locked and can abort","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":22126,"byte_end":22203,"line_start":581,"line_end":581,"column_start":1,"column_end":78}},{"value":"/ the operation by returning false. If `validate` returns true then the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":22204,"byte_end":22277,"line_start":582,"line_end":582,"column_start":1,"column_end":74}},{"value":"/ current thread is appended to the queue and the queue is unlocked.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":22278,"byte_end":22348,"line_start":583,"line_end":583,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":22349,"byte_end":22352,"line_start":584,"line_end":584,"column_start":1,"column_end":4}},{"value":"/ The `before_sleep` function is called after the queue is unlocked but before","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":22353,"byte_end":22433,"line_start":585,"line_end":585,"column_start":1,"column_end":81}},{"value":"/ the thread is put to sleep. The thread will then sleep until it is unparked","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":22434,"byte_end":22513,"line_start":586,"line_end":586,"column_start":1,"column_end":80}},{"value":"/ or the given timeout is reached.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":22514,"byte_end":22550,"line_start":587,"line_end":587,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":22551,"byte_end":22554,"line_start":588,"line_end":588,"column_start":1,"column_end":4}},{"value":"/ The `timed_out` function is also called while the queue is locked, but only","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":22555,"byte_end":22634,"line_start":589,"line_end":589,"column_start":1,"column_end":80}},{"value":"/ if the timeout was reached. It is passed the key of the queue it was in when","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":22635,"byte_end":22715,"line_start":590,"line_end":590,"column_start":1,"column_end":81}},{"value":"/ it timed out, which may be different from the original key if","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":22716,"byte_end":22781,"line_start":591,"line_end":591,"column_start":1,"column_end":66}},{"value":"/ `unpark_requeue` was called. It is also passed a bool which indicates","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":22782,"byte_end":22855,"line_start":592,"line_end":592,"column_start":1,"column_end":74}},{"value":"/ whether it was the last thread in the queue.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":22856,"byte_end":22904,"line_start":593,"line_end":593,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":22905,"byte_end":22908,"line_start":594,"line_end":594,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":22909,"byte_end":22921,"line_start":595,"line_end":595,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":22922,"byte_end":22925,"line_start":596,"line_end":596,"column_start":1,"column_end":4}},{"value":"/ You should only call this function with an address that you control, since","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":22926,"byte_end":23004,"line_start":597,"line_end":597,"column_start":1,"column_end":79}},{"value":"/ you could otherwise interfere with the operation of other synchronization","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":23005,"byte_end":23082,"line_start":598,"line_end":598,"column_start":1,"column_end":78}},{"value":"/ primitives.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":23083,"byte_end":23098,"line_start":599,"line_end":599,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":23099,"byte_end":23102,"line_start":600,"line_end":600,"column_start":1,"column_end":4}},{"value":"/ The `validate` and `timed_out` functions are called while the queue is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":23103,"byte_end":23177,"line_start":601,"line_end":601,"column_start":1,"column_end":75}},{"value":"/ locked and must not panic or call into any function in `parking_lot`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":23178,"byte_end":23251,"line_start":602,"line_end":602,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":23252,"byte_end":23255,"line_start":603,"line_end":603,"column_start":1,"column_end":4}},{"value":"/ The `before_sleep` function is called outside the queue lock and is allowed","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":23256,"byte_end":23335,"line_start":604,"line_end":604,"column_start":1,"column_end":80}},{"value":"/ to call `unpark_one`, `unpark_all`, `unpark_requeue` or `unpark_filter`, but","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":23336,"byte_end":23416,"line_start":605,"line_end":605,"column_start":1,"column_end":81}},{"value":"/ it is not allowed to call `park` or panic.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":23417,"byte_end":23463,"line_start":606,"line_end":606,"column_start":1,"column_end":47}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":23464,"byte_end":23473,"line_start":607,"line_end":607,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":80},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":28929,"byte_end":28939,"line_start":745,"line_end":745,"column_start":15,"column_end":25},"name":"unpark_one","qualname":"::parking_lot::unpark_one","value":"pub unsafe fn unpark_one<impl FnOnce(UnparkResult) -> UnparkToken: FnOnce(UnparkResult)\n                         ->\n                         UnparkToken>(usize,\n                                      impl FnOnce(UnparkResult) -> UnparkToken)\n-> UnparkResult","parent":null,"children":[],"decl_id":null,"docs":" Unparks one thread from the queue associated with the given key.","sig":null,"attributes":[{"value":"/ Unparks one thread from the queue associated with the given key.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":28004,"byte_end":28072,"line_start":725,"line_end":725,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":28073,"byte_end":28076,"line_start":726,"line_end":726,"column_start":1,"column_end":4}},{"value":"/ The `callback` function is called while the queue is locked and before the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":28077,"byte_end":28155,"line_start":727,"line_end":727,"column_start":1,"column_end":79}},{"value":"/ target thread is woken up. The `UnparkResult` argument to the function","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":28156,"byte_end":28230,"line_start":728,"line_end":728,"column_start":1,"column_end":75}},{"value":"/ indicates whether a thread was found in the queue and whether this was the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":28231,"byte_end":28309,"line_start":729,"line_end":729,"column_start":1,"column_end":79}},{"value":"/ last thread in the queue. This value is also returned by `unpark_one`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":28310,"byte_end":28384,"line_start":730,"line_end":730,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":28385,"byte_end":28388,"line_start":731,"line_end":731,"column_start":1,"column_end":4}},{"value":"/ The `callback` function should return an `UnparkToken` value which will be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":28389,"byte_end":28467,"line_start":732,"line_end":732,"column_start":1,"column_end":79}},{"value":"/ passed to the thread that is unparked. If no thread is unparked then the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":28468,"byte_end":28544,"line_start":733,"line_end":733,"column_start":1,"column_end":77}},{"value":"/ returned value is ignored.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":28545,"byte_end":28575,"line_start":734,"line_end":734,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":28576,"byte_end":28579,"line_start":735,"line_end":735,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":28580,"byte_end":28592,"line_start":736,"line_end":736,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":28593,"byte_end":28596,"line_start":737,"line_end":737,"column_start":1,"column_end":4}},{"value":"/ You should only call this function with an address that you control, since","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":28597,"byte_end":28675,"line_start":738,"line_end":738,"column_start":1,"column_end":79}},{"value":"/ you could otherwise interfere with the operation of other synchronization","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":28676,"byte_end":28753,"line_start":739,"line_end":739,"column_start":1,"column_end":78}},{"value":"/ primitives.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":28754,"byte_end":28769,"line_start":740,"line_end":740,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":28770,"byte_end":28773,"line_start":741,"line_end":741,"column_start":1,"column_end":4}},{"value":"/ The `callback` function is called while the queue is locked and must not","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":28774,"byte_end":28850,"line_start":742,"line_end":742,"column_start":1,"column_end":77}},{"value":"/ panic or call into any function in `parking_lot`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":28851,"byte_end":28904,"line_start":743,"line_end":743,"column_start":1,"column_end":54}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":28905,"byte_end":28914,"line_start":744,"line_end":744,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":82},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":31789,"byte_end":31799,"line_start":822,"line_end":822,"column_start":15,"column_end":25},"name":"unpark_all","qualname":"::parking_lot::unpark_all","value":"pub unsafe fn unpark_all(usize, UnparkToken) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Unparks all threads in the queue associated with the given key.","sig":null,"attributes":[{"value":"/ Unparks all threads in the queue associated with the given key.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":31364,"byte_end":31431,"line_start":810,"line_end":810,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":31432,"byte_end":31435,"line_start":811,"line_end":811,"column_start":1,"column_end":4}},{"value":"/ The given `UnparkToken` is passed to all unparked threads.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":31436,"byte_end":31498,"line_start":812,"line_end":812,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":31499,"byte_end":31502,"line_start":813,"line_end":813,"column_start":1,"column_end":4}},{"value":"/ This function returns the number of threads that were unparked.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":31503,"byte_end":31570,"line_start":814,"line_end":814,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":31571,"byte_end":31574,"line_start":815,"line_end":815,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":31575,"byte_end":31587,"line_start":816,"line_end":816,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":31588,"byte_end":31591,"line_start":817,"line_end":817,"column_start":1,"column_end":4}},{"value":"/ You should only call this function with an address that you control, since","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":31592,"byte_end":31670,"line_start":818,"line_end":818,"column_start":1,"column_end":79}},{"value":"/ you could otherwise interfere with the operation of other synchronization","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":31671,"byte_end":31748,"line_start":819,"line_end":819,"column_start":1,"column_end":78}},{"value":"/ primitives.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":31749,"byte_end":31764,"line_start":820,"line_end":820,"column_start":1,"column_end":16}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":31765,"byte_end":31774,"line_start":821,"line_end":821,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":84},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":34674,"byte_end":34688,"line_start":897,"line_end":897,"column_start":15,"column_end":29},"name":"unpark_requeue","qualname":"::parking_lot::unpark_requeue","value":"pub unsafe fn unpark_requeue<impl FnOnce() -> RequeueOp: FnOnce() ->\n                             RequeueOp,\n                             impl FnOnce(RequeueOp, UnparkResult) -> UnparkToken: FnOnce(RequeueOp,\n                                                                                         UnparkResult)\n                             ->\n                             UnparkToken>(usize, usize,\n                                          impl FnOnce() -> RequeueOp,\n                                          impl FnOnce(RequeueOp, UnparkResult) -> UnparkToken)\n-> UnparkResult","parent":null,"children":[],"decl_id":null,"docs":" Removes all threads from the queue associated with `key_from`, optionally\n unparks the first one and requeues the rest onto the queue associated with\n `key_to`.","sig":null,"attributes":[{"value":"/ Removes all threads from the queue associated with `key_from`, optionally","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":33347,"byte_end":33424,"line_start":869,"line_end":869,"column_start":1,"column_end":78}},{"value":"/ unparks the first one and requeues the rest onto the queue associated with","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":33425,"byte_end":33503,"line_start":870,"line_end":870,"column_start":1,"column_end":79}},{"value":"/ `key_to`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":33504,"byte_end":33517,"line_start":871,"line_end":871,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":33518,"byte_end":33521,"line_start":872,"line_end":872,"column_start":1,"column_end":4}},{"value":"/ The `validate` function is called while both queues are locked. Its return","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":33522,"byte_end":33600,"line_start":873,"line_end":873,"column_start":1,"column_end":79}},{"value":"/ value will determine which operation is performed, or whether the operation","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":33601,"byte_end":33680,"line_start":874,"line_end":874,"column_start":1,"column_end":80}},{"value":"/ should be aborted. See `RequeueOp` for details about the different possible","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":33681,"byte_end":33760,"line_start":875,"line_end":875,"column_start":1,"column_end":80}},{"value":"/ return values.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":33761,"byte_end":33779,"line_start":876,"line_end":876,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":33780,"byte_end":33783,"line_start":877,"line_end":877,"column_start":1,"column_end":4}},{"value":"/ The `callback` function is also called while both queues are locked. It is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":33784,"byte_end":33862,"line_start":878,"line_end":878,"column_start":1,"column_end":79}},{"value":"/ passed the `RequeueOp` returned by `validate` and an `UnparkResult`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":33863,"byte_end":33934,"line_start":879,"line_end":879,"column_start":1,"column_end":72}},{"value":"/ indicating whether a thread was unparked and whether there are threads still","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":33935,"byte_end":34015,"line_start":880,"line_end":880,"column_start":1,"column_end":81}},{"value":"/ parked in the new queue. This `UnparkResult` value is also returned by","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":34016,"byte_end":34090,"line_start":881,"line_end":881,"column_start":1,"column_end":75}},{"value":"/ `unpark_requeue`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":34091,"byte_end":34112,"line_start":882,"line_end":882,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":34113,"byte_end":34116,"line_start":883,"line_end":883,"column_start":1,"column_end":4}},{"value":"/ The `callback` function should return an `UnparkToken` value which will be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":34117,"byte_end":34195,"line_start":884,"line_end":884,"column_start":1,"column_end":79}},{"value":"/ passed to the thread that is unparked. If no thread is unparked then the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":34196,"byte_end":34272,"line_start":885,"line_end":885,"column_start":1,"column_end":77}},{"value":"/ returned value is ignored.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":34273,"byte_end":34303,"line_start":886,"line_end":886,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":34304,"byte_end":34307,"line_start":887,"line_end":887,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":34308,"byte_end":34320,"line_start":888,"line_end":888,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":34321,"byte_end":34324,"line_start":889,"line_end":889,"column_start":1,"column_end":4}},{"value":"/ You should only call this function with an address that you control, since","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":34325,"byte_end":34403,"line_start":890,"line_end":890,"column_start":1,"column_end":79}},{"value":"/ you could otherwise interfere with the operation of other synchronization","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":34404,"byte_end":34481,"line_start":891,"line_end":891,"column_start":1,"column_end":78}},{"value":"/ primitives.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":34482,"byte_end":34497,"line_start":892,"line_end":892,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":34498,"byte_end":34501,"line_start":893,"line_end":893,"column_start":1,"column_end":4}},{"value":"/ The `validate` and `callback` functions are called while the queue is locked","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":34502,"byte_end":34582,"line_start":894,"line_end":894,"column_start":1,"column_end":81}},{"value":"/ and must not panic or call into any function in `parking_lot`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":34583,"byte_end":34649,"line_start":895,"line_end":895,"column_start":1,"column_end":67}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":34650,"byte_end":34659,"line_start":896,"line_end":896,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":87},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":39921,"byte_end":39934,"line_start":1029,"line_end":1029,"column_start":15,"column_end":28},"name":"unpark_filter","qualname":"::parking_lot::unpark_filter","value":"pub unsafe fn unpark_filter<impl FnMut(ParkToken) -> FilterOp: FnMut(ParkToken)\n                            -> FilterOp,\n                            impl FnOnce(UnparkResult) -> UnparkToken: FnOnce(UnparkResult)\n                            ->\n                            UnparkToken>(usize,\n                                         impl FnMut(ParkToken) -> FilterOp,\n                                         impl FnOnce(UnparkResult) -> UnparkToken)\n-> UnparkResult","parent":null,"children":[],"decl_id":null,"docs":" Unparks a number of threads from the front of the queue associated with\n `key` depending on the results of a filter function which inspects the\n `ParkToken` associated with each thread.","sig":null,"attributes":[{"value":"/ Unparks a number of threads from the front of the queue associated with","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":38622,"byte_end":38697,"line_start":1002,"line_end":1002,"column_start":1,"column_end":76}},{"value":"/ `key` depending on the results of a filter function which inspects the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":38698,"byte_end":38772,"line_start":1003,"line_end":1003,"column_start":1,"column_end":75}},{"value":"/ `ParkToken` associated with each thread.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":38773,"byte_end":38817,"line_start":1004,"line_end":1004,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":38818,"byte_end":38821,"line_start":1005,"line_end":1005,"column_start":1,"column_end":4}},{"value":"/ The `filter` function is called for each thread in the queue or until","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":38822,"byte_end":38895,"line_start":1006,"line_end":1006,"column_start":1,"column_end":74}},{"value":"/ `FilterOp::Stop` is returned. This function is passed the `ParkToken`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":38896,"byte_end":38969,"line_start":1007,"line_end":1007,"column_start":1,"column_end":74}},{"value":"/ associated with a particular thread, which is unparked if `FilterOp::Unpark`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":38970,"byte_end":39050,"line_start":1008,"line_end":1008,"column_start":1,"column_end":81}},{"value":"/ is returned.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":39051,"byte_end":39067,"line_start":1009,"line_end":1009,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":39068,"byte_end":39071,"line_start":1010,"line_end":1010,"column_start":1,"column_end":4}},{"value":"/ The `callback` function is also called while both queues are locked. It is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":39072,"byte_end":39150,"line_start":1011,"line_end":1011,"column_start":1,"column_end":79}},{"value":"/ passed an `UnparkResult` indicating the number of threads that were unparked","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":39151,"byte_end":39231,"line_start":1012,"line_end":1012,"column_start":1,"column_end":81}},{"value":"/ and whether there are still parked threads in the queue. This `UnparkResult`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":39232,"byte_end":39312,"line_start":1013,"line_end":1013,"column_start":1,"column_end":81}},{"value":"/ value is also returned by `unpark_filter`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":39313,"byte_end":39359,"line_start":1014,"line_end":1014,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":39360,"byte_end":39363,"line_start":1015,"line_end":1015,"column_start":1,"column_end":4}},{"value":"/ The `callback` function should return an `UnparkToken` value which will be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":39364,"byte_end":39442,"line_start":1016,"line_end":1016,"column_start":1,"column_end":79}},{"value":"/ passed to all threads that are unparked. If no thread is unparked then the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":39443,"byte_end":39521,"line_start":1017,"line_end":1017,"column_start":1,"column_end":79}},{"value":"/ returned value is ignored.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":39522,"byte_end":39552,"line_start":1018,"line_end":1018,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":39553,"byte_end":39556,"line_start":1019,"line_end":1019,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":39557,"byte_end":39569,"line_start":1020,"line_end":1020,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":39570,"byte_end":39573,"line_start":1021,"line_end":1021,"column_start":1,"column_end":4}},{"value":"/ You should only call this function with an address that you control, since","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":39574,"byte_end":39652,"line_start":1022,"line_end":1022,"column_start":1,"column_end":79}},{"value":"/ you could otherwise interfere with the operation of other synchronization","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":39653,"byte_end":39730,"line_start":1023,"line_end":1023,"column_start":1,"column_end":78}},{"value":"/ primitives.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":39731,"byte_end":39746,"line_start":1024,"line_end":1024,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":39747,"byte_end":39750,"line_start":1025,"line_end":1025,"column_start":1,"column_end":4}},{"value":"/ The `filter` and `callback` functions are called while the queue is locked","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":39751,"byte_end":39829,"line_start":1026,"line_end":1026,"column_start":1,"column_end":79}},{"value":"/ and must not panic or call into any function in `parking_lot`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":39830,"byte_end":39896,"line_start":1027,"line_end":1027,"column_start":1,"column_end":67}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":39897,"byte_end":39906,"line_start":1028,"line_end":1028,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":91},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":42581,"byte_end":42589,"line_start":1107,"line_end":1107,"column_start":9,"column_end":17},"name":"deadlock","qualname":"::parking_lot::deadlock","value":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94}],"decl_id":null,"docs":" \\[Experimental\\] Deadlock detection","sig":null,"attributes":[{"value":"/ \\[Experimental\\] Deadlock detection","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":42474,"byte_end":42513,"line_start":1104,"line_end":1104,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":42514,"byte_end":42517,"line_start":1105,"line_end":1105,"column_start":1,"column_end":4}},{"value":"/ Enabled via the `deadlock_detection` feature flag.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":42518,"byte_end":42572,"line_start":1106,"line_end":1106,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":92},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":43002,"byte_end":43018,"line_start":1121,"line_end":1121,"column_start":19,"column_end":35},"name":"acquire_resource","qualname":"::parking_lot::deadlock::acquire_resource","value":"pub unsafe fn acquire_resource(usize)","parent":null,"children":[],"decl_id":null,"docs":" Acquire a resource identified by key in the deadlock detector\n Noop if deadlock_detection feature isn't enabled.","sig":null,"attributes":[{"value":"/ Acquire a resource identified by key in the deadlock detector","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":42769,"byte_end":42834,"line_start":1114,"line_end":1114,"column_start":5,"column_end":70}},{"value":"/ Noop if deadlock_detection feature isn't enabled.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":42839,"byte_end":42892,"line_start":1115,"line_end":1115,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":42897,"byte_end":42900,"line_start":1116,"line_end":1116,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":42905,"byte_end":42917,"line_start":1117,"line_end":1117,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":42922,"byte_end":42925,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ Call after the resource is acquired","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":42930,"byte_end":42969,"line_start":1119,"line_end":1119,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":42974,"byte_end":42983,"line_start":1120,"line_end":1120,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":93},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":43494,"byte_end":43510,"line_start":1137,"line_end":1137,"column_start":19,"column_end":35},"name":"release_resource","qualname":"::parking_lot::deadlock::release_resource","value":"pub unsafe fn release_resource(usize)","parent":null,"children":[],"decl_id":null,"docs":" Release a resource identified by key in the deadlock detector.\n Noop if deadlock_detection feature isn't enabled.","sig":null,"attributes":[{"value":"/ Release a resource identified by key in the deadlock detector.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":43139,"byte_end":43205,"line_start":1126,"line_end":1126,"column_start":5,"column_end":71}},{"value":"/ Noop if deadlock_detection feature isn't enabled.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":43210,"byte_end":43263,"line_start":1127,"line_end":1127,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":43268,"byte_end":43271,"line_start":1128,"line_end":1128,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":43276,"byte_end":43288,"line_start":1129,"line_end":1129,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":43293,"byte_end":43296,"line_start":1130,"line_end":1130,"column_start":5,"column_end":8}},{"value":"/ Panics if the resource was already released or wasn't acquired in this thread.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":43301,"byte_end":43383,"line_start":1131,"line_end":1131,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":43388,"byte_end":43391,"line_start":1132,"line_end":1132,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":43396,"byte_end":43408,"line_start":1133,"line_end":1133,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":43413,"byte_end":43416,"line_start":1134,"line_end":1134,"column_start":5,"column_end":8}},{"value":"/ Call before the resource is released","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":43421,"byte_end":43461,"line_start":1135,"line_end":1135,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":43466,"byte_end":43475,"line_start":1136,"line_end":1136,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":310},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/spinwait.rs","byte_start":64721,"byte_end":64729,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"SpinWait","qualname":"::spinwait::SpinWait","value":"SpinWait {  }","parent":null,"children":[{"krate":0,"index":311}],"decl_id":null,"docs":" A counter used to perform exponential backoff in spin loops.\n","sig":null,"attributes":[{"value":"/ A counter used to perform exponential backoff in spin loops.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/spinwait.rs","byte_start":64626,"byte_end":64690,"line_start":20,"line_end":20,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/spinwait.rs","byte_start":64828,"byte_end":64831,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<SpinWait>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `SpinWait`.\n","sig":null,"attributes":[{"value":"/ Creates a new `SpinWait`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/spinwait.rs","byte_start":64773,"byte_end":64802,"line_start":27,"line_end":27,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/spinwait.rs","byte_start":64807,"byte_end":64816,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/spinwait.rs","byte_start":64950,"byte_end":64955,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"reset","qualname":"<SpinWait>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets a `SpinWait` to its initial state.\n","sig":null,"attributes":[{"value":"/ Resets a `SpinWait` to its initial state.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/spinwait.rs","byte_start":64879,"byte_end":64924,"line_start":33,"line_end":33,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/spinwait.rs","byte_start":64929,"byte_end":64938,"line_start":34,"line_end":34,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/spinwait.rs","byte_start":65433,"byte_end":65437,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"spin","qualname":"<SpinWait>::spin","value":"pub fn spin(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Spins until the sleep threshold has been reached.","sig":null,"attributes":[{"value":"/ Spins until the sleep threshold has been reached.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/spinwait.rs","byte_start":65006,"byte_end":65059,"line_start":39,"line_end":39,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/spinwait.rs","byte_start":65064,"byte_end":65067,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ This function returns whether the sleep threshold has been reached, at","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/spinwait.rs","byte_start":65072,"byte_end":65146,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/ which point further spinning has diminishing returns and the thread","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/spinwait.rs","byte_start":65151,"byte_end":65222,"line_start":42,"line_end":42,"column_start":5,"column_end":76}},{"value":"/ should be parked instead.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/spinwait.rs","byte_start":65227,"byte_end":65256,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/spinwait.rs","byte_start":65261,"byte_end":65264,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ The spin strategy will initially use a CPU-bound loop but will fall back","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/spinwait.rs","byte_start":65269,"byte_end":65345,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ to yielding the CPU to the OS after a few iterations.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/spinwait.rs","byte_start":65350,"byte_end":65407,"line_start":46,"line_end":46,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/spinwait.rs","byte_start":65412,"byte_end":65421,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/spinwait.rs","byte_start":65979,"byte_end":65992,"line_start":67,"line_end":67,"column_start":12,"column_end":25},"name":"spin_no_yield","qualname":"<SpinWait>::spin_no_yield","value":"pub fn spin_no_yield(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Spins without yielding the thread to the OS.","sig":null,"attributes":[{"value":"/ Spins without yielding the thread to the OS.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/spinwait.rs","byte_start":65721,"byte_end":65769,"line_start":61,"line_end":61,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/spinwait.rs","byte_start":65774,"byte_end":65777,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Instead, the backoff is simply capped at a maximum value. This can be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/spinwait.rs","byte_start":65782,"byte_end":65855,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ used to improve throughput in `compare_exchange` loops that have high","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/spinwait.rs","byte_start":65860,"byte_end":65933,"line_start":64,"line_end":64,"column_start":5,"column_end":78}},{"value":"/ contention.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/spinwait.rs","byte_start":65938,"byte_end":65953,"line_start":65,"line_end":65,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/spinwait.rs","byte_start":65958,"byte_end":65967,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":108},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/thread_parker/mod.rs","byte_start":66705,"byte_end":66717,"line_start":13,"line_end":13,"column_start":10,"column_end":22},"name":"UnparkHandle","qualname":"::thread_parker::ThreadParkerT::UnparkHandle","value":"type UnparkHandle: UnparkHandleT;","parent":{"krate":0,"index":107},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":5421,"byte_end":5430,"line_start":85,"line_end":85,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":6396,"byte_end":6402,"line_start":119,"line_end":119,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":6899,"byte_end":6910,"line_start":139,"line_end":139,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":8408,"byte_end":8418,"line_start":192,"line_end":192,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":9829,"byte_end":9839,"line_start":227,"line_end":227,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":19650,"byte_end":19660,"line_start":499,"line_end":499,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/spinwait.rs","byte_start":64758,"byte_end":64766,"line_start":26,"line_end":26,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/thread_parker/linux.rs","byte_start":7556871,"byte_end":7556883,"line_start":41,"line_end":41,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/thread_parker/linux.rs","byte_start":7558635,"byte_end":7558647,"line_start":104,"line_end":104,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/thread_parker/linux.rs","byte_start":7559457,"byte_end":7559469,"line_start":135,"line_end":135,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/util.rs","byte_start":69837,"byte_end":69843,"line_start":13,"line_end":13,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/word_lock.rs","byte_start":71666,"byte_end":71676,"line_start":36,"line_end":36,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/word_lock.rs","byte_start":73161,"byte_end":73169,"line_start":80,"line_end":80,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":5421,"byte_end":5430,"line_start":85,"line_end":85,"column_start":6,"column_end":15},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":26},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":6396,"byte_end":6402,"line_start":119,"line_end":119,"column_start":6,"column_end":12},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":32},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":6899,"byte_end":6910,"line_start":139,"line_end":139,"column_start":6,"column_end":17},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":39},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":8408,"byte_end":8418,"line_start":192,"line_end":192,"column_start":6,"column_end":16},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":46},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":9829,"byte_end":9839,"line_start":227,"line_end":227,"column_start":15,"column_end":25},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":46},"to":{"krate":2,"index":2117}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/parking_lot.rs","byte_start":19650,"byte_end":19660,"line_start":499,"line_end":499,"column_start":6,"column_end":16},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":200},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/spinwait.rs","byte_start":64758,"byte_end":64766,"line_start":26,"line_end":26,"column_start":6,"column_end":14},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":310},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/thread_parker/linux.rs","byte_start":7556871,"byte_end":7556883,"line_start":41,"line_end":41,"column_start":31,"column_end":43},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":325},"to":{"krate":0,"index":107}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/thread_parker/linux.rs","byte_start":7558635,"byte_end":7558647,"line_start":104,"line_end":104,"column_start":6,"column_end":18},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":325},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/thread_parker/linux.rs","byte_start":7559457,"byte_end":7559469,"line_start":135,"line_end":135,"column_start":31,"column_end":43},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":339},"to":{"krate":0,"index":116}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/util.rs","byte_start":69837,"byte_end":69843,"line_start":13,"line_end":13,"column_start":35,"column_end":41},"kind":{"Impl":{"id":10}},"from":{"krate":2,"index":29967},"to":{"krate":0,"index":123}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/word_lock.rs","byte_start":71666,"byte_end":71676,"line_start":36,"line_end":36,"column_start":6,"column_end":16},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot_core-0.8.0/src/word_lock.rs","byte_start":73161,"byte_end":73169,"line_start":80,"line_end":80,"column_start":6,"column_end":14},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":158},"to":{"krate":4294967295,"index":4294967295}}]}