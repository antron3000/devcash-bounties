{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19","program":"/home/alansky/.rustup/toolchains/nightly-2020-07-02-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures_util","--edition=2018","/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"channel\"","--cfg","feature=\"default\"","--cfg","feature=\"futures-channel-preview\"","--cfg","feature=\"slab\"","--cfg","feature=\"std\"","-C","metadata=62fdc9470e762b5b","-C","extra-filename=-62fdc9470e762b5b","--out-dir","/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps","-L","dependency=/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps","--extern","futures_channel=/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps/libfutures_channel-5252fdef0774a4e8.rmeta","--extern","futures_core=/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps/libfutures_core-21dad576f1faf786.rmeta","--extern","pin_utils=/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps/libpin_utils-8d7a9fcda6c4f3d2.rmeta","--extern","slab=/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps/libslab-e35b378191f0526e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/alansky/.rustup/toolchains/nightly-2020-07-02-x86_64-unknown-linux-gnu"],"output":"/home/alansky/Dev/devcash-bounties/2020/Dev Education/Tutorial1/substrate-node-template/target/rls/debug/deps/libfutures_util-62fdc9470e762b5b.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[6022716357247585475,10731270387862461826]},"crate_root":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src","external_crates":[{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15171822389981698586,9596930288317159773]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","num":2,"id":{"name":"core","disambiguator":[309489290393175025,9116230521283433112]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4391997853131671271,2752570053062459009]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[680011651820151502,5018330578075825921]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4249137077638888796,17834651879708154657]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[13082819734751436340,16140962863799451331]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8371738565553744270,17943531712744420027]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17468180561489458258,7285327718060701271]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[14551538593801126895,13478667531910088620]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[16022708609364593127,529027819734980321]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[18024135037275500963,3187671833432925572]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5194268306266264186,14551347693776345482]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[18097577876301876973,855323625195415836]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[5106557709654100294,13294098602154984522]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","num":15,"id":{"name":"futures_core","disambiguator":[10438555113138517946,4178421672829186342]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","num":16,"id":{"name":"pin_utils","disambiguator":[5974298009446588129,13541412455003911284]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/remote_handle.rs","num":17,"id":{"name":"futures_channel","disambiguator":[15175586911341779233,14555115685030592685]}},{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/shared.rs","num":18,"id":{"name":"slab","disambiguator":[12648214621649710431,5648834109534955248]}}],"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","byte_start":0,"byte_end":3856,"line_start":1,"line_end":127,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":15,"index":296},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","byte_start":1515,"byte_end":1520,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":7},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","byte_start":1541,"byte_end":1548,"line_start":34,"line_end":34,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":378},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","byte_start":1795,"byte_end":1808,"line_start":47,"line_end":47,"column_start":23,"column_end":36},"alias_span":null,"name":"core_reexport","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":177},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":4200,"byte_end":4211,"line_start":12,"line_end":12,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":2,"index":8319},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":4213,"byte_end":4219,"line_start":12,"line_end":12,"column_start":45,"column_end":51},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":15,"index":171},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":4279,"byte_end":4288,"line_start":14,"line_end":14,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxFuture","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":15,"index":174},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":4290,"byte_end":4304,"line_start":14,"line_end":14,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxFuture","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":32},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":4360,"byte_end":4364,"line_start":18,"line_end":18,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3450},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":4366,"byte_end":4370,"line_start":18,"line_end":18,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":59},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":4411,"byte_end":4418,"line_start":21,"line_end":21,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3456},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":4420,"byte_end":4427,"line_start":21,"line_end":21,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":81},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":4474,"byte_end":4484,"line_start":24,"line_end":24,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3462},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":4486,"byte_end":4495,"line_start":24,"line_end":24,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3475},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":4534,"byte_end":4546,"line_start":27,"line_end":27,"column_start":24,"column_end":36},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":132},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":4587,"byte_end":4594,"line_start":30,"line_end":30,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":127},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":4596,"byte_end":4602,"line_start":30,"line_end":30,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":163},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":4639,"byte_end":4644,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":165},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":4646,"byte_end":4648,"line_start":33,"line_end":33,"column_start":30,"column_end":32},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":168},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":4650,"byte_end":4653,"line_start":33,"line_end":33,"column_start":34,"column_end":37},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3487},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":4655,"byte_end":4660,"line_start":33,"line_end":33,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":191},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":4695,"byte_end":4699,"line_start":36,"line_end":36,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":194},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":4701,"byte_end":4706,"line_start":36,"line_end":36,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":198},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":4708,"byte_end":4713,"line_start":36,"line_end":36,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":203},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":4715,"byte_end":4720,"line_start":36,"line_end":36,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3497},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":4722,"byte_end":4726,"line_start":36,"line_end":36,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3519},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":4728,"byte_end":4733,"line_start":36,"line_end":36,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3547},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":4735,"byte_end":4740,"line_start":36,"line_end":36,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3581},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":4742,"byte_end":4747,"line_start":36,"line_end":36,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":245},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":4842,"byte_end":4850,"line_start":41,"line_end":41,"column_start":26,"column_end":34},"alias_span":null,"name":"join_all","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":239},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":4852,"byte_end":4859,"line_start":41,"line_end":41,"column_start":36,"column_end":43},"alias_span":null,"name":"JoinAll","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":273},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":4898,"byte_end":4904,"line_start":44,"line_end":44,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3674},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":4906,"byte_end":4912,"line_start":44,"line_end":44,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":300},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":5011,"byte_end":5021,"line_start":49,"line_end":49,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3682},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":5023,"byte_end":5032,"line_start":49,"line_end":49,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":325},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":5087,"byte_end":5094,"line_start":53,"line_end":53,"column_start":24,"column_end":31},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":354},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":5147,"byte_end":5160,"line_start":56,"line_end":56,"column_start":31,"column_end":44},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3707},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":5193,"byte_end":5197,"line_start":59,"line_end":59,"column_start":21,"column_end":25},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3716},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":5244,"byte_end":5254,"line_start":62,"line_end":62,"column_start":28,"column_end":38},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3725},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":5285,"byte_end":5288,"line_start":65,"line_end":65,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3739},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":5321,"byte_end":5325,"line_start":68,"line_end":68,"column_start":21,"column_end":25},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3752},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":5364,"byte_end":5371,"line_start":71,"line_end":71,"column_start":24,"column_end":31},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3766},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":5416,"byte_end":5425,"line_start":74,"line_end":74,"column_start":27,"column_end":36},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3775},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":5472,"byte_end":5482,"line_start":77,"line_end":77,"column_start":28,"column_end":38},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3784},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":5519,"byte_end":5525,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3839},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":5735,"byte_end":5744,"line_start":90,"line_end":90,"column_start":31,"column_end":40},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3856},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":5746,"byte_end":5755,"line_start":90,"line_end":90,"column_start":42,"column_end":51},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3870},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":5757,"byte_end":5768,"line_start":90,"line_end":90,"column_start":53,"column_end":64},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3866},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":5770,"byte_end":5787,"line_start":90,"line_end":90,"column_start":66,"column_end":83},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3881},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":5789,"byte_end":5796,"line_start":90,"line_end":90,"column_start":85,"column_end":92},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3882},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":5789,"byte_end":5796,"line_start":90,"line_end":90,"column_start":85,"column_end":92},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":3855}},{"kind":"Use","ref_id":{"krate":0,"index":3894},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":5896,"byte_end":5907,"line_start":96,"line_end":96,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":681},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":6063,"byte_end":6069,"line_start":103,"line_end":103,"column_start":31,"column_end":37},"alias_span":null,"name":"Remote","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":3903},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":6071,"byte_end":6083,"line_start":103,"line_end":103,"column_start":39,"column_end":51},"alias_span":null,"name":"RemoteHandle","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":722},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":6169,"byte_end":6175,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":9}},{"kind":"Use","ref_id":{"krate":0,"index":795},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","byte_start":3118,"byte_end":3127,"line_start":93,"line_end":93,"column_start":39,"column_end":48},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":192},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":85965,"byte_end":85974,"line_start":14,"line_end":14,"column_start":31,"column_end":40},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":827}},{"kind":"Use","ref_id":{"krate":0,"index":851},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":86021,"byte_end":86029,"line_start":18,"line_end":18,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":827}},{"kind":"Use","ref_id":{"krate":0,"index":854},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":86031,"byte_end":86040,"line_start":18,"line_end":18,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":827}},{"kind":"Use","ref_id":{"krate":0,"index":858},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":86042,"byte_end":86051,"line_start":18,"line_end":18,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":827}},{"kind":"Use","ref_id":{"krate":0,"index":863},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":86053,"byte_end":86062,"line_start":18,"line_end":18,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":827}},{"kind":"Use","ref_id":{"krate":0,"index":3915},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":86068,"byte_end":86075,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":827}},{"kind":"Use","ref_id":{"krate":0,"index":3933},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":86077,"byte_end":86085,"line_start":19,"line_end":19,"column_start":14,"column_end":22},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":827}},{"kind":"Use","ref_id":{"krate":0,"index":3956},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":86087,"byte_end":86095,"line_start":19,"line_end":19,"column_start":24,"column_end":32},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":827}},{"kind":"Use","ref_id":{"krate":0,"index":3984},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":86097,"byte_end":86105,"line_start":19,"line_end":19,"column_start":34,"column_end":42},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":827}},{"kind":"Use","ref_id":{"krate":0,"index":915},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":86210,"byte_end":86222,"line_start":25,"line_end":25,"column_start":30,"column_end":42},"alias_span":null,"name":"try_join_all","value":"","parent":{"krate":0,"index":827}},{"kind":"Use","ref_id":{"krate":0,"index":909},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":86224,"byte_end":86234,"line_start":25,"line_end":25,"column_start":44,"column_end":54},"alias_span":null,"name":"TryJoinAll","value":"","parent":{"krate":0,"index":827}},{"kind":"Use","ref_id":{"krate":0,"index":942},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":86281,"byte_end":86291,"line_start":28,"line_end":28,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":827}},{"kind":"Use","ref_id":{"krate":0,"index":4070},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":86293,"byte_end":86302,"line_start":28,"line_end":28,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":827}},{"kind":"Use","ref_id":{"krate":0,"index":967},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":86399,"byte_end":86408,"line_start":33,"line_end":33,"column_start":27,"column_end":36},"alias_span":null,"name":"select_ok","value":"","parent":{"krate":0,"index":827}},{"kind":"Use","ref_id":{"krate":0,"index":4078},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":86410,"byte_end":86418,"line_start":33,"line_end":33,"column_start":38,"column_end":46},"alias_span":null,"name":"SelectOk","value":"","parent":{"krate":0,"index":827}},{"kind":"Use","ref_id":{"krate":0,"index":4084},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":86475,"byte_end":86482,"line_start":37,"line_end":37,"column_start":25,"column_end":32},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":827}},{"kind":"Use","ref_id":{"krate":0,"index":4097},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":86523,"byte_end":86530,"line_start":40,"line_end":40,"column_start":25,"column_end":32},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":827}},{"kind":"Use","ref_id":{"krate":0,"index":4109},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":86685,"byte_end":86694,"line_start":48,"line_end":48,"column_start":27,"column_end":36},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":827}},{"kind":"Use","ref_id":{"krate":0,"index":4123},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":86741,"byte_end":86751,"line_start":51,"line_end":51,"column_start":28,"column_end":38},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":827}},{"kind":"Use","ref_id":{"krate":0,"index":4137},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":86798,"byte_end":86808,"line_start":54,"line_end":54,"column_start":28,"column_end":38},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":827}},{"kind":"Use","ref_id":{"krate":0,"index":4146},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":86847,"byte_end":86853,"line_start":57,"line_end":57,"column_start":24,"column_end":30},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":827}},{"kind":"Use","ref_id":{"krate":0,"index":4160},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":86890,"byte_end":86895,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":827}},{"kind":"Use","ref_id":{"krate":0,"index":4174},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":86934,"byte_end":86940,"line_start":63,"line_end":63,"column_start":24,"column_end":30},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":827}},{"kind":"Use","ref_id":{"krate":0,"index":1228},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":87001,"byte_end":87017,"line_start":66,"line_end":66,"column_start":35,"column_end":51},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":827}},{"kind":"Use","ref_id":{"krate":0,"index":4190},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":87070,"byte_end":87082,"line_start":69,"line_end":69,"column_start":31,"column_end":43},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":827}},{"kind":"Use","ref_id":{"krate":0,"index":1345},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","byte_start":3192,"byte_end":3204,"line_start":96,"line_end":96,"column_start":43,"column_end":55},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":242},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":144273,"byte_end":144284,"line_start":17,"line_end":17,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":15,"index":228},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":144286,"byte_end":144292,"line_start":17,"line_end":17,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":15,"index":222},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":144352,"byte_end":144361,"line_start":19,"line_end":19,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxStream","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":15,"index":225},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":144363,"byte_end":144377,"line_start":19,"line_end":19,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxStream","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":1392},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":144412,"byte_end":144416,"line_start":22,"line_end":22,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":4240},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":144418,"byte_end":144422,"line_start":22,"line_end":22,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":1410},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":144461,"byte_end":144467,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":4246},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":144469,"byte_end":144475,"line_start":25,"line_end":25,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":4252},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":144511,"byte_end":144516,"line_start":28,"line_end":28,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":4267},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":144555,"byte_end":144562,"line_start":31,"line_end":31,"column_start":24,"column_end":31},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":4281},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":144599,"byte_end":144605,"line_start":34,"line_end":34,"column_start":23,"column_end":29},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":1518},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":144641,"byte_end":144646,"line_start":37,"line_end":37,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":4293},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":144648,"byte_end":144653,"line_start":37,"line_end":37,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":4299},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":144697,"byte_end":144706,"line_start":40,"line_end":40,"column_start":26,"column_end":35},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":1575},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":144743,"byte_end":144749,"line_start":43,"line_end":43,"column_start":23,"column_end":29},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":1627},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":144794,"byte_end":144803,"line_start":46,"line_end":46,"column_start":27,"column_end":36},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":4329},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":144842,"byte_end":144849,"line_start":49,"line_end":49,"column_start":24,"column_end":31},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":1708},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":144882,"byte_end":144886,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":1763},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":145023,"byte_end":145030,"line_start":60,"line_end":60,"column_start":25,"column_end":32},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":4360},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":145063,"byte_end":145067,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":4372},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":145114,"byte_end":145126,"line_start":66,"line_end":66,"column_start":28,"column_end":40},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":1866},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":145257,"byte_end":145264,"line_start":70,"line_end":70,"column_start":24,"column_end":31},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":1915},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":145295,"byte_end":145298,"line_start":73,"line_end":73,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":4391},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":145331,"byte_end":145335,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":4399},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":145392,"byte_end":145406,"line_start":79,"line_end":79,"column_start":33,"column_end":47},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":2009},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":145440,"byte_end":145444,"line_start":82,"line_end":82,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":4407},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":145446,"byte_end":145450,"line_start":82,"line_end":82,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":4416},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":145484,"byte_end":145492,"line_start":85,"line_end":85,"column_start":21,"column_end":29},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":2068},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":145532,"byte_end":145539,"line_start":88,"line_end":88,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":4428},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":145541,"byte_end":145548,"line_start":88,"line_end":88,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":2098},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":145589,"byte_end":145596,"line_start":91,"line_end":91,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":2090},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":145598,"byte_end":145604,"line_start":91,"line_end":91,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":2123},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":145643,"byte_end":145649,"line_start":94,"line_end":94,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":4434},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":145651,"byte_end":145657,"line_start":94,"line_end":94,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":4444},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":145691,"byte_end":145695,"line_start":97,"line_end":97,"column_start":21,"column_end":25},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":2190},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":145740,"byte_end":145749,"line_start":100,"line_end":100,"column_start":27,"column_end":36},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":4468},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":145782,"byte_end":145786,"line_start":103,"line_end":103,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":2273},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":145831,"byte_end":145840,"line_start":106,"line_end":106,"column_start":27,"column_end":36},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":2330},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":145873,"byte_end":145877,"line_start":109,"line_end":109,"column_start":21,"column_end":25},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":2385},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":145915,"byte_end":145921,"line_start":112,"line_end":112,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":2390},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":145923,"byte_end":145929,"line_start":112,"line_end":112,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":4507},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":145961,"byte_end":145964,"line_start":115,"line_end":115,"column_start":20,"column_end":23},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":4528},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":146053,"byte_end":146059,"line_start":120,"line_end":120,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":4558},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":146209,"byte_end":146224,"line_start":126,"line_end":126,"column_start":37,"column_end":52},"alias_span":null,"name":"BufferUnordered","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":4599},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":146333,"byte_end":146341,"line_start":131,"line_end":131,"column_start":29,"column_end":37},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":4639},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":146472,"byte_end":146489,"line_start":136,"line_end":136,"column_start":40,"column_end":57},"alias_span":null,"name":"ForEachConcurrent","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":4711},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":146612,"byte_end":146626,"line_start":141,"line_end":141,"column_start":36,"column_end":50},"alias_span":null,"name":"FuturesOrdered","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":4997},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7910586,"byte_end":7910593,"line_start":24,"line_end":24,"column_start":22,"column_end":29},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":4742}},{"kind":"Use","ref_id":{"krate":0,"index":4998},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7910586,"byte_end":7910593,"line_start":24,"line_end":24,"column_start":22,"column_end":29},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":4802}},{"kind":"Use","ref_id":{"krate":0,"index":4987},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7910595,"byte_end":7910605,"line_start":24,"line_end":24,"column_start":31,"column_end":41},"alias_span":null,"name":"IterPinMut","value":"","parent":{"krate":0,"index":4742}},{"kind":"Use","ref_id":{"krate":0,"index":4882},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":146776,"byte_end":146792,"line_start":147,"line_end":147,"column_start":38,"column_end":54},"alias_span":null,"name":"FuturesUnordered","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":4978},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":147105,"byte_end":147115,"line_start":159,"line_end":159,"column_start":32,"column_end":42},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":4956},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":147117,"byte_end":147126,"line_start":159,"line_end":159,"column_start":44,"column_end":53},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":5006},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":147226,"byte_end":147237,"line_start":165,"line_end":165,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":2528},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","byte_start":3261,"byte_end":3270,"line_start":99,"line_end":99,"column_start":39,"column_end":48},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":257},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":273681,"byte_end":273690,"line_start":13,"line_end":13,"column_start":31,"column_end":40},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":2592}},{"kind":"Use","ref_id":{"krate":0,"index":2615},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":273731,"byte_end":273738,"line_start":16,"line_end":16,"column_start":25,"column_end":32},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":2592}},{"kind":"Use","ref_id":{"krate":0,"index":5026},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":273779,"byte_end":273786,"line_start":19,"line_end":19,"column_start":25,"column_end":32},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":2592}},{"kind":"Use","ref_id":{"krate":0,"index":2706},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":273831,"byte_end":273840,"line_start":22,"line_end":22,"column_start":27,"column_end":36},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":2592}},{"kind":"Use","ref_id":{"krate":0,"index":2757},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":273887,"byte_end":273897,"line_start":25,"line_end":25,"column_start":28,"column_end":38},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":2592}},{"kind":"Use","ref_id":{"krate":0,"index":5048},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":273944,"byte_end":273954,"line_start":28,"line_end":28,"column_start":28,"column_end":38},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":2592}},{"kind":"Use","ref_id":{"krate":0,"index":2833},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":273991,"byte_end":273996,"line_start":31,"line_end":31,"column_start":23,"column_end":28},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":2592}},{"kind":"Use","ref_id":{"krate":0,"index":2882},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":274035,"byte_end":274041,"line_start":34,"line_end":34,"column_start":24,"column_end":30},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":2592}},{"kind":"Use","ref_id":{"krate":0,"index":2932},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":274080,"byte_end":274086,"line_start":37,"line_end":37,"column_start":24,"column_end":30},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":2592}},{"kind":"Use","ref_id":{"krate":0,"index":5075},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":274127,"byte_end":274134,"line_start":40,"line_end":40,"column_start":25,"column_end":32},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":2592}},{"kind":"Use","ref_id":{"krate":0,"index":3013},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":274183,"byte_end":274193,"line_start":43,"line_end":43,"column_start":29,"column_end":39},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":2592}},{"kind":"Use","ref_id":{"krate":0,"index":3055},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":274238,"byte_end":274247,"line_start":46,"line_end":46,"column_start":27,"column_end":36},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":2592}},{"kind":"Use","ref_id":{"krate":0,"index":3109},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":274300,"byte_end":274312,"line_start":49,"line_end":49,"column_start":31,"column_end":43},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":2592}},{"kind":"Use","ref_id":{"krate":0,"index":5109},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":274359,"byte_end":274369,"line_start":52,"line_end":52,"column_start":28,"column_end":38},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":2592}},{"kind":"Use","ref_id":{"krate":0,"index":5122},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":274416,"byte_end":274426,"line_start":55,"line_end":55,"column_start":28,"column_end":38},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":2592}},{"kind":"Use","ref_id":{"krate":0,"index":5136},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":274471,"byte_end":274480,"line_start":58,"line_end":58,"column_start":27,"column_end":36},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":2592}},{"kind":"Use","ref_id":{"krate":0,"index":3245},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":274521,"byte_end":274528,"line_start":61,"line_end":61,"column_start":25,"column_end":32},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":2592}},{"kind":"Use","ref_id":{"krate":0,"index":3299},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":274581,"byte_end":274593,"line_start":64,"line_end":64,"column_start":31,"column_end":43},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":2592}},{"kind":"Use","ref_id":{"krate":0,"index":5257},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":274751,"byte_end":274769,"line_start":70,"line_end":70,"column_start":41,"column_end":59},"alias_span":null,"name":"TryBufferUnordered","value":"","parent":{"krate":0,"index":2592}},{"kind":"Use","ref_id":{"krate":0,"index":5222},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":274908,"byte_end":274928,"line_start":75,"line_end":75,"column_start":44,"column_end":64},"alias_span":null,"name":"TryForEachConcurrent","value":"","parent":{"krate":0,"index":2592}},{"kind":"Use","ref_id":{"krate":0,"index":3345},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","byte_start":3335,"byte_end":3347,"line_start":102,"line_end":102,"column_start":43,"column_end":55},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5267},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/mod.rs","byte_start":354056,"byte_end":354063,"line_start":7,"line_end":7,"column_start":29,"column_end":36},"alias_span":null,"name":"ArcWake","value":"","parent":{"krate":0,"index":3394}},{"kind":"Use","ref_id":{"krate":0,"index":5281},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/mod.rs","byte_start":354166,"byte_end":354171,"line_start":12,"line_end":12,"column_start":26,"column_end":31},"alias_span":null,"name":"waker","value":"","parent":{"krate":0,"index":3394}},{"kind":"Use","ref_id":{"krate":0,"index":5312},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/mod.rs","byte_start":354283,"byte_end":354292,"line_start":17,"line_end":17,"column_start":31,"column_end":40},"alias_span":null,"name":"waker_ref","value":"","parent":{"krate":0,"index":3394}},{"kind":"Use","ref_id":{"krate":0,"index":5318},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/mod.rs","byte_start":354294,"byte_end":354302,"line_start":17,"line_end":17,"column_start":42,"column_end":50},"alias_span":null,"name":"WakerRef","value":"","parent":{"krate":0,"index":3394}},{"kind":"Use","ref_id":{"krate":15,"index":351},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/mod.rs","byte_start":354350,"byte_end":354361,"line_start":19,"line_end":19,"column_start":45,"column_end":56},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":3394}},{"kind":"Use","ref_id":{"krate":0,"index":3406},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/mod.rs","byte_start":354408,"byte_end":354418,"line_start":23,"line_end":23,"column_start":27,"column_end":37},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":3394}},{"kind":"Use","ref_id":{"krate":0,"index":3407},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/mod.rs","byte_start":354470,"byte_end":354484,"line_start":25,"line_end":25,"column_start":27,"column_end":41},"alias_span":null,"name":"noop_waker_ref","value":"","parent":{"krate":0,"index":3394}},{"kind":"Use","ref_id":{"krate":0,"index":3428},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/mod.rs","byte_start":354520,"byte_end":354528,"line_start":28,"line_end":28,"column_start":23,"column_end":31},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":3394}},{"kind":"Use","ref_id":{"krate":0,"index":3433},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/mod.rs","byte_start":354530,"byte_end":354543,"line_start":28,"line_end":28,"column_start":33,"column_end":46},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":3394}},{"kind":"Use","ref_id":{"krate":2,"index":8459},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/mod.rs","byte_start":354576,"byte_end":354583,"line_start":30,"line_end":30,"column_start":30,"column_end":37},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":3394}},{"kind":"Use","ref_id":{"krate":2,"index":32507},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/mod.rs","byte_start":354585,"byte_end":354589,"line_start":30,"line_end":30,"column_start":39,"column_end":43},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":3394}},{"kind":"Use","ref_id":{"krate":2,"index":8469},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/mod.rs","byte_start":354591,"byte_end":354596,"line_start":30,"line_end":30,"column_start":45,"column_end":50},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":3394}},{"kind":"Use","ref_id":{"krate":2,"index":32547},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/mod.rs","byte_start":354598,"byte_end":354606,"line_start":30,"line_end":30,"column_start":52,"column_end":60},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":3394}},{"kind":"Use","ref_id":{"krate":2,"index":32556},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/mod.rs","byte_start":354608,"byte_end":354622,"line_start":30,"line_end":30,"column_start":62,"column_end":76},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":3394}},{"kind":"Use","ref_id":{"krate":0,"index":3448},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","byte_start":3527,"byte_end":3532,"line_start":112,"line_end":112,"column_start":38,"column_end":43},"alias_span":null,"name":"Never","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5351},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mod.rs","byte_start":7956842,"byte_end":7956847,"line_start":9,"line_end":9,"column_start":23,"column_end":28},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":5329}},{"kind":"Use","ref_id":{"krate":0,"index":5387},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mod.rs","byte_start":7956849,"byte_end":7956864,"line_start":9,"line_end":9,"column_start":30,"column_end":45},"alias_span":null,"name":"MutexLockFuture","value":"","parent":{"krate":0,"index":5329}},{"kind":"Use","ref_id":{"krate":0,"index":5406},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mod.rs","byte_start":7956866,"byte_end":7956876,"line_start":9,"line_end":9,"column_start":47,"column_end":57},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":5329}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","byte_start":0,"byte_end":3856,"line_start":1,"line_end":127,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":9},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":2591},{"krate":0,"index":2592},{"krate":0,"index":3393},{"krate":0,"index":3394},{"krate":0,"index":3447},{"krate":0,"index":3449},{"krate":0,"index":5329}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"! Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"! and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","byte_start":322,"byte_end":410,"line_start":8,"line_end":8,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","byte_start":578,"byte_end":599,"line_start":11,"line_end":11,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":9},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":620},{"krate":0,"index":3819},{"krate":0,"index":3850},{"krate":0,"index":3851},{"krate":0,"index":3852},{"krate":0,"index":3853},{"krate":0,"index":3854},{"krate":0,"index":3855},{"krate":0,"index":5899},{"krate":0,"index":621},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":795},{"krate":0,"index":823}],"decl_id":null,"docs":" Futures","sig":null,"attributes":[{"value":"! Futures","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":3858,"byte_end":3869,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":3870,"byte_end":3873,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains a number of functions for working with `Future`s,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":3874,"byte_end":3948,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"! including the `FutureExt` trait which adds methods to `Future` types.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":3949,"byte_end":4022,"line_start":4,"line_end":4,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":3450},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/lazy.rs","byte_start":22457,"byte_end":22461,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":3452}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/lazy.rs","byte_start":22323,"byte_end":22360,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/lazy.rs","byte_start":22378,"byte_end":22445,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":32},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/lazy.rs","byte_start":23002,"byte_end":23006,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"pub fn lazy<F, R>(F) -> Lazy<F> where F: FnOnce(&mut Context) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/lazy.rs","byte_start":22565,"byte_end":22633,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/lazy.rs","byte_start":22634,"byte_end":22637,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/lazy.rs","byte_start":22638,"byte_end":22701,"line_start":17,"line_end":17,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/lazy.rs","byte_start":22702,"byte_end":22705,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/lazy.rs","byte_start":22706,"byte_end":22720,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/lazy.rs","byte_start":22721,"byte_end":22724,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/lazy.rs","byte_start":22725,"byte_end":22732,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/lazy.rs","byte_start":22733,"byte_end":22774,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/lazy.rs","byte_start":22775,"byte_end":22799,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/lazy.rs","byte_start":22800,"byte_end":22803,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/lazy.rs","byte_start":22804,"byte_end":22836,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/lazy.rs","byte_start":22837,"byte_end":22864,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/lazy.rs","byte_start":22865,"byte_end":22868,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/lazy.rs","byte_start":22869,"byte_end":22906,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/lazy.rs","byte_start":22907,"byte_end":22931,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/lazy.rs","byte_start":22932,"byte_end":22939,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/lazy.rs","byte_start":22940,"byte_end":22976,"line_start":31,"line_end":31,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/lazy.rs","byte_start":22977,"byte_end":22986,"line_start":32,"line_end":32,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/lazy.rs","byte_start":22987,"byte_end":22994,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3456},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/pending.rs","byte_start":23742,"byte_end":23749,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":3458}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/pending.rs","byte_start":23603,"byte_end":23645,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/pending.rs","byte_start":23663,"byte_end":23730,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":59},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/pending.rs","byte_start":24268,"byte_end":24275,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/pending.rs","byte_start":23890,"byte_end":23970,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/pending.rs","byte_start":23971,"byte_end":23984,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/pending.rs","byte_start":23985,"byte_end":23988,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/pending.rs","byte_start":23989,"byte_end":24051,"line_start":22,"line_end":22,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/pending.rs","byte_start":24052,"byte_end":24055,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/pending.rs","byte_start":24056,"byte_end":24070,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/pending.rs","byte_start":24071,"byte_end":24074,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/pending.rs","byte_start":24075,"byte_end":24088,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/pending.rs","byte_start":24089,"byte_end":24130,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/pending.rs","byte_start":24131,"byte_end":24155,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/pending.rs","byte_start":24156,"byte_end":24159,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/pending.rs","byte_start":24160,"byte_end":24195,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/pending.rs","byte_start":24196,"byte_end":24222,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/pending.rs","byte_start":24223,"byte_end":24242,"line_start":32,"line_end":32,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/pending.rs","byte_start":24243,"byte_end":24252,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/pending.rs","byte_start":24253,"byte_end":24260,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3464},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":24899,"byte_end":24905,"line_start":14,"line_end":14,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":24864,"byte_end":24894,"line_start":13,"line_end":13,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3467},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":24959,"byte_end":24963,"line_start":16,"line_end":16,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":24916,"byte_end":24954,"line_start":15,"line_end":15,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3470},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":25125,"byte_end":25129,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":24982,"byte_end":25048,"line_start":17,"line_end":17,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":25053,"byte_end":25120,"line_start":18,"line_end":18,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":3462},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":24835,"byte_end":24844,"line_start":12,"line_end":12,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> {\n\n    /// A not-yet-completed future\n    Future(Fut),\n\n    /// The output of the completed future\n    Done(Fut::Output),\n\n    /// The empty variant after the result of a [`MaybeDone`] has been\n    /// taken using the [`take_output`](MaybeDone::take_output) method.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":3464},{"krate":0,"index":3467},{"krate":0,"index":3470}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":24713,"byte_end":24750,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":24751,"byte_end":24754,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`maybe_done()`] function.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":24755,"byte_end":24808,"line_start":10,"line_end":10,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":81},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":25708,"byte_end":25718,"line_start":42,"line_end":42,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":25247,"byte_end":25284,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":25285,"byte_end":25288,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":25289,"byte_end":25303,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":25304,"byte_end":25307,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":25308,"byte_end":25315,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":25316,"byte_end":25357,"line_start":30,"line_end":30,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":25358,"byte_end":25382,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":25383,"byte_end":25408,"line_start":32,"line_end":32,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":25409,"byte_end":25412,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":25413,"byte_end":25462,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":25463,"byte_end":25484,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":25485,"byte_end":25537,"line_start":36,"line_end":36,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":25538,"byte_end":25573,"line_start":37,"line_end":37,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":25574,"byte_end":25629,"line_start":38,"line_end":38,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":25630,"byte_end":25682,"line_start":39,"line_end":39,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":25683,"byte_end":25692,"line_start":40,"line_end":40,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":25693,"byte_end":25700,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":26135,"byte_end":26145,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":25837,"byte_end":25922,"line_start":47,"line_end":47,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":25927,"byte_end":25998,"line_start":48,"line_end":48,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":26003,"byte_end":26076,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":26081,"byte_end":26109,"line_start":50,"line_end":50,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":26114,"byte_end":26123,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":26522,"byte_end":26533,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":26402,"byte_end":26468,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":26473,"byte_end":26496,"line_start":63,"line_end":63,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":26501,"byte_end":26510,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3475},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/option.rs","byte_start":28523,"byte_end":28535,"line_start":27,"line_end":27,"column_start":12,"column_end":24},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"OptionFuture {  }","parent":null,"children":[{"krate":0,"index":3477}],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"/ A future representing a value which may or may not be present.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/option.rs","byte_start":27982,"byte_end":28048,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/option.rs","byte_start":28049,"byte_end":28052,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Created by the [`From`] implementation for [`Option`](std::option::Option).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/option.rs","byte_start":28053,"byte_end":28132,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/option.rs","byte_start":28133,"byte_end":28136,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/option.rs","byte_start":28137,"byte_end":28151,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/option.rs","byte_start":28152,"byte_end":28155,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/option.rs","byte_start":28156,"byte_end":28163,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/option.rs","byte_start":28164,"byte_end":28205,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/ use futures::future::OptionFuture;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/option.rs","byte_start":28206,"byte_end":28244,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/option.rs","byte_start":28245,"byte_end":28248,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let mut a: OptionFuture<_> = Some(async { 123 }).into();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/option.rs","byte_start":28249,"byte_end":28309,"line_start":18,"line_end":18,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(a.await, Some(123));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/option.rs","byte_start":28310,"byte_end":28345,"line_start":19,"line_end":19,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/option.rs","byte_start":28346,"byte_end":28349,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ a = None.into();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/option.rs","byte_start":28350,"byte_end":28370,"line_start":21,"line_end":21,"column_start":1,"column_end":21}},{"value":"/ assert_eq!(a.await, None);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/option.rs","byte_start":28371,"byte_end":28401,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/option.rs","byte_start":28402,"byte_end":28411,"line_start":23,"line_end":23,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/option.rs","byte_start":28412,"byte_end":28419,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/option.rs","byte_start":28444,"byte_end":28511,"line_start":26,"line_end":26,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":127},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/poll_fn.rs","byte_start":29586,"byte_end":29592,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":129}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/poll_fn.rs","byte_start":29466,"byte_end":29506,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/poll_fn.rs","byte_start":29507,"byte_end":29574,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":132},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/poll_fn.rs","byte_start":30179,"byte_end":30186,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/poll_fn.rs","byte_start":29643,"byte_end":29714,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/poll_fn.rs","byte_start":29715,"byte_end":29718,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/poll_fn.rs","byte_start":29719,"byte_end":29785,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/poll_fn.rs","byte_start":29786,"byte_end":29789,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/poll_fn.rs","byte_start":29790,"byte_end":29804,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/poll_fn.rs","byte_start":29805,"byte_end":29808,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/poll_fn.rs","byte_start":29809,"byte_end":29816,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/poll_fn.rs","byte_start":29817,"byte_end":29858,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/poll_fn.rs","byte_start":29859,"byte_end":29892,"line_start":24,"line_end":24,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/poll_fn.rs","byte_start":29893,"byte_end":29932,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/poll_fn.rs","byte_start":29933,"byte_end":29936,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/poll_fn.rs","byte_start":29937,"byte_end":29994,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/poll_fn.rs","byte_start":29995,"byte_end":30038,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/poll_fn.rs","byte_start":30039,"byte_end":30044,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/poll_fn.rs","byte_start":30045,"byte_end":30048,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/poll_fn.rs","byte_start":30049,"byte_end":30090,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/poll_fn.rs","byte_start":30091,"byte_end":30153,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/poll_fn.rs","byte_start":30154,"byte_end":30163,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/poll_fn.rs","byte_start":30164,"byte_end":30171,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3487},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":30906,"byte_end":30911,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":30755,"byte_end":30802,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":30827,"byte_end":30894,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":163},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":31504,"byte_end":31509,"line_start":39,"line_end":39,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"pub fn ready<T>(T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a value.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":31259,"byte_end":31318,"line_start":27,"line_end":27,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":31319,"byte_end":31322,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":31323,"byte_end":31337,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":31338,"byte_end":31341,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":31342,"byte_end":31349,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":31350,"byte_end":31391,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":31392,"byte_end":31416,"line_start":33,"line_end":33,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":31417,"byte_end":31420,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":31421,"byte_end":31450,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":31451,"byte_end":31478,"line_start":36,"line_end":36,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":31479,"byte_end":31488,"line_start":37,"line_end":37,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":31489,"byte_end":31496,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":165},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":31821,"byte_end":31823,"line_start":55,"line_end":55,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"pub fn ok<T, E>(T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":31555,"byte_end":31622,"line_start":43,"line_end":43,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":31623,"byte_end":31626,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":31627,"byte_end":31641,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":31642,"byte_end":31645,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":31646,"byte_end":31653,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":31654,"byte_end":31695,"line_start":48,"line_end":48,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":31696,"byte_end":31720,"line_start":49,"line_end":49,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":31721,"byte_end":31724,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":31725,"byte_end":31763,"line_start":51,"line_end":51,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":31764,"byte_end":31795,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":31796,"byte_end":31805,"line_start":53,"line_end":53,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":31806,"byte_end":31813,"line_start":54,"line_end":54,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":168},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":32154,"byte_end":32157,"line_start":71,"line_end":71,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"pub fn err<T, E>(E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":31887,"byte_end":31953,"line_start":59,"line_end":59,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":31954,"byte_end":31957,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":31958,"byte_end":31972,"line_start":61,"line_end":61,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":31973,"byte_end":31976,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":31977,"byte_end":31984,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":31985,"byte_end":32026,"line_start":64,"line_end":64,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":32027,"byte_end":32051,"line_start":65,"line_end":65,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":32052,"byte_end":32055,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":32056,"byte_end":32095,"line_start":67,"line_end":67,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":32096,"byte_end":32128,"line_start":68,"line_end":68,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":32129,"byte_end":32138,"line_start":69,"line_end":69,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":32139,"byte_end":32146,"line_start":70,"line_end":70,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3497},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":34437,"byte_end":34441,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":3500},{"krate":0,"index":3501}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":32621,"byte_end":32688,"line_start":17,"line_end":17,"column_start":9,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":3519},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":34507,"byte_end":34512,"line_start":81,"line_end":81,"column_start":6,"column_end":11},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":3523},{"krate":0,"index":3524},{"krate":0,"index":3525}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":32621,"byte_end":32688,"line_start":17,"line_end":17,"column_start":9,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":3547},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":34584,"byte_end":34589,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":3552},{"krate":0,"index":3553},{"krate":0,"index":3554},{"krate":0,"index":3555}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":32621,"byte_end":32688,"line_start":17,"line_end":17,"column_start":9,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":3581},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":34667,"byte_end":34672,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":3587},{"krate":0,"index":3588},{"krate":0,"index":3589},{"krate":0,"index":3590},{"krate":0,"index":3591}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":32621,"byte_end":32688,"line_start":17,"line_end":17,"column_start":9,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":191},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":35287,"byte_end":35291,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"pub fn join<Fut1, Fut2>(Fut1, Fut2) -> Join<Fut1, Fut2> where Fut1: Future,\nFut2: Future","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":34710,"byte_end":34781,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":34782,"byte_end":34785,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":34786,"byte_end":34857,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":34858,"byte_end":34933,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":34934,"byte_end":34937,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":34938,"byte_end":35007,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":35008,"byte_end":35034,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":35035,"byte_end":35038,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":35039,"byte_end":35053,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":35054,"byte_end":35057,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":35058,"byte_end":35065,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":35066,"byte_end":35107,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":35108,"byte_end":35132,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":35133,"byte_end":35136,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":35137,"byte_end":35161,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":35162,"byte_end":35186,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":35187,"byte_end":35221,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":35222,"byte_end":35225,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":35226,"byte_end":35261,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":35262,"byte_end":35271,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":35272,"byte_end":35279,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":194},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":35837,"byte_end":35842,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"pub fn join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> Join3<Fut1, Fut2, Fut3>\nwhere Fut1: Future, Fut2: Future, Fut3: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":35498,"byte_end":35550,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":35551,"byte_end":35554,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":35555,"byte_end":35569,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":35570,"byte_end":35573,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":35574,"byte_end":35581,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":35582,"byte_end":35623,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":35624,"byte_end":35648,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":35649,"byte_end":35652,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":35653,"byte_end":35677,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":35678,"byte_end":35702,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":35703,"byte_end":35727,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":35728,"byte_end":35767,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":35768,"byte_end":35771,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":35772,"byte_end":35811,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":35812,"byte_end":35821,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":35822,"byte_end":35829,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":198},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":36425,"byte_end":36430,"line_start":166,"line_end":166,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"pub fn join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> Join4<Fut1, Fut2, Fut3, Fut4> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":36055,"byte_end":36107,"line_start":149,"line_end":149,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":36108,"byte_end":36111,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":36112,"byte_end":36126,"line_start":151,"line_end":151,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":36127,"byte_end":36130,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":36131,"byte_end":36138,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":36139,"byte_end":36180,"line_start":154,"line_end":154,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":36181,"byte_end":36205,"line_start":155,"line_end":155,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":36206,"byte_end":36209,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":36210,"byte_end":36234,"line_start":157,"line_end":157,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":36235,"byte_end":36259,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":36260,"byte_end":36284,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":36285,"byte_end":36309,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":36310,"byte_end":36352,"line_start":161,"line_end":161,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":36353,"byte_end":36356,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":36357,"byte_end":36399,"line_start":163,"line_end":163,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":36400,"byte_end":36409,"line_start":164,"line_end":164,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":36410,"byte_end":36417,"line_start":165,"line_end":165,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":203},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":37102,"byte_end":37107,"line_start":199,"line_end":199,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"pub fn join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> Join5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future, Fut5: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":36701,"byte_end":36753,"line_start":181,"line_end":181,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":36754,"byte_end":36757,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":36758,"byte_end":36772,"line_start":183,"line_end":183,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":36773,"byte_end":36776,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":36777,"byte_end":36784,"line_start":185,"line_end":185,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":36785,"byte_end":36826,"line_start":186,"line_end":186,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":36827,"byte_end":36851,"line_start":187,"line_end":187,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":36852,"byte_end":36855,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":36856,"byte_end":36880,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":36881,"byte_end":36905,"line_start":190,"line_end":190,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":36906,"byte_end":36930,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":36931,"byte_end":36955,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":36956,"byte_end":36980,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":36981,"byte_end":37026,"line_start":194,"line_end":194,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":37027,"byte_end":37030,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":37031,"byte_end":37076,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":37077,"byte_end":37086,"line_start":197,"line_end":197,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join.rs","byte_start":37087,"byte_end":37094,"line_start":198,"line_end":198,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":239},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":39132,"byte_end":39139,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"JoinAll","qualname":"::future::join_all::JoinAll","value":"JoinAll {  }","parent":null,"children":[{"krate":0,"index":241}],"decl_id":null,"docs":" Future for the [`join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`join_all`] function.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":39011,"byte_end":39052,"line_start":59,"line_end":59,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":39053,"byte_end":39120,"line_start":60,"line_end":60,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":245},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":40681,"byte_end":40689,"line_start":115,"line_end":115,"column_start":8,"column_end":16},"name":"join_all","qualname":"::future::join_all::join_all","value":"pub fn join_all<I>(I) -> JoinAll<I::Item> where I: IntoIterator,\nI::Item: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents a collection of the outputs of the futures\n given.","sig":null,"attributes":[{"value":"/ Creates a future which represents a collection of the outputs of the futures","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":39472,"byte_end":39552,"line_start":80,"line_end":80,"column_start":1,"column_end":81}},{"value":"/ given.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":39553,"byte_end":39563,"line_start":81,"line_end":81,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":39564,"byte_end":39567,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":39568,"byte_end":39647,"line_start":83,"line_end":83,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":39648,"byte_end":39728,"line_start":84,"line_end":84,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":39729,"byte_end":39747,"line_start":85,"line_end":85,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":39748,"byte_end":39751,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":39752,"byte_end":39829,"line_start":87,"line_end":87,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":39830,"byte_end":39887,"line_start":88,"line_end":88,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":39888,"byte_end":39891,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ # See Also","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":39892,"byte_end":39906,"line_start":90,"line_end":90,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":39907,"byte_end":39910,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This is purposefully a very simple API for basic use-cases. In a lot of","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":39911,"byte_end":39986,"line_start":92,"line_end":92,"column_start":1,"column_end":76}},{"value":"/ cases you will want to use the more powerful","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":39987,"byte_end":40035,"line_start":93,"line_end":93,"column_start":1,"column_end":49}},{"value":"/ [`FuturesUnordered`][crate::stream::FuturesUnordered] APIs, some","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":40036,"byte_end":40104,"line_start":94,"line_end":94,"column_start":1,"column_end":69}},{"value":"/ examples of additional functionality that provides:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":40105,"byte_end":40160,"line_start":95,"line_end":95,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":40161,"byte_end":40164,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/  * Adding new futures to the set even after it has been started.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":40165,"byte_end":40233,"line_start":97,"line_end":97,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":40234,"byte_end":40237,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/  * Only polling the specific futures that have been woken. In cases where","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":40238,"byte_end":40315,"line_start":99,"line_end":99,"column_start":1,"column_end":78}},{"value":"/    you have a lot of futures this will result in much more efficient polling.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":40316,"byte_end":40397,"line_start":100,"line_end":100,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":40398,"byte_end":40401,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":40402,"byte_end":40416,"line_start":102,"line_end":102,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":40417,"byte_end":40420,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":40421,"byte_end":40428,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":40429,"byte_end":40470,"line_start":105,"line_end":105,"column_start":1,"column_end":42}},{"value":"/ use futures::future::join_all;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":40471,"byte_end":40505,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":40506,"byte_end":40509,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ async fn foo(i: u32) -> u32 { i }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":40510,"byte_end":40547,"line_start":108,"line_end":108,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":40548,"byte_end":40551,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![foo(1), foo(2), foo(3)];","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":40552,"byte_end":40599,"line_start":110,"line_end":110,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":40600,"byte_end":40603,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(join_all(futures).await, [1, 2, 3]);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":40604,"byte_end":40655,"line_start":112,"line_end":112,"column_start":1,"column_end":52}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":40656,"byte_end":40665,"line_start":113,"line_end":113,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":40666,"byte_end":40673,"line_start":114,"line_end":114,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3674},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":42202,"byte_end":42208,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":3677}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":42064,"byte_end":42105,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":42106,"byte_end":42173,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":273},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":43477,"byte_end":43483,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"pub fn select<A, B>(A, B) -> Select<A, B> where A: Future + Unpin, B: Future +\nUnpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":42299,"byte_end":42369,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":42370,"byte_end":42373,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":42374,"byte_end":42452,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":42453,"byte_end":42529,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":42530,"byte_end":42602,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":42603,"byte_end":42606,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":42607,"byte_end":42679,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":42680,"byte_end":42708,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":42709,"byte_end":42712,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":42713,"byte_end":42780,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":42781,"byte_end":42845,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":42846,"byte_end":42896,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":42897,"byte_end":42900,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":42901,"byte_end":42915,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":42916,"byte_end":42919,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":42920,"byte_end":42927,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":42928,"byte_end":42987,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":42988,"byte_end":42991,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":42992,"byte_end":43045,"line_start":33,"line_end":33,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":43046,"byte_end":43049,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B, E>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":43050,"byte_end":43128,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":43129,"byte_end":43161,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":43162,"byte_end":43194,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":43195,"byte_end":43200,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":43201,"byte_end":43245,"line_start":39,"line_end":39,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":43246,"byte_end":43272,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":43273,"byte_end":43350,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":43351,"byte_end":43430,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":43431,"byte_end":43444,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":43445,"byte_end":43455,"line_start":44,"line_end":44,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":43456,"byte_end":43461,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":43462,"byte_end":43469,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3682},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select_all.rs","byte_start":44835,"byte_end":44844,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::future::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":3684}],"decl_id":null,"docs":" Future for the [`select_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_all`] function.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select_all.rs","byte_start":44695,"byte_end":44738,"line_start":9,"line_end":9,"column_start":1,"column_end":44}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select_all.rs","byte_start":44756,"byte_end":44823,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":300},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select_all.rs","byte_start":45624,"byte_end":45634,"line_start":33,"line_end":33,"column_start":8,"column_end":18},"name":"select_all","qualname":"::future::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Future + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select over a list of futures.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select_all.rs","byte_start":44922,"byte_end":44988,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select_all.rs","byte_start":44989,"byte_end":44992,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready. Upon","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select_all.rs","byte_start":44993,"byte_end":45073,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ completion the item resolved will be returned, along with the index of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select_all.rs","byte_start":45074,"byte_end":45152,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ future that was ready and the list of all the remaining futures.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select_all.rs","byte_start":45153,"byte_end":45221,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select_all.rs","byte_start":45222,"byte_end":45225,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ There are no guarantees provided on the order of the list with the remaining","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select_all.rs","byte_start":45226,"byte_end":45306,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ futures. They might be swapped around, reversed, or completely random.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select_all.rs","byte_start":45307,"byte_end":45381,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select_all.rs","byte_start":45382,"byte_end":45385,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select_all.rs","byte_start":45386,"byte_end":45463,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select_all.rs","byte_start":45464,"byte_end":45521,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select_all.rs","byte_start":45522,"byte_end":45525,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select_all.rs","byte_start":45526,"byte_end":45538,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select_all.rs","byte_start":45539,"byte_end":45542,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select_all.rs","byte_start":45543,"byte_end":45616,"line_start":32,"line_end":32,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":325},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/flatten.rs","byte_start":47049,"byte_end":47056,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::future::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":327}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`flatten`](super::FutureExt::flatten) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/flatten.rs","byte_start":46904,"byte_end":46969,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/flatten.rs","byte_start":46970,"byte_end":47037,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":354},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/flatten_stream.rs","byte_start":48486,"byte_end":48499,"line_start":10,"line_end":10,"column_start":12,"column_end":25},"name":"FlattenStream","qualname":"::future::flatten_stream::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":356}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](super::FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`flatten_stream`](super::FutureExt::flatten_stream) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/flatten_stream.rs","byte_start":48346,"byte_end":48425,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/flatten_stream.rs","byte_start":48426,"byte_end":48474,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3707},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":51279,"byte_end":51283,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Fuse","qualname":"::future::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":3709}],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`fuse`](super::FutureExt::fuse) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":51123,"byte_end":51182,"line_start":6,"line_end":6,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":51200,"byte_end":51267,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":53131,"byte_end":53141,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"pub fn terminated() -> Fuse<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":51509,"byte_end":51577,"line_start":22,"line_end":22,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":51582,"byte_end":51585,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":51590,"byte_end":51658,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":51663,"byte_end":51708,"line_start":25,"line_end":25,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":51713,"byte_end":51716,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":51721,"byte_end":51735,"line_start":27,"line_end":27,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":51740,"byte_end":51743,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":51748,"byte_end":51755,"line_start":29,"line_end":29,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":51760,"byte_end":51801,"line_start":30,"line_end":30,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":51806,"byte_end":51837,"line_start":31,"line_end":31,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":51842,"byte_end":51898,"line_start":32,"line_end":32,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":51903,"byte_end":51927,"line_start":33,"line_end":33,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":51932,"byte_end":51967,"line_start":34,"line_end":34,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":51972,"byte_end":51997,"line_start":35,"line_end":35,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":52002,"byte_end":52005,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":52010,"byte_end":52059,"line_start":37,"line_end":37,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":52064,"byte_end":52067,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":52072,"byte_end":52114,"line_start":39,"line_end":39,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":52119,"byte_end":52158,"line_start":40,"line_end":40,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":52163,"byte_end":52202,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":52207,"byte_end":52224,"line_start":42,"line_end":42,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":52229,"byte_end":52232,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::termianted()` to create an already-terminated future","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":52237,"byte_end":52307,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":52312,"byte_end":52351,"line_start":45,"line_end":45,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":52356,"byte_end":52397,"line_start":46,"line_end":46,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":52402,"byte_end":52428,"line_start":47,"line_end":47,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":52433,"byte_end":52436,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":52441,"byte_end":52451,"line_start":49,"line_end":49,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":52456,"byte_end":52473,"line_start":50,"line_end":50,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":52478,"byte_end":52512,"line_start":51,"line_end":51,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":52517,"byte_end":52564,"line_start":52,"line_end":52,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":52569,"byte_end":52618,"line_start":53,"line_end":53,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":52623,"byte_end":52685,"line_start":54,"line_end":54,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":52690,"byte_end":52714,"line_start":55,"line_end":55,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":52719,"byte_end":52762,"line_start":56,"line_end":56,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":52767,"byte_end":52824,"line_start":57,"line_end":57,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":52829,"byte_end":52904,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":52909,"byte_end":52939,"line_start":59,"line_end":59,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":52944,"byte_end":52961,"line_start":60,"line_end":60,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":52966,"byte_end":52980,"line_start":61,"line_end":61,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":52985,"byte_end":53069,"line_start":62,"line_end":62,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":53074,"byte_end":53083,"line_start":63,"line_end":63,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":53088,"byte_end":53093,"line_start":64,"line_end":64,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":53098,"byte_end":53107,"line_start":65,"line_end":65,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":53112,"byte_end":53119,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3716},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/into_stream.rs","byte_start":54071,"byte_end":54081,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"IntoStream","qualname":"::future::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":3718}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`into_stream`](super::FutureExt::into_stream) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/into_stream.rs","byte_start":53920,"byte_end":53993,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/into_stream.rs","byte_start":53994,"byte_end":54042,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3725},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/map.rs","byte_start":55110,"byte_end":55113,"line_start":9,"line_end":9,"column_start":12,"column_end":15},"name":"Map","qualname":"::future::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":3728},{"krate":0,"index":3729}],"decl_id":null,"docs":" Future for the [`map`](super::FutureExt::map) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`map`](super::FutureExt::map) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/map.rs","byte_start":54956,"byte_end":55013,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/map.rs","byte_start":55031,"byte_end":55098,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3739},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/then.rs","byte_start":56386,"byte_end":56390,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Then","qualname":"::future::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":3743}],"decl_id":null,"docs":" Future for the [`then`](super::FutureExt::then) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`then`](super::FutureExt::then) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/then.rs","byte_start":56230,"byte_end":56289,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/then.rs","byte_start":56307,"byte_end":56374,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3752},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/inspect.rs","byte_start":57630,"byte_end":57637,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Inspect","qualname":"::future::inspect::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":3755},{"krate":0,"index":3756}],"decl_id":null,"docs":" Future for the [`inspect`](super::FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`inspect`](super::FutureExt::inspect) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/inspect.rs","byte_start":57468,"byte_end":57533,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/inspect.rs","byte_start":57551,"byte_end":57618,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3766},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/unit_error.rs","byte_start":58928,"byte_end":58937,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"UnitError","qualname":"::future::unit_error::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":3768}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"/ Future for the [`unit_error`](super::FutureExt::unit_error) combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/unit_error.rs","byte_start":58756,"byte_end":58831,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/unit_error.rs","byte_start":58849,"byte_end":58916,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3775},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/never_error.rs","byte_start":59868,"byte_end":59878,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"NeverError","qualname":"::future::never_error::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":3777}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"/ Future for the [`never_error`](super::FutureExt::never_error) combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/never_error.rs","byte_start":59694,"byte_end":59771,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/never_error.rs","byte_start":59789,"byte_end":59856,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3787},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/either.rs","byte_start":60883,"byte_end":60887,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":3784},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/either.rs","byte_start":60850,"byte_end":60878,"line_start":12,"line_end":12,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3790},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/either.rs","byte_start":60930,"byte_end":60935,"line_start":15,"line_end":15,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":3784},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/either.rs","byte_start":60896,"byte_end":60925,"line_start":14,"line_end":14,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":3784},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/either.rs","byte_start":60831,"byte_end":60837,"line_start":11,"line_end":11,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"pub enum Either<A, B> {\n\n    /// First branch of the type\n    Left(A),\n\n    /// Second branch of the type\n    Right(B),\n}","parent":null,"children":[{"krate":0,"index":3787},{"krate":0,"index":3790}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single\n type.\n","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/either.rs","byte_start":60687,"byte_end":60787,"line_start":8,"line_end":8,"column_start":1,"column_end":101}},{"value":"/ type.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/either.rs","byte_start":60788,"byte_end":60797,"line_start":9,"line_end":9,"column_start":1,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/either.rs","byte_start":61134,"byte_end":61146,"line_start":22,"line_end":22,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"pub fn factor_first(Self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/either.rs","byte_start":60986,"byte_end":61044,"line_start":19,"line_end":19,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/either.rs","byte_start":61049,"byte_end":61052,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/either.rs","byte_start":61057,"byte_end":61122,"line_start":21,"line_end":21,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/either.rs","byte_start":61526,"byte_end":61539,"line_start":34,"line_end":34,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"pub fn factor_second(Self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/either.rs","byte_start":61377,"byte_end":61435,"line_start":31,"line_end":31,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/either.rs","byte_start":61440,"byte_end":61443,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/either.rs","byte_start":61448,"byte_end":61514,"line_start":33,"line_end":33,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/either.rs","byte_start":61827,"byte_end":61837,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/either.rs","byte_start":61754,"byte_end":61815,"line_start":43,"line_end":43,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":3856},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7884644,"byte_end":7884653,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"Abortable","qualname":"::future::abortable::Abortable","value":"Abortable {  }","parent":null,"children":[{"krate":0,"index":3858},{"krate":0,"index":3859}],"decl_id":null,"docs":" A future which can be remotely short-circuited using an `AbortHandle`.\n","sig":null,"attributes":[{"value":"/ A future which can be remotely short-circuited using an `AbortHandle`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7884466,"byte_end":7884540,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7884565,"byte_end":7884632,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3836},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7885605,"byte_end":7885608,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<Abortable<Fut>>::new","value":"pub fn new(Fut, AbortRegistration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future using an existing `AbortRegistration`.\n `AbortRegistration`s can be acquired through `AbortHandle::new`.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future using an existing `AbortRegistration`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7884838,"byte_end":7884913,"line_start":23,"line_end":23,"column_start":5,"column_end":80}},{"value":"/ `AbortRegistration`s can be acquired through `AbortHandle::new`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7884918,"byte_end":7884986,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7884991,"byte_end":7884994,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ When `abort` is called on the handle tied to `reg` or if `abort` has","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7884999,"byte_end":7885071,"line_start":26,"line_end":26,"column_start":5,"column_end":77}},{"value":"/ already been called, the future will complete immediately without making","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7885076,"byte_end":7885152,"line_start":27,"line_end":27,"column_start":5,"column_end":81}},{"value":"/ any further progress.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7885157,"byte_end":7885182,"line_start":28,"line_end":28,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7885187,"byte_end":7885190,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7885195,"byte_end":7885207,"line_start":30,"line_end":30,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7885212,"byte_end":7885215,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7885220,"byte_end":7885227,"line_start":32,"line_end":32,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7885232,"byte_end":7885273,"line_start":33,"line_end":33,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7885278,"byte_end":7885337,"line_start":34,"line_end":34,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7885342,"byte_end":7885345,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7885350,"byte_end":7885419,"line_start":36,"line_end":36,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7885424,"byte_end":7885489,"line_start":37,"line_end":37,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7885494,"byte_end":7885519,"line_start":38,"line_end":38,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7885524,"byte_end":7885567,"line_start":39,"line_end":39,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7885572,"byte_end":7885581,"line_start":40,"line_end":40,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7885586,"byte_end":7885593,"line_start":41,"line_end":41,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3866},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7885936,"byte_end":7885953,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"AbortRegistration","qualname":"::future::abortable::AbortRegistration","value":"AbortRegistration {  }","parent":null,"children":[{"krate":0,"index":3867}],"decl_id":null,"docs":" A registration handle for a `Abortable` future.\n Values of this type can be acquired from `AbortHandle::new` and are used\n in calls to `Abortable::new`.\n","sig":null,"attributes":[{"value":"/ A registration handle for a `Abortable` future.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7885745,"byte_end":7885796,"line_start":50,"line_end":50,"column_start":1,"column_end":52}},{"value":"/ Values of this type can be acquired from `AbortHandle::new` and are used","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7885797,"byte_end":7885873,"line_start":51,"line_end":51,"column_start":1,"column_end":77}},{"value":"/ in calls to `Abortable::new`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7885874,"byte_end":7885907,"line_start":52,"line_end":52,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3870},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7886060,"byte_end":7886071,"line_start":60,"line_end":60,"column_start":12,"column_end":23},"name":"AbortHandle","qualname":"::future::abortable::AbortHandle","value":"AbortHandle {  }","parent":null,"children":[{"krate":0,"index":3871}],"decl_id":null,"docs":" A handle to a `Abortable` future.\n","sig":null,"attributes":[{"value":"/ A handle to a `Abortable` future.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7885987,"byte_end":7886024,"line_start":58,"line_end":58,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3838},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7886741,"byte_end":7886749,"line_start":82,"line_end":82,"column_start":12,"column_end":20},"name":"new_pair","qualname":"<AbortHandle>::new_pair","value":"pub fn new_pair() -> (Self, AbortRegistration)","parent":null,"children":[],"decl_id":null,"docs":" Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used\n to abort a running future.","sig":null,"attributes":[{"value":"/ Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7886128,"byte_end":7886202,"line_start":65,"line_end":65,"column_start":5,"column_end":79}},{"value":"/ to abort a running future.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7886207,"byte_end":7886237,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7886242,"byte_end":7886245,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with a call to `Abortable::new`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7886250,"byte_end":7886318,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7886323,"byte_end":7886326,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7886331,"byte_end":7886343,"line_start":70,"line_end":70,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7886348,"byte_end":7886351,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7886356,"byte_end":7886363,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7886368,"byte_end":7886409,"line_start":73,"line_end":73,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7886414,"byte_end":7886473,"line_start":74,"line_end":74,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7886478,"byte_end":7886481,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7886486,"byte_end":7886555,"line_start":76,"line_end":76,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7886560,"byte_end":7886625,"line_start":77,"line_end":77,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7886630,"byte_end":7886655,"line_start":78,"line_end":78,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7886660,"byte_end":7886703,"line_start":79,"line_end":79,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7886708,"byte_end":7886717,"line_start":80,"line_end":80,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7886722,"byte_end":7886729,"line_start":81,"line_end":81,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":3839},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7887652,"byte_end":7887661,"line_start":114,"line_end":114,"column_start":8,"column_end":17},"name":"abortable","qualname":"::future::abortable::abortable","value":"pub fn abortable<Fut>(Fut) -> (Abortable<Fut>, AbortHandle) where Fut: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future and a `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future and a `AbortHandle` which can be used to stop it.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7887283,"byte_end":7887369,"line_start":107,"line_end":107,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7887370,"byte_end":7887373,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7887374,"byte_end":7887450,"line_start":109,"line_end":109,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7887451,"byte_end":7887504,"line_start":110,"line_end":110,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7887505,"byte_end":7887508,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7887509,"byte_end":7887586,"line_start":112,"line_end":112,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7887587,"byte_end":7887644,"line_start":113,"line_end":113,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":3881},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7887965,"byte_end":7887972,"line_start":126,"line_end":126,"column_start":12,"column_end":19},"name":"Aborted","qualname":"::future::abortable::Aborted","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicator that the `Abortable` future was aborted.\n","sig":null,"attributes":[{"value":"/ Indicator that the `Abortable` future was aborted.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7887854,"byte_end":7887908,"line_start":124,"line_end":124,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3849},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7889577,"byte_end":7889582,"line_start":173,"line_end":173,"column_start":12,"column_end":17},"name":"abort","qualname":"<AbortHandle>::abort","value":"pub fn abort(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Abort the `Abortable` future associated with this handle.","sig":null,"attributes":[{"value":"/ Abort the `Abortable` future associated with this handle.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7889213,"byte_end":7889274,"line_start":167,"line_end":167,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7889279,"byte_end":7889282,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Notifies the Abortable future associated with this handle that it","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7889287,"byte_end":7889356,"line_start":169,"line_end":169,"column_start":5,"column_end":74}},{"value":"/ should abort. Note that if the future is currently being polled on","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7889361,"byte_end":7889431,"line_start":170,"line_end":170,"column_start":5,"column_end":75}},{"value":"/ another thread, it will not immediately stop running. Instead, it will","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7889436,"byte_end":7889510,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ continue to run until its poll method returns.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7889515,"byte_end":7889565,"line_start":172,"line_end":172,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":3894},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/catch_unwind.rs","byte_start":71700,"byte_end":71711,"line_start":11,"line_end":11,"column_start":12,"column_end":23},"name":"CatchUnwind","qualname":"::future::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":3896}],"decl_id":null,"docs":" Future for the [`catch_unwind`](super::FutureExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`catch_unwind`](super::FutureExt::catch_unwind) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/catch_unwind.rs","byte_start":71528,"byte_end":71603,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/catch_unwind.rs","byte_start":71621,"byte_end":71688,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3903},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/remote_handle.rs","byte_start":72909,"byte_end":72921,"line_start":26,"line_end":26,"column_start":12,"column_end":24},"name":"RemoteHandle","qualname":"::future::remote_handle::RemoteHandle","value":"RemoteHandle {  }","parent":null,"children":[{"krate":0,"index":3905},{"krate":0,"index":3906}],"decl_id":null,"docs":" The handle to a remote future returned by\n [`remote_handle`](crate::future::FutureExt::remote_handle).\n","sig":null,"attributes":[{"value":"/ The handle to a remote future returned by","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/remote_handle.rs","byte_start":72703,"byte_end":72748,"line_start":22,"line_end":22,"column_start":1,"column_end":46}},{"value":"/ [`remote_handle`](crate::future::FutureExt::remote_handle).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/remote_handle.rs","byte_start":72749,"byte_end":72812,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/remote_handle.rs","byte_start":72813,"byte_end":72880,"line_start":24,"line_end":24,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/remote_handle.rs","byte_start":73220,"byte_end":73226,"line_start":36,"line_end":36,"column_start":12,"column_end":18},"name":"forget","qualname":"<RemoteHandle<T>>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Drops this handle *without* canceling the underlying future.","sig":null,"attributes":[{"value":"/ Drops this handle *without* canceling the underlying future.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/remote_handle.rs","byte_start":73032,"byte_end":73096,"line_start":32,"line_end":32,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/remote_handle.rs","byte_start":73101,"byte_end":73104,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This method can be used if you want to drop the handle, but let the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/remote_handle.rs","byte_start":73109,"byte_end":73180,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ execution continue.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/remote_handle.rs","byte_start":73185,"byte_end":73208,"line_start":35,"line_end":35,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":681},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/remote_handle.rs","byte_start":73988,"byte_end":73994,"line_start":58,"line_end":58,"column_start":12,"column_end":18},"name":"Remote","qualname":"::future::remote_handle::Remote","value":"Remote {  }","parent":null,"children":[{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685}],"decl_id":null,"docs":" A future which sends its output to the corresponding `RemoteHandle`.\n Created by [`remote_handle`](crate::future::FutureExt::remote_handle).\n","sig":null,"attributes":[{"value":"/ A future which sends its output to the corresponding `RemoteHandle`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/remote_handle.rs","byte_start":73761,"byte_end":73833,"line_start":55,"line_end":55,"column_start":1,"column_end":73}},{"value":"/ Created by [`remote_handle`](crate::future::FutureExt::remote_handle).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/remote_handle.rs","byte_start":73834,"byte_end":73908,"line_start":56,"line_end":56,"column_start":1,"column_end":75}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/remote_handle.rs","byte_start":73909,"byte_end":73976,"line_start":57,"line_end":57,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":722},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/shared.rs","byte_start":76293,"byte_end":76299,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Shared","qualname":"::future::shared::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":724},{"krate":0,"index":725}],"decl_id":null,"docs":" Future for the [`shared`](super::FutureExt::shared) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`shared`](super::FutureExt::shared) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/shared.rs","byte_start":76150,"byte_end":76213,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/shared.rs","byte_start":76214,"byte_end":76281,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/shared.rs","byte_start":78434,"byte_end":78438,"line_start":99,"line_end":99,"column_start":12,"column_end":16},"name":"peek","qualname":"<Shared<Fut>>::peek","value":"pub fn peek(&Self) -> Option<&Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns [`Some`] containing a reference to this [`Shared`]'s output if\n it has already been computed by a clone or [`None`] if it hasn't been\n computed yet or this [`Shared`] already returned its output from\n [`poll`](Future::poll).\n","sig":null,"attributes":[{"value":"/ Returns [`Some`] containing a reference to this [`Shared`]'s output if","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/shared.rs","byte_start":78165,"byte_end":78239,"line_start":95,"line_end":95,"column_start":5,"column_end":79}},{"value":"/ it has already been computed by a clone or [`None`] if it hasn't been","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/shared.rs","byte_start":78244,"byte_end":78317,"line_start":96,"line_end":96,"column_start":5,"column_end":78}},{"value":"/ computed yet or this [`Shared`] already returned its output from","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/shared.rs","byte_start":78322,"byte_end":78390,"line_start":97,"line_end":97,"column_start":5,"column_end":73}},{"value":"/ [`poll`](Future::poll).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/shared.rs","byte_start":78395,"byte_end":78422,"line_start":98,"line_end":98,"column_start":5,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":795},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":6329,"byte_end":6338,"line_start":114,"line_end":114,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":796},{"krate":0,"index":799},{"krate":0,"index":802},{"krate":0,"index":804},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":817},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":6230,"byte_end":6304,"line_start":112,"line_end":112,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":6305,"byte_end":6318,"line_start":113,"line_end":113,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":7170,"byte_end":7173,"line_start":137,"line_end":137,"column_start":8,"column_end":11},"name":"map","qualname":"::future::FutureExt::map","value":"pub fn map<U, F>(Self, F) -> Map<Self, F> where F: FnOnce(Self::Output) -> U,\nSelf: Sized","parent":{"krate":0,"index":795},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":6353,"byte_end":6428,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":6433,"byte_end":6456,"line_start":116,"line_end":116,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":6461,"byte_end":6464,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":6469,"byte_end":6543,"line_start":118,"line_end":118,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":6548,"byte_end":6619,"line_start":119,"line_end":119,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":6624,"byte_end":6686,"line_start":120,"line_end":120,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":6691,"byte_end":6694,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":6699,"byte_end":6770,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":6775,"byte_end":6846,"line_start":123,"line_end":123,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":6851,"byte_end":6872,"line_start":124,"line_end":124,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":6877,"byte_end":6880,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":6885,"byte_end":6899,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":6904,"byte_end":6907,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":6912,"byte_end":6919,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":6924,"byte_end":6965,"line_start":129,"line_end":129,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":6970,"byte_end":7005,"line_start":130,"line_end":130,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":7010,"byte_end":7013,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":7018,"byte_end":7047,"line_start":132,"line_end":132,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":7052,"byte_end":7095,"line_start":133,"line_end":133,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":7100,"byte_end":7136,"line_start":134,"line_end":134,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":7141,"byte_end":7150,"line_start":135,"line_end":135,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":7155,"byte_end":7162,"line_start":136,"line_end":136,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":8198,"byte_end":8202,"line_start":168,"line_end":168,"column_start":8,"column_end":12},"name":"then","qualname":"::future::FutureExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where\nF: FnOnce(Self::Output) -> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":795},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":7345,"byte_end":7421,"line_start":144,"line_end":144,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":7426,"byte_end":7469,"line_start":145,"line_end":145,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":7474,"byte_end":7477,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":7482,"byte_end":7553,"line_start":147,"line_end":147,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":7558,"byte_end":7632,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":7637,"byte_end":7653,"line_start":149,"line_end":149,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":7658,"byte_end":7661,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":7666,"byte_end":7741,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":7746,"byte_end":7757,"line_start":152,"line_end":152,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":7762,"byte_end":7765,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":7770,"byte_end":7841,"line_start":154,"line_end":154,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":7846,"byte_end":7872,"line_start":155,"line_end":155,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":7877,"byte_end":7880,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":7885,"byte_end":7899,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":7904,"byte_end":7907,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":7912,"byte_end":7919,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":7924,"byte_end":7965,"line_start":160,"line_end":160,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":7970,"byte_end":8005,"line_start":161,"line_end":161,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":8010,"byte_end":8013,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":8018,"byte_end":8052,"line_start":163,"line_end":163,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":8057,"byte_end":8122,"line_start":164,"line_end":164,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":8127,"byte_end":8164,"line_start":165,"line_end":165,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":8169,"byte_end":8178,"line_start":166,"line_end":166,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":8183,"byte_end":8190,"line_start":167,"line_end":167,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":9080,"byte_end":9091,"line_start":198,"line_end":198,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::FutureExt::left_future","value":"pub fn left_future<B>(Self) -> Either<Self, B> where B: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":795},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":8422,"byte_end":8497,"line_start":176,"line_end":176,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":8502,"byte_end":8523,"line_start":177,"line_end":177,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":8528,"byte_end":8531,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":8536,"byte_end":8616,"line_start":179,"line_end":179,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":8621,"byte_end":8693,"line_start":180,"line_end":180,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":8698,"byte_end":8701,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":8706,"byte_end":8720,"line_start":182,"line_end":182,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":8725,"byte_end":8728,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":8733,"byte_end":8740,"line_start":184,"line_end":184,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":8745,"byte_end":8786,"line_start":185,"line_end":185,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":8791,"byte_end":8826,"line_start":186,"line_end":186,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":8831,"byte_end":8834,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":8839,"byte_end":8853,"line_start":188,"line_end":188,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":8858,"byte_end":8886,"line_start":189,"line_end":189,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":8891,"byte_end":8927,"line_start":190,"line_end":190,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":8932,"byte_end":8944,"line_start":191,"line_end":191,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":8949,"byte_end":8987,"line_start":192,"line_end":192,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":8992,"byte_end":8998,"line_start":193,"line_end":193,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":9003,"byte_end":9006,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":9011,"byte_end":9046,"line_start":195,"line_end":195,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":9051,"byte_end":9060,"line_start":196,"line_end":196,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":9065,"byte_end":9072,"line_start":197,"line_end":197,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":9897,"byte_end":9909,"line_start":227,"line_end":227,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::FutureExt::right_future","value":"pub fn right_future<A>(Self) -> Either<A, Self> where A: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":795},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":9238,"byte_end":9314,"line_start":205,"line_end":205,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":9319,"byte_end":9340,"line_start":206,"line_end":206,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":9345,"byte_end":9348,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":9353,"byte_end":9432,"line_start":208,"line_end":208,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":9437,"byte_end":9509,"line_start":209,"line_end":209,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":9514,"byte_end":9517,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":9522,"byte_end":9536,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":9541,"byte_end":9544,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":9549,"byte_end":9556,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":9561,"byte_end":9602,"line_start":214,"line_end":214,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":9607,"byte_end":9642,"line_start":215,"line_end":215,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":9647,"byte_end":9650,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":9655,"byte_end":9669,"line_start":217,"line_end":217,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":9674,"byte_end":9702,"line_start":218,"line_end":218,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":9707,"byte_end":9743,"line_start":219,"line_end":219,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":9748,"byte_end":9760,"line_start":220,"line_end":220,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":9765,"byte_end":9803,"line_start":221,"line_end":221,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":9808,"byte_end":9814,"line_start":222,"line_end":222,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":9819,"byte_end":9822,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":9827,"byte_end":9863,"line_start":224,"line_end":224,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":9868,"byte_end":9877,"line_start":225,"line_end":225,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":9882,"byte_end":9889,"line_start":226,"line_end":226,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":10656,"byte_end":10667,"line_start":252,"line_end":252,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::FutureExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":795},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":10058,"byte_end":10111,"line_start":234,"line_end":234,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":10116,"byte_end":10119,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":10124,"byte_end":10198,"line_start":236,"line_end":236,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":10203,"byte_end":10266,"line_start":237,"line_end":237,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":10271,"byte_end":10274,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":10279,"byte_end":10293,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":10298,"byte_end":10301,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":10306,"byte_end":10313,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":10318,"byte_end":10359,"line_start":242,"line_end":242,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":10364,"byte_end":10399,"line_start":243,"line_end":243,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":10404,"byte_end":10439,"line_start":244,"line_end":244,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":10444,"byte_end":10447,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":10452,"byte_end":10482,"line_start":246,"line_end":246,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":10487,"byte_end":10525,"line_start":247,"line_end":247,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":10530,"byte_end":10581,"line_start":248,"line_end":248,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":10586,"byte_end":10622,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":10627,"byte_end":10636,"line_start":250,"line_end":250,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":10641,"byte_end":10648,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":11706,"byte_end":11713,"line_start":283,"line_end":283,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::FutureExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Output: Future, Self: Sized","parent":{"krate":0,"index":795},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":10767,"byte_end":10842,"line_start":258,"line_end":258,"column_start":5,"column_end":80}},{"value":"/ future is itself another future.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":10847,"byte_end":10883,"line_start":259,"line_end":259,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":10888,"byte_end":10891,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":10896,"byte_end":10965,"line_start":261,"line_end":261,"column_start":5,"column_end":74}},{"value":"/ computation out the final result. This method can only be called","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":10970,"byte_end":11038,"line_start":262,"line_end":262,"column_start":5,"column_end":73}},{"value":"/ when the successful result of this future itself implements the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":11043,"byte_end":11110,"line_start":263,"line_end":263,"column_start":5,"column_end":72}},{"value":"/ `IntoFuture` trait and the error can be created from this future's error","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":11115,"byte_end":11191,"line_start":264,"line_end":264,"column_start":5,"column_end":81}},{"value":"/ type.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":11196,"byte_end":11205,"line_start":265,"line_end":265,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":11210,"byte_end":11213,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.and_then(|x| x)`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":11218,"byte_end":11282,"line_start":267,"line_end":267,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":11287,"byte_end":11290,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":11295,"byte_end":11366,"line_start":269,"line_end":269,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":11371,"byte_end":11397,"line_start":270,"line_end":270,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":11402,"byte_end":11405,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":11410,"byte_end":11424,"line_start":272,"line_end":272,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":11429,"byte_end":11432,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":11437,"byte_end":11444,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":11449,"byte_end":11490,"line_start":275,"line_end":275,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":11495,"byte_end":11530,"line_start":276,"line_end":276,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":11535,"byte_end":11538,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":11543,"byte_end":11589,"line_start":278,"line_end":278,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":11594,"byte_end":11635,"line_start":279,"line_end":279,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":11640,"byte_end":11672,"line_start":280,"line_end":280,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":11677,"byte_end":11686,"line_start":281,"line_end":281,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":11691,"byte_end":11698,"line_start":282,"line_end":282,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":12813,"byte_end":12827,"line_start":316,"line_end":316,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::FutureExt::flatten_stream","value":"pub fn flatten_stream(Self) -> FlattenStream<Self> where Self::Output: Stream,\nSelf: Sized","parent":{"krate":0,"index":795},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":11922,"byte_end":11997,"line_start":291,"line_end":291,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":12002,"byte_end":12025,"line_start":292,"line_end":292,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":12030,"byte_end":12033,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":12038,"byte_end":12110,"line_start":294,"line_end":294,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":12115,"byte_end":12188,"line_start":295,"line_end":295,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":12193,"byte_end":12207,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":12212,"byte_end":12215,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":12220,"byte_end":12290,"line_start":298,"line_end":298,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":12295,"byte_end":12313,"line_start":299,"line_end":299,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":12318,"byte_end":12321,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":12326,"byte_end":12340,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":12345,"byte_end":12348,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":12353,"byte_end":12360,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":12365,"byte_end":12406,"line_start":304,"line_end":304,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":12411,"byte_end":12446,"line_start":305,"line_end":305,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":12451,"byte_end":12494,"line_start":306,"line_end":306,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":12499,"byte_end":12502,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":12507,"byte_end":12547,"line_start":308,"line_end":308,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":12552,"byte_end":12618,"line_start":309,"line_end":309,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":12623,"byte_end":12626,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":12631,"byte_end":12684,"line_start":311,"line_end":311,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":12689,"byte_end":12735,"line_start":312,"line_end":312,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":12740,"byte_end":12779,"line_start":313,"line_end":313,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":12784,"byte_end":12793,"line_start":314,"line_end":314,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":12798,"byte_end":12805,"line_start":315,"line_end":315,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":809},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":13864,"byte_end":13868,"line_start":339,"line_end":339,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::FutureExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":795},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":12969,"byte_end":13042,"line_start":323,"line_end":323,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":13047,"byte_end":13113,"line_start":324,"line_end":324,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":13118,"byte_end":13136,"line_start":325,"line_end":325,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":13141,"byte_end":13144,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":13149,"byte_end":13216,"line_start":327,"line_end":327,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":13221,"byte_end":13286,"line_start":328,"line_end":328,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":13291,"byte_end":13363,"line_start":329,"line_end":329,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":13368,"byte_end":13442,"line_start":330,"line_end":330,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":13447,"byte_end":13473,"line_start":331,"line_end":331,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":13478,"byte_end":13481,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":13486,"byte_end":13557,"line_start":333,"line_end":333,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":13562,"byte_end":13637,"line_start":334,"line_end":334,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":13642,"byte_end":13696,"line_start":335,"line_end":335,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":13701,"byte_end":13704,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":13709,"byte_end":13783,"line_start":337,"line_end":337,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":13788,"byte_end":13856,"line_start":338,"line_end":338,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":14703,"byte_end":14710,"line_start":364,"line_end":364,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::FutureExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnOnce(&Self::Output)\n-> (), Self: Sized","parent":{"krate":0,"index":795},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":14009,"byte_end":14075,"line_start":346,"line_end":346,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":14080,"byte_end":14083,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":14088,"byte_end":14163,"line_start":348,"line_end":348,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":14168,"byte_end":14241,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":14246,"byte_end":14315,"line_start":350,"line_end":350,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":14320,"byte_end":14370,"line_start":351,"line_end":351,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":14375,"byte_end":14378,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":14383,"byte_end":14397,"line_start":353,"line_end":353,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":14402,"byte_end":14405,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":14410,"byte_end":14417,"line_start":355,"line_end":355,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":14422,"byte_end":14463,"line_start":356,"line_end":356,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":14468,"byte_end":14503,"line_start":357,"line_end":357,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":14508,"byte_end":14511,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":14516,"byte_end":14545,"line_start":359,"line_end":359,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":14550,"byte_end":14628,"line_start":360,"line_end":360,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":14633,"byte_end":14669,"line_start":361,"line_end":361,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":14674,"byte_end":14683,"line_start":362,"line_end":362,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":14688,"byte_end":14695,"line_start":363,"line_end":363,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":16250,"byte_end":16262,"line_start":403,"line_end":403,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::future::FutureExt::catch_unwind","value":"pub fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\n::std::panic::UnwindSafe","parent":{"krate":0,"index":795},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the future.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the future.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":14894,"byte_end":14948,"line_start":371,"line_end":371,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":14953,"byte_end":14956,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a future can propagate all the way out to the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":14961,"byte_end":15036,"line_start":373,"line_end":373,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":15041,"byte_end":15115,"line_start":374,"line_end":374,"column_start":5,"column_end":79}},{"value":"/ the future itself. It's most commonly used within task executors. It's","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":15120,"byte_end":15194,"line_start":375,"line_end":375,"column_start":5,"column_end":79}},{"value":"/ not recommended to use this for error handling.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":15199,"byte_end":15250,"line_start":376,"line_end":376,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":15255,"byte_end":15258,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":15263,"byte_end":15338,"line_start":378,"line_end":378,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":15343,"byte_end":15413,"line_start":379,"line_end":379,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":15418,"byte_end":15485,"line_start":380,"line_end":380,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the `Future` trait is also","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":15490,"byte_end":15565,"line_start":381,"line_end":381,"column_start":5,"column_end":80}},{"value":"/ implemented for `AssertUnwindSafe<F>` where `F` implements `Future`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":15570,"byte_end":15642,"line_start":382,"line_end":382,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":15647,"byte_end":15650,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":15655,"byte_end":15719,"line_start":384,"line_end":384,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":15724,"byte_end":15781,"line_start":385,"line_end":385,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":15786,"byte_end":15789,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":15794,"byte_end":15808,"line_start":387,"line_end":387,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":15813,"byte_end":15816,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":15821,"byte_end":15828,"line_start":389,"line_end":389,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":15833,"byte_end":15874,"line_start":390,"line_end":390,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{self, FutureExt, Ready};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":15879,"byte_end":15929,"line_start":391,"line_end":391,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":15934,"byte_end":15937,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ let future = future::ready(2);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":15942,"byte_end":15976,"line_start":393,"line_end":393,"column_start":5,"column_end":39}},{"value":"/ assert!(future.catch_unwind().await.is_ok());","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":15981,"byte_end":16030,"line_start":394,"line_end":394,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":16035,"byte_end":16038,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ let future = future::lazy(|_| -> Ready<i32> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":16043,"byte_end":16092,"line_start":396,"line_end":396,"column_start":5,"column_end":54}},{"value":"/     unimplemented!()","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":16097,"byte_end":16121,"line_start":397,"line_end":397,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":16126,"byte_end":16133,"line_start":398,"line_end":398,"column_start":5,"column_end":12}},{"value":"/ assert!(future.catch_unwind().await.is_err());","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":16138,"byte_end":16188,"line_start":399,"line_end":399,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":16193,"byte_end":16202,"line_start":400,"line_end":400,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":16207,"byte_end":16214,"line_start":401,"line_end":401,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":16219,"byte_end":16242,"line_start":402,"line_end":402,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":17913,"byte_end":17919,"line_start":455,"line_end":455,"column_start":8,"column_end":14},"name":"shared","qualname":"::future::FutureExt::shared","value":"pub fn shared(Self) -> Shared<Self> where Self: Sized, Self::Output: Clone","parent":{"krate":0,"index":795},"children":[],"decl_id":null,"docs":" Create a cloneable handle to this future where all handles will resolve\n to the same result.","sig":null,"attributes":[{"value":"/ Create a cloneable handle to this future where all handles will resolve","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":16391,"byte_end":16466,"line_start":409,"line_end":409,"column_start":5,"column_end":80}},{"value":"/ to the same result.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":16471,"byte_end":16494,"line_start":410,"line_end":410,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":16499,"byte_end":16502,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ The `shared` combinator method provides a method to convert any future","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":16507,"byte_end":16581,"line_start":412,"line_end":412,"column_start":5,"column_end":79}},{"value":"/ into a cloneable future. It enables a future to be polled by multiple","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":16586,"byte_end":16659,"line_start":413,"line_end":413,"column_start":5,"column_end":78}},{"value":"/ threads.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":16664,"byte_end":16676,"line_start":414,"line_end":414,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":16681,"byte_end":16684,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":16689,"byte_end":16753,"line_start":416,"line_end":416,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":16758,"byte_end":16815,"line_start":417,"line_end":417,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":16820,"byte_end":16823,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":16828,"byte_end":16842,"line_start":419,"line_end":419,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":16847,"byte_end":16850,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":16855,"byte_end":16862,"line_start":421,"line_end":421,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":16867,"byte_end":16908,"line_start":422,"line_end":422,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":16913,"byte_end":16948,"line_start":423,"line_end":423,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":16953,"byte_end":16956,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":16961,"byte_end":16990,"line_start":425,"line_end":425,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":16995,"byte_end":17029,"line_start":426,"line_end":426,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":17034,"byte_end":17068,"line_start":427,"line_end":427,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":17073,"byte_end":17076,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":17081,"byte_end":17114,"line_start":429,"line_end":429,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(6, shared2.await);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":17119,"byte_end":17152,"line_start":430,"line_end":430,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":17157,"byte_end":17166,"line_start":431,"line_end":431,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":17171,"byte_end":17178,"line_start":432,"line_end":432,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":17183,"byte_end":17186,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":17191,"byte_end":17198,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ // Note, unlike most examples this is written in the context of a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":17203,"byte_end":17272,"line_start":435,"line_end":435,"column_start":5,"column_end":74}},{"value":"/ // synchronous function to better illustrate the cross-thread aspect of","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":17277,"byte_end":17352,"line_start":436,"line_end":436,"column_start":5,"column_end":80}},{"value":"/ // the `shared` combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":17357,"byte_end":17388,"line_start":437,"line_end":437,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":17393,"byte_end":17396,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":17401,"byte_end":17442,"line_start":439,"line_end":439,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":17447,"byte_end":17482,"line_start":440,"line_end":440,"column_start":5,"column_end":40}},{"value":"/ use futures::executor::block_on;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":17487,"byte_end":17523,"line_start":441,"line_end":441,"column_start":5,"column_end":41}},{"value":"/ use std::thread;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":17528,"byte_end":17548,"line_start":442,"line_end":442,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":17553,"byte_end":17556,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":17561,"byte_end":17590,"line_start":444,"line_end":444,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":17595,"byte_end":17629,"line_start":445,"line_end":445,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":17634,"byte_end":17668,"line_start":446,"line_end":446,"column_start":5,"column_end":39}},{"value":"/ let join_handle = thread::spawn(move || {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":17673,"byte_end":17718,"line_start":447,"line_end":447,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(6, block_on(shared2));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":17723,"byte_end":17764,"line_start":448,"line_end":448,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":17769,"byte_end":17776,"line_start":449,"line_end":449,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":17781,"byte_end":17814,"line_start":450,"line_end":450,"column_start":5,"column_end":38}},{"value":"/ join_handle.join().unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":17819,"byte_end":17851,"line_start":451,"line_end":451,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":17856,"byte_end":17865,"line_start":452,"line_end":452,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":17870,"byte_end":17877,"line_start":453,"line_end":453,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":17882,"byte_end":17905,"line_start":454,"line_end":454,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":18531,"byte_end":18544,"line_start":473,"line_end":473,"column_start":8,"column_end":21},"name":"remote_handle","qualname":"::future::FutureExt::remote_handle","value":"pub fn remote_handle(Self) -> (Remote<Self>, RemoteHandle<Self::Output>) where\nSelf: Sized","parent":{"krate":0,"index":795},"children":[],"decl_id":null,"docs":" Turn this future into a future that yields `()` on completion and sends\n its output to another future on a separate task.","sig":null,"attributes":[{"value":"/ Turn this future into a future that yields `()` on completion and sends","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":18045,"byte_end":18120,"line_start":463,"line_end":463,"column_start":5,"column_end":80}},{"value":"/ its output to another future on a separate task.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":18125,"byte_end":18177,"line_start":464,"line_end":464,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":18182,"byte_end":18185,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ This can be used with spawning executors to easily retrieve the result","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":18190,"byte_end":18264,"line_start":466,"line_end":466,"column_start":5,"column_end":79}},{"value":"/ of a future executing on a separate task or thread.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":18269,"byte_end":18324,"line_start":467,"line_end":467,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":18329,"byte_end":18332,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":18337,"byte_end":18401,"line_start":469,"line_end":469,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":18406,"byte_end":18463,"line_start":470,"line_end":470,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"channel\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":18468,"byte_end":18495,"line_start":471,"line_end":471,"column_start":5,"column_end":32}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":18500,"byte_end":18523,"line_start":472,"line_end":472,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":815},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":18917,"byte_end":18922,"line_start":485,"line_end":485,"column_start":8,"column_end":13},"name":"boxed","qualname":"::future::FutureExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxFuture where Self: Sized + Send + 'a","parent":{"krate":0,"index":795},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":18688,"byte_end":18729,"line_start":480,"line_end":480,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":18734,"byte_end":18737,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":18742,"byte_end":18817,"line_start":482,"line_end":482,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":18822,"byte_end":18879,"line_start":483,"line_end":483,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":18884,"byte_end":18909,"line_start":484,"line_end":484,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":817},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":19343,"byte_end":19354,"line_start":498,"line_end":498,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::future::FutureExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxFuture where Self: Sized + 'a","parent":{"krate":0,"index":795},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":19042,"byte_end":19083,"line_start":491,"line_end":491,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":19088,"byte_end":19091,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":19096,"byte_end":19155,"line_start":493,"line_end":493,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":19160,"byte_end":19163,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":19168,"byte_end":19243,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":19248,"byte_end":19305,"line_start":496,"line_end":496,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":19310,"byte_end":19335,"line_start":497,"line_end":497,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":819},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":19605,"byte_end":19615,"line_start":506,"line_end":506,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::FutureExt::unit_error","value":"pub fn unit_error(Self) -> UnitError<Self> where Self: Sized","parent":{"krate":0,"index":795},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":19472,"byte_end":19521,"line_start":504,"line_end":504,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":19526,"byte_end":19597,"line_start":505,"line_end":505,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":820},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":19849,"byte_end":19860,"line_start":514,"line_end":514,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::FutureExt::never_error","value":"pub fn never_error(Self) -> NeverError<Self> where Self: Sized","parent":{"krate":0,"index":795},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":19713,"byte_end":19762,"line_start":512,"line_end":512,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":19767,"byte_end":19841,"line_start":513,"line_end":513,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":821},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":20037,"byte_end":20047,"line_start":521,"line_end":521,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::FutureExt::poll_unpin","value":"pub fn poll_unpin(&mut Self, &mut Context) -> Poll<Self::Output> where\nSelf: Unpin","parent":{"krate":0,"index":795},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":19960,"byte_end":20029,"line_start":520,"line_end":520,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":21438,"byte_end":21450,"line_start":558,"line_end":558,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::FutureExt::now_or_never","value":"pub fn now_or_never(Self) -> Option<Self::Output> where Self: Sized","parent":{"krate":0,"index":795},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":20178,"byte_end":20250,"line_start":527,"line_end":527,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":20255,"byte_end":20318,"line_start":528,"line_end":528,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":20323,"byte_end":20326,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":20331,"byte_end":20397,"line_start":530,"line_end":530,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":20402,"byte_end":20405,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":20410,"byte_end":20483,"line_start":532,"line_end":532,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":20488,"byte_end":20557,"line_start":533,"line_end":533,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":20562,"byte_end":20632,"line_start":534,"line_end":534,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":20637,"byte_end":20640,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":20645,"byte_end":20659,"line_start":536,"line_end":536,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":20664,"byte_end":20667,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":20672,"byte_end":20679,"line_start":538,"line_end":538,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":20684,"byte_end":20714,"line_start":539,"line_end":539,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":20719,"byte_end":20769,"line_start":540,"line_end":540,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":20774,"byte_end":20813,"line_start":541,"line_end":541,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":20818,"byte_end":20869,"line_start":542,"line_end":542,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":20874,"byte_end":20877,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":20882,"byte_end":20942,"line_start":544,"line_end":544,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":20947,"byte_end":20999,"line_start":545,"line_end":545,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":21004,"byte_end":21011,"line_start":546,"line_end":546,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":21016,"byte_end":21019,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":21024,"byte_end":21093,"line_start":548,"line_end":548,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":21098,"byte_end":21171,"line_start":549,"line_end":549,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":21176,"byte_end":21208,"line_start":550,"line_end":550,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":21213,"byte_end":21216,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":21221,"byte_end":21228,"line_start":552,"line_end":552,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":21233,"byte_end":21280,"line_start":553,"line_end":553,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":21285,"byte_end":21324,"line_start":554,"line_end":554,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":21329,"byte_end":21332,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":21337,"byte_end":21418,"line_start":556,"line_end":556,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":21423,"byte_end":21430,"line_start":557,"line_end":557,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":827},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"try_future","qualname":"::try_future","value":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","parent":null,"children":[{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1312},{"krate":0,"index":1313},{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1343},{"krate":0,"index":1345}],"decl_id":null,"docs":" Futures","sig":null,"attributes":[{"value":"! Futures","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":85566,"byte_end":85577,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":85578,"byte_end":85581,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains a number of functions for working with `Future`s,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":85582,"byte_end":85656,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"! including the `FutureExt` trait which adds methods to `Future` types.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":85657,"byte_end":85730,"line_start":4,"line_end":4,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":3915},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":104984,"byte_end":104991,"line_start":107,"line_end":107,"column_start":6,"column_end":13},"name":"TryJoin","qualname":"::try_future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":3918},{"krate":0,"index":3919}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":101797,"byte_end":101864,"line_start":17,"line_end":17,"column_start":9,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":3933},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":105061,"byte_end":105069,"line_start":110,"line_end":110,"column_start":6,"column_end":14},"name":"TryJoin3","qualname":"::try_future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":3937},{"krate":0,"index":3938},{"krate":0,"index":3939}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":101797,"byte_end":101864,"line_start":17,"line_end":17,"column_start":9,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":3956},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":105145,"byte_end":105153,"line_start":113,"line_end":113,"column_start":6,"column_end":14},"name":"TryJoin4","qualname":"::try_future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":3961},{"krate":0,"index":3962},{"krate":0,"index":3963},{"krate":0,"index":3964}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":101797,"byte_end":101864,"line_start":17,"line_end":17,"column_start":9,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":3984},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":105235,"byte_end":105243,"line_start":116,"line_end":116,"column_start":6,"column_end":14},"name":"TryJoin5","qualname":"::try_future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":3990},{"krate":0,"index":3991},{"krate":0,"index":3992},{"krate":0,"index":3993},{"krate":0,"index":3994}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":101797,"byte_end":101864,"line_start":17,"line_end":17,"column_start":9,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":851},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":106515,"byte_end":106523,"line_start":161,"line_end":161,"column_start":8,"column_end":16},"name":"try_join","qualname":"::try_future::try_join::try_join","value":"pub fn try_join<Fut1, Fut2>(Fut1, Fut2) -> TryJoin<Fut1, Fut2> where\nFut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":105281,"byte_end":105354,"line_start":119,"line_end":119,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":105355,"byte_end":105387,"line_start":120,"line_end":120,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":105388,"byte_end":105391,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":105392,"byte_end":105463,"line_start":122,"line_end":122,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":105464,"byte_end":105540,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccesful, it will complete with the first error","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":105541,"byte_end":105612,"line_start":124,"line_end":124,"column_start":1,"column_end":72}},{"value":"/ encountered.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":105613,"byte_end":105629,"line_start":125,"line_end":125,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":105630,"byte_end":105633,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":105634,"byte_end":105703,"line_start":127,"line_end":127,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":105704,"byte_end":105730,"line_start":128,"line_end":128,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":105731,"byte_end":105734,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":105735,"byte_end":105749,"line_start":130,"line_end":130,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":105750,"byte_end":105753,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":105754,"byte_end":105830,"line_start":132,"line_end":132,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":105831,"byte_end":105867,"line_start":133,"line_end":133,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":105868,"byte_end":105871,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":105872,"byte_end":105879,"line_start":135,"line_end":135,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":105880,"byte_end":105921,"line_start":136,"line_end":136,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":105922,"byte_end":105946,"line_start":137,"line_end":137,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":105947,"byte_end":105950,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":105951,"byte_end":105996,"line_start":139,"line_end":139,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":105997,"byte_end":106042,"line_start":140,"line_end":140,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":106043,"byte_end":106081,"line_start":141,"line_end":141,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":106082,"byte_end":106085,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":106086,"byte_end":106125,"line_start":143,"line_end":143,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":106126,"byte_end":106135,"line_start":144,"line_end":144,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":106136,"byte_end":106143,"line_start":145,"line_end":145,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":106144,"byte_end":106147,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":106148,"byte_end":106218,"line_start":147,"line_end":147,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":106219,"byte_end":106234,"line_start":148,"line_end":148,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":106235,"byte_end":106238,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":106239,"byte_end":106246,"line_start":150,"line_end":150,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":106247,"byte_end":106288,"line_start":151,"line_end":151,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":106289,"byte_end":106313,"line_start":152,"line_end":152,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":106314,"byte_end":106317,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":106318,"byte_end":106363,"line_start":154,"line_end":154,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":106364,"byte_end":106410,"line_start":155,"line_end":155,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":106411,"byte_end":106449,"line_start":156,"line_end":156,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":106450,"byte_end":106453,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":106454,"byte_end":106489,"line_start":158,"line_end":158,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":106490,"byte_end":106499,"line_start":159,"line_end":159,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":106500,"byte_end":106507,"line_start":160,"line_end":160,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":854},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":107116,"byte_end":107125,"line_start":185,"line_end":185,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::try_future::try_join::try_join3","value":"pub fn try_join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3)\n-> TryJoin3<Fut1, Fut2, Fut3> where Fut1: TryFuture, Fut2: TryFuture<Error =\nFut1::Error>, Fut3: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":106698,"byte_end":106758,"line_start":169,"line_end":169,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":106759,"byte_end":106762,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":106763,"byte_end":106777,"line_start":171,"line_end":171,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":106778,"byte_end":106781,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":106782,"byte_end":106789,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":106790,"byte_end":106831,"line_start":174,"line_end":174,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":106832,"byte_end":106856,"line_start":175,"line_end":175,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":106857,"byte_end":106860,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":106861,"byte_end":106906,"line_start":177,"line_end":177,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":106907,"byte_end":106952,"line_start":178,"line_end":178,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":106953,"byte_end":106998,"line_start":179,"line_end":179,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":106999,"byte_end":107042,"line_start":180,"line_end":180,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":107043,"byte_end":107046,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":107047,"byte_end":107090,"line_start":182,"line_end":182,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":107091,"byte_end":107100,"line_start":183,"line_end":183,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":107101,"byte_end":107108,"line_start":184,"line_end":184,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":858},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":107865,"byte_end":107874,"line_start":215,"line_end":215,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::try_future::try_join::try_join4","value":"pub fn try_join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> TryJoin4<Fut1, Fut2, Fut3, Fut4> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":107395,"byte_end":107455,"line_start":198,"line_end":198,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":107456,"byte_end":107459,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":107460,"byte_end":107474,"line_start":200,"line_end":200,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":107475,"byte_end":107478,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":107479,"byte_end":107486,"line_start":202,"line_end":202,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":107487,"byte_end":107528,"line_start":203,"line_end":203,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":107529,"byte_end":107553,"line_start":204,"line_end":204,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":107554,"byte_end":107557,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":107558,"byte_end":107603,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":107604,"byte_end":107649,"line_start":207,"line_end":207,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":107650,"byte_end":107695,"line_start":208,"line_end":208,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":107696,"byte_end":107741,"line_start":209,"line_end":209,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":107742,"byte_end":107788,"line_start":210,"line_end":210,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":107789,"byte_end":107792,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":107793,"byte_end":107839,"line_start":212,"line_end":212,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":107840,"byte_end":107849,"line_start":213,"line_end":213,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":107850,"byte_end":107857,"line_start":214,"line_end":214,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":863},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":108748,"byte_end":108757,"line_start":248,"line_end":248,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::try_future::try_join::try_join5","value":"pub fn try_join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>, Fut5: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":108226,"byte_end":108286,"line_start":230,"line_end":230,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":108287,"byte_end":108290,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":108291,"byte_end":108305,"line_start":232,"line_end":232,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":108306,"byte_end":108309,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":108310,"byte_end":108317,"line_start":234,"line_end":234,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":108318,"byte_end":108359,"line_start":235,"line_end":235,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":108360,"byte_end":108384,"line_start":236,"line_end":236,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":108385,"byte_end":108388,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":108389,"byte_end":108434,"line_start":238,"line_end":238,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":108435,"byte_end":108480,"line_start":239,"line_end":239,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":108481,"byte_end":108526,"line_start":240,"line_end":240,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":108527,"byte_end":108572,"line_start":241,"line_end":241,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":108573,"byte_end":108618,"line_start":242,"line_end":242,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":108619,"byte_end":108668,"line_start":243,"line_end":243,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":108669,"byte_end":108672,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":108673,"byte_end":108722,"line_start":245,"line_end":245,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":108723,"byte_end":108732,"line_start":246,"line_end":246,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join.rs","byte_start":108733,"byte_end":108740,"line_start":247,"line_end":247,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":909},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":111009,"byte_end":111019,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"TryJoinAll","qualname":"::try_future::try_join_all::TryJoinAll","value":"TryJoinAll {  }","parent":null,"children":[{"krate":0,"index":911}],"decl_id":null,"docs":" Future for the [`try_join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_join_all`] function.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":110884,"byte_end":110929,"line_start":63,"line_end":63,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":110930,"byte_end":110997,"line_start":64,"line_end":64,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":915},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":112635,"byte_end":112647,"line_start":123,"line_end":123,"column_start":8,"column_end":20},"name":"try_join_all","qualname":"::try_future::try_join_all::try_join_all","value":"pub fn try_join_all<I>(I) -> TryJoinAll<I::Item> where I: IntoIterator,\nI::Item: TryFuture","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents either a collection of the results of the\n futures given or an error.","sig":null,"attributes":[{"value":"/ Creates a future which represents either a collection of the results of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":111386,"byte_end":111465,"line_start":85,"line_end":85,"column_start":1,"column_end":80}},{"value":"/ futures given or an error.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":111466,"byte_end":111496,"line_start":86,"line_end":86,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":111497,"byte_end":111500,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":111501,"byte_end":111580,"line_start":88,"line_end":88,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":111581,"byte_end":111661,"line_start":89,"line_end":89,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":111662,"byte_end":111680,"line_start":90,"line_end":90,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":111681,"byte_end":111684,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ If any future returns an error then all other futures will be canceled and","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":111685,"byte_end":111763,"line_start":92,"line_end":92,"column_start":1,"column_end":79}},{"value":"/ an error will be returned immediately. If all futures complete successfully,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":111764,"byte_end":111844,"line_start":93,"line_end":93,"column_start":1,"column_end":81}},{"value":"/ however, then the returned future will succeed with a `Vec` of all the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":111845,"byte_end":111919,"line_start":94,"line_end":94,"column_start":1,"column_end":75}},{"value":"/ successful results.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":111920,"byte_end":111943,"line_start":95,"line_end":95,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":111944,"byte_end":111947,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":111948,"byte_end":112025,"line_start":97,"line_end":97,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":112026,"byte_end":112083,"line_start":98,"line_end":98,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":112084,"byte_end":112087,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":112088,"byte_end":112102,"line_start":100,"line_end":100,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":112103,"byte_end":112106,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":112107,"byte_end":112114,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":112115,"byte_end":112156,"line_start":103,"line_end":103,"column_start":1,"column_end":42}},{"value":"/ use futures::future::{self, try_join_all};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":112157,"byte_end":112203,"line_start":104,"line_end":104,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":112204,"byte_end":112207,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":112208,"byte_end":112231,"line_start":106,"line_end":106,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":112232,"byte_end":112266,"line_start":107,"line_end":107,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(2),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":112267,"byte_end":112301,"line_start":108,"line_end":108,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":112302,"byte_end":112336,"line_start":109,"line_end":109,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":112337,"byte_end":112343,"line_start":110,"line_end":110,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":112344,"byte_end":112347,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Ok(vec![1, 2, 3]));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":112348,"byte_end":112411,"line_start":112,"line_end":112,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":112412,"byte_end":112415,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":112416,"byte_end":112439,"line_start":114,"line_end":114,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":112440,"byte_end":112474,"line_start":115,"line_end":115,"column_start":1,"column_end":35}},{"value":"/     future::err::<u32, u32>(2),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":112475,"byte_end":112510,"line_start":116,"line_end":116,"column_start":1,"column_end":36}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":112511,"byte_end":112545,"line_start":117,"line_end":117,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":112546,"byte_end":112552,"line_start":118,"line_end":118,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":112553,"byte_end":112556,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Err(2));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":112557,"byte_end":112609,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":112610,"byte_end":112619,"line_start":121,"line_end":121,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":112620,"byte_end":112627,"line_start":122,"line_end":122,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4070},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":114726,"byte_end":114735,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::try_future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":4073}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":114584,"byte_end":114629,"line_start":7,"line_end":7,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":114630,"byte_end":114697,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":942},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":116334,"byte_end":116344,"line_start":51,"line_end":51,"column_start":8,"column_end":18},"name":"try_select","qualname":"::try_future::try_select::try_select","value":"pub fn try_select<A, B>(A, B) -> TrySelect<A, B> where A: TryFuture + Unpin,\nB: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":114843,"byte_end":114913,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":114914,"byte_end":114917,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":114918,"byte_end":114996,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":114997,"byte_end":115073,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":115074,"byte_end":115146,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":115147,"byte_end":115150,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":115151,"byte_end":115223,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":115224,"byte_end":115252,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":115253,"byte_end":115256,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":115257,"byte_end":115324,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":115325,"byte_end":115396,"line_start":26,"line_end":26,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":115397,"byte_end":115447,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":115448,"byte_end":115451,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":115452,"byte_end":115466,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":115467,"byte_end":115470,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":115471,"byte_end":115478,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":115479,"byte_end":115563,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":115564,"byte_end":115567,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":115568,"byte_end":115625,"line_start":34,"line_end":34,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":115626,"byte_end":115629,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":115630,"byte_end":115712,"line_start":36,"line_end":36,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":115713,"byte_end":115770,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":115771,"byte_end":115828,"line_start":38,"line_end":38,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":115829,"byte_end":115855,"line_start":39,"line_end":39,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":115856,"byte_end":115861,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":115862,"byte_end":115957,"line_start":41,"line_end":41,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":115958,"byte_end":115981,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":115982,"byte_end":116062,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":116063,"byte_end":116144,"line_start":44,"line_end":44,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":116145,"byte_end":116215,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":116216,"byte_end":116287,"line_start":46,"line_end":46,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":116288,"byte_end":116301,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":116302,"byte_end":116312,"line_start":48,"line_end":48,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":116313,"byte_end":116318,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":116319,"byte_end":116326,"line_start":50,"line_end":50,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4078},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/select_ok.rs","byte_start":117837,"byte_end":117845,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"SelectOk","qualname":"::try_future::select_ok::SelectOk","value":"SelectOk {  }","parent":null,"children":[{"krate":0,"index":4080}],"decl_id":null,"docs":" Future for the [`select_ok`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_ok`] function.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/select_ok.rs","byte_start":117698,"byte_end":117740,"line_start":9,"line_end":9,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/select_ok.rs","byte_start":117758,"byte_end":117825,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":967},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/select_ok.rs","byte_start":118567,"byte_end":118576,"line_start":31,"line_end":31,"column_start":8,"column_end":17},"name":"select_ok","qualname":"::try_future::select_ok::select_ok","value":"pub fn select_ok<I>(I) -> SelectOk<I::Item> where I: IntoIterator,\nI::Item: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select the first successful future over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select the first successful future over a list of futures.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/select_ok.rs","byte_start":117922,"byte_end":118016,"line_start":18,"line_end":18,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/select_ok.rs","byte_start":118017,"byte_end":118020,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready and Ok. Unlike","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/select_ok.rs","byte_start":118021,"byte_end":118110,"line_start":20,"line_end":20,"column_start":1,"column_end":90}},{"value":"/ `select_all`, this will only return the first successful completion, or the last","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/select_ok.rs","byte_start":118111,"byte_end":118195,"line_start":21,"line_end":21,"column_start":1,"column_end":85}},{"value":"/ failure. This is useful in contexts where any success is desired and failures","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/select_ok.rs","byte_start":118196,"byte_end":118277,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/ are ignored, unless all the futures fail.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/select_ok.rs","byte_start":118278,"byte_end":118323,"line_start":23,"line_end":23,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/select_ok.rs","byte_start":118324,"byte_end":118327,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/  This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/select_ok.rs","byte_start":118328,"byte_end":118406,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/select_ok.rs","byte_start":118407,"byte_end":118464,"line_start":26,"line_end":26,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/select_ok.rs","byte_start":118465,"byte_end":118468,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/select_ok.rs","byte_start":118469,"byte_end":118481,"line_start":28,"line_end":28,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/select_ok.rs","byte_start":118482,"byte_end":118485,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/select_ok.rs","byte_start":118486,"byte_end":118559,"line_start":30,"line_end":30,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4084},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/and_then.rs","byte_start":120762,"byte_end":120769,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"AndThen","qualname":"::try_future::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":4088}],"decl_id":null,"docs":" Future for the [`and_then`](super::TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`and_then`](super::TryFutureExt::and_then) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/and_then.rs","byte_start":120595,"byte_end":120665,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/and_then.rs","byte_start":120683,"byte_end":120750,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4097},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/err_into.rs","byte_start":122325,"byte_end":122332,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"ErrInto","qualname":"::try_future::err_into::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":4100},{"krate":0,"index":4101}],"decl_id":null,"docs":" Future for the [`err_into`](super::TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`err_into`](super::TryFutureExt::err_into) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/err_into.rs","byte_start":122158,"byte_end":122228,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/err_into.rs","byte_start":122246,"byte_end":122313,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4109},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/inspect_ok.rs","byte_start":123518,"byte_end":123527,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"InspectOk","qualname":"::try_future::inspect_ok::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":4112},{"krate":0,"index":4113}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/inspect_ok.rs","byte_start":123347,"byte_end":123421,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/inspect_ok.rs","byte_start":123439,"byte_end":123506,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4123},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/inspect_err.rs","byte_start":124856,"byte_end":124866,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"InspectErr","qualname":"::try_future::inspect_err::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":4126},{"krate":0,"index":4127}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/inspect_err.rs","byte_start":124683,"byte_end":124759,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/inspect_err.rs","byte_start":124777,"byte_end":124844,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4137},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/into_future.rs","byte_start":126191,"byte_end":126201,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"IntoFuture","qualname":"::try_future::into_future::IntoFuture","value":"IntoFuture {  }","parent":null,"children":[{"krate":0,"index":4139}],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::TryFutureExt::into_future) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/into_future.rs","byte_start":126018,"byte_end":126094,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/into_future.rs","byte_start":126112,"byte_end":126179,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4146},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/map_err.rs","byte_start":127135,"byte_end":127141,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"MapErr","qualname":"::try_future::map_err::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":4149},{"krate":0,"index":4150}],"decl_id":null,"docs":" Future for the [`map_err`](super::TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`map_err`](super::TryFutureExt::map_err) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/map_err.rs","byte_start":126970,"byte_end":127038,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/map_err.rs","byte_start":127056,"byte_end":127123,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4160},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/map_ok.rs","byte_start":128533,"byte_end":128538,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"MapOk","qualname":"::try_future::map_ok::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":4163},{"krate":0,"index":4164}],"decl_id":null,"docs":" Future for the [`map_ok`](super::TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`map_ok`](super::TryFutureExt::map_ok) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/map_ok.rs","byte_start":128370,"byte_end":128436,"line_start":6,"line_end":6,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/map_ok.rs","byte_start":128454,"byte_end":128521,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4174},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/or_else.rs","byte_start":129951,"byte_end":129957,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"OrElse","qualname":"::try_future::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":4178}],"decl_id":null,"docs":" Future for the [`or_else`](super::TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`or_else`](super::TryFutureExt::or_else) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/or_else.rs","byte_start":129786,"byte_end":129854,"line_start":7,"line_end":7,"column_start":1,"column_end":69}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/or_else.rs","byte_start":129872,"byte_end":129939,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":1228},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_flatten_stream.rs","byte_start":131608,"byte_end":131624,"line_start":13,"line_end":13,"column_start":12,"column_end":28},"name":"TryFlattenStream","qualname":"::try_future::try_flatten_stream::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":1230}],"decl_id":null,"docs":" Stream for the [`try_flatten_stream`](super::TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`try_flatten_stream`](super::TryFutureExt::try_flatten_stream) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_flatten_stream.rs","byte_start":131457,"byte_end":131547,"line_start":11,"line_end":11,"column_start":1,"column_end":91}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_flatten_stream.rs","byte_start":131548,"byte_end":131596,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":4190},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/unwrap_or_else.rs","byte_start":133930,"byte_end":133942,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"UnwrapOrElse","qualname":"::try_future::unwrap_or_else::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":4193},{"krate":0,"index":4194}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](super::TryFutureExt::unwrap_or_else)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`unwrap_or_else`](super::TryFutureExt::unwrap_or_else)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/unwrap_or_else.rs","byte_start":133747,"byte_end":133821,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/unwrap_or_else.rs","byte_start":133822,"byte_end":133833,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/unwrap_or_else.rs","byte_start":133851,"byte_end":133918,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":1345},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":87393,"byte_end":87405,"line_start":81,"line_end":81,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":1346},{"krate":0,"index":1349},{"krate":0,"index":1352},{"krate":0,"index":1354},{"krate":0,"index":1357},{"krate":0,"index":1360},{"krate":0,"index":1362},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1367},{"krate":0,"index":1368}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":87329,"byte_end":87382,"line_start":80,"line_end":80,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1346},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":90063,"byte_end":90069,"line_start":160,"line_end":160,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::try_future::TryFutureExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where F: FnOnce(Self::Ok) -> T,\nSelf: Sized","parent":{"krate":0,"index":1345},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":88691,"byte_end":88749,"line_start":122,"line_end":122,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":88754,"byte_end":88757,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":88762,"byte_end":88837,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":88842,"byte_end":88912,"line_start":125,"line_end":125,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":88917,"byte_end":88990,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":88995,"byte_end":89024,"line_start":127,"line_end":127,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":89029,"byte_end":89032,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":89037,"byte_end":89112,"line_start":129,"line_end":129,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":89117,"byte_end":89192,"line_start":130,"line_end":130,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":89197,"byte_end":89244,"line_start":131,"line_end":131,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":89249,"byte_end":89252,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":89257,"byte_end":89332,"line_start":133,"line_end":133,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":89337,"byte_end":89363,"line_start":134,"line_end":134,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":89368,"byte_end":89371,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":89376,"byte_end":89390,"line_start":136,"line_end":136,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":89395,"byte_end":89398,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":89403,"byte_end":89410,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":89415,"byte_end":89453,"line_start":139,"line_end":139,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":89458,"byte_end":89461,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":89466,"byte_end":89507,"line_start":141,"line_end":141,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":89512,"byte_end":89557,"line_start":142,"line_end":142,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":89562,"byte_end":89604,"line_start":143,"line_end":143,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":89609,"byte_end":89645,"line_start":144,"line_end":144,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":89650,"byte_end":89659,"line_start":145,"line_end":145,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":89664,"byte_end":89671,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":89676,"byte_end":89679,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":89684,"byte_end":89756,"line_start":148,"line_end":148,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":89761,"byte_end":89772,"line_start":149,"line_end":149,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":89777,"byte_end":89780,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":89785,"byte_end":89792,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":89797,"byte_end":89835,"line_start":152,"line_end":152,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":89840,"byte_end":89843,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":89848,"byte_end":89889,"line_start":154,"line_end":154,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":89894,"byte_end":89940,"line_start":155,"line_end":155,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":89945,"byte_end":89987,"line_start":156,"line_end":156,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":89992,"byte_end":90029,"line_start":157,"line_end":157,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":90034,"byte_end":90043,"line_start":158,"line_end":158,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":90048,"byte_end":90055,"line_start":159,"line_end":159,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1349},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":91667,"byte_end":91674,"line_start":206,"line_end":206,"column_start":8,"column_end":15},"name":"map_err","qualname":"::try_future::TryFutureExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where F: FnOnce(Self::Error)\n-> E, Self: Sized","parent":{"krate":0,"index":1345},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":90218,"byte_end":90274,"line_start":167,"line_end":167,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":90279,"byte_end":90282,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":90287,"byte_end":90361,"line_start":169,"line_end":169,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":90366,"byte_end":90427,"line_start":170,"line_end":170,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":90432,"byte_end":90502,"line_start":171,"line_end":171,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":90507,"byte_end":90582,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":90587,"byte_end":90622,"line_start":173,"line_end":173,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":90627,"byte_end":90630,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":90635,"byte_end":90710,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":90715,"byte_end":90790,"line_start":176,"line_end":176,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":90795,"byte_end":90842,"line_start":177,"line_end":177,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":90847,"byte_end":90850,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":90855,"byte_end":90930,"line_start":179,"line_end":179,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":90935,"byte_end":90961,"line_start":180,"line_end":180,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":90966,"byte_end":90969,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":90974,"byte_end":90988,"line_start":182,"line_end":182,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":90993,"byte_end":90996,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":91001,"byte_end":91008,"line_start":184,"line_end":184,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":91013,"byte_end":91051,"line_start":185,"line_end":185,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":91056,"byte_end":91059,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":91064,"byte_end":91105,"line_start":187,"line_end":187,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":91110,"byte_end":91156,"line_start":188,"line_end":188,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":91161,"byte_end":91204,"line_start":189,"line_end":189,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":91209,"byte_end":91246,"line_start":190,"line_end":190,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":91251,"byte_end":91260,"line_start":191,"line_end":191,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":91265,"byte_end":91272,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":91277,"byte_end":91280,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":91285,"byte_end":91358,"line_start":194,"line_end":194,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":91363,"byte_end":91377,"line_start":195,"line_end":195,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":91382,"byte_end":91385,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":91390,"byte_end":91397,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":91402,"byte_end":91440,"line_start":198,"line_end":198,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":91445,"byte_end":91448,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":91453,"byte_end":91494,"line_start":200,"line_end":200,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":91499,"byte_end":91544,"line_start":201,"line_end":201,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":91549,"byte_end":91592,"line_start":202,"line_end":202,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":91597,"byte_end":91633,"line_start":203,"line_end":203,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":91638,"byte_end":91647,"line_start":204,"line_end":204,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":91652,"byte_end":91659,"line_start":205,"line_end":205,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1352},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":92725,"byte_end":92733,"line_start":235,"line_end":235,"column_start":8,"column_end":16},"name":"err_into","qualname":"::try_future::TryFutureExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":1345},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":91828,"byte_end":91898,"line_start":213,"line_end":213,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":91903,"byte_end":91952,"line_start":214,"line_end":214,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":91957,"byte_end":91960,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":91965,"byte_end":92028,"line_start":216,"line_end":216,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":92033,"byte_end":92101,"line_start":217,"line_end":217,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":92106,"byte_end":92179,"line_start":218,"line_end":218,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":92184,"byte_end":92260,"line_start":219,"line_end":219,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":92265,"byte_end":92310,"line_start":220,"line_end":220,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":92315,"byte_end":92318,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":92323,"byte_end":92398,"line_start":222,"line_end":222,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":92403,"byte_end":92429,"line_start":223,"line_end":223,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":92434,"byte_end":92437,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":92442,"byte_end":92456,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":92461,"byte_end":92464,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":92469,"byte_end":92476,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":92481,"byte_end":92519,"line_start":228,"line_end":228,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":92524,"byte_end":92527,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":92532,"byte_end":92573,"line_start":230,"line_end":230,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":92578,"byte_end":92629,"line_start":231,"line_end":231,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":92634,"byte_end":92691,"line_start":232,"line_end":232,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":92696,"byte_end":92705,"line_start":233,"line_end":233,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":92710,"byte_end":92717,"line_start":234,"line_end":234,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1354},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":94250,"byte_end":94258,"line_start":278,"line_end":278,"column_start":8,"column_end":16},"name":"and_then","qualname":"::try_future::TryFutureExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnOnce(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":1345},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":92869,"byte_end":92938,"line_start":242,"line_end":242,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":92943,"byte_end":93017,"line_start":243,"line_end":243,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":93022,"byte_end":93025,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":93030,"byte_end":93105,"line_start":245,"line_end":245,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":93110,"byte_end":93180,"line_start":246,"line_end":246,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":93185,"byte_end":93250,"line_start":247,"line_end":247,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":93255,"byte_end":93321,"line_start":248,"line_end":248,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":93326,"byte_end":93360,"line_start":249,"line_end":249,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":93365,"byte_end":93368,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":93373,"byte_end":93448,"line_start":251,"line_end":251,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":93453,"byte_end":93479,"line_start":252,"line_end":252,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":93484,"byte_end":93487,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":93492,"byte_end":93506,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":93511,"byte_end":93514,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":93519,"byte_end":93526,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":93531,"byte_end":93569,"line_start":257,"line_end":257,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":93574,"byte_end":93577,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":93582,"byte_end":93623,"line_start":259,"line_end":259,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":93628,"byte_end":93673,"line_start":260,"line_end":260,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":93678,"byte_end":93753,"line_start":261,"line_end":261,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":93758,"byte_end":93794,"line_start":262,"line_end":262,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":93799,"byte_end":93808,"line_start":263,"line_end":263,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":93813,"byte_end":93820,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":93825,"byte_end":93828,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":93833,"byte_end":93909,"line_start":266,"line_end":266,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":93914,"byte_end":93925,"line_start":267,"line_end":267,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":93930,"byte_end":93933,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":93938,"byte_end":93945,"line_start":269,"line_end":269,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":93950,"byte_end":93988,"line_start":270,"line_end":270,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":93993,"byte_end":93996,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":94001,"byte_end":94042,"line_start":272,"line_end":272,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":94047,"byte_end":94093,"line_start":273,"line_end":273,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":94098,"byte_end":94174,"line_start":274,"line_end":274,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":94179,"byte_end":94216,"line_start":275,"line_end":275,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":94221,"byte_end":94230,"line_start":276,"line_end":276,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":94235,"byte_end":94242,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1357},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":95838,"byte_end":95845,"line_start":322,"line_end":322,"column_start":8,"column_end":15},"name":"or_else","qualname":"::try_future::TryFutureExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnOnce(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":1345},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":94471,"byte_end":94536,"line_start":286,"line_end":286,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":94541,"byte_end":94613,"line_start":287,"line_end":287,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":94618,"byte_end":94621,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":94626,"byte_end":94701,"line_start":289,"line_end":289,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":94706,"byte_end":94776,"line_start":290,"line_end":290,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":94781,"byte_end":94846,"line_start":291,"line_end":291,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":94851,"byte_end":94927,"line_start":292,"line_end":292,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":94932,"byte_end":94950,"line_start":293,"line_end":293,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":94955,"byte_end":94958,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":94963,"byte_end":95038,"line_start":295,"line_end":295,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":95043,"byte_end":95069,"line_start":296,"line_end":296,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":95074,"byte_end":95077,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":95082,"byte_end":95096,"line_start":298,"line_end":298,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":95101,"byte_end":95104,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":95109,"byte_end":95116,"line_start":300,"line_end":300,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":95121,"byte_end":95159,"line_start":301,"line_end":301,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":95164,"byte_end":95167,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":95172,"byte_end":95213,"line_start":303,"line_end":303,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":95218,"byte_end":95264,"line_start":304,"line_end":304,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":95269,"byte_end":95344,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":95349,"byte_end":95386,"line_start":306,"line_end":306,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":95391,"byte_end":95400,"line_start":307,"line_end":307,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":95405,"byte_end":95412,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":95417,"byte_end":95420,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":95425,"byte_end":95498,"line_start":310,"line_end":310,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":95503,"byte_end":95517,"line_start":311,"line_end":311,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":95522,"byte_end":95525,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":95530,"byte_end":95537,"line_start":313,"line_end":313,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":95542,"byte_end":95580,"line_start":314,"line_end":314,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":95585,"byte_end":95588,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":95593,"byte_end":95634,"line_start":316,"line_end":316,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":95639,"byte_end":95684,"line_start":317,"line_end":317,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":95689,"byte_end":95763,"line_start":318,"line_end":318,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":95768,"byte_end":95804,"line_start":319,"line_end":319,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":95809,"byte_end":95818,"line_start":320,"line_end":320,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":95823,"byte_end":95830,"line_start":321,"line_end":321,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1360},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":96780,"byte_end":96790,"line_start":348,"line_end":348,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::try_future::TryFutureExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnOnce(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":1345},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":96053,"byte_end":96126,"line_start":330,"line_end":330,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":96131,"byte_end":96134,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":96139,"byte_end":96214,"line_start":332,"line_end":332,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":96219,"byte_end":96292,"line_start":333,"line_end":333,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":96297,"byte_end":96366,"line_start":334,"line_end":334,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":96371,"byte_end":96424,"line_start":335,"line_end":335,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":96429,"byte_end":96432,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":96437,"byte_end":96451,"line_start":337,"line_end":337,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":96456,"byte_end":96459,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":96464,"byte_end":96471,"line_start":339,"line_end":339,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":96476,"byte_end":96517,"line_start":340,"line_end":340,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":96522,"byte_end":96560,"line_start":341,"line_end":341,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":96565,"byte_end":96568,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":96573,"byte_end":96615,"line_start":343,"line_end":343,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":96620,"byte_end":96701,"line_start":344,"line_end":344,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":96706,"byte_end":96746,"line_start":345,"line_end":345,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":96751,"byte_end":96760,"line_start":346,"line_end":346,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":96765,"byte_end":96772,"line_start":347,"line_end":347,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1362},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":97667,"byte_end":97678,"line_start":373,"line_end":373,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::try_future::TryFutureExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnOnce(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":1345},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":96940,"byte_end":97011,"line_start":355,"line_end":355,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":97016,"byte_end":97019,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":97024,"byte_end":97099,"line_start":357,"line_end":357,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":97104,"byte_end":97177,"line_start":358,"line_end":358,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":97182,"byte_end":97251,"line_start":359,"line_end":359,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":97256,"byte_end":97310,"line_start":360,"line_end":360,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":97315,"byte_end":97318,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":97323,"byte_end":97337,"line_start":362,"line_end":362,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":97342,"byte_end":97345,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":97350,"byte_end":97357,"line_start":364,"line_end":364,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":97362,"byte_end":97403,"line_start":365,"line_end":365,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":97408,"byte_end":97446,"line_start":366,"line_end":366,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":97451,"byte_end":97454,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":97459,"byte_end":97502,"line_start":368,"line_end":368,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":97507,"byte_end":97587,"line_start":369,"line_end":369,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":97592,"byte_end":97633,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":97638,"byte_end":97647,"line_start":371,"line_end":371,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":97652,"byte_end":97659,"line_start":372,"line_end":372,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1364},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":98777,"byte_end":98795,"line_start":405,"line_end":405,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::try_future::TryFutureExt::try_flatten_stream","value":"pub fn try_flatten_stream(Self) -> TryFlattenStream<Self> where\nSelf::Ok: TryStream<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":1345},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":97833,"byte_end":97908,"line_start":380,"line_end":380,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":97913,"byte_end":97936,"line_start":381,"line_end":381,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":97941,"byte_end":97944,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":97949,"byte_end":98021,"line_start":383,"line_end":383,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":98026,"byte_end":98099,"line_start":384,"line_end":384,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":98104,"byte_end":98118,"line_start":385,"line_end":385,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":98123,"byte_end":98126,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":98131,"byte_end":98201,"line_start":387,"line_end":387,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":98206,"byte_end":98224,"line_start":388,"line_end":388,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":98229,"byte_end":98232,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":98237,"byte_end":98251,"line_start":390,"line_end":390,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":98256,"byte_end":98259,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":98264,"byte_end":98271,"line_start":392,"line_end":392,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":98276,"byte_end":98317,"line_start":393,"line_end":393,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":98322,"byte_end":98360,"line_start":394,"line_end":394,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":98365,"byte_end":98411,"line_start":395,"line_end":395,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":98416,"byte_end":98419,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":98424,"byte_end":98484,"line_start":397,"line_end":397,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":98489,"byte_end":98568,"line_start":398,"line_end":398,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":98573,"byte_end":98576,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":98581,"byte_end":98638,"line_start":400,"line_end":400,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":98643,"byte_end":98695,"line_start":401,"line_end":401,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":98700,"byte_end":98743,"line_start":402,"line_end":402,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":98748,"byte_end":98757,"line_start":403,"line_end":403,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":98762,"byte_end":98769,"line_start":404,"line_end":404,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1365},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":99793,"byte_end":99807,"line_start":434,"line_end":434,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::try_future::TryFutureExt::unwrap_or_else","value":"pub fn unwrap_or_else<F>(Self, F) -> UnwrapOrElse<Self, F> where Self: Sized,\nF: FnOnce(Self::Error) -> Self::Ok","parent":{"krate":0,"index":1345},"children":[],"decl_id":null,"docs":" Unwraps this future's ouput, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's ouput, producing a future with this future's","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":98963,"byte_end":99033,"line_start":412,"line_end":412,"column_start":5,"column_end":75}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":99038,"byte_end":99075,"line_start":413,"line_end":413,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":99080,"byte_end":99129,"line_start":414,"line_end":414,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":99134,"byte_end":99137,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":99142,"byte_end":99211,"line_start":416,"line_end":416,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":99216,"byte_end":99289,"line_start":417,"line_end":417,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":99294,"byte_end":99364,"line_start":418,"line_end":418,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":99369,"byte_end":99387,"line_start":419,"line_end":419,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":99392,"byte_end":99395,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":99400,"byte_end":99468,"line_start":421,"line_end":421,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":99473,"byte_end":99476,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":99481,"byte_end":99495,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":99500,"byte_end":99503,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":99508,"byte_end":99515,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":99520,"byte_end":99558,"line_start":426,"line_end":426,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":99563,"byte_end":99566,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":99571,"byte_end":99612,"line_start":428,"line_end":428,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":99617,"byte_end":99669,"line_start":429,"line_end":429,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":99674,"byte_end":99721,"line_start":430,"line_end":430,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":99726,"byte_end":99759,"line_start":431,"line_end":431,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":99764,"byte_end":99773,"line_start":432,"line_end":432,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":99778,"byte_end":99785,"line_start":433,"line_end":433,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1367},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":100974,"byte_end":100985,"line_start":471,"line_end":471,"column_start":8,"column_end":19},"name":"into_future","qualname":"::try_future::TryFutureExt::into_future","value":"pub fn into_future(Self) -> IntoFuture<Self> where Self: Sized","parent":{"krate":0,"index":1345},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":100273,"byte_end":100326,"line_start":450,"line_end":450,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":100331,"byte_end":100367,"line_start":451,"line_end":451,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":100372,"byte_end":100375,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":100380,"byte_end":100429,"line_start":453,"line_end":453,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":100434,"byte_end":100501,"line_start":454,"line_end":454,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":100506,"byte_end":100519,"line_start":455,"line_end":455,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":100524,"byte_end":100527,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":100532,"byte_end":100546,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":100551,"byte_end":100554,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":100559,"byte_end":100566,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":100571,"byte_end":100630,"line_start":460,"line_end":460,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":100635,"byte_end":100638,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":100643,"byte_end":100662,"line_start":462,"line_end":462,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":100667,"byte_end":100685,"line_start":463,"line_end":463,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":100690,"byte_end":100762,"line_start":464,"line_end":464,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":100767,"byte_end":100799,"line_start":465,"line_end":465,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":100804,"byte_end":100811,"line_start":466,"line_end":466,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":100816,"byte_end":100892,"line_start":467,"line_end":467,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":100897,"byte_end":100900,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":100905,"byte_end":100954,"line_start":469,"line_end":469,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":100959,"byte_end":100966,"line_start":470,"line_end":470,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1368},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":101189,"byte_end":101203,"line_start":479,"line_end":479,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::try_future::TryFutureExt::try_poll_unpin","value":"pub fn try_poll_unpin(&mut Self, &mut Context)\n-> Poll<Result<Self::Ok, Self::Error>> where Self: Unpin","parent":{"krate":0,"index":1345},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":101086,"byte_end":101159,"line_start":477,"line_end":477,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":101164,"byte_end":101181,"line_start":478,"line_end":478,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":1370},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402},{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1532},{"krate":0,"index":1533},{"krate":0,"index":1561},{"krate":0,"index":1562},{"krate":0,"index":1613},{"krate":0,"index":1614},{"krate":0,"index":1666},{"krate":0,"index":1667},{"krate":0,"index":1694},{"krate":0,"index":1695},{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":1795},{"krate":0,"index":1796},{"krate":0,"index":1825},{"krate":0,"index":1826},{"krate":0,"index":1853},{"krate":0,"index":1854},{"krate":0,"index":1901},{"krate":0,"index":1902},{"krate":0,"index":1903},{"krate":0,"index":1950},{"krate":0,"index":1951},{"krate":0,"index":1976},{"krate":0,"index":1977},{"krate":0,"index":1998},{"krate":0,"index":1999},{"krate":0,"index":2023},{"krate":0,"index":2024},{"krate":0,"index":2025},{"krate":0,"index":2026},{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2080},{"krate":0,"index":2081},{"krate":0,"index":2082},{"krate":0,"index":2083},{"krate":0,"index":2106},{"krate":0,"index":2107},{"krate":0,"index":2108},{"krate":0,"index":2109},{"krate":0,"index":2145},{"krate":0,"index":2146},{"krate":0,"index":2147},{"krate":0,"index":2148},{"krate":0,"index":2176},{"krate":0,"index":2177},{"krate":0,"index":2229},{"krate":0,"index":2230},{"krate":0,"index":2259},{"krate":0,"index":2260},{"krate":0,"index":2316},{"krate":0,"index":2317},{"krate":0,"index":2371},{"krate":0,"index":2372},{"krate":0,"index":2423},{"krate":0,"index":2424},{"krate":0,"index":2425},{"krate":0,"index":2426},{"krate":0,"index":2462},{"krate":0,"index":2463},{"krate":0,"index":2495},{"krate":0,"index":4541},{"krate":0,"index":4583},{"krate":0,"index":4584},{"krate":0,"index":4621},{"krate":0,"index":4622},{"krate":0,"index":4673},{"krate":0,"index":4674},{"krate":0,"index":4741},{"krate":0,"index":4742},{"krate":0,"index":4940},{"krate":0,"index":4941},{"krate":0,"index":4984},{"krate":0,"index":4985},{"krate":0,"index":4986},{"krate":0,"index":2496},{"krate":0,"index":2525},{"krate":0,"index":2526},{"krate":0,"index":2528}],"decl_id":null,"docs":" Streams","sig":null,"attributes":[{"value":"! Streams","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":143793,"byte_end":143804,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":143805,"byte_end":143808,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains a number of functions for working with `Stream`s,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":143809,"byte_end":143883,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"! including the `StreamExt` trait which adds methods to `Stream` types.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":143884,"byte_end":143957,"line_start":4,"line_end":4,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4240},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/iter.rs","byte_start":183203,"byte_end":183207,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4242}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/iter.rs","byte_start":183088,"byte_end":183125,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/iter.rs","byte_start":183143,"byte_end":183191,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":1392},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/iter.rs","byte_start":183725,"byte_end":183729,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/iter.rs","byte_start":183259,"byte_end":183323,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/iter.rs","byte_start":183324,"byte_end":183352,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/iter.rs","byte_start":183353,"byte_end":183356,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/iter.rs","byte_start":183357,"byte_end":183430,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/iter.rs","byte_start":183431,"byte_end":183486,"line_start":18,"line_end":18,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/iter.rs","byte_start":183487,"byte_end":183490,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/iter.rs","byte_start":183491,"byte_end":183498,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/iter.rs","byte_start":183499,"byte_end":183540,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/iter.rs","byte_start":183541,"byte_end":183584,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/iter.rs","byte_start":183585,"byte_end":183588,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/iter.rs","byte_start":183589,"byte_end":183633,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/iter.rs","byte_start":183634,"byte_end":183699,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/iter.rs","byte_start":183700,"byte_end":183709,"line_start":26,"line_end":26,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/iter.rs","byte_start":183710,"byte_end":183717,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4246},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/repeat.rs","byte_start":184371,"byte_end":184377,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":4248}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/repeat.rs","byte_start":184254,"byte_end":184293,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/repeat.rs","byte_start":184311,"byte_end":184359,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":1410},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/repeat.rs","byte_start":184901,"byte_end":184907,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"pub fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/repeat.rs","byte_start":184399,"byte_end":184459,"line_start":12,"line_end":12,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/repeat.rs","byte_start":184460,"byte_end":184463,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/repeat.rs","byte_start":184464,"byte_end":184531,"line_start":14,"line_end":14,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/repeat.rs","byte_start":184532,"byte_end":184604,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/repeat.rs","byte_start":184605,"byte_end":184662,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/repeat.rs","byte_start":184663,"byte_end":184666,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/repeat.rs","byte_start":184667,"byte_end":184674,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/repeat.rs","byte_start":184675,"byte_end":184716,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/repeat.rs","byte_start":184717,"byte_end":184760,"line_start":20,"line_end":20,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/repeat.rs","byte_start":184761,"byte_end":184764,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/repeat.rs","byte_start":184765,"byte_end":184800,"line_start":22,"line_end":22,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/repeat.rs","byte_start":184801,"byte_end":184875,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/repeat.rs","byte_start":184876,"byte_end":184885,"line_start":24,"line_end":24,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/repeat.rs","byte_start":184886,"byte_end":184893,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4252},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chain.rs","byte_start":185714,"byte_end":185719,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Chain","qualname":"::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":4255},{"krate":0,"index":4256}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`chain`](super::StreamExt::chain) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chain.rs","byte_start":185575,"byte_end":185636,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chain.rs","byte_start":185654,"byte_end":185702,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":4267},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/collect.rs","byte_start":187877,"byte_end":187884,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"Collect","qualname":"::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":4270},{"krate":0,"index":4271}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`collect`](super::StreamExt::collect) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/collect.rs","byte_start":187715,"byte_end":187780,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/collect.rs","byte_start":187798,"byte_end":187865,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4281},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/concat.rs","byte_start":189382,"byte_end":189388,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Concat","qualname":"::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":4283},{"krate":0,"index":4284}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`concat`](super::StreamExt::concat) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/concat.rs","byte_start":189222,"byte_end":189285,"line_start":7,"line_end":7,"column_start":1,"column_end":64}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/concat.rs","byte_start":189303,"byte_end":189370,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4293},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/empty.rs","byte_start":191174,"byte_end":191179,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":4295}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/empty.rs","byte_start":191058,"byte_end":191096,"line_start":6,"line_end":6,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/empty.rs","byte_start":191114,"byte_end":191162,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":1518},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/empty.rs","byte_start":191347,"byte_end":191352,"line_start":16,"line_end":16,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"pub fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/empty.rs","byte_start":191217,"byte_end":191265,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/empty.rs","byte_start":191266,"byte_end":191269,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/empty.rs","byte_start":191270,"byte_end":191339,"line_start":15,"line_end":15,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":4299},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/enumerate.rs","byte_start":192160,"byte_end":192169,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"Enumerate","qualname":"::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":4301},{"krate":0,"index":4302}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`enumerate`](super::StreamExt::enumerate) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/enumerate.rs","byte_start":192013,"byte_end":192082,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/enumerate.rs","byte_start":192100,"byte_end":192148,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1549},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/enumerate.rs","byte_start":192619,"byte_end":192626,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Enumerate<St>>::get_ref","value":"pub fn get_ref(&Self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/enumerate.rs","byte_start":192512,"byte_end":192585,"line_start":29,"line_end":29,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/enumerate.rs","byte_start":192590,"byte_end":192607,"line_start":30,"line_end":30,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1550},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/enumerate.rs","byte_start":192936,"byte_end":192943,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Enumerate<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/enumerate.rs","byte_start":192675,"byte_end":192742,"line_start":35,"line_end":35,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/enumerate.rs","byte_start":192747,"byte_end":192778,"line_start":36,"line_end":36,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/enumerate.rs","byte_start":192783,"byte_end":192786,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/enumerate.rs","byte_start":192791,"byte_end":192864,"line_start":38,"line_end":38,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/enumerate.rs","byte_start":192869,"byte_end":192924,"line_start":39,"line_end":39,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1551},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/enumerate.rs","byte_start":193272,"byte_end":193283,"line_start":49,"line_end":49,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Enumerate<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/enumerate.rs","byte_start":193004,"byte_end":193078,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/enumerate.rs","byte_start":193083,"byte_end":193114,"line_start":45,"line_end":45,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/enumerate.rs","byte_start":193119,"byte_end":193122,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/enumerate.rs","byte_start":193127,"byte_end":193200,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/enumerate.rs","byte_start":193205,"byte_end":193260,"line_start":48,"line_end":48,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1552},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/enumerate.rs","byte_start":193592,"byte_end":193602,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Enumerate<St>>::into_inner","value":"pub fn into_inner(Self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/enumerate.rs","byte_start":193357,"byte_end":193419,"line_start":53,"line_end":53,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/enumerate.rs","byte_start":193424,"byte_end":193427,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/enumerate.rs","byte_start":193432,"byte_end":193504,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/enumerate.rs","byte_start":193509,"byte_end":193580,"line_start":56,"line_end":56,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1575},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter.rs","byte_start":194980,"byte_end":194986,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"Filter","qualname":"::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":1579},{"krate":0,"index":1580},{"krate":0,"index":1581},{"krate":0,"index":1582}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`filter`](super::StreamExt::filter) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter.rs","byte_start":194856,"byte_end":194919,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter.rs","byte_start":194920,"byte_end":194968,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1597},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter.rs","byte_start":196219,"byte_end":196226,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Filter<St, Fut, F>>::get_ref","value":"pub fn get_ref(&Self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter.rs","byte_start":196112,"byte_end":196185,"line_start":61,"line_end":61,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter.rs","byte_start":196190,"byte_end":196207,"line_start":62,"line_end":62,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1598},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter.rs","byte_start":196536,"byte_end":196543,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Filter<St, Fut, F>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter.rs","byte_start":196275,"byte_end":196342,"line_start":67,"line_end":67,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter.rs","byte_start":196347,"byte_end":196378,"line_start":68,"line_end":68,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter.rs","byte_start":196383,"byte_end":196386,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter.rs","byte_start":196391,"byte_end":196464,"line_start":70,"line_end":70,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter.rs","byte_start":196469,"byte_end":196524,"line_start":71,"line_end":71,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1599},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter.rs","byte_start":196872,"byte_end":196883,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Filter<St, Fut, F>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter.rs","byte_start":196604,"byte_end":196678,"line_start":76,"line_end":76,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter.rs","byte_start":196683,"byte_end":196714,"line_start":77,"line_end":77,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter.rs","byte_start":196719,"byte_end":196722,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter.rs","byte_start":196727,"byte_end":196800,"line_start":79,"line_end":79,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter.rs","byte_start":196805,"byte_end":196860,"line_start":80,"line_end":80,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1600},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter.rs","byte_start":197192,"byte_end":197202,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Filter<St, Fut, F>>::into_inner","value":"pub fn into_inner(Self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter.rs","byte_start":196957,"byte_end":197019,"line_start":85,"line_end":85,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter.rs","byte_start":197024,"byte_end":197027,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter.rs","byte_start":197032,"byte_end":197104,"line_start":87,"line_end":87,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter.rs","byte_start":197109,"byte_end":197180,"line_start":88,"line_end":88,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1627},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter_map.rs","byte_start":199652,"byte_end":199661,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"FilterMap","qualname":"::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":1631},{"krate":0,"index":1632},{"krate":0,"index":1633}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`filter_map`](super::StreamExt::filter_map) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter_map.rs","byte_start":199520,"byte_end":199591,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter_map.rs","byte_start":199592,"byte_end":199640,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1648},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter_map.rs","byte_start":200600,"byte_end":200607,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FilterMap<St, Fut, F>>::get_ref","value":"pub fn get_ref(&Self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter_map.rs","byte_start":200493,"byte_end":200566,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter_map.rs","byte_start":200571,"byte_end":200588,"line_start":51,"line_end":51,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1649},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter_map.rs","byte_start":200917,"byte_end":200924,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FilterMap<St, Fut, F>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter_map.rs","byte_start":200656,"byte_end":200723,"line_start":56,"line_end":56,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter_map.rs","byte_start":200728,"byte_end":200759,"line_start":57,"line_end":57,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter_map.rs","byte_start":200764,"byte_end":200767,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter_map.rs","byte_start":200772,"byte_end":200845,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter_map.rs","byte_start":200850,"byte_end":200905,"line_start":60,"line_end":60,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1650},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter_map.rs","byte_start":201253,"byte_end":201264,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FilterMap<St, Fut, F>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter_map.rs","byte_start":200985,"byte_end":201059,"line_start":65,"line_end":65,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter_map.rs","byte_start":201064,"byte_end":201095,"line_start":66,"line_end":66,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter_map.rs","byte_start":201100,"byte_end":201103,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter_map.rs","byte_start":201108,"byte_end":201181,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter_map.rs","byte_start":201186,"byte_end":201241,"line_start":69,"line_end":69,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1651},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter_map.rs","byte_start":201573,"byte_end":201583,"line_start":78,"line_end":78,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FilterMap<St, Fut, F>>::into_inner","value":"pub fn into_inner(Self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter_map.rs","byte_start":201338,"byte_end":201400,"line_start":74,"line_end":74,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter_map.rs","byte_start":201405,"byte_end":201408,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter_map.rs","byte_start":201413,"byte_end":201485,"line_start":76,"line_end":76,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter_map.rs","byte_start":201490,"byte_end":201561,"line_start":77,"line_end":77,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4329},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/flatten.rs","byte_start":203805,"byte_end":203812,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":4331},{"krate":0,"index":4332}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`flatten`](super::StreamExt::flatten) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/flatten.rs","byte_start":203662,"byte_end":203727,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/flatten.rs","byte_start":203745,"byte_end":203793,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1683},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/flatten.rs","byte_start":204364,"byte_end":204371,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Flatten<St>>::get_ref","value":"pub fn get_ref(&Self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/flatten.rs","byte_start":204257,"byte_end":204330,"line_start":43,"line_end":43,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/flatten.rs","byte_start":204335,"byte_end":204352,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1684},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/flatten.rs","byte_start":204681,"byte_end":204688,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Flatten<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/flatten.rs","byte_start":204420,"byte_end":204487,"line_start":49,"line_end":49,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/flatten.rs","byte_start":204492,"byte_end":204523,"line_start":50,"line_end":50,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/flatten.rs","byte_start":204528,"byte_end":204531,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/flatten.rs","byte_start":204536,"byte_end":204609,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/flatten.rs","byte_start":204614,"byte_end":204669,"line_start":53,"line_end":53,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1685},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/flatten.rs","byte_start":205017,"byte_end":205028,"line_start":63,"line_end":63,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Flatten<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/flatten.rs","byte_start":204749,"byte_end":204823,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/flatten.rs","byte_start":204828,"byte_end":204859,"line_start":59,"line_end":59,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/flatten.rs","byte_start":204864,"byte_end":204867,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/flatten.rs","byte_start":204872,"byte_end":204945,"line_start":61,"line_end":61,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/flatten.rs","byte_start":204950,"byte_end":205005,"line_start":62,"line_end":62,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1686},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/flatten.rs","byte_start":205337,"byte_end":205347,"line_start":71,"line_end":71,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Flatten<St>>::into_inner","value":"pub fn into_inner(Self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/flatten.rs","byte_start":205102,"byte_end":205164,"line_start":67,"line_end":67,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/flatten.rs","byte_start":205169,"byte_end":205172,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/flatten.rs","byte_start":205177,"byte_end":205249,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/flatten.rs","byte_start":205254,"byte_end":205325,"line_start":70,"line_end":70,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1708},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fold.rs","byte_start":206894,"byte_end":206898,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Fold","qualname":"::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":1713},{"krate":0,"index":1714},{"krate":0,"index":1715},{"krate":0,"index":1716}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`fold`](super::StreamExt::fold) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fold.rs","byte_start":206755,"byte_end":206814,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fold.rs","byte_start":206815,"byte_end":206882,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":1763},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/for_each.rs","byte_start":209543,"byte_end":209550,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"ForEach","qualname":"::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":1767},{"krate":0,"index":1768},{"krate":0,"index":1769}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`for_each`](super::StreamExt::for_each) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/for_each.rs","byte_start":209396,"byte_end":209463,"line_start":8,"line_end":8,"column_start":1,"column_end":68}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/for_each.rs","byte_start":209464,"byte_end":209531,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4360},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fuse.rs","byte_start":211801,"byte_end":211805,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Fuse","qualname":"::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":4362},{"krate":0,"index":4363}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`fuse`](super::StreamExt::fuse) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fuse.rs","byte_start":211664,"byte_end":211723,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fuse.rs","byte_start":211741,"byte_end":211789,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1812},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fuse.rs","byte_start":212338,"byte_end":212345,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fuse.rs","byte_start":212069,"byte_end":212131,"line_start":26,"line_end":26,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fuse.rs","byte_start":212136,"byte_end":212139,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fuse.rs","byte_start":212144,"byte_end":212212,"line_start":28,"line_end":28,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fuse.rs","byte_start":212217,"byte_end":212283,"line_start":29,"line_end":29,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fuse.rs","byte_start":212288,"byte_end":212326,"line_start":30,"line_end":30,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1813},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fuse.rs","byte_start":212499,"byte_end":212506,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Fuse<St>>::get_ref","value":"pub fn get_ref(&Self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fuse.rs","byte_start":212392,"byte_end":212465,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fuse.rs","byte_start":212470,"byte_end":212487,"line_start":36,"line_end":36,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1814},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fuse.rs","byte_start":212816,"byte_end":212823,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Fuse<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fuse.rs","byte_start":212555,"byte_end":212622,"line_start":41,"line_end":41,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fuse.rs","byte_start":212627,"byte_end":212658,"line_start":42,"line_end":42,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fuse.rs","byte_start":212663,"byte_end":212666,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fuse.rs","byte_start":212671,"byte_end":212744,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fuse.rs","byte_start":212749,"byte_end":212804,"line_start":45,"line_end":45,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1815},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fuse.rs","byte_start":213152,"byte_end":213163,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Fuse<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fuse.rs","byte_start":212884,"byte_end":212958,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fuse.rs","byte_start":212963,"byte_end":212994,"line_start":51,"line_end":51,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fuse.rs","byte_start":212999,"byte_end":213002,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fuse.rs","byte_start":213007,"byte_end":213080,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fuse.rs","byte_start":213085,"byte_end":213140,"line_start":54,"line_end":54,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1816},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fuse.rs","byte_start":213472,"byte_end":213482,"line_start":63,"line_end":63,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Fuse<St>>::into_inner","value":"pub fn into_inner(Self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fuse.rs","byte_start":213237,"byte_end":213299,"line_start":59,"line_end":59,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fuse.rs","byte_start":213304,"byte_end":213307,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fuse.rs","byte_start":213312,"byte_end":213384,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fuse.rs","byte_start":213389,"byte_end":213460,"line_start":62,"line_end":62,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4372},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":214812,"byte_end":214824,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":4374}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":214642,"byte_end":214715,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":214733,"byte_end":214800,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1842},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":215504,"byte_end":215511,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":215112,"byte_end":215185,"line_start":24,"line_end":24,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":215190,"byte_end":215207,"line_start":25,"line_end":25,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":215212,"byte_end":215215,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":215220,"byte_end":215301,"line_start":27,"line_end":27,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":215306,"byte_end":215388,"line_start":28,"line_end":28,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":215393,"byte_end":215472,"line_start":29,"line_end":29,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":215477,"byte_end":215492,"line_start":30,"line_end":30,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1843},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":216122,"byte_end":216129,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":215576,"byte_end":215643,"line_start":35,"line_end":35,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":215648,"byte_end":215679,"line_start":36,"line_end":36,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":215684,"byte_end":215687,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":215692,"byte_end":215765,"line_start":38,"line_end":38,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":215770,"byte_end":215825,"line_start":39,"line_end":39,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":215830,"byte_end":215833,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":215838,"byte_end":215919,"line_start":41,"line_end":41,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":215924,"byte_end":216006,"line_start":42,"line_end":42,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":216011,"byte_end":216090,"line_start":43,"line_end":43,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":216095,"byte_end":216110,"line_start":44,"line_end":44,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1844},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":216755,"byte_end":216766,"line_start":59,"line_end":59,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Option<Pin<&mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":216202,"byte_end":216276,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":216281,"byte_end":216312,"line_start":50,"line_end":50,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":216317,"byte_end":216320,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":216325,"byte_end":216398,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":216403,"byte_end":216458,"line_start":53,"line_end":53,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":216463,"byte_end":216466,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":216471,"byte_end":216552,"line_start":55,"line_end":55,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":216557,"byte_end":216639,"line_start":56,"line_end":56,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":216644,"byte_end":216723,"line_start":57,"line_end":57,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":216728,"byte_end":216743,"line_start":58,"line_end":58,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1845},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":217381,"byte_end":217391,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"pub fn into_inner(Self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":216861,"byte_end":216923,"line_start":63,"line_end":63,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":216928,"byte_end":216931,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":216936,"byte_end":217008,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":217013,"byte_end":217084,"line_start":66,"line_end":66,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":217089,"byte_end":217092,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":217097,"byte_end":217178,"line_start":68,"line_end":68,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":217183,"byte_end":217265,"line_start":69,"line_end":69,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":217270,"byte_end":217349,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":217354,"byte_end":217369,"line_start":71,"line_end":71,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1866},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/inspect.rs","byte_start":218383,"byte_end":218390,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"Inspect","qualname":"::stream::inspect::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":1869},{"krate":0,"index":1870}],"decl_id":null,"docs":" Stream for the [`inspect`](super::StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`inspect`](super::StreamExt::inspect) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/inspect.rs","byte_start":218257,"byte_end":218322,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/inspect.rs","byte_start":218323,"byte_end":218371,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1882},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/inspect.rs","byte_start":219069,"byte_end":219076,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Inspect<St, F>>::get_ref","value":"pub fn get_ref(&Self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/inspect.rs","byte_start":218962,"byte_end":219035,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/inspect.rs","byte_start":219040,"byte_end":219057,"line_start":41,"line_end":41,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1883},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/inspect.rs","byte_start":219386,"byte_end":219393,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Inspect<St, F>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/inspect.rs","byte_start":219125,"byte_end":219192,"line_start":46,"line_end":46,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/inspect.rs","byte_start":219197,"byte_end":219228,"line_start":47,"line_end":47,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/inspect.rs","byte_start":219233,"byte_end":219236,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/inspect.rs","byte_start":219241,"byte_end":219314,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/inspect.rs","byte_start":219319,"byte_end":219374,"line_start":50,"line_end":50,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1884},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/inspect.rs","byte_start":219722,"byte_end":219733,"line_start":60,"line_end":60,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Inspect<St, F>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/inspect.rs","byte_start":219454,"byte_end":219528,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/inspect.rs","byte_start":219533,"byte_end":219564,"line_start":56,"line_end":56,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/inspect.rs","byte_start":219569,"byte_end":219572,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/inspect.rs","byte_start":219577,"byte_end":219650,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/inspect.rs","byte_start":219655,"byte_end":219710,"line_start":59,"line_end":59,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1885},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/inspect.rs","byte_start":220042,"byte_end":220052,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Inspect<St, F>>::into_inner","value":"pub fn into_inner(Self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/inspect.rs","byte_start":219807,"byte_end":219869,"line_start":64,"line_end":64,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/inspect.rs","byte_start":219874,"byte_end":219877,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/inspect.rs","byte_start":219882,"byte_end":219954,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/inspect.rs","byte_start":219959,"byte_end":220030,"line_start":67,"line_end":67,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1915},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/map.rs","byte_start":221499,"byte_end":221502,"line_start":11,"line_end":11,"column_start":12,"column_end":15},"name":"Map","qualname":"::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":1918},{"krate":0,"index":1919}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`map`](super::StreamExt::map) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/map.rs","byte_start":221381,"byte_end":221438,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/map.rs","byte_start":221439,"byte_end":221487,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1932},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/map.rs","byte_start":222164,"byte_end":222171,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Map<St, F>>::get_ref","value":"pub fn get_ref(&Self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/map.rs","byte_start":222057,"byte_end":222130,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/map.rs","byte_start":222135,"byte_end":222152,"line_start":41,"line_end":41,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1933},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/map.rs","byte_start":222481,"byte_end":222488,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Map<St, F>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/map.rs","byte_start":222220,"byte_end":222287,"line_start":46,"line_end":46,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/map.rs","byte_start":222292,"byte_end":222323,"line_start":47,"line_end":47,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/map.rs","byte_start":222328,"byte_end":222331,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/map.rs","byte_start":222336,"byte_end":222409,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/map.rs","byte_start":222414,"byte_end":222469,"line_start":50,"line_end":50,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1934},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/map.rs","byte_start":222817,"byte_end":222828,"line_start":60,"line_end":60,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Map<St, F>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/map.rs","byte_start":222549,"byte_end":222623,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/map.rs","byte_start":222628,"byte_end":222659,"line_start":56,"line_end":56,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/map.rs","byte_start":222664,"byte_end":222667,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/map.rs","byte_start":222672,"byte_end":222745,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/map.rs","byte_start":222750,"byte_end":222805,"line_start":59,"line_end":59,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1935},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/map.rs","byte_start":223137,"byte_end":223147,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Map<St, F>>::into_inner","value":"pub fn into_inner(Self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/map.rs","byte_start":222902,"byte_end":222964,"line_start":64,"line_end":64,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/map.rs","byte_start":222969,"byte_end":222972,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/map.rs","byte_start":222977,"byte_end":223049,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/map.rs","byte_start":223054,"byte_end":223125,"line_start":67,"line_end":67,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4391},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/next.rs","byte_start":224439,"byte_end":224443,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":4394}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/next.rs","byte_start":224283,"byte_end":224342,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/next.rs","byte_start":224360,"byte_end":224427,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4399},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_next_some.rs","byte_start":225458,"byte_end":225472,"line_start":11,"line_end":11,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":4402}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_next_some.rs","byte_start":225274,"byte_end":225349,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_next_some.rs","byte_start":225350,"byte_end":225361,"line_start":8,"line_end":8,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_next_some.rs","byte_start":225379,"byte_end":225446,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":2009},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/once.rs","byte_start":226838,"byte_end":226842,"line_start":18,"line_end":18,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<Fut: Future>(Fut) -> Once<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/once.rs","byte_start":226531,"byte_end":226572,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/once.rs","byte_start":226573,"byte_end":226576,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/once.rs","byte_start":226577,"byte_end":226584,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/once.rs","byte_start":226585,"byte_end":226626,"line_start":10,"line_end":10,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/once.rs","byte_start":226627,"byte_end":226670,"line_start":11,"line_end":11,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/once.rs","byte_start":226671,"byte_end":226674,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/once.rs","byte_start":226675,"byte_end":226719,"line_start":13,"line_end":13,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/once.rs","byte_start":226720,"byte_end":226775,"line_start":14,"line_end":14,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/once.rs","byte_start":226776,"byte_end":226812,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/once.rs","byte_start":226813,"byte_end":226822,"line_start":16,"line_end":16,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/once.rs","byte_start":226823,"byte_end":226830,"line_start":17,"line_end":17,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4407},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/once.rs","byte_start":227110,"byte_end":227114,"line_start":27,"line_end":27,"column_start":12,"column_end":16},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":4409}],"decl_id":null,"docs":" A stream which emits single element and then EOF.","sig":null,"attributes":[{"value":"/ A stream which emits single element and then EOF.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/once.rs","byte_start":226921,"byte_end":226974,"line_start":22,"line_end":22,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/once.rs","byte_start":226975,"byte_end":226978,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This stream will never block and is always ready.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/once.rs","byte_start":226979,"byte_end":227032,"line_start":24,"line_end":24,"column_start":1,"column_end":54}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/once.rs","byte_start":227050,"byte_end":227098,"line_start":26,"line_end":26,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":4416},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":228500,"byte_end":228508,"line_start":16,"line_end":16,"column_start":12,"column_end":20},"name":"Peekable","qualname":"::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":4418},{"krate":0,"index":4419}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"/ A `Stream` that implements a `peek` method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":228208,"byte_end":228255,"line_start":9,"line_end":9,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":228256,"byte_end":228259,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The `peek` method can be used to retrieve a reference","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":228260,"byte_end":228317,"line_start":11,"line_end":11,"column_start":1,"column_end":58}},{"value":"/ to the next `Stream::Item` if available. A subsequent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":228318,"byte_end":228375,"line_start":12,"line_end":12,"column_start":1,"column_end":58}},{"value":"/ call to `poll` will return the owned item.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":228376,"byte_end":228422,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":228440,"byte_end":228488,"line_start":15,"line_end":15,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2045},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":229008,"byte_end":229015,"line_start":36,"line_end":36,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Peekable<St>>::get_ref","value":"pub fn get_ref(&Self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":228901,"byte_end":228974,"line_start":34,"line_end":34,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":228979,"byte_end":228996,"line_start":35,"line_end":35,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2046},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":229334,"byte_end":229341,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Peekable<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":229073,"byte_end":229140,"line_start":40,"line_end":40,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":229145,"byte_end":229176,"line_start":41,"line_end":41,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":229181,"byte_end":229184,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":229189,"byte_end":229262,"line_start":43,"line_end":43,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":229267,"byte_end":229322,"line_start":44,"line_end":44,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2047},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":229675,"byte_end":229686,"line_start":54,"line_end":54,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Peekable<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":229407,"byte_end":229481,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":229486,"byte_end":229517,"line_start":50,"line_end":50,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":229522,"byte_end":229525,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":229530,"byte_end":229603,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":229608,"byte_end":229663,"line_start":53,"line_end":53,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2048},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":230009,"byte_end":230019,"line_start":62,"line_end":62,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Peekable<St>>::into_inner","value":"pub fn into_inner(Self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":229774,"byte_end":229836,"line_start":58,"line_end":58,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":229841,"byte_end":229844,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":229849,"byte_end":229921,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":229926,"byte_end":229997,"line_start":61,"line_end":61,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2049},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":230316,"byte_end":230320,"line_start":70,"line_end":70,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"pub fn peek(Pin<&mut Self>, &mut Context) -> Poll<Option<&St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[{"value":"/ Peek retrieves a reference to the next item in the stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":230078,"byte_end":230140,"line_start":66,"line_end":66,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":230145,"byte_end":230148,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This method polls the underlying stream and return either a reference","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":230153,"byte_end":230226,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/ to the next item if the stream is ready or passes through any errors.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":230231,"byte_end":230304,"line_start":69,"line_end":69,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":4428},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/pending.rs","byte_start":232252,"byte_end":232259,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":4430}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/pending.rs","byte_start":232132,"byte_end":232174,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/pending.rs","byte_start":232192,"byte_end":232240,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2068},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/pending.rs","byte_start":232435,"byte_end":232442,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/pending.rs","byte_start":232303,"byte_end":232357,"line_start":13,"line_end":13,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/pending.rs","byte_start":232358,"byte_end":232361,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/pending.rs","byte_start":232362,"byte_end":232427,"line_start":15,"line_end":15,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":2090},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/poll_fn.rs","byte_start":233148,"byte_end":233154,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":2092}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/poll_fn.rs","byte_start":233047,"byte_end":233087,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/poll_fn.rs","byte_start":233088,"byte_end":233136,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2098},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/poll_fn.rs","byte_start":233842,"byte_end":233849,"line_start":40,"line_end":40,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) ->\nPoll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/poll_fn.rs","byte_start":233354,"byte_end":233427,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/poll_fn.rs","byte_start":233428,"byte_end":233431,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/poll_fn.rs","byte_start":233432,"byte_end":233491,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/poll_fn.rs","byte_start":233492,"byte_end":233495,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/poll_fn.rs","byte_start":233496,"byte_end":233510,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/poll_fn.rs","byte_start":233511,"byte_end":233514,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/poll_fn.rs","byte_start":233515,"byte_end":233522,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/poll_fn.rs","byte_start":233523,"byte_end":233556,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/poll_fn.rs","byte_start":233557,"byte_end":233585,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/poll_fn.rs","byte_start":233586,"byte_end":233589,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/poll_fn.rs","byte_start":233590,"byte_end":233619,"line_start":32,"line_end":32,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/poll_fn.rs","byte_start":233620,"byte_end":233623,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/poll_fn.rs","byte_start":233624,"byte_end":233688,"line_start":34,"line_end":34,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/poll_fn.rs","byte_start":233689,"byte_end":233742,"line_start":35,"line_end":35,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/poll_fn.rs","byte_start":233743,"byte_end":233764,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/poll_fn.rs","byte_start":233765,"byte_end":233818,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/poll_fn.rs","byte_start":233819,"byte_end":233826,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/poll_fn.rs","byte_start":233827,"byte_end":233834,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4434},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":234454,"byte_end":234460,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":4437},{"krate":0,"index":4438},{"krate":0,"index":4439}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`select()`] function.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":234335,"byte_end":234376,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":234394,"byte_end":234442,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2123},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":235076,"byte_end":235082,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"pub fn select<St1, St2>(St1, St2) -> Select<St1, St2> where St1: Stream,\nSt2: Stream<Item = St1::Item>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":234600,"byte_end":234668,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":234669,"byte_end":234745,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":234746,"byte_end":234794,"line_start":19,"line_end":19,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":234795,"byte_end":234798,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ After one of the two input stream completes, the remaining one will be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":234799,"byte_end":234873,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":234874,"byte_end":234943,"line_start":22,"line_end":22,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":234944,"byte_end":234971,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":234972,"byte_end":234975,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":234976,"byte_end":235047,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":235048,"byte_end":235068,"line_start":26,"line_end":26,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2129},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":235461,"byte_end":235468,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":235353,"byte_end":235427,"line_start":39,"line_end":39,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":235432,"byte_end":235449,"line_start":40,"line_end":40,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2130},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":235824,"byte_end":235831,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":235562,"byte_end":235630,"line_start":45,"line_end":45,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":235635,"byte_end":235666,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":235671,"byte_end":235674,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":235679,"byte_end":235752,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":235757,"byte_end":235812,"line_start":49,"line_end":49,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2131},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":236206,"byte_end":236217,"line_start":59,"line_end":59,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":235937,"byte_end":236012,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":236017,"byte_end":236048,"line_start":55,"line_end":55,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":236053,"byte_end":236056,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":236061,"byte_end":236134,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":236139,"byte_end":236194,"line_start":58,"line_end":58,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2132},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":236723,"byte_end":236733,"line_start":70,"line_end":70,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":236487,"byte_end":236550,"line_start":66,"line_end":66,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":236555,"byte_end":236558,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":236563,"byte_end":236635,"line_start":68,"line_end":68,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":236640,"byte_end":236711,"line_start":69,"line_end":69,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4444},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip.rs","byte_start":238772,"byte_end":238776,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Skip","qualname":"::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":4446},{"krate":0,"index":4447}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`skip`](super::StreamExt::skip) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip.rs","byte_start":238635,"byte_end":238694,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip.rs","byte_start":238712,"byte_end":238760,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2164},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip.rs","byte_start":239205,"byte_end":239212,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Skip<St>>::get_ref","value":"pub fn get_ref(&Self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip.rs","byte_start":239098,"byte_end":239171,"line_start":29,"line_end":29,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip.rs","byte_start":239176,"byte_end":239193,"line_start":30,"line_end":30,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2165},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip.rs","byte_start":239522,"byte_end":239529,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Skip<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip.rs","byte_start":239261,"byte_end":239328,"line_start":35,"line_end":35,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip.rs","byte_start":239333,"byte_end":239364,"line_start":36,"line_end":36,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip.rs","byte_start":239369,"byte_end":239372,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip.rs","byte_start":239377,"byte_end":239450,"line_start":38,"line_end":38,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip.rs","byte_start":239455,"byte_end":239510,"line_start":39,"line_end":39,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2166},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip.rs","byte_start":239858,"byte_end":239869,"line_start":49,"line_end":49,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Skip<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip.rs","byte_start":239590,"byte_end":239664,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip.rs","byte_start":239669,"byte_end":239700,"line_start":45,"line_end":45,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip.rs","byte_start":239705,"byte_end":239708,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip.rs","byte_start":239713,"byte_end":239786,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip.rs","byte_start":239791,"byte_end":239846,"line_start":48,"line_end":48,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2167},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip.rs","byte_start":240178,"byte_end":240188,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Skip<St>>::into_inner","value":"pub fn into_inner(Self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip.rs","byte_start":239943,"byte_end":240005,"line_start":53,"line_end":53,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip.rs","byte_start":240010,"byte_end":240013,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip.rs","byte_start":240018,"byte_end":240090,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip.rs","byte_start":240095,"byte_end":240166,"line_start":56,"line_end":56,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2190},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip_while.rs","byte_start":241790,"byte_end":241799,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"SkipWhile","qualname":"::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":2194},{"krate":0,"index":2195},{"krate":0,"index":2196},{"krate":0,"index":2197},{"krate":0,"index":2198}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`skip_while`](super::StreamExt::skip_while) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip_while.rs","byte_start":241658,"byte_end":241729,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip_while.rs","byte_start":241730,"byte_end":241778,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2213},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip_while.rs","byte_start":243193,"byte_end":243200,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<SkipWhile<St, Fut, F>>::get_ref","value":"pub fn get_ref(&Self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip_while.rs","byte_start":243086,"byte_end":243159,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip_while.rs","byte_start":243164,"byte_end":243181,"line_start":60,"line_end":60,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2214},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip_while.rs","byte_start":243510,"byte_end":243517,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<SkipWhile<St, Fut, F>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip_while.rs","byte_start":243249,"byte_end":243316,"line_start":65,"line_end":65,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip_while.rs","byte_start":243321,"byte_end":243352,"line_start":66,"line_end":66,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip_while.rs","byte_start":243357,"byte_end":243360,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip_while.rs","byte_start":243365,"byte_end":243438,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip_while.rs","byte_start":243443,"byte_end":243498,"line_start":69,"line_end":69,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2215},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip_while.rs","byte_start":243846,"byte_end":243857,"line_start":79,"line_end":79,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<SkipWhile<St, Fut, F>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip_while.rs","byte_start":243578,"byte_end":243652,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip_while.rs","byte_start":243657,"byte_end":243688,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip_while.rs","byte_start":243693,"byte_end":243696,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip_while.rs","byte_start":243701,"byte_end":243774,"line_start":77,"line_end":77,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip_while.rs","byte_start":243779,"byte_end":243834,"line_start":78,"line_end":78,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2216},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip_while.rs","byte_start":244166,"byte_end":244176,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SkipWhile<St, Fut, F>>::into_inner","value":"pub fn into_inner(Self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip_while.rs","byte_start":243931,"byte_end":243993,"line_start":83,"line_end":83,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip_while.rs","byte_start":243998,"byte_end":244001,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip_while.rs","byte_start":244006,"byte_end":244078,"line_start":85,"line_end":85,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip_while.rs","byte_start":244083,"byte_end":244154,"line_start":86,"line_end":86,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4468},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take.rs","byte_start":246748,"byte_end":246752,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Take","qualname":"::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":4470},{"krate":0,"index":4471}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`take`](super::StreamExt::take) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take.rs","byte_start":246611,"byte_end":246670,"line_start":9,"line_end":9,"column_start":1,"column_end":60}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take.rs","byte_start":246688,"byte_end":246736,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2247},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take.rs","byte_start":247181,"byte_end":247188,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<St>>::get_ref","value":"pub fn get_ref(&Self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take.rs","byte_start":247074,"byte_end":247147,"line_start":30,"line_end":30,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take.rs","byte_start":247152,"byte_end":247169,"line_start":31,"line_end":31,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2248},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take.rs","byte_start":247498,"byte_end":247505,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take.rs","byte_start":247237,"byte_end":247304,"line_start":36,"line_end":36,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take.rs","byte_start":247309,"byte_end":247340,"line_start":37,"line_end":37,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take.rs","byte_start":247345,"byte_end":247348,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take.rs","byte_start":247353,"byte_end":247426,"line_start":39,"line_end":39,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take.rs","byte_start":247431,"byte_end":247486,"line_start":40,"line_end":40,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2249},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take.rs","byte_start":247834,"byte_end":247845,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Take<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take.rs","byte_start":247566,"byte_end":247640,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take.rs","byte_start":247645,"byte_end":247676,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take.rs","byte_start":247681,"byte_end":247684,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take.rs","byte_start":247689,"byte_end":247762,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take.rs","byte_start":247767,"byte_end":247822,"line_start":49,"line_end":49,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2250},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take.rs","byte_start":248154,"byte_end":248164,"line_start":58,"line_end":58,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<St>>::into_inner","value":"pub fn into_inner(Self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take.rs","byte_start":247919,"byte_end":247981,"line_start":54,"line_end":54,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take.rs","byte_start":247986,"byte_end":247989,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take.rs","byte_start":247994,"byte_end":248066,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take.rs","byte_start":248071,"byte_end":248142,"line_start":57,"line_end":57,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2273},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take_while.rs","byte_start":249966,"byte_end":249975,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"TakeWhile","qualname":"::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":2277},{"krate":0,"index":2278},{"krate":0,"index":2279},{"krate":0,"index":2280},{"krate":0,"index":2281}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`take_while`](super::StreamExt::take_while) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take_while.rs","byte_start":249834,"byte_end":249905,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take_while.rs","byte_start":249906,"byte_end":249954,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2300},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take_while.rs","byte_start":251402,"byte_end":251409,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<TakeWhile<St, Fut, F>>::get_ref","value":"pub fn get_ref(&Self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take_while.rs","byte_start":251295,"byte_end":251368,"line_start":61,"line_end":61,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take_while.rs","byte_start":251373,"byte_end":251390,"line_start":62,"line_end":62,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2301},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take_while.rs","byte_start":251719,"byte_end":251726,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<TakeWhile<St, Fut, F>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take_while.rs","byte_start":251458,"byte_end":251525,"line_start":67,"line_end":67,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take_while.rs","byte_start":251530,"byte_end":251561,"line_start":68,"line_end":68,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take_while.rs","byte_start":251566,"byte_end":251569,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take_while.rs","byte_start":251574,"byte_end":251647,"line_start":70,"line_end":70,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take_while.rs","byte_start":251652,"byte_end":251707,"line_start":71,"line_end":71,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2302},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take_while.rs","byte_start":252055,"byte_end":252066,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<TakeWhile<St, Fut, F>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take_while.rs","byte_start":251787,"byte_end":251861,"line_start":76,"line_end":76,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take_while.rs","byte_start":251866,"byte_end":251897,"line_start":77,"line_end":77,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take_while.rs","byte_start":251902,"byte_end":251905,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take_while.rs","byte_start":251910,"byte_end":251983,"line_start":79,"line_end":79,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take_while.rs","byte_start":251988,"byte_end":252043,"line_start":80,"line_end":80,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2303},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take_while.rs","byte_start":252375,"byte_end":252385,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TakeWhile<St, Fut, F>>::into_inner","value":"pub fn into_inner(Self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take_while.rs","byte_start":252140,"byte_end":252202,"line_start":85,"line_end":85,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take_while.rs","byte_start":252207,"byte_end":252210,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take_while.rs","byte_start":252215,"byte_end":252287,"line_start":87,"line_end":87,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take_while.rs","byte_start":252292,"byte_end":252363,"line_start":88,"line_end":88,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2330},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/then.rs","byte_start":254914,"byte_end":254918,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Then","qualname":"::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":2334},{"krate":0,"index":2335},{"krate":0,"index":2336}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`then`](super::StreamExt::then) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/then.rs","byte_start":254794,"byte_end":254853,"line_start":10,"line_end":10,"column_start":1,"column_end":60}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/then.rs","byte_start":254854,"byte_end":254902,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2355},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/then.rs","byte_start":255859,"byte_end":255866,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Then<St, Fut, F>>::get_ref","value":"pub fn get_ref(&Self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/then.rs","byte_start":255752,"byte_end":255825,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/then.rs","byte_start":255830,"byte_end":255847,"line_start":52,"line_end":52,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2356},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/then.rs","byte_start":256176,"byte_end":256183,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Then<St, Fut, F>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/then.rs","byte_start":255915,"byte_end":255982,"line_start":57,"line_end":57,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/then.rs","byte_start":255987,"byte_end":256018,"line_start":58,"line_end":58,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/then.rs","byte_start":256023,"byte_end":256026,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/then.rs","byte_start":256031,"byte_end":256104,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/then.rs","byte_start":256109,"byte_end":256164,"line_start":61,"line_end":61,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2357},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/then.rs","byte_start":256512,"byte_end":256523,"line_start":71,"line_end":71,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Then<St, Fut, F>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/then.rs","byte_start":256244,"byte_end":256318,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/then.rs","byte_start":256323,"byte_end":256354,"line_start":67,"line_end":67,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/then.rs","byte_start":256359,"byte_end":256362,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/then.rs","byte_start":256367,"byte_end":256440,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/then.rs","byte_start":256445,"byte_end":256500,"line_start":70,"line_end":70,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2358},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/then.rs","byte_start":256832,"byte_end":256842,"line_start":79,"line_end":79,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Then<St, Fut, F>>::into_inner","value":"pub fn into_inner(Self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/then.rs","byte_start":256597,"byte_end":256659,"line_start":75,"line_end":75,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/then.rs","byte_start":256664,"byte_end":256667,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/then.rs","byte_start":256672,"byte_end":256744,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/then.rs","byte_start":256749,"byte_end":256820,"line_start":78,"line_end":78,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":2385},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":260333,"byte_end":260339,"line_start":51,"line_end":51,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"pub fn unfold<T, F, Fut, Item>(T, F) -> Unfold<T, F, Fut> where F: FnMut(T) ->\nFut, Fut: Future<Output = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":258699,"byte_end":258769,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":258770,"byte_end":258773,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":258774,"byte_end":258843,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":258844,"byte_end":258925,"line_start":11,"line_end":11,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":258926,"byte_end":258957,"line_start":12,"line_end":12,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":258958,"byte_end":258961,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":258962,"byte_end":259041,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":259042,"byte_end":259121,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":259122,"byte_end":259176,"line_start":16,"line_end":16,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":259177,"byte_end":259180,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":259181,"byte_end":259261,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":259262,"byte_end":259332,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":259333,"byte_end":259355,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":259356,"byte_end":259359,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `Future`, the error will be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":259360,"byte_end":259434,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ returned by the `Stream`.  The `Stream` will then yield","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":259435,"byte_end":259494,"line_start":23,"line_end":23,"column_start":1,"column_end":60}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":259495,"byte_end":259547,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":259548,"byte_end":259551,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":259552,"byte_end":259629,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":259630,"byte_end":259702,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":259703,"byte_end":259780,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":259781,"byte_end":259841,"line_start":29,"line_end":29,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":259842,"byte_end":259845,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":259846,"byte_end":259859,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":259860,"byte_end":259863,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":259864,"byte_end":259871,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":259872,"byte_end":259913,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":259914,"byte_end":259957,"line_start":35,"line_end":35,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":259958,"byte_end":259961,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":259962,"byte_end":260017,"line_start":37,"line_end":37,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":260018,"byte_end":260041,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":260042,"byte_end":260081,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":260082,"byte_end":260119,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":260120,"byte_end":260159,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":260160,"byte_end":260176,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":260177,"byte_end":260193,"line_start":43,"line_end":43,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":260194,"byte_end":260203,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":260204,"byte_end":260211,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":260212,"byte_end":260215,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":260216,"byte_end":260268,"line_start":47,"line_end":47,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":260269,"byte_end":260307,"line_start":48,"line_end":48,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":260308,"byte_end":260317,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":260318,"byte_end":260325,"line_start":50,"line_end":50,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2390},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":260655,"byte_end":260661,"line_start":64,"line_end":64,"column_start":12,"column_end":18},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":2394},{"krate":0,"index":2395},{"krate":0,"index":2396}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`unfold`] function.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":260555,"byte_end":260594,"line_start":62,"line_end":62,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":260595,"byte_end":260643,"line_start":63,"line_end":63,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":4507},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/zip.rs","byte_start":262588,"byte_end":262591,"line_start":11,"line_end":11,"column_start":12,"column_end":15},"name":"Zip","qualname":"::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":4510},{"krate":0,"index":4511},{"krate":0,"index":4512},{"krate":0,"index":4513}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`zip`](super::StreamExt::zip) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/zip.rs","byte_start":262453,"byte_end":262510,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/zip.rs","byte_start":262528,"byte_end":262576,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2448},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/zip.rs","byte_start":263530,"byte_end":263537,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/zip.rs","byte_start":263422,"byte_end":263496,"line_start":42,"line_end":42,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/zip.rs","byte_start":263501,"byte_end":263518,"line_start":43,"line_end":43,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2449},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/zip.rs","byte_start":263893,"byte_end":263900,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/zip.rs","byte_start":263631,"byte_end":263699,"line_start":48,"line_end":48,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/zip.rs","byte_start":263704,"byte_end":263735,"line_start":49,"line_end":49,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/zip.rs","byte_start":263740,"byte_end":263743,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/zip.rs","byte_start":263748,"byte_end":263821,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/zip.rs","byte_start":263826,"byte_end":263881,"line_start":52,"line_end":52,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2450},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/zip.rs","byte_start":264275,"byte_end":264286,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/zip.rs","byte_start":264006,"byte_end":264081,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/zip.rs","byte_start":264086,"byte_end":264117,"line_start":58,"line_end":58,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/zip.rs","byte_start":264122,"byte_end":264125,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/zip.rs","byte_start":264130,"byte_end":264203,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/zip.rs","byte_start":264208,"byte_end":264263,"line_start":61,"line_end":61,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2451},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/zip.rs","byte_start":264792,"byte_end":264802,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/zip.rs","byte_start":264556,"byte_end":264619,"line_start":69,"line_end":69,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/zip.rs","byte_start":264624,"byte_end":264627,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/zip.rs","byte_start":264632,"byte_end":264704,"line_start":71,"line_end":71,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/zip.rs","byte_start":264709,"byte_end":264780,"line_start":72,"line_end":72,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4528},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chunks.rs","byte_start":267638,"byte_end":267644,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::stream::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":4530},{"krate":0,"index":4531},{"krate":0,"index":4532}],"decl_id":null,"docs":" Stream for the [`chunks`](super::StreamExt::chunks) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`chunks`](super::StreamExt::chunks) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chunks.rs","byte_start":267497,"byte_end":267560,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chunks.rs","byte_start":267578,"byte_end":267626,"line_start":13,"line_end":13,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2483},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chunks.rs","byte_start":268497,"byte_end":268504,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chunks<St>>::get_ref","value":"pub fn get_ref(&Self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chunks.rs","byte_start":268390,"byte_end":268463,"line_start":41,"line_end":41,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chunks.rs","byte_start":268468,"byte_end":268485,"line_start":42,"line_end":42,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2484},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chunks.rs","byte_start":268823,"byte_end":268830,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chunks<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chunks.rs","byte_start":268562,"byte_end":268629,"line_start":47,"line_end":47,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chunks.rs","byte_start":268634,"byte_end":268665,"line_start":48,"line_end":48,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chunks.rs","byte_start":268670,"byte_end":268673,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chunks.rs","byte_start":268678,"byte_end":268751,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chunks.rs","byte_start":268756,"byte_end":268811,"line_start":51,"line_end":51,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2485},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chunks.rs","byte_start":269164,"byte_end":269175,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chunks<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chunks.rs","byte_start":268896,"byte_end":268970,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chunks.rs","byte_start":268975,"byte_end":269006,"line_start":57,"line_end":57,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chunks.rs","byte_start":269011,"byte_end":269014,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chunks.rs","byte_start":269019,"byte_end":269092,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chunks.rs","byte_start":269097,"byte_end":269152,"line_start":60,"line_end":60,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2486},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chunks.rs","byte_start":269498,"byte_end":269508,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chunks<St>>::into_inner","value":"pub fn into_inner(Self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chunks.rs","byte_start":269263,"byte_end":269325,"line_start":65,"line_end":65,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chunks.rs","byte_start":269330,"byte_end":269333,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chunks.rs","byte_start":269338,"byte_end":269410,"line_start":67,"line_end":67,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chunks.rs","byte_start":269415,"byte_end":269486,"line_start":68,"line_end":68,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4558},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffer_unordered.rs","byte_start":7890154,"byte_end":7890169,"line_start":14,"line_end":14,"column_start":12,"column_end":27},"name":"BufferUnordered","qualname":"::stream::buffer_unordered::BufferUnordered","value":"BufferUnordered {  }","parent":null,"children":[{"krate":0,"index":4560},{"krate":0,"index":4561},{"krate":0,"index":4562}],"decl_id":null,"docs":" Stream for the [`buffer_unordered`](super::StreamExt::buffer_unordered)\n method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`buffer_unordered`](super::StreamExt::buffer_unordered)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffer_unordered.rs","byte_start":7890006,"byte_end":7890081,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffer_unordered.rs","byte_start":7890082,"byte_end":7890093,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffer_unordered.rs","byte_start":7890094,"byte_end":7890142,"line_start":13,"line_end":13,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4571},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffer_unordered.rs","byte_start":7891379,"byte_end":7891386,"line_start":66,"line_end":66,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufferUnordered<St>>::get_ref","value":"pub fn get_ref(&Self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffer_unordered.rs","byte_start":7891272,"byte_end":7891345,"line_start":64,"line_end":64,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffer_unordered.rs","byte_start":7891350,"byte_end":7891367,"line_start":65,"line_end":65,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4572},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffer_unordered.rs","byte_start":7891705,"byte_end":7891712,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufferUnordered<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffer_unordered.rs","byte_start":7891444,"byte_end":7891511,"line_start":70,"line_end":70,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffer_unordered.rs","byte_start":7891516,"byte_end":7891547,"line_start":71,"line_end":71,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffer_unordered.rs","byte_start":7891552,"byte_end":7891555,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffer_unordered.rs","byte_start":7891560,"byte_end":7891633,"line_start":73,"line_end":73,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffer_unordered.rs","byte_start":7891638,"byte_end":7891693,"line_start":74,"line_end":74,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4573},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffer_unordered.rs","byte_start":7892046,"byte_end":7892057,"line_start":84,"line_end":84,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufferUnordered<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffer_unordered.rs","byte_start":7891778,"byte_end":7891852,"line_start":79,"line_end":79,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffer_unordered.rs","byte_start":7891857,"byte_end":7891888,"line_start":80,"line_end":80,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffer_unordered.rs","byte_start":7891893,"byte_end":7891896,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffer_unordered.rs","byte_start":7891901,"byte_end":7891974,"line_start":82,"line_end":82,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffer_unordered.rs","byte_start":7891979,"byte_end":7892034,"line_start":83,"line_end":83,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4574},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffer_unordered.rs","byte_start":7892380,"byte_end":7892390,"line_start":92,"line_end":92,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufferUnordered<St>>::into_inner","value":"pub fn into_inner(Self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffer_unordered.rs","byte_start":7892145,"byte_end":7892207,"line_start":88,"line_end":88,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffer_unordered.rs","byte_start":7892212,"byte_end":7892215,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffer_unordered.rs","byte_start":7892220,"byte_end":7892292,"line_start":90,"line_end":90,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffer_unordered.rs","byte_start":7892297,"byte_end":7892368,"line_start":91,"line_end":91,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4599},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffered.rs","byte_start":7894811,"byte_end":7894819,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"Buffered","qualname":"::stream::buffered::Buffered","value":"Buffered {  }","parent":null,"children":[{"krate":0,"index":4601},{"krate":0,"index":4602},{"krate":0,"index":4603}],"decl_id":null,"docs":" Stream for the [`buffered`](super::StreamExt::buffered) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`buffered`](super::StreamExt::buffered) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffered.rs","byte_start":7894683,"byte_end":7894750,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffered.rs","byte_start":7894751,"byte_end":7894799,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4612},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffered.rs","byte_start":7895929,"byte_end":7895936,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Buffered<St>>::get_ref","value":"pub fn get_ref(&Self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffered.rs","byte_start":7895822,"byte_end":7895895,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffered.rs","byte_start":7895900,"byte_end":7895917,"line_start":60,"line_end":60,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4613},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffered.rs","byte_start":7896255,"byte_end":7896262,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Buffered<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffered.rs","byte_start":7895994,"byte_end":7896061,"line_start":65,"line_end":65,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffered.rs","byte_start":7896066,"byte_end":7896097,"line_start":66,"line_end":66,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffered.rs","byte_start":7896102,"byte_end":7896105,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffered.rs","byte_start":7896110,"byte_end":7896183,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffered.rs","byte_start":7896188,"byte_end":7896243,"line_start":69,"line_end":69,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4614},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffered.rs","byte_start":7896596,"byte_end":7896607,"line_start":79,"line_end":79,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Buffered<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffered.rs","byte_start":7896328,"byte_end":7896402,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffered.rs","byte_start":7896407,"byte_end":7896438,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffered.rs","byte_start":7896443,"byte_end":7896446,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffered.rs","byte_start":7896451,"byte_end":7896524,"line_start":77,"line_end":77,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffered.rs","byte_start":7896529,"byte_end":7896584,"line_start":78,"line_end":78,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4615},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffered.rs","byte_start":7896930,"byte_end":7896940,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Buffered<St>>::into_inner","value":"pub fn into_inner(Self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffered.rs","byte_start":7896695,"byte_end":7896757,"line_start":83,"line_end":83,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffered.rs","byte_start":7896762,"byte_end":7896765,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffered.rs","byte_start":7896770,"byte_end":7896842,"line_start":85,"line_end":85,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffered.rs","byte_start":7896847,"byte_end":7896918,"line_start":86,"line_end":86,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4639},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/for_each_concurrent.rs","byte_start":7899149,"byte_end":7899166,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"ForEachConcurrent","qualname":"::stream::for_each_concurrent::ForEachConcurrent","value":"ForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":4643},{"krate":0,"index":4644},{"krate":0,"index":4645},{"krate":0,"index":4646}],"decl_id":null,"docs":" Future for the [`for_each_concurrent`](super::StreamExt::for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`for_each_concurrent`](super::StreamExt::for_each_concurrent)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/for_each_concurrent.rs","byte_start":7898976,"byte_end":7899057,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/ method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/for_each_concurrent.rs","byte_start":7899058,"byte_end":7899069,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/for_each_concurrent.rs","byte_start":7899070,"byte_end":7899137,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4711},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7906202,"byte_end":7906216,"line_start":94,"line_end":94,"column_start":12,"column_end":26},"name":"FuturesOrdered","qualname":"::stream::futures_ordered::FuturesOrdered","value":"FuturesOrdered {  }","parent":null,"children":[{"krate":0,"index":4713},{"krate":0,"index":4714},{"krate":0,"index":4715},{"krate":0,"index":4716}],"decl_id":null,"docs":" An unbounded queue of futures.","sig":null,"attributes":[{"value":"/ An unbounded queue of futures.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7904136,"byte_end":7904170,"line_start":58,"line_end":58,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7904171,"byte_end":7904174,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" is similar to `FuturesUnordered`, but it imposes an order","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7904175,"byte_end":7904254,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"/ on top of the set of futures. While futures in the set will race to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7904255,"byte_end":7904326,"line_start":61,"line_end":61,"column_start":1,"column_end":72}},{"value":"/ completion in parallel, results will only be returned in the order their","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7904327,"byte_end":7904403,"line_start":62,"line_end":62,"column_start":1,"column_end":77}},{"value":"/ originating futures were added to the queue.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7904404,"byte_end":7904452,"line_start":63,"line_end":63,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7904453,"byte_end":7904456,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Futures are pushed into this queue and their realized values are yielded in","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7904457,"byte_end":7904536,"line_start":65,"line_end":65,"column_start":1,"column_end":80}},{"value":"/ order. This structure is optimized to manage a large number of futures.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7904537,"byte_end":7904612,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/ Futures managed by `FuturesOrdered` will only be polled when they generate","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7904613,"byte_end":7904691,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ notifications. This reduces the required amount of work needed to coordinate","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7904692,"byte_end":7904772,"line_start":68,"line_end":68,"column_start":1,"column_end":81}},{"value":"/ large numbers of futures.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7904773,"byte_end":7904802,"line_start":69,"line_end":69,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7904803,"byte_end":7904806,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ When a `FuturesOrdered` is first created, it does not contain any futures.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7904807,"byte_end":7904885,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ Calling `poll` in this state will result in `Poll::Ready(None))` to be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7904886,"byte_end":7904960,"line_start":72,"line_end":72,"column_start":1,"column_end":75}},{"value":"/ returned. Futures are submitted to the queue using `push`; however, the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7904961,"byte_end":7905036,"line_start":73,"line_end":73,"column_start":1,"column_end":76}},{"value":"/ future will **not** be polled at this point. `FuturesOrdered` will only","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7905037,"byte_end":7905112,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ poll managed futures when `FuturesOrdered::poll` is called. As such, it","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7905113,"byte_end":7905188,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"/ is important to call `poll` after pushing new futures.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7905189,"byte_end":7905247,"line_start":76,"line_end":76,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7905248,"byte_end":7905251,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ If `FuturesOrdered::poll` returns `Poll::Ready(None)` this means that","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7905252,"byte_end":7905325,"line_start":78,"line_end":78,"column_start":1,"column_end":74}},{"value":"/ the queue is currently not managing any futures. A future may be submitted","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7905326,"byte_end":7905404,"line_start":79,"line_end":79,"column_start":1,"column_end":79}},{"value":"/ to the queue at a later time. At that point, a call to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7905405,"byte_end":7905463,"line_start":80,"line_end":80,"column_start":1,"column_end":59}},{"value":"/ `FuturesOrdered::poll` will either return the future's resolved value","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7905464,"byte_end":7905537,"line_start":81,"line_end":81,"column_start":1,"column_end":74}},{"value":"/ **or** `Poll::Pending` if the future has not yet completed. When","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7905538,"byte_end":7905606,"line_start":82,"line_end":82,"column_start":1,"column_end":69}},{"value":"/ multiple futures are submitted to the queue, `FuturesOrdered::poll` will","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7905607,"byte_end":7905683,"line_start":83,"line_end":83,"column_start":1,"column_end":77}},{"value":"/ return `Poll::Pending` until the first future completes, even if","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7905684,"byte_end":7905752,"line_start":84,"line_end":84,"column_start":1,"column_end":69}},{"value":"/ some of the later futures have already completed.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7905753,"byte_end":7905806,"line_start":85,"line_end":85,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7905807,"byte_end":7905810,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `FuturesOrdered` via the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7905811,"byte_end":7905877,"line_start":87,"line_end":87,"column_start":1,"column_end":67}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty queue","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7905878,"byte_end":7905957,"line_start":88,"line_end":88,"column_start":1,"column_end":80}},{"value":"/ with the `FuturesOrdered::new` constructor.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7905958,"byte_end":7906005,"line_start":89,"line_end":89,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7906006,"byte_end":7906009,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7906010,"byte_end":7906083,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7906084,"byte_end":7906141,"line_start":92,"line_end":92,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7906142,"byte_end":7906190,"line_start":93,"line_end":93,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4721},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7906724,"byte_end":7906727,"line_start":108,"line_end":108,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesOrdered<Fut>>::new","value":"pub fn new() -> FuturesOrdered<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `FuturesOrdered`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `FuturesOrdered`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7906504,"byte_end":7906548,"line_start":104,"line_end":104,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7906553,"byte_end":7906556,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ The returned `FuturesOrdered` does not contain any futures and, in this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7906561,"byte_end":7906636,"line_start":106,"line_end":106,"column_start":5,"column_end":80}},{"value":"/ state, `FuturesOrdered::poll_next` will return `Poll::Ready(None)`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7906641,"byte_end":7906712,"line_start":107,"line_end":107,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":4722},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7907249,"byte_end":7907252,"line_start":122,"line_end":122,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesOrdered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the queue.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7906976,"byte_end":7907033,"line_start":117,"line_end":117,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7907038,"byte_end":7907041,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures, both","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7907046,"byte_end":7907109,"line_start":119,"line_end":119,"column_start":5,"column_end":68}},{"value":"/ those currently processing and those that have completed but","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7907114,"byte_end":7907178,"line_start":120,"line_end":120,"column_start":5,"column_end":69}},{"value":"/ which are waiting for earlier futures to complete.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7907183,"byte_end":7907237,"line_start":121,"line_end":121,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4723},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7907410,"byte_end":7907418,"line_start":127,"line_end":127,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesOrdered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue contains no futures\n","sig":null,"attributes":[{"value":"/ Returns `true` if the queue contains no futures","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7907347,"byte_end":7907398,"line_start":126,"line_end":126,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4724},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7907842,"byte_end":7907846,"line_start":137,"line_end":137,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesOrdered<Fut>>::push","value":"pub fn push(&mut Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the queue.","sig":null,"attributes":[{"value":"/ Push a future into the queue.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7907523,"byte_end":7907556,"line_start":131,"line_end":131,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7907561,"byte_end":7907564,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7907569,"byte_end":7907645,"line_start":133,"line_end":133,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7907650,"byte_end":7907724,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7907729,"byte_end":7907802,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ task notifications.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7907807,"byte_end":7907830,"line_start":136,"line_end":136,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":4742},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"futures_unordered","qualname":"::stream::futures_unordered","value":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","parent":null,"children":[{"krate":0,"index":4743},{"krate":0,"index":4744},{"krate":0,"index":4745},{"krate":0,"index":4746},{"krate":0,"index":4747},{"krate":0,"index":4748},{"krate":0,"index":4749},{"krate":0,"index":4750},{"krate":0,"index":4751},{"krate":0,"index":4752},{"krate":0,"index":4753},{"krate":0,"index":4754},{"krate":0,"index":4755},{"krate":0,"index":4756},{"krate":0,"index":4757},{"krate":0,"index":4758},{"krate":0,"index":4759},{"krate":0,"index":4760},{"krate":0,"index":4761},{"krate":0,"index":7045},{"krate":0,"index":4762},{"krate":0,"index":4763},{"krate":0,"index":7049},{"krate":0,"index":4764},{"krate":0,"index":4765},{"krate":0,"index":4766},{"krate":0,"index":4767},{"krate":0,"index":7057},{"krate":0,"index":4768},{"krate":0,"index":4769},{"krate":0,"index":4770},{"krate":0,"index":4771},{"krate":0,"index":4772},{"krate":0,"index":4773},{"krate":0,"index":4774},{"krate":0,"index":4780},{"krate":0,"index":4801},{"krate":0,"index":4802},{"krate":0,"index":7075},{"krate":0,"index":4803},{"krate":0,"index":4804},{"krate":0,"index":4841},{"krate":0,"index":4842},{"krate":0,"index":4878},{"krate":0,"index":4879},{"krate":0,"index":4880},{"krate":0,"index":4881},{"krate":0,"index":4882},{"krate":0,"index":4887},{"krate":0,"index":4889},{"krate":0,"index":4891},{"krate":0,"index":4893},{"krate":0,"index":4895},{"krate":0,"index":4897},{"krate":0,"index":4900},{"krate":0,"index":4903},{"krate":0,"index":4913},{"krate":0,"index":4926},{"krate":0,"index":4929},{"krate":0,"index":4932},{"krate":0,"index":4937}],"decl_id":null,"docs":" An unbounded set of futures.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":146633,"byte_end":146658,"line_start":143,"line_end":143,"column_start":5,"column_end":30}},{"value":"! An unbounded set of futures.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7909864,"byte_end":7909896,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7909897,"byte_end":7909900,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7909901,"byte_end":7909976,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"! library is activated, and it is activated by default.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7909977,"byte_end":7910034,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":4987},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/iter.rs","byte_start":7929745,"byte_end":7929755,"line_start":8,"line_end":8,"column_start":12,"column_end":22},"name":"IterPinMut","qualname":"::stream::futures_unordered::iter::IterPinMut","value":"IterPinMut {  }","parent":null,"children":[{"krate":0,"index":4990},{"krate":0,"index":4991},{"krate":0,"index":4992}],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/iter.rs","byte_start":7929674,"byte_end":7929733,"line_start":7,"line_end":7,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":4997},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/iter.rs","byte_start":7929991,"byte_end":7929998,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::futures_unordered::iter::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/iter.rs","byte_start":7929920,"byte_end":7929979,"line_start":15,"line_end":15,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":4882},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7912244,"byte_end":7912260,"line_start":62,"line_end":62,"column_start":12,"column_end":28},"name":"FuturesUnordered","qualname":"::stream::futures_unordered::FuturesUnordered","value":"FuturesUnordered {  }","parent":null,"children":[{"krate":0,"index":4884},{"krate":0,"index":4885},{"krate":0,"index":4886}],"decl_id":null,"docs":" A set of futures which may complete in any order.","sig":null,"attributes":[{"value":"/ A set of futures which may complete in any order.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7911149,"byte_end":7911202,"line_start":41,"line_end":41,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7911203,"byte_end":7911206,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ This structure is optimized to manage a large number of futures.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7911207,"byte_end":7911275,"line_start":43,"line_end":43,"column_start":1,"column_end":69}},{"value":"/ Futures managed by [`FuturesUnordered`] will only be polled when they","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7911276,"byte_end":7911349,"line_start":44,"line_end":44,"column_start":1,"column_end":74}},{"value":"/ generate wake-up notifications. This reduces the required amount of work","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7911350,"byte_end":7911426,"line_start":45,"line_end":45,"column_start":1,"column_end":77}},{"value":"/ needed to poll large numbers of futures.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7911427,"byte_end":7911471,"line_start":46,"line_end":46,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7911472,"byte_end":7911475,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`FuturesUnordered`] can be filled by [`collect`](Iterator::collect)ing an","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7911476,"byte_end":7911554,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ iterator of futures into a [`FuturesUnordered`], or by","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7911555,"byte_end":7911613,"line_start":49,"line_end":49,"column_start":1,"column_end":59}},{"value":"/ [`push`](FuturesUnordered::push)ing futures onto an existing","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7911614,"byte_end":7911678,"line_start":50,"line_end":50,"column_start":1,"column_end":65}},{"value":"/ [`FuturesUnordered`]. When new futures are added,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7911679,"byte_end":7911732,"line_start":51,"line_end":51,"column_start":1,"column_end":54}},{"value":"/ [`poll_next`](Stream::poll_next) must be called in order to begin receiving","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7911733,"byte_end":7911812,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ wake-ups for new futures.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7911813,"byte_end":7911842,"line_start":53,"line_end":53,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7911843,"byte_end":7911846,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made [`FuturesUnordered`] via the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7911847,"byte_end":7911917,"line_start":55,"line_end":55,"column_start":1,"column_end":71}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty set","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7911918,"byte_end":7911995,"line_start":56,"line_end":56,"column_start":1,"column_end":78}},{"value":"/ with the [`FuturesUnordered::new`] constructor.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7911996,"byte_end":7912047,"line_start":57,"line_end":57,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7912048,"byte_end":7912051,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7912052,"byte_end":7912125,"line_start":59,"line_end":59,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7912126,"byte_end":7912183,"line_start":60,"line_end":60,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7912184,"byte_end":7912232,"line_start":61,"line_end":61,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4899},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7914667,"byte_end":7914670,"line_start":119,"line_end":119,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesUnordered<Fut>>::new","value":"pub fn new() -> FuturesUnordered<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty [`FuturesUnordered`].","sig":null,"attributes":[{"value":"/ Constructs a new, empty [`FuturesUnordered`].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7914396,"byte_end":7914445,"line_start":114,"line_end":114,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7914450,"byte_end":7914453,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ The returned [`FuturesUnordered`] does not contain any futures.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7914458,"byte_end":7914525,"line_start":116,"line_end":116,"column_start":5,"column_end":72}},{"value":"/ In this state, [`FuturesUnordered::poll_next`](Stream::poll_next) will","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7914530,"byte_end":7914604,"line_start":117,"line_end":117,"column_start":5,"column_end":79}},{"value":"/ return [`Poll::Ready(None)`](Poll::Ready).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7914609,"byte_end":7914655,"line_start":118,"line_end":118,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":4905},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7915778,"byte_end":7915781,"line_start":154,"line_end":154,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesUnordered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the set.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7915640,"byte_end":7915695,"line_start":151,"line_end":151,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7915700,"byte_end":7915703,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7915708,"byte_end":7915766,"line_start":153,"line_end":153,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4906},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7915947,"byte_end":7915955,"line_start":159,"line_end":159,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesUnordered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no futures.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no futures.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7915885,"byte_end":7915935,"line_start":158,"line_end":158,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4907},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7916418,"byte_end":7916422,"line_start":169,"line_end":169,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesUnordered<Fut>>::push","value":"pub fn push(&mut Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the set.","sig":null,"attributes":[{"value":"/ Push a future into the set.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7916048,"byte_end":7916079,"line_start":163,"line_end":163,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7916084,"byte_end":7916087,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ This method adds the given future to the set. This method will not","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7916092,"byte_end":7916162,"line_start":165,"line_end":165,"column_start":5,"column_end":75}},{"value":"/ call [`poll`](core::future::Future::poll) on the submitted future. The caller must","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7916167,"byte_end":7916253,"line_start":166,"line_end":166,"column_start":5,"column_end":91}},{"value":"/ ensure that [`FuturesUnordered::poll_next`](Stream::poll_next) is called","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7916258,"byte_end":7916334,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ in order to receive wake-up notifications for the given future.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7916339,"byte_end":7916406,"line_start":168,"line_end":168,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":4908},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7917706,"byte_end":7917714,"line_start":198,"line_end":198,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<FuturesUnordered<Fut>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7917625,"byte_end":7917694,"line_start":197,"line_end":197,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":4909},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7917904,"byte_end":7917916,"line_start":203,"line_end":203,"column_start":12,"column_end":24},"name":"iter_pin_mut","qualname":"<FuturesUnordered<Fut>>::iter_pin_mut","value":"pub fn iter_pin_mut(Pin<&mut Self>) -> IterPinMut<, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7917823,"byte_end":7917892,"line_start":202,"line_end":202,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4956},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7938580,"byte_end":7938589,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::stream::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":4958}],"decl_id":null,"docs":" An unbounded set of streams","sig":null,"attributes":[{"value":"/ An unbounded set of streams","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7937956,"byte_end":7937987,"line_start":12,"line_end":12,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7937988,"byte_end":7937991,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" provides the ability to maintain a set of streams","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7937992,"byte_end":7938063,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ and drive them all to completion.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7938064,"byte_end":7938101,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7938102,"byte_end":7938105,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Streams are pushed into this set and their realized values are","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7938106,"byte_end":7938172,"line_start":17,"line_end":17,"column_start":1,"column_end":67}},{"value":"/ yielded as they become ready. Streams will only be polled when they","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7938173,"byte_end":7938244,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ generate notifications. This allows to coordinate a large number of streams.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7938245,"byte_end":7938325,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7938326,"byte_end":7938329,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `SelectAll` via the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7938330,"byte_end":7938391,"line_start":21,"line_end":21,"column_start":1,"column_end":62}},{"value":"/ `select_all` function in the `stream` module, or you can start with an","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7938392,"byte_end":7938466,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ empty set with the `SelectAll::new` constructor.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7938467,"byte_end":7938519,"line_start":23,"line_end":23,"column_start":1,"column_end":53}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7938520,"byte_end":7938568,"line_start":24,"line_end":24,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4964},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7939046,"byte_end":7939049,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<SelectAll<St>>::new","value":"pub fn new() -> SelectAll<St>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `SelectAll`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `SelectAll`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7938846,"byte_end":7938885,"line_start":36,"line_end":36,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7938890,"byte_end":7938893,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ The returned `SelectAll` does not contain any streams and, in this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7938898,"byte_end":7938968,"line_start":38,"line_end":38,"column_start":5,"column_end":75}},{"value":"/ state, `SelectAll::poll` will return `Poll::Ready(None)`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7938973,"byte_end":7939034,"line_start":39,"line_end":39,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4965},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7939273,"byte_end":7939276,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"len","qualname":"<SelectAll<St>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of streams contained in the set.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7939135,"byte_end":7939190,"line_start":44,"line_end":44,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7939195,"byte_end":7939198,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight streams.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7939203,"byte_end":7939261,"line_start":46,"line_end":46,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4966},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7939392,"byte_end":7939400,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SelectAll<St>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no streams\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no streams","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7939331,"byte_end":7939380,"line_start":51,"line_end":51,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4967},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7939762,"byte_end":7939766,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"push","qualname":"<SelectAll<St>>::push","value":"pub fn push(&mut Self, St)","parent":null,"children":[],"decl_id":null,"docs":" Push a stream into the set.","sig":null,"attributes":[{"value":"/ Push a stream into the set.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7939459,"byte_end":7939490,"line_start":56,"line_end":56,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7939495,"byte_end":7939498,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This function submits the given stream to the set for managing. This","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7939503,"byte_end":7939575,"line_start":58,"line_end":58,"column_start":5,"column_end":77}},{"value":"/ function will not call `poll` on the submitted stream. The caller must","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7939580,"byte_end":7939654,"line_start":59,"line_end":59,"column_start":5,"column_end":79}},{"value":"/ ensure that `SelectAll::poll` is called in order to receive task","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7939659,"byte_end":7939727,"line_start":60,"line_end":60,"column_start":5,"column_end":73}},{"value":"/ notifications.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7939732,"byte_end":7939750,"line_start":61,"line_end":61,"column_start":5,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":4978},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7941542,"byte_end":7941552,"line_start":116,"line_end":116,"column_start":8,"column_end":18},"name":"select_all","qualname":"::stream::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Stream + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Convert a list of streams into a `Stream` of results from the streams.","sig":null,"attributes":[{"value":"/ Convert a list of streams into a `Stream` of results from the streams.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7940921,"byte_end":7940995,"line_start":104,"line_end":104,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7940996,"byte_end":7940999,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ This essentially takes a list of streams (e.g. a vector, an iterator, etc.)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7941000,"byte_end":7941079,"line_start":106,"line_end":106,"column_start":1,"column_end":80}},{"value":"/ and bundles them together into a single stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7941080,"byte_end":7941131,"line_start":107,"line_end":107,"column_start":1,"column_end":52}},{"value":"/ The stream will yield items as they become available on the underlying","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7941132,"byte_end":7941206,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"/ streams internally, in the order they become available.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7941207,"byte_end":7941266,"line_start":109,"line_end":109,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7941267,"byte_end":7941270,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ Note that the returned set can also be used to dynamically push more","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7941271,"byte_end":7941343,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ futures into the set as they become available.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7941344,"byte_end":7941394,"line_start":112,"line_end":112,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7941395,"byte_end":7941398,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7941399,"byte_end":7941476,"line_start":114,"line_end":114,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7941477,"byte_end":7941534,"line_start":115,"line_end":115,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":5006},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/catch_unwind.rs","byte_start":271954,"byte_end":271965,"line_start":11,"line_end":11,"column_start":12,"column_end":23},"name":"CatchUnwind","qualname":"::stream::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":5008},{"krate":0,"index":5009}],"decl_id":null,"docs":" Stream for the [`catch_unwind`](super::StreamExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`catch_unwind`](super::StreamExt::catch_unwind) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/catch_unwind.rs","byte_start":271801,"byte_end":271876,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/catch_unwind.rs","byte_start":271894,"byte_end":271942,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":2528},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":147403,"byte_end":147412,"line_start":171,"line_end":171,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":2529},{"krate":0,"index":2530},{"krate":0,"index":2531},{"krate":0,"index":2534},{"krate":0,"index":2535},{"krate":0,"index":2538},{"krate":0,"index":2542},{"krate":0,"index":2545},{"krate":0,"index":2547},{"krate":0,"index":2548},{"krate":0,"index":2552},{"krate":0,"index":2553},{"krate":0,"index":2556},{"krate":0,"index":2559},{"krate":0,"index":2562},{"krate":0,"index":2566},{"krate":0,"index":2567},{"krate":0,"index":2568},{"krate":0,"index":2569},{"krate":0,"index":2570},{"krate":0,"index":2571},{"krate":0,"index":2573},{"krate":0,"index":2575},{"krate":0,"index":2576},{"krate":0,"index":2577},{"krate":0,"index":2579},{"krate":0,"index":2581},{"krate":0,"index":2582},{"krate":0,"index":2583},{"krate":0,"index":2585},{"krate":0,"index":2587},{"krate":0,"index":2589},{"krate":0,"index":2590}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":147292,"byte_end":147366,"line_start":169,"line_end":169,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":147367,"byte_end":147392,"line_start":170,"line_end":170,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2529},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":148322,"byte_end":148326,"line_start":195,"line_end":195,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":147427,"byte_end":147493,"line_start":172,"line_end":172,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":147498,"byte_end":147501,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":147506,"byte_end":147574,"line_start":174,"line_end":174,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":147579,"byte_end":147654,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":147659,"byte_end":147734,"line_start":176,"line_end":176,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":147739,"byte_end":147793,"line_start":177,"line_end":177,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":147798,"byte_end":147873,"line_start":178,"line_end":178,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":147878,"byte_end":147888,"line_start":179,"line_end":179,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":147893,"byte_end":147896,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":147901,"byte_end":147915,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":147920,"byte_end":147923,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":147928,"byte_end":147935,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":147940,"byte_end":147981,"line_start":184,"line_end":184,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":147986,"byte_end":148029,"line_start":185,"line_end":185,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":148034,"byte_end":148037,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":148042,"byte_end":148083,"line_start":187,"line_end":187,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":148088,"byte_end":148091,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":148096,"byte_end":148141,"line_start":189,"line_end":189,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":148146,"byte_end":148191,"line_start":190,"line_end":190,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":148196,"byte_end":148241,"line_start":191,"line_end":191,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":148246,"byte_end":148288,"line_start":192,"line_end":192,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":148293,"byte_end":148302,"line_start":193,"line_end":193,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":148307,"byte_end":148314,"line_start":194,"line_end":194,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2530},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":149521,"byte_end":149532,"line_start":229,"line_end":229,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::StreamExt::into_future","value":"pub fn into_future(Self) -> StreamFuture<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":148424,"byte_end":148496,"line_start":201,"line_end":201,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":148501,"byte_end":148562,"line_start":202,"line_end":202,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":148567,"byte_end":148570,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":148575,"byte_end":148650,"line_start":204,"line_end":204,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":148655,"byte_end":148709,"line_start":205,"line_end":205,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":148714,"byte_end":148717,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":148722,"byte_end":148795,"line_start":207,"line_end":207,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":148800,"byte_end":148862,"line_start":208,"line_end":208,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":148867,"byte_end":148942,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":148947,"byte_end":149001,"line_start":210,"line_end":210,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":149006,"byte_end":149081,"line_start":211,"line_end":211,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":149086,"byte_end":149096,"line_start":212,"line_end":212,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":149101,"byte_end":149104,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":149109,"byte_end":149123,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":149128,"byte_end":149131,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":149136,"byte_end":149143,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":149148,"byte_end":149189,"line_start":217,"line_end":217,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":149194,"byte_end":149237,"line_start":218,"line_end":218,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":149242,"byte_end":149245,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":149250,"byte_end":149287,"line_start":220,"line_end":220,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":149292,"byte_end":149295,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":149300,"byte_end":149352,"line_start":222,"line_end":222,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":149357,"byte_end":149387,"line_start":223,"line_end":223,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":149392,"byte_end":149395,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":149400,"byte_end":149452,"line_start":225,"line_end":225,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":149457,"byte_end":149487,"line_start":226,"line_end":226,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":149492,"byte_end":149501,"line_start":227,"line_end":227,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":149506,"byte_end":149513,"line_start":228,"line_end":228,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2531},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":150481,"byte_end":150484,"line_start":258,"line_end":258,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":149645,"byte_end":149720,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":149725,"byte_end":149748,"line_start":236,"line_end":236,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":149753,"byte_end":149756,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":149761,"byte_end":149833,"line_start":238,"line_end":238,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":149838,"byte_end":149902,"line_start":239,"line_end":239,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":149907,"byte_end":149944,"line_start":240,"line_end":240,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":149949,"byte_end":149952,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":149957,"byte_end":150033,"line_start":242,"line_end":242,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":150038,"byte_end":150109,"line_start":243,"line_end":243,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":150114,"byte_end":150135,"line_start":244,"line_end":244,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":150140,"byte_end":150143,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":150148,"byte_end":150162,"line_start":246,"line_end":246,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":150167,"byte_end":150170,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":150175,"byte_end":150182,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":150187,"byte_end":150228,"line_start":249,"line_end":249,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":150233,"byte_end":150276,"line_start":250,"line_end":250,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":150281,"byte_end":150284,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":150289,"byte_end":150326,"line_start":252,"line_end":252,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":150331,"byte_end":150370,"line_start":253,"line_end":253,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":150375,"byte_end":150378,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":150383,"byte_end":150447,"line_start":255,"line_end":255,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":150452,"byte_end":150461,"line_start":256,"line_end":256,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":150466,"byte_end":150473,"line_start":257,"line_end":257,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2534},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":152017,"byte_end":152026,"line_start":303,"line_end":303,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::StreamExt::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":150629,"byte_end":150700,"line_start":265,"line_end":265,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":150705,"byte_end":150724,"line_start":266,"line_end":266,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":150729,"byte_end":150732,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":150737,"byte_end":150802,"line_start":268,"line_end":268,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":150807,"byte_end":150876,"line_start":269,"line_end":269,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":150881,"byte_end":150892,"line_start":270,"line_end":270,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":150897,"byte_end":150900,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":150905,"byte_end":150980,"line_start":272,"line_end":272,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":150985,"byte_end":151067,"line_start":273,"line_end":273,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":151072,"byte_end":151090,"line_start":274,"line_end":274,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":151095,"byte_end":151098,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":151103,"byte_end":151126,"line_start":276,"line_end":276,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":151131,"byte_end":151134,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":151139,"byte_end":151214,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ [`usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":151219,"byte_end":151301,"line_start":279,"line_end":279,"column_start":5,"column_end":87}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":151306,"byte_end":151362,"line_start":280,"line_end":280,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":151367,"byte_end":151370,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":151375,"byte_end":151387,"line_start":282,"line_end":282,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":151392,"byte_end":151395,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":151400,"byte_end":151469,"line_start":284,"line_end":284,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":151474,"byte_end":151499,"line_start":285,"line_end":285,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":151504,"byte_end":151507,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":151512,"byte_end":151526,"line_start":287,"line_end":287,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":151531,"byte_end":151534,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":151539,"byte_end":151546,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":151551,"byte_end":151592,"line_start":290,"line_end":290,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":151597,"byte_end":151640,"line_start":291,"line_end":291,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":151645,"byte_end":151648,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":151653,"byte_end":151704,"line_start":293,"line_end":293,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":151709,"byte_end":151712,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":151717,"byte_end":151757,"line_start":295,"line_end":295,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":151762,"byte_end":151765,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":151770,"byte_end":151822,"line_start":297,"line_end":297,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":151827,"byte_end":151879,"line_start":298,"line_end":298,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":151884,"byte_end":151936,"line_start":299,"line_end":299,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":151941,"byte_end":151983,"line_start":300,"line_end":300,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":151988,"byte_end":151997,"line_start":301,"line_end":301,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":152002,"byte_end":152009,"line_start":302,"line_end":302,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2535},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":153210,"byte_end":153216,"line_start":335,"line_end":335,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::StreamExt::filter","value":"pub fn filter<Fut, F>(Self, F) -> Filter<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":152125,"byte_end":152197,"line_start":309,"line_end":309,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":152202,"byte_end":152229,"line_start":310,"line_end":310,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":152234,"byte_end":152237,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":152242,"byte_end":152317,"line_start":312,"line_end":312,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":152322,"byte_end":152393,"line_start":313,"line_end":313,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":152398,"byte_end":152470,"line_start":314,"line_end":314,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":152475,"byte_end":152549,"line_start":315,"line_end":315,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":152554,"byte_end":152612,"line_start":316,"line_end":316,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":152617,"byte_end":152620,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":152625,"byte_end":152701,"line_start":318,"line_end":318,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":152706,"byte_end":152780,"line_start":319,"line_end":319,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":152785,"byte_end":152806,"line_start":320,"line_end":320,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":152811,"byte_end":152814,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":152819,"byte_end":152833,"line_start":322,"line_end":322,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":152838,"byte_end":152841,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":152846,"byte_end":152853,"line_start":324,"line_end":324,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":152858,"byte_end":152899,"line_start":325,"line_end":325,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":152904,"byte_end":152928,"line_start":326,"line_end":326,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":152933,"byte_end":152976,"line_start":327,"line_end":327,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":152981,"byte_end":152984,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":152989,"byte_end":153027,"line_start":329,"line_end":329,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":153032,"byte_end":153093,"line_start":330,"line_end":330,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":153098,"byte_end":153101,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], evens.collect::<Vec<_>>().await);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":153106,"byte_end":153176,"line_start":332,"line_end":332,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":153181,"byte_end":153190,"line_start":333,"line_end":333,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":153195,"byte_end":153202,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2538},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":154517,"byte_end":154527,"line_start":368,"line_end":368,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::StreamExt::filter_map","value":"pub fn filter_map<Fut, T, F>(Self, F) -> FilterMap<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = Option<T>>, Self: Sized","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":153420,"byte_end":153495,"line_start":343,"line_end":343,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":153500,"byte_end":153576,"line_start":344,"line_end":344,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":153581,"byte_end":153584,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":153589,"byte_end":153664,"line_start":346,"line_end":346,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":153669,"byte_end":153744,"line_start":347,"line_end":347,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":153749,"byte_end":153825,"line_start":348,"line_end":348,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":153830,"byte_end":153895,"line_start":349,"line_end":349,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":153900,"byte_end":153903,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":153908,"byte_end":153984,"line_start":351,"line_end":351,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":153989,"byte_end":154063,"line_start":352,"line_end":352,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":154068,"byte_end":154093,"line_start":353,"line_end":353,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":154098,"byte_end":154101,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":154106,"byte_end":154120,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":154125,"byte_end":154132,"line_start":356,"line_end":356,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":154137,"byte_end":154178,"line_start":357,"line_end":357,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":154183,"byte_end":154226,"line_start":358,"line_end":358,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":154231,"byte_end":154234,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":154239,"byte_end":154277,"line_start":360,"line_end":360,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter_map(|x| async move {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":154282,"byte_end":154332,"line_start":361,"line_end":361,"column_start":5,"column_end":55}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":154337,"byte_end":154388,"line_start":362,"line_end":362,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":154393,"byte_end":154400,"line_start":363,"line_end":363,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":154405,"byte_end":154408,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], evens.collect::<Vec<_>>().await);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":154413,"byte_end":154483,"line_start":365,"line_end":365,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":154488,"byte_end":154497,"line_start":366,"line_end":366,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":154502,"byte_end":154509,"line_start":367,"line_end":367,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2542},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":155541,"byte_end":155545,"line_start":398,"line_end":398,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::StreamExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnMut(Self::Item)\n-> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":154744,"byte_end":154817,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":154822,"byte_end":154850,"line_start":377,"line_end":377,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":154855,"byte_end":154858,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":154863,"byte_end":154937,"line_start":379,"line_end":379,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":154942,"byte_end":155009,"line_start":380,"line_end":380,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":155014,"byte_end":155059,"line_start":381,"line_end":381,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":155064,"byte_end":155067,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":155072,"byte_end":155148,"line_start":383,"line_end":383,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":155153,"byte_end":155179,"line_start":384,"line_end":384,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":155184,"byte_end":155187,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":155192,"byte_end":155206,"line_start":386,"line_end":386,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":155211,"byte_end":155214,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":155219,"byte_end":155226,"line_start":388,"line_end":388,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":155231,"byte_end":155272,"line_start":389,"line_end":389,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":155277,"byte_end":155320,"line_start":390,"line_end":390,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":155325,"byte_end":155328,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":155333,"byte_end":155370,"line_start":392,"line_end":392,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":155375,"byte_end":155430,"line_start":393,"line_end":393,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":155435,"byte_end":155438,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":155443,"byte_end":155507,"line_start":395,"line_end":395,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":155512,"byte_end":155521,"line_start":396,"line_end":396,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":155526,"byte_end":155533,"line_start":397,"line_end":397,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2545},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":156470,"byte_end":156477,"line_start":431,"line_end":431,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::StreamExt::collect","value":"pub fn collect<C: Default + Extend<Self::Item>>(Self) -> Collect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" Collect all of the values of this stream into a vector, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Collect all of the values of this stream into a vector, returning a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":155728,"byte_end":155799,"line_start":406,"line_end":406,"column_start":5,"column_end":76}},{"value":"/ future representing the result of that computation.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":155804,"byte_end":155859,"line_start":407,"line_end":407,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":155864,"byte_end":155867,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":155872,"byte_end":155940,"line_start":409,"line_end":409,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":155945,"byte_end":155948,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":155953,"byte_end":155967,"line_start":411,"line_end":411,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":155972,"byte_end":155975,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":155980,"byte_end":155987,"line_start":413,"line_end":413,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":155992,"byte_end":156033,"line_start":414,"line_end":414,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":156038,"byte_end":156069,"line_start":415,"line_end":415,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":156074,"byte_end":156109,"line_start":416,"line_end":416,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":156114,"byte_end":156134,"line_start":417,"line_end":417,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":156139,"byte_end":156142,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":156147,"byte_end":156184,"line_start":419,"line_end":419,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":156189,"byte_end":156192,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":156197,"byte_end":156224,"line_start":421,"line_end":421,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":156229,"byte_end":156253,"line_start":422,"line_end":422,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":156258,"byte_end":156300,"line_start":423,"line_end":423,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":156305,"byte_end":156314,"line_start":424,"line_end":424,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":156319,"byte_end":156326,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":156331,"byte_end":156334,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":156339,"byte_end":156387,"line_start":427,"line_end":427,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":156392,"byte_end":156436,"line_start":428,"line_end":428,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":156441,"byte_end":156450,"line_start":429,"line_end":429,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":156455,"byte_end":156462,"line_start":430,"line_end":430,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2547},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":157642,"byte_end":157648,"line_start":469,"line_end":469,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::StreamExt::concat","value":"pub fn concat(Self) -> Concat<Self> where Self: Sized,\nSelf::Item: Extend<<<Self as Stream>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":156607,"byte_end":156669,"line_start":437,"line_end":437,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":156674,"byte_end":156738,"line_start":438,"line_end":438,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":156743,"byte_end":156746,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":156751,"byte_end":156815,"line_start":440,"line_end":440,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":156820,"byte_end":156885,"line_start":441,"line_end":441,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":156890,"byte_end":156936,"line_start":442,"line_end":442,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":156941,"byte_end":156944,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":156949,"byte_end":156998,"line_start":444,"line_end":444,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":157003,"byte_end":157043,"line_start":445,"line_end":445,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":157048,"byte_end":157051,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":157056,"byte_end":157070,"line_start":447,"line_end":447,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":157075,"byte_end":157078,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":157083,"byte_end":157090,"line_start":449,"line_end":449,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":157095,"byte_end":157136,"line_start":450,"line_end":450,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":157141,"byte_end":157172,"line_start":451,"line_end":451,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":157177,"byte_end":157212,"line_start":452,"line_end":452,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":157217,"byte_end":157237,"line_start":453,"line_end":453,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":157242,"byte_end":157245,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":157250,"byte_end":157287,"line_start":455,"line_end":455,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":157292,"byte_end":157295,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":157300,"byte_end":157327,"line_start":457,"line_end":457,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":157332,"byte_end":157363,"line_start":458,"line_end":458,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":157368,"byte_end":157394,"line_start":459,"line_end":459,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":157399,"byte_end":157465,"line_start":460,"line_end":460,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":157470,"byte_end":157479,"line_start":461,"line_end":461,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":157484,"byte_end":157491,"line_start":462,"line_end":462,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":157496,"byte_end":157499,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":157504,"byte_end":157539,"line_start":464,"line_end":464,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":157544,"byte_end":157547,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":157552,"byte_end":157608,"line_start":466,"line_end":466,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":157613,"byte_end":157622,"line_start":467,"line_end":467,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":157627,"byte_end":157634,"line_start":468,"line_end":468,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2548},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":158677,"byte_end":158681,"line_start":497,"line_end":497,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::StreamExt::fold","value":"pub fn fold<T, Fut, F>(Self, T, F) -> Fold<Self, Fut, T, F> where\nF: FnMut(T, Self::Item) -> Fut, Fut: Future<Output = T>, Self: Sized","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":157862,"byte_end":157929,"line_start":477,"line_end":477,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":157934,"byte_end":157986,"line_start":478,"line_end":478,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":157991,"byte_end":157994,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":157999,"byte_end":158069,"line_start":480,"line_end":480,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":158074,"byte_end":158150,"line_start":481,"line_end":481,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":158155,"byte_end":158231,"line_start":482,"line_end":482,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":158236,"byte_end":158306,"line_start":483,"line_end":483,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":158311,"byte_end":158337,"line_start":484,"line_end":484,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":158342,"byte_end":158345,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":158350,"byte_end":158364,"line_start":486,"line_end":486,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":158369,"byte_end":158372,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":158377,"byte_end":158384,"line_start":488,"line_end":488,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":158389,"byte_end":158430,"line_start":489,"line_end":489,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":158435,"byte_end":158478,"line_start":490,"line_end":490,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":158483,"byte_end":158486,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":158491,"byte_end":158534,"line_start":492,"line_end":492,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":158539,"byte_end":158608,"line_start":493,"line_end":493,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":158613,"byte_end":158643,"line_start":494,"line_end":494,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":158648,"byte_end":158657,"line_start":495,"line_end":495,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":158662,"byte_end":158669,"line_start":496,"line_end":496,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2552},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":159859,"byte_end":159866,"line_start":536,"line_end":536,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::StreamExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Item: Stream, Self: Sized","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":158900,"byte_end":158965,"line_start":505,"line_end":505,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":158970,"byte_end":158973,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":158978,"byte_end":158992,"line_start":507,"line_end":507,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":158997,"byte_end":159000,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":159005,"byte_end":159012,"line_start":509,"line_end":509,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":159017,"byte_end":159058,"line_start":510,"line_end":510,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":159063,"byte_end":159094,"line_start":511,"line_end":511,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":159099,"byte_end":159134,"line_start":512,"line_end":512,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":159139,"byte_end":159159,"line_start":513,"line_end":513,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":159164,"byte_end":159167,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":159172,"byte_end":159211,"line_start":515,"line_end":515,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":159216,"byte_end":159255,"line_start":516,"line_end":516,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":159260,"byte_end":159299,"line_start":517,"line_end":517,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":159304,"byte_end":159307,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":159312,"byte_end":159339,"line_start":519,"line_end":519,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":159344,"byte_end":159383,"line_start":520,"line_end":520,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":159388,"byte_end":159427,"line_start":521,"line_end":521,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":159432,"byte_end":159439,"line_start":522,"line_end":522,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":159444,"byte_end":159471,"line_start":523,"line_end":523,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":159476,"byte_end":159515,"line_start":524,"line_end":524,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":159520,"byte_end":159559,"line_start":525,"line_end":525,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":159564,"byte_end":159571,"line_start":526,"line_end":526,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":159576,"byte_end":159603,"line_start":527,"line_end":527,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":159608,"byte_end":159649,"line_start":528,"line_end":528,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":159654,"byte_end":159695,"line_start":529,"line_end":529,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":159700,"byte_end":159707,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":159712,"byte_end":159715,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":159720,"byte_end":159779,"line_start":532,"line_end":532,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":159784,"byte_end":159825,"line_start":533,"line_end":533,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":159830,"byte_end":159839,"line_start":534,"line_end":534,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":159844,"byte_end":159851,"line_start":535,"line_end":535,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2553},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":160769,"byte_end":160779,"line_start":565,"line_end":565,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::StreamExt::skip_while","value":"pub fn skip_while<Fut, F>(Self, F) -> SkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":159994,"byte_end":160068,"line_start":543,"line_end":543,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":160073,"byte_end":160096,"line_start":544,"line_end":544,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":160101,"byte_end":160104,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":160109,"byte_end":160182,"line_start":546,"line_end":546,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":160187,"byte_end":160259,"line_start":547,"line_end":547,"column_start":5,"column_end":77}},{"value":"/ returns false all future elements will be returned from the underlying","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":160264,"byte_end":160338,"line_start":548,"line_end":548,"column_start":5,"column_end":79}},{"value":"/ stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":160343,"byte_end":160354,"line_start":549,"line_end":549,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":160359,"byte_end":160362,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":160367,"byte_end":160381,"line_start":551,"line_end":551,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":160386,"byte_end":160389,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":160394,"byte_end":160401,"line_start":553,"line_end":553,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":160406,"byte_end":160447,"line_start":554,"line_end":554,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":160452,"byte_end":160476,"line_start":555,"line_end":555,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":160481,"byte_end":160524,"line_start":556,"line_end":556,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":160529,"byte_end":160532,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":160537,"byte_end":160575,"line_start":558,"line_end":558,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":160580,"byte_end":160583,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":160588,"byte_end":160651,"line_start":560,"line_end":560,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":160656,"byte_end":160659,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":160664,"byte_end":160735,"line_start":562,"line_end":562,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":160740,"byte_end":160749,"line_start":563,"line_end":563,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":160754,"byte_end":160761,"line_start":564,"line_end":564,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2556},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":161740,"byte_end":161750,"line_start":594,"line_end":594,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::StreamExt::take_while","value":"pub fn take_while<Fut, F>(Self, F) -> TakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":160988,"byte_end":161064,"line_start":573,"line_end":573,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":161069,"byte_end":161092,"line_start":574,"line_end":574,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":161097,"byte_end":161100,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":161105,"byte_end":161180,"line_start":576,"line_end":576,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":161185,"byte_end":161257,"line_start":577,"line_end":577,"column_start":5,"column_end":77}},{"value":"/ returns false it will always return that the stream is done.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":161262,"byte_end":161326,"line_start":578,"line_end":578,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":161331,"byte_end":161334,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":161339,"byte_end":161353,"line_start":580,"line_end":580,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":161358,"byte_end":161361,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":161366,"byte_end":161373,"line_start":582,"line_end":582,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":161378,"byte_end":161419,"line_start":583,"line_end":583,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":161424,"byte_end":161448,"line_start":584,"line_end":584,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":161453,"byte_end":161496,"line_start":585,"line_end":585,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":161501,"byte_end":161504,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":161509,"byte_end":161547,"line_start":587,"line_end":587,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":161552,"byte_end":161555,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":161560,"byte_end":161623,"line_start":589,"line_end":589,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":161628,"byte_end":161631,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":161636,"byte_end":161706,"line_start":591,"line_end":591,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":161711,"byte_end":161720,"line_start":592,"line_end":592,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":161725,"byte_end":161732,"line_start":593,"line_end":593,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2559},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":163017,"byte_end":163025,"line_start":635,"line_end":635,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::StreamExt::for_each","value":"pub fn for_each<Fut, F>(Self, F) -> ForEach<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":161959,"byte_end":162030,"line_start":602,"line_end":602,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":162035,"byte_end":162078,"line_start":603,"line_end":603,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":162083,"byte_end":162086,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":162091,"byte_end":162166,"line_start":605,"line_end":605,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":162171,"byte_end":162241,"line_start":606,"line_end":606,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":162246,"byte_end":162284,"line_start":607,"line_end":607,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":162289,"byte_end":162292,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":162297,"byte_end":162372,"line_start":609,"line_end":609,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":162377,"byte_end":162420,"line_start":610,"line_end":610,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":162425,"byte_end":162428,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":162433,"byte_end":162506,"line_start":612,"line_end":612,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":162511,"byte_end":162554,"line_start":613,"line_end":613,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":162559,"byte_end":162562,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":162567,"byte_end":162581,"line_start":615,"line_end":615,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":162586,"byte_end":162589,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":162594,"byte_end":162601,"line_start":617,"line_end":617,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":162606,"byte_end":162647,"line_start":618,"line_end":618,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":162652,"byte_end":162676,"line_start":619,"line_end":619,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":162681,"byte_end":162724,"line_start":620,"line_end":620,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":162729,"byte_end":162732,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":162737,"byte_end":162755,"line_start":622,"line_end":622,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":162760,"byte_end":162763,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":162768,"byte_end":162773,"line_start":624,"line_end":624,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":162778,"byte_end":162839,"line_start":625,"line_end":625,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":162844,"byte_end":162866,"line_start":626,"line_end":626,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":162871,"byte_end":162900,"line_start":627,"line_end":627,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":162905,"byte_end":162916,"line_start":628,"line_end":628,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":162921,"byte_end":162939,"line_start":629,"line_end":629,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":162944,"byte_end":162949,"line_start":630,"line_end":630,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":162954,"byte_end":162957,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":162962,"byte_end":162983,"line_start":632,"line_end":632,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":162988,"byte_end":162997,"line_start":633,"line_end":633,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":163002,"byte_end":163009,"line_start":634,"line_end":634,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2562},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":165268,"byte_end":165287,"line_start":693,"line_end":693,"column_start":8,"column_end":27},"name":"for_each_concurrent","qualname":"::stream::StreamExt::for_each_concurrent","value":"pub fn for_each_concurrent<Fut, F,\n                           impl Into<Option<usize>>: Into<Option<usize>>>(Self,\n                                                                          impl Into<Option<usize>>,\n                                                                          F)\n-> ForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Item) -> Fut,\nFut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":163227,"byte_end":163298,"line_start":643,"line_end":643,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":163303,"byte_end":163377,"line_start":644,"line_end":644,"column_start":5,"column_end":79}},{"value":"/ available.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":163382,"byte_end":163396,"line_start":645,"line_end":645,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":163401,"byte_end":163404,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`StreamExt::for_each`], but the futures","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":163409,"byte_end":163472,"line_start":647,"line_end":647,"column_start":5,"column_end":68}},{"value":"/ produced by the closure are run concurrently (but not in parallel--","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":163477,"byte_end":163548,"line_start":648,"line_end":648,"column_start":5,"column_end":76}},{"value":"/ this combinator does not introduce any threads).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":163553,"byte_end":163605,"line_start":649,"line_end":649,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":163610,"byte_end":163613,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":163618,"byte_end":163693,"line_start":651,"line_end":651,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":163698,"byte_end":163768,"line_start":652,"line_end":652,"column_start":5,"column_end":75}},{"value":"/ concurrently with the other futures produced by the closure.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":163773,"byte_end":163837,"line_start":653,"line_end":653,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":163842,"byte_end":163845,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ The first argument is an optional limit on the number of concurrent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":163850,"byte_end":163921,"line_start":655,"line_end":655,"column_start":5,"column_end":76}},{"value":"/ futures. If this limit is not `None`, no more than `limit` futures","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":163926,"byte_end":163996,"line_start":656,"line_end":656,"column_start":5,"column_end":75}},{"value":"/ will be run concurrently. The `limit` argument is of type","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":164001,"byte_end":164062,"line_start":657,"line_end":657,"column_start":5,"column_end":66}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":164067,"byte_end":164134,"line_start":658,"line_end":658,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":164139,"byte_end":164208,"line_start":659,"line_end":659,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":164213,"byte_end":164285,"line_start":660,"line_end":660,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":164290,"byte_end":164293,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":164298,"byte_end":164373,"line_start":662,"line_end":662,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":164378,"byte_end":164435,"line_start":663,"line_end":663,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":164440,"byte_end":164443,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":164448,"byte_end":164462,"line_start":665,"line_end":665,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":164467,"byte_end":164470,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":164475,"byte_end":164482,"line_start":667,"line_end":667,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":164487,"byte_end":164528,"line_start":668,"line_end":668,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":164533,"byte_end":164567,"line_start":669,"line_end":669,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":164572,"byte_end":164615,"line_start":670,"line_end":670,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":164620,"byte_end":164623,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":164628,"byte_end":164668,"line_start":672,"line_end":672,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":164673,"byte_end":164713,"line_start":673,"line_end":673,"column_start":5,"column_end":45}},{"value":"/ let (tx3, rx3) = oneshot::channel();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":164718,"byte_end":164758,"line_start":674,"line_end":674,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":164763,"byte_end":164766,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ let fut = stream::iter(vec![rx1, rx2, rx3]).for_each_concurrent(","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":164771,"byte_end":164839,"line_start":676,"line_end":676,"column_start":5,"column_end":73}},{"value":"/     /* limit */ 2,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":164844,"byte_end":164866,"line_start":677,"line_end":677,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":164871,"byte_end":164896,"line_start":678,"line_end":678,"column_start":5,"column_end":30}},{"value":"/         rx.await.unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":164901,"byte_end":164931,"line_start":679,"line_end":679,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":164936,"byte_end":164945,"line_start":680,"line_end":680,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":164950,"byte_end":164956,"line_start":681,"line_end":681,"column_start":5,"column_end":11}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":164961,"byte_end":164987,"line_start":682,"line_end":682,"column_start":5,"column_end":31}},{"value":"/ tx2.send(()).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":164992,"byte_end":165018,"line_start":683,"line_end":683,"column_start":5,"column_end":31}},{"value":"/ tx3.send(()).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":165023,"byte_end":165049,"line_start":684,"line_end":684,"column_start":5,"column_end":31}},{"value":"/ fut.await;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":165054,"byte_end":165068,"line_start":685,"line_end":685,"column_start":5,"column_end":19}},{"value":"/ # })","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":165073,"byte_end":165081,"line_start":686,"line_end":686,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":165086,"byte_end":165093,"line_start":687,"line_end":687,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":165235,"byte_end":165260,"line_start":692,"line_end":692,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2566},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":166096,"byte_end":166100,"line_start":721,"line_end":721,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::StreamExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":165588,"byte_end":165659,"line_start":705,"line_end":705,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":165664,"byte_end":165667,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":165672,"byte_end":165745,"line_start":707,"line_end":707,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":165750,"byte_end":165785,"line_start":708,"line_end":708,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":165790,"byte_end":165793,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":165798,"byte_end":165812,"line_start":710,"line_end":710,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":165817,"byte_end":165820,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":165825,"byte_end":165832,"line_start":712,"line_end":712,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":165837,"byte_end":165878,"line_start":713,"line_end":713,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":165883,"byte_end":165926,"line_start":714,"line_end":714,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":165931,"byte_end":165934,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":165939,"byte_end":165985,"line_start":716,"line_end":716,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":165990,"byte_end":165993,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":165998,"byte_end":166062,"line_start":718,"line_end":718,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":166067,"byte_end":166076,"line_start":719,"line_end":719,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":166081,"byte_end":166088,"line_start":720,"line_end":720,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2567},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":166726,"byte_end":166730,"line_start":743,"line_end":743,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::StreamExt::skip","value":"pub fn skip(Self, u64) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":166199,"byte_end":166271,"line_start":727,"line_end":727,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":166276,"byte_end":166279,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":166284,"byte_end":166357,"line_start":729,"line_end":729,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":166362,"byte_end":166408,"line_start":730,"line_end":730,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":166413,"byte_end":166416,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":166421,"byte_end":166435,"line_start":732,"line_end":732,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":166440,"byte_end":166443,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":166448,"byte_end":166455,"line_start":734,"line_end":734,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":166460,"byte_end":166501,"line_start":735,"line_end":735,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":166506,"byte_end":166549,"line_start":736,"line_end":736,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":166554,"byte_end":166557,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":166562,"byte_end":166608,"line_start":738,"line_end":738,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":166613,"byte_end":166616,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":166621,"byte_end":166692,"line_start":740,"line_end":740,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":166697,"byte_end":166706,"line_start":741,"line_end":741,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":166711,"byte_end":166718,"line_start":742,"line_end":742,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2568},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":168312,"byte_end":168316,"line_start":788,"line_end":788,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":166829,"byte_end":166900,"line_start":749,"line_end":749,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":166905,"byte_end":166978,"line_start":750,"line_end":750,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":166983,"byte_end":167021,"line_start":751,"line_end":751,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":167026,"byte_end":167029,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":167034,"byte_end":167088,"line_start":753,"line_end":753,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":167093,"byte_end":167165,"line_start":754,"line_end":754,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":167170,"byte_end":167246,"line_start":755,"line_end":755,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":167251,"byte_end":167319,"line_start":756,"line_end":756,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":167324,"byte_end":167400,"line_start":757,"line_end":757,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":167405,"byte_end":167427,"line_start":758,"line_end":758,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":167432,"byte_end":167435,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":167440,"byte_end":167507,"line_start":760,"line_end":760,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":167512,"byte_end":167580,"line_start":761,"line_end":761,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":167585,"byte_end":167598,"line_start":762,"line_end":762,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":167603,"byte_end":167606,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":167611,"byte_end":167625,"line_start":764,"line_end":764,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":167630,"byte_end":167633,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":167638,"byte_end":167645,"line_start":766,"line_end":766,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":167650,"byte_end":167693,"line_start":767,"line_end":767,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":167698,"byte_end":167741,"line_start":768,"line_end":768,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":167746,"byte_end":167774,"line_start":769,"line_end":769,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":167779,"byte_end":167782,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":167787,"byte_end":167805,"line_start":771,"line_end":771,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":167810,"byte_end":167848,"line_start":772,"line_end":772,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":167853,"byte_end":167868,"line_start":773,"line_end":773,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":167873,"byte_end":167890,"line_start":774,"line_end":774,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":167895,"byte_end":167937,"line_start":775,"line_end":775,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":167942,"byte_end":167977,"line_start":776,"line_end":776,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":167982,"byte_end":168026,"line_start":777,"line_end":777,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":168031,"byte_end":168040,"line_start":778,"line_end":778,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":168045,"byte_end":168059,"line_start":779,"line_end":779,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":168064,"byte_end":168067,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":168072,"byte_end":168115,"line_start":781,"line_end":781,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":168120,"byte_end":168157,"line_start":782,"line_end":782,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":168162,"byte_end":168199,"line_start":783,"line_end":783,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":168204,"byte_end":168238,"line_start":784,"line_end":784,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":168243,"byte_end":168277,"line_start":785,"line_end":785,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":168282,"byte_end":168292,"line_start":786,"line_end":786,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":168297,"byte_end":168304,"line_start":787,"line_end":787,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2569},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":169208,"byte_end":169214,"line_start":820,"line_end":820,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::StreamExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":168404,"byte_end":168451,"line_start":794,"line_end":794,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":168456,"byte_end":168459,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":168464,"byte_end":168538,"line_start":796,"line_end":796,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":168543,"byte_end":168580,"line_start":797,"line_end":797,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":168585,"byte_end":168588,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":168593,"byte_end":168607,"line_start":799,"line_end":799,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":168612,"byte_end":168615,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":168620,"byte_end":168627,"line_start":801,"line_end":801,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":168632,"byte_end":168673,"line_start":802,"line_end":802,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":168678,"byte_end":168721,"line_start":803,"line_end":803,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":168726,"byte_end":168729,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":168734,"byte_end":168774,"line_start":805,"line_end":805,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":168779,"byte_end":168782,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":168787,"byte_end":168816,"line_start":807,"line_end":807,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":168821,"byte_end":168849,"line_start":808,"line_end":808,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":168854,"byte_end":168911,"line_start":809,"line_end":809,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":168916,"byte_end":168943,"line_start":810,"line_end":810,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":168948,"byte_end":168971,"line_start":811,"line_end":811,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":168976,"byte_end":168979,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":168984,"byte_end":169019,"line_start":813,"line_end":813,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":169024,"byte_end":169052,"line_start":814,"line_end":814,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":169057,"byte_end":169114,"line_start":815,"line_end":815,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":169119,"byte_end":169146,"line_start":816,"line_end":816,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":169151,"byte_end":169174,"line_start":817,"line_end":817,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":169179,"byte_end":169188,"line_start":818,"line_end":818,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":169193,"byte_end":169200,"line_start":819,"line_end":819,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2570},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":170973,"byte_end":170985,"line_start":865,"line_end":865,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::stream::StreamExt::catch_unwind","value":"pub fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\nstd::panic::UnwindSafe","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the stream.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":169265,"byte_end":169319,"line_start":824,"line_end":824,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":169324,"byte_end":169327,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ Caught panic (if any) will be the last element of the resulting stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":169332,"byte_end":169407,"line_start":826,"line_end":826,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":169412,"byte_end":169415,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a stream can propagate all the way out to the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":169420,"byte_end":169495,"line_start":828,"line_end":828,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":169500,"byte_end":169574,"line_start":829,"line_end":829,"column_start":5,"column_end":79}},{"value":"/ the stream itself. It's most commonly used within task executors. This","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":169579,"byte_end":169653,"line_start":830,"line_end":830,"column_start":5,"column_end":79}},{"value":"/ method should not be used for error handling.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":169658,"byte_end":169707,"line_start":831,"line_end":831,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":169712,"byte_end":169715,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":169720,"byte_end":169795,"line_start":833,"line_end":833,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":169800,"byte_end":169870,"line_start":834,"line_end":834,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":169875,"byte_end":169942,"line_start":835,"line_end":835,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the [`Stream`] trait is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":169947,"byte_end":170019,"line_start":836,"line_end":836,"column_start":5,"column_end":77}},{"value":"/ also implemented for `AssertUnwindSafe<St>` where `St` implements","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":170024,"byte_end":170093,"line_start":837,"line_end":837,"column_start":5,"column_end":74}},{"value":"/ [`Stream`].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":170098,"byte_end":170113,"line_start":838,"line_end":838,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":170118,"byte_end":170121,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":170126,"byte_end":170190,"line_start":840,"line_end":840,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":170195,"byte_end":170252,"line_start":841,"line_end":841,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":170257,"byte_end":170260,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":170265,"byte_end":170279,"line_start":843,"line_end":843,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":170284,"byte_end":170287,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":170292,"byte_end":170299,"line_start":845,"line_end":845,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":170304,"byte_end":170345,"line_start":846,"line_end":846,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":170350,"byte_end":170393,"line_start":847,"line_end":847,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":170398,"byte_end":170401,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Some(10), None, Some(11)]);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":170406,"byte_end":170468,"line_start":849,"line_end":849,"column_start":5,"column_end":67}},{"value":"/ // Panic on second element","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":170473,"byte_end":170503,"line_start":850,"line_end":850,"column_start":5,"column_end":35}},{"value":"/ let stream_panicking = stream.map(|o| o.unwrap());","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":170508,"byte_end":170562,"line_start":851,"line_end":851,"column_start":5,"column_end":59}},{"value":"/ // Collect all the results","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":170567,"byte_end":170597,"line_start":852,"line_end":852,"column_start":5,"column_end":35}},{"value":"/ let stream = stream_panicking.catch_unwind();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":170602,"byte_end":170651,"line_start":853,"line_end":853,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":170656,"byte_end":170659,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ let results: Vec<Result<i32, _>> = stream.collect().await;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":170664,"byte_end":170726,"line_start":855,"line_end":855,"column_start":5,"column_end":67}},{"value":"/ match results[0] {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":170731,"byte_end":170753,"line_start":856,"line_end":856,"column_start":5,"column_end":27}},{"value":"/     Ok(10) => {}","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":170758,"byte_end":170778,"line_start":857,"line_end":857,"column_start":5,"column_end":25}},{"value":"/     _ => panic!(\"unexpected result!\"),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":170783,"byte_end":170825,"line_start":858,"line_end":858,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":170830,"byte_end":170835,"line_start":859,"line_end":859,"column_start":5,"column_end":10}},{"value":"/ assert!(results[1].is_err());","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":170840,"byte_end":170873,"line_start":860,"line_end":860,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(results.len(), 2);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":170878,"byte_end":170911,"line_start":861,"line_end":861,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":170916,"byte_end":170925,"line_start":862,"line_end":862,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":170930,"byte_end":170937,"line_start":863,"line_end":863,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":170942,"byte_end":170965,"line_start":864,"line_end":864,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2571},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":171341,"byte_end":171346,"line_start":876,"line_end":876,"column_start":8,"column_end":13},"name":"boxed","qualname":"::stream::StreamExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxStream where Self: Sized + Send + 'a","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":171112,"byte_end":171153,"line_start":871,"line_end":871,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":171158,"byte_end":171161,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":171166,"byte_end":171241,"line_start":873,"line_end":873,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":171246,"byte_end":171303,"line_start":874,"line_end":874,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":171308,"byte_end":171333,"line_start":875,"line_end":875,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2573},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":171765,"byte_end":171776,"line_start":889,"line_end":889,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::stream::StreamExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxStream where Self: Sized + 'a","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":171464,"byte_end":171505,"line_start":882,"line_end":882,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":171510,"byte_end":171513,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":171518,"byte_end":171577,"line_start":884,"line_end":884,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":171582,"byte_end":171585,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":171590,"byte_end":171665,"line_start":886,"line_end":886,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":171670,"byte_end":171727,"line_start":887,"line_end":887,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":171732,"byte_end":171757,"line_start":888,"line_end":888,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2575},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":172730,"byte_end":172738,"line_start":912,"line_end":912,"column_start":8,"column_end":16},"name":"buffered","qualname":"::stream::StreamExt::buffered","value":"pub fn buffered(Self, usize) -> Buffered<Self> where Self::Item: Future,\nSelf: Sized","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures.","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":171892,"byte_end":171955,"line_start":895,"line_end":895,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":171960,"byte_end":171963,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":171968,"byte_end":172043,"line_start":897,"line_end":897,"column_start":5,"column_end":80}},{"value":"/ will buffer up to at most `n` futures and then return the outputs in the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":172048,"byte_end":172124,"line_start":898,"line_end":898,"column_start":5,"column_end":81}},{"value":"/ same order as the underlying stream. No more than `n` futures will be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":172129,"byte_end":172202,"line_start":899,"line_end":899,"column_start":5,"column_end":78}},{"value":"/ buffered at any point in time, and less than `n` may also be buffered","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":172207,"byte_end":172280,"line_start":900,"line_end":900,"column_start":5,"column_end":78}},{"value":"/ depending on the state of each future.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":172285,"byte_end":172327,"line_start":901,"line_end":901,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":172332,"byte_end":172335,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":172340,"byte_end":172405,"line_start":903,"line_end":903,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":172410,"byte_end":172413,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":172418,"byte_end":172493,"line_start":905,"line_end":905,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":172498,"byte_end":172555,"line_start":906,"line_end":906,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":172697,"byte_end":172722,"line_start":911,"line_end":911,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2576},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":174465,"byte_end":174481,"line_start":959,"line_end":959,"column_start":8,"column_end":24},"name":"buffer_unordered","qualname":"::stream::StreamExt::buffer_unordered","value":"pub fn buffer_unordered(Self, usize) -> BufferUnordered<Self> where\nSelf::Item: Future, Self: Sized","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures (unordered).","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures (unordered).","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":172881,"byte_end":172956,"line_start":919,"line_end":919,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":172961,"byte_end":172964,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":172969,"byte_end":173044,"line_start":921,"line_end":921,"column_start":5,"column_end":80}},{"value":"/ will buffer up to `n` futures and then return the outputs in the order","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":173049,"byte_end":173123,"line_start":922,"line_end":922,"column_start":5,"column_end":79}},{"value":"/ in which they complete. No more than `n` futures will be buffered at","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":173128,"byte_end":173200,"line_start":923,"line_end":923,"column_start":5,"column_end":77}},{"value":"/ any point in time, and less than `n` may also be buffered depending on","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":173205,"byte_end":173279,"line_start":924,"line_end":924,"column_start":5,"column_end":79}},{"value":"/ the state of each future.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":173284,"byte_end":173313,"line_start":925,"line_end":925,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":173318,"byte_end":173321,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":173326,"byte_end":173391,"line_start":927,"line_end":927,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":173396,"byte_end":173399,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":173404,"byte_end":173479,"line_start":929,"line_end":929,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":173484,"byte_end":173541,"line_start":930,"line_end":930,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":173546,"byte_end":173549,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":173554,"byte_end":173568,"line_start":932,"line_end":932,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":173573,"byte_end":173576,"line_start":933,"line_end":933,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":173581,"byte_end":173588,"line_start":934,"line_end":934,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":173593,"byte_end":173634,"line_start":935,"line_end":935,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":173639,"byte_end":173673,"line_start":936,"line_end":936,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":173678,"byte_end":173721,"line_start":937,"line_end":937,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":173726,"byte_end":173729,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":173734,"byte_end":173784,"line_start":939,"line_end":939,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":173789,"byte_end":173839,"line_start":940,"line_end":940,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":173844,"byte_end":173847,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![recv_one, recv_two]);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":173852,"byte_end":173919,"line_start":942,"line_end":942,"column_start":5,"column_end":72}},{"value":"/ let mut buffered = stream_of_futures.buffer_unordered(10);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":173924,"byte_end":173986,"line_start":943,"line_end":943,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":173991,"byte_end":173994,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":173999,"byte_end":174024,"line_start":945,"line_end":945,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":174029,"byte_end":174083,"line_start":946,"line_end":946,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":174088,"byte_end":174091,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":174096,"byte_end":174121,"line_start":948,"line_end":948,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":174126,"byte_end":174180,"line_start":949,"line_end":949,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":174185,"byte_end":174188,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":174193,"byte_end":174237,"line_start":951,"line_end":951,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":174242,"byte_end":174278,"line_start":952,"line_end":952,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":174283,"byte_end":174290,"line_start":953,"line_end":953,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":174432,"byte_end":174457,"line_start":958,"line_end":958,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2577},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":175326,"byte_end":175329,"line_start":988,"line_end":988,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::StreamExt::zip","value":"pub fn zip<St>(Self, St) -> Zip<Self, St> where St: Stream, Self: Sized","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":174638,"byte_end":174686,"line_start":966,"line_end":966,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":174691,"byte_end":174694,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":174699,"byte_end":174772,"line_start":968,"line_end":968,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":174777,"byte_end":174849,"line_start":969,"line_end":969,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":174854,"byte_end":174867,"line_start":970,"line_end":970,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":174872,"byte_end":174875,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":174880,"byte_end":174894,"line_start":972,"line_end":972,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":174899,"byte_end":174902,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":174907,"byte_end":174914,"line_start":974,"line_end":974,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":174919,"byte_end":174960,"line_start":975,"line_end":975,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":174965,"byte_end":175008,"line_start":976,"line_end":976,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":175013,"byte_end":175016,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":175021,"byte_end":175059,"line_start":978,"line_end":978,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":175064,"byte_end":175103,"line_start":979,"line_end":979,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":175108,"byte_end":175111,"line_start":980,"line_end":980,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":175116,"byte_end":175150,"line_start":981,"line_end":981,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":175155,"byte_end":175196,"line_start":982,"line_end":982,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":175201,"byte_end":175229,"line_start":983,"line_end":983,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":175234,"byte_end":175284,"line_start":984,"line_end":984,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":175289,"byte_end":175298,"line_start":985,"line_end":985,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":175303,"byte_end":175310,"line_start":986,"line_end":986,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":175315,"byte_end":175318,"line_start":987,"line_end":987,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2579},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":176195,"byte_end":176200,"line_start":1018,"line_end":1018,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::StreamExt::chain","value":"pub fn chain<St>(Self, St) -> Chain<Self, St> where St: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":175468,"byte_end":175505,"line_start":995,"line_end":995,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":175510,"byte_end":175513,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":175518,"byte_end":175589,"line_start":997,"line_end":997,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":175594,"byte_end":175670,"line_start":998,"line_end":998,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":175675,"byte_end":175678,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":175683,"byte_end":175690,"line_start":1000,"line_end":1000,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":175695,"byte_end":175736,"line_start":1001,"line_end":1001,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":175741,"byte_end":175784,"line_start":1002,"line_end":1002,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":175789,"byte_end":175792,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":175797,"byte_end":175854,"line_start":1004,"line_end":1004,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":175859,"byte_end":175915,"line_start":1005,"line_end":1005,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":175920,"byte_end":175923,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":175928,"byte_end":175968,"line_start":1007,"line_end":1007,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":175973,"byte_end":175976,"line_start":1008,"line_end":1008,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":175981,"byte_end":176029,"line_start":1009,"line_end":1009,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":176034,"byte_end":176062,"line_start":1010,"line_end":1010,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":176067,"byte_end":176082,"line_start":1011,"line_end":1011,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":176087,"byte_end":176106,"line_start":1012,"line_end":1012,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":176111,"byte_end":176129,"line_start":1013,"line_end":1013,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":176134,"byte_end":176149,"line_start":1014,"line_end":1014,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":176154,"byte_end":176161,"line_start":1015,"line_end":1015,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":176166,"byte_end":176175,"line_start":1016,"line_end":1016,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":176180,"byte_end":176187,"line_start":1017,"line_end":1017,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2581},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":176507,"byte_end":176515,"line_start":1028,"line_end":1028,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::StreamExt::peekable","value":"pub fn peekable(Self) -> Peekable<Self> where Self: Sized","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":176361,"byte_end":176416,"line_start":1025,"line_end":1025,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":176421,"byte_end":176424,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":176429,"byte_end":176499,"line_start":1027,"line_end":1027,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2582},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":177513,"byte_end":177519,"line_start":1053,"line_end":1053,"column_start":8,"column_end":14},"name":"chunks","qualname":"::stream::StreamExt::chunks","value":"pub fn chunks(Self, usize) -> Chunks<Self> where Self: Sized","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" An adaptor for chunking up items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up items of the stream inside a vector.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":176611,"byte_end":176678,"line_start":1034,"line_end":1034,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":176683,"byte_end":176686,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull items from this stream and buffer","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":176691,"byte_end":176765,"line_start":1036,"line_end":1036,"column_start":5,"column_end":79}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":176770,"byte_end":176842,"line_start":1037,"line_end":1037,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":176847,"byte_end":176899,"line_start":1038,"line_end":1038,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":176904,"byte_end":176907,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":176912,"byte_end":176985,"line_start":1040,"line_end":1040,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":176990,"byte_end":177064,"line_start":1041,"line_end":1041,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":177069,"byte_end":177144,"line_start":1042,"line_end":1042,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":177149,"byte_end":177221,"line_start":1043,"line_end":1043,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":177226,"byte_end":177238,"line_start":1044,"line_end":1044,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":177243,"byte_end":177246,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":177251,"byte_end":177326,"line_start":1046,"line_end":1046,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":177331,"byte_end":177388,"line_start":1047,"line_end":1047,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":177393,"byte_end":177396,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":177401,"byte_end":177413,"line_start":1049,"line_end":1049,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":177418,"byte_end":177421,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":177426,"byte_end":177475,"line_start":1051,"line_end":1051,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":177480,"byte_end":177505,"line_start":1052,"line_end":1052,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2583},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":179606,"byte_end":179613,"line_start":1104,"line_end":1104,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::StreamExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnMut(&Self::Item) ->\n(), Self: Sized","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":179303,"byte_end":179376,"line_start":1099,"line_end":1099,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":179381,"byte_end":179384,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":179389,"byte_end":179458,"line_start":1101,"line_end":1101,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":179463,"byte_end":179532,"line_start":1102,"line_end":1102,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":179537,"byte_end":179598,"line_start":1103,"line_end":1103,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2585},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":180039,"byte_end":180050,"line_start":1116,"line_end":1116,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::StreamExt::left_stream","value":"pub fn left_stream<B>(Self) -> Either<Self, B> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":179760,"byte_end":179835,"line_start":1111,"line_end":1111,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":179840,"byte_end":179861,"line_start":1112,"line_end":1112,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":179866,"byte_end":179869,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":179874,"byte_end":179954,"line_start":1114,"line_end":1114,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":179959,"byte_end":180031,"line_start":1115,"line_end":1115,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2587},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":180472,"byte_end":180484,"line_start":1128,"line_end":1128,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::StreamExt::right_stream","value":"pub fn right_stream<B>(Self) -> Either<B, Self> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":180193,"byte_end":180269,"line_start":1123,"line_end":1123,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":180274,"byte_end":180295,"line_start":1124,"line_end":1124,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":180300,"byte_end":180303,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":180308,"byte_end":180387,"line_start":1126,"line_end":1126,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":180392,"byte_end":180464,"line_start":1127,"line_end":1127,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2589},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":180729,"byte_end":180744,"line_start":1137,"line_end":1137,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::StreamExt::poll_next_unpin","value":"pub fn poll_next_unpin(&mut Self, &mut Context) -> Poll<Option<Self::Item>>\nwhere Self: Unpin","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":180628,"byte_end":180699,"line_start":1135,"line_end":1135,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":180704,"byte_end":180721,"line_start":1136,"line_end":1136,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2590},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":182859,"byte_end":182875,"line_start":1194,"line_end":1194,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::StreamExt::select_next_some","value":"pub fn select_next_some(&mut Self) -> SelectNextSome<, Self> where\nSelf: Unpin + FusedStream","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":180905,"byte_end":180980,"line_start":1146,"line_end":1146,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":180985,"byte_end":180995,"line_start":1147,"line_end":1147,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":181000,"byte_end":181003,"line_start":1148,"line_end":1148,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":181008,"byte_end":181081,"line_start":1149,"line_end":1149,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":181086,"byte_end":181154,"line_start":1150,"line_end":1150,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":181159,"byte_end":181207,"line_start":1151,"line_end":1151,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":181212,"byte_end":181287,"line_start":1152,"line_end":1152,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":181292,"byte_end":181368,"line_start":1153,"line_end":1153,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":181373,"byte_end":181399,"line_start":1154,"line_end":1154,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":181404,"byte_end":181407,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":181412,"byte_end":181485,"line_start":1156,"line_end":1156,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":181490,"byte_end":181560,"line_start":1157,"line_end":1157,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":181565,"byte_end":181605,"line_start":1158,"line_end":1158,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":181610,"byte_end":181613,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":181618,"byte_end":181672,"line_start":1160,"line_end":1160,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":181677,"byte_end":181761,"line_start":1161,"line_end":1161,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":181766,"byte_end":181769,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":181774,"byte_end":181788,"line_start":1163,"line_end":1163,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":181793,"byte_end":181796,"line_start":1164,"line_end":1164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":181801,"byte_end":181808,"line_start":1165,"line_end":1165,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":181813,"byte_end":181854,"line_start":1166,"line_end":1166,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":181859,"byte_end":181893,"line_start":1167,"line_end":1167,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":181898,"byte_end":181953,"line_start":1168,"line_end":1168,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":181958,"byte_end":181961,"line_start":1169,"line_end":1169,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":181966,"byte_end":182001,"line_start":1170,"line_end":1170,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":182006,"byte_end":182056,"line_start":1171,"line_end":1171,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":182061,"byte_end":182083,"line_start":1172,"line_end":1172,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":182088,"byte_end":182098,"line_start":1173,"line_end":1173,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":182103,"byte_end":182120,"line_start":1174,"line_end":1174,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":182125,"byte_end":182151,"line_start":1175,"line_end":1175,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":182156,"byte_end":182211,"line_start":1176,"line_end":1176,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":182216,"byte_end":182245,"line_start":1177,"line_end":1177,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":182250,"byte_end":182313,"line_start":1178,"line_end":1178,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":182318,"byte_end":182364,"line_start":1179,"line_end":1179,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":182369,"byte_end":182383,"line_start":1180,"line_end":1180,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":182388,"byte_end":182457,"line_start":1181,"line_end":1181,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":182462,"byte_end":182487,"line_start":1182,"line_end":1182,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":182492,"byte_end":182545,"line_start":1183,"line_end":1183,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":182550,"byte_end":182579,"line_start":1184,"line_end":1184,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":182584,"byte_end":182597,"line_start":1185,"line_end":1185,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":182602,"byte_end":182672,"line_start":1186,"line_end":1186,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":182677,"byte_end":182736,"line_start":1187,"line_end":1187,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":182741,"byte_end":182771,"line_start":1188,"line_end":1188,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":182776,"byte_end":182785,"line_start":1189,"line_end":1189,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":182790,"byte_end":182795,"line_start":1190,"line_end":1190,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":182800,"byte_end":182825,"line_start":1191,"line_end":1191,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":182830,"byte_end":182839,"line_start":1192,"line_end":1192,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":182844,"byte_end":182851,"line_start":1193,"line_end":1193,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":2592},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"try_stream","qualname":"::try_stream","value":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","parent":null,"children":[{"krate":0,"index":2593},{"krate":0,"index":2594},{"krate":0,"index":2595},{"krate":0,"index":2596},{"krate":0,"index":2597},{"krate":0,"index":2598},{"krate":0,"index":2599},{"krate":0,"index":2600},{"krate":0,"index":2601},{"krate":0,"index":2656},{"krate":0,"index":2657},{"krate":0,"index":2691},{"krate":0,"index":2692},{"krate":0,"index":2742},{"krate":0,"index":2743},{"krate":0,"index":2793},{"krate":0,"index":2794},{"krate":0,"index":2819},{"krate":0,"index":2820},{"krate":0,"index":2868},{"krate":0,"index":2869},{"krate":0,"index":2917},{"krate":0,"index":2918},{"krate":0,"index":2973},{"krate":0,"index":2974},{"krate":0,"index":2999},{"krate":0,"index":3000},{"krate":0,"index":3040},{"krate":0,"index":3041},{"krate":0,"index":3093},{"krate":0,"index":3094},{"krate":0,"index":3148},{"krate":0,"index":3149},{"krate":0,"index":3177},{"krate":0,"index":3178},{"krate":0,"index":3210},{"krate":0,"index":3211},{"krate":0,"index":3230},{"krate":0,"index":3231},{"krate":0,"index":3284},{"krate":0,"index":3285},{"krate":0,"index":3342},{"krate":0,"index":5170},{"krate":0,"index":5203},{"krate":0,"index":5204},{"krate":0,"index":5256},{"krate":0,"index":3343},{"krate":0,"index":3345}],"decl_id":null,"docs":" Streams","sig":null,"attributes":[{"value":"! Streams","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":273324,"byte_end":273335,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":273336,"byte_end":273339,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains a number of functions for working with `Streams`s","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":273340,"byte_end":273414,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"! that return `Result`s, allowing for short-circuiting computations.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":273415,"byte_end":273485,"line_start":4,"line_end":4,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":2615},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/and_then.rs","byte_start":301760,"byte_end":301767,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"AndThen","qualname":"::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":2619},{"krate":0,"index":2620},{"krate":0,"index":2621}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`and_then`](super::TryStreamExt::and_then) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/and_then.rs","byte_start":301629,"byte_end":301699,"line_start":10,"line_end":10,"column_start":1,"column_end":71}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/and_then.rs","byte_start":301700,"byte_end":301748,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2640},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/and_then.rs","byte_start":302712,"byte_end":302719,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<AndThen<St, Fut, F>>::get_ref","value":"pub fn get_ref(&Self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/and_then.rs","byte_start":302605,"byte_end":302678,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/and_then.rs","byte_start":302683,"byte_end":302700,"line_start":49,"line_end":49,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2641},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/and_then.rs","byte_start":303029,"byte_end":303036,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AndThen<St, Fut, F>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/and_then.rs","byte_start":302768,"byte_end":302835,"line_start":54,"line_end":54,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/and_then.rs","byte_start":302840,"byte_end":302871,"line_start":55,"line_end":55,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/and_then.rs","byte_start":302876,"byte_end":302879,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/and_then.rs","byte_start":302884,"byte_end":302957,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/and_then.rs","byte_start":302962,"byte_end":303017,"line_start":58,"line_end":58,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2642},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/and_then.rs","byte_start":303365,"byte_end":303376,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<AndThen<St, Fut, F>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/and_then.rs","byte_start":303097,"byte_end":303171,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/and_then.rs","byte_start":303176,"byte_end":303207,"line_start":64,"line_end":64,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/and_then.rs","byte_start":303212,"byte_end":303215,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/and_then.rs","byte_start":303220,"byte_end":303293,"line_start":66,"line_end":66,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/and_then.rs","byte_start":303298,"byte_end":303353,"line_start":67,"line_end":67,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2643},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/and_then.rs","byte_start":303685,"byte_end":303695,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AndThen<St, Fut, F>>::into_inner","value":"pub fn into_inner(Self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/and_then.rs","byte_start":303450,"byte_end":303512,"line_start":72,"line_end":72,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/and_then.rs","byte_start":303517,"byte_end":303520,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/and_then.rs","byte_start":303525,"byte_end":303597,"line_start":74,"line_end":74,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/and_then.rs","byte_start":303602,"byte_end":303673,"line_start":75,"line_end":75,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5026},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/err_into.rs","byte_start":305810,"byte_end":305817,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"ErrInto","qualname":"::try_stream::err_into::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":5029},{"krate":0,"index":5030}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`err_into`](super::TryStreamExt::err_into) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/err_into.rs","byte_start":305662,"byte_end":305732,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/err_into.rs","byte_start":305750,"byte_end":305798,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2675},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/err_into.rs","byte_start":306196,"byte_end":306203,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<ErrInto<St, E>>::get_ref","value":"pub fn get_ref(&Self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/err_into.rs","byte_start":306089,"byte_end":306162,"line_start":26,"line_end":26,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/err_into.rs","byte_start":306167,"byte_end":306184,"line_start":27,"line_end":27,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2676},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/err_into.rs","byte_start":306513,"byte_end":306520,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ErrInto<St, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/err_into.rs","byte_start":306252,"byte_end":306319,"line_start":32,"line_end":32,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/err_into.rs","byte_start":306324,"byte_end":306355,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/err_into.rs","byte_start":306360,"byte_end":306363,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/err_into.rs","byte_start":306368,"byte_end":306441,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/err_into.rs","byte_start":306446,"byte_end":306501,"line_start":36,"line_end":36,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2677},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/err_into.rs","byte_start":306849,"byte_end":306860,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<ErrInto<St, E>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/err_into.rs","byte_start":306581,"byte_end":306655,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/err_into.rs","byte_start":306660,"byte_end":306691,"line_start":42,"line_end":42,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/err_into.rs","byte_start":306696,"byte_end":306699,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/err_into.rs","byte_start":306704,"byte_end":306777,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/err_into.rs","byte_start":306782,"byte_end":306837,"line_start":45,"line_end":45,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2678},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/err_into.rs","byte_start":307169,"byte_end":307179,"line_start":54,"line_end":54,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ErrInto<St, E>>::into_inner","value":"pub fn into_inner(Self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/err_into.rs","byte_start":306934,"byte_end":306996,"line_start":50,"line_end":50,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/err_into.rs","byte_start":307001,"byte_end":307004,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/err_into.rs","byte_start":307009,"byte_end":307081,"line_start":52,"line_end":52,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/err_into.rs","byte_start":307086,"byte_end":307157,"line_start":53,"line_end":53,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2706},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_ok.rs","byte_start":308473,"byte_end":308482,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"InspectOk","qualname":"::try_stream::inspect_ok::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":2709},{"krate":0,"index":2710}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_ok.rs","byte_start":308338,"byte_end":308412,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_ok.rs","byte_start":308413,"byte_end":308461,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2725},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_ok.rs","byte_start":309184,"byte_end":309191,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<InspectOk<St, F>>::get_ref","value":"pub fn get_ref(&Self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_ok.rs","byte_start":309077,"byte_end":309150,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_ok.rs","byte_start":309155,"byte_end":309172,"line_start":45,"line_end":45,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2726},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_ok.rs","byte_start":309501,"byte_end":309508,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<InspectOk<St, F>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_ok.rs","byte_start":309240,"byte_end":309307,"line_start":50,"line_end":50,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_ok.rs","byte_start":309312,"byte_end":309343,"line_start":51,"line_end":51,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_ok.rs","byte_start":309348,"byte_end":309351,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_ok.rs","byte_start":309356,"byte_end":309429,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_ok.rs","byte_start":309434,"byte_end":309489,"line_start":54,"line_end":54,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2727},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_ok.rs","byte_start":309837,"byte_end":309848,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<InspectOk<St, F>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_ok.rs","byte_start":309569,"byte_end":309643,"line_start":59,"line_end":59,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_ok.rs","byte_start":309648,"byte_end":309679,"line_start":60,"line_end":60,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_ok.rs","byte_start":309684,"byte_end":309687,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_ok.rs","byte_start":309692,"byte_end":309765,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_ok.rs","byte_start":309770,"byte_end":309825,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2728},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_ok.rs","byte_start":310157,"byte_end":310167,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<InspectOk<St, F>>::into_inner","value":"pub fn into_inner(Self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_ok.rs","byte_start":309922,"byte_end":309984,"line_start":68,"line_end":68,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_ok.rs","byte_start":309989,"byte_end":309992,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_ok.rs","byte_start":309997,"byte_end":310069,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_ok.rs","byte_start":310074,"byte_end":310145,"line_start":71,"line_end":71,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2757},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_err.rs","byte_start":311531,"byte_end":311541,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"InspectErr","qualname":"::try_stream::inspect_err::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":2760},{"krate":0,"index":2761}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_err.rs","byte_start":311394,"byte_end":311470,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_err.rs","byte_start":311471,"byte_end":311519,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2776},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_err.rs","byte_start":312251,"byte_end":312258,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<InspectErr<St, F>>::get_ref","value":"pub fn get_ref(&Self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_err.rs","byte_start":312144,"byte_end":312217,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_err.rs","byte_start":312222,"byte_end":312239,"line_start":45,"line_end":45,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2777},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_err.rs","byte_start":312568,"byte_end":312575,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<InspectErr<St, F>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_err.rs","byte_start":312307,"byte_end":312374,"line_start":50,"line_end":50,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_err.rs","byte_start":312379,"byte_end":312410,"line_start":51,"line_end":51,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_err.rs","byte_start":312415,"byte_end":312418,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_err.rs","byte_start":312423,"byte_end":312496,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_err.rs","byte_start":312501,"byte_end":312556,"line_start":54,"line_end":54,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2778},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_err.rs","byte_start":312904,"byte_end":312915,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<InspectErr<St, F>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_err.rs","byte_start":312636,"byte_end":312710,"line_start":59,"line_end":59,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_err.rs","byte_start":312715,"byte_end":312746,"line_start":60,"line_end":60,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_err.rs","byte_start":312751,"byte_end":312754,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_err.rs","byte_start":312759,"byte_end":312832,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_err.rs","byte_start":312837,"byte_end":312892,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2779},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_err.rs","byte_start":313224,"byte_end":313234,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<InspectErr<St, F>>::into_inner","value":"pub fn into_inner(Self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_err.rs","byte_start":312989,"byte_end":313051,"line_start":68,"line_end":68,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_err.rs","byte_start":313056,"byte_end":313059,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_err.rs","byte_start":313064,"byte_end":313136,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_err.rs","byte_start":313141,"byte_end":313212,"line_start":71,"line_end":71,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5048},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/into_stream.rs","byte_start":314566,"byte_end":314576,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"IntoStream","qualname":"::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":5050}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/into_stream.rs","byte_start":314412,"byte_end":314488,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/into_stream.rs","byte_start":314506,"byte_end":314554,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2807},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/into_stream.rs","byte_start":314867,"byte_end":314874,"line_start":25,"line_end":25,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<IntoStream<St>>::get_ref","value":"pub fn get_ref(&Self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/into_stream.rs","byte_start":314760,"byte_end":314833,"line_start":23,"line_end":23,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/into_stream.rs","byte_start":314838,"byte_end":314855,"line_start":24,"line_end":24,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2808},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/into_stream.rs","byte_start":315184,"byte_end":315191,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<IntoStream<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/into_stream.rs","byte_start":314923,"byte_end":314990,"line_start":29,"line_end":29,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/into_stream.rs","byte_start":314995,"byte_end":315026,"line_start":30,"line_end":30,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/into_stream.rs","byte_start":315031,"byte_end":315034,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/into_stream.rs","byte_start":315039,"byte_end":315112,"line_start":32,"line_end":32,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/into_stream.rs","byte_start":315117,"byte_end":315172,"line_start":33,"line_end":33,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2809},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/into_stream.rs","byte_start":315520,"byte_end":315531,"line_start":43,"line_end":43,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<IntoStream<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/into_stream.rs","byte_start":315252,"byte_end":315326,"line_start":38,"line_end":38,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/into_stream.rs","byte_start":315331,"byte_end":315362,"line_start":39,"line_end":39,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/into_stream.rs","byte_start":315367,"byte_end":315370,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/into_stream.rs","byte_start":315375,"byte_end":315448,"line_start":41,"line_end":41,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/into_stream.rs","byte_start":315453,"byte_end":315508,"line_start":42,"line_end":42,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2810},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/into_stream.rs","byte_start":315840,"byte_end":315850,"line_start":51,"line_end":51,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<IntoStream<St>>::into_inner","value":"pub fn into_inner(Self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/into_stream.rs","byte_start":315605,"byte_end":315667,"line_start":47,"line_end":47,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/into_stream.rs","byte_start":315672,"byte_end":315675,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/into_stream.rs","byte_start":315680,"byte_end":315752,"line_start":49,"line_end":49,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/into_stream.rs","byte_start":315757,"byte_end":315828,"line_start":50,"line_end":50,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2833},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_ok.rs","byte_start":316967,"byte_end":316972,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"MapOk","qualname":"::try_stream::map_ok::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":2836},{"krate":0,"index":2837}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_ok.rs","byte_start":316840,"byte_end":316906,"line_start":9,"line_end":9,"column_start":1,"column_end":67}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_ok.rs","byte_start":316907,"byte_end":316955,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2849},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_ok.rs","byte_start":317607,"byte_end":317614,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MapOk<St, F>>::get_ref","value":"pub fn get_ref(&Self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_ok.rs","byte_start":317500,"byte_end":317573,"line_start":38,"line_end":38,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_ok.rs","byte_start":317578,"byte_end":317595,"line_start":39,"line_end":39,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2850},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_ok.rs","byte_start":317924,"byte_end":317931,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MapOk<St, F>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_ok.rs","byte_start":317663,"byte_end":317730,"line_start":44,"line_end":44,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_ok.rs","byte_start":317735,"byte_end":317766,"line_start":45,"line_end":45,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_ok.rs","byte_start":317771,"byte_end":317774,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_ok.rs","byte_start":317779,"byte_end":317852,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_ok.rs","byte_start":317857,"byte_end":317912,"line_start":48,"line_end":48,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2851},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_ok.rs","byte_start":318260,"byte_end":318271,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<MapOk<St, F>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_ok.rs","byte_start":317992,"byte_end":318066,"line_start":53,"line_end":53,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_ok.rs","byte_start":318071,"byte_end":318102,"line_start":54,"line_end":54,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_ok.rs","byte_start":318107,"byte_end":318110,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_ok.rs","byte_start":318115,"byte_end":318188,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_ok.rs","byte_start":318193,"byte_end":318248,"line_start":57,"line_end":57,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2852},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_ok.rs","byte_start":318580,"byte_end":318590,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<MapOk<St, F>>::into_inner","value":"pub fn into_inner(Self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_ok.rs","byte_start":318345,"byte_end":318407,"line_start":62,"line_end":62,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_ok.rs","byte_start":318412,"byte_end":318415,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_ok.rs","byte_start":318420,"byte_end":318492,"line_start":64,"line_end":64,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_ok.rs","byte_start":318497,"byte_end":318568,"line_start":65,"line_end":65,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2882},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_err.rs","byte_start":319906,"byte_end":319912,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"MapErr","qualname":"::try_stream::map_err::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":2885},{"krate":0,"index":2886}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`map_err`](super::TryStreamExt::map_err) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_err.rs","byte_start":319777,"byte_end":319845,"line_start":9,"line_end":9,"column_start":1,"column_end":69}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_err.rs","byte_start":319846,"byte_end":319894,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2898},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_err.rs","byte_start":320553,"byte_end":320560,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MapErr<St, F>>::get_ref","value":"pub fn get_ref(&Self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_err.rs","byte_start":320446,"byte_end":320519,"line_start":38,"line_end":38,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_err.rs","byte_start":320524,"byte_end":320541,"line_start":39,"line_end":39,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2899},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_err.rs","byte_start":320870,"byte_end":320877,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MapErr<St, F>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_err.rs","byte_start":320609,"byte_end":320676,"line_start":44,"line_end":44,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_err.rs","byte_start":320681,"byte_end":320712,"line_start":45,"line_end":45,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_err.rs","byte_start":320717,"byte_end":320720,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_err.rs","byte_start":320725,"byte_end":320798,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_err.rs","byte_start":320803,"byte_end":320858,"line_start":48,"line_end":48,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2900},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_err.rs","byte_start":321206,"byte_end":321217,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<MapErr<St, F>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_err.rs","byte_start":320938,"byte_end":321012,"line_start":53,"line_end":53,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_err.rs","byte_start":321017,"byte_end":321048,"line_start":54,"line_end":54,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_err.rs","byte_start":321053,"byte_end":321056,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_err.rs","byte_start":321061,"byte_end":321134,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_err.rs","byte_start":321139,"byte_end":321194,"line_start":57,"line_end":57,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2901},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_err.rs","byte_start":321526,"byte_end":321536,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<MapErr<St, F>>::into_inner","value":"pub fn into_inner(Self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_err.rs","byte_start":321291,"byte_end":321353,"line_start":62,"line_end":62,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_err.rs","byte_start":321358,"byte_end":321361,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_err.rs","byte_start":321366,"byte_end":321438,"line_start":64,"line_end":64,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_err.rs","byte_start":321443,"byte_end":321514,"line_start":65,"line_end":65,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2932},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/or_else.rs","byte_start":322899,"byte_end":322905,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"OrElse","qualname":"::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":2936},{"krate":0,"index":2937},{"krate":0,"index":2938}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`or_else`](super::TryStreamExt::or_else) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/or_else.rs","byte_start":322770,"byte_end":322838,"line_start":10,"line_end":10,"column_start":1,"column_end":69}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/or_else.rs","byte_start":322839,"byte_end":322887,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2957},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/or_else.rs","byte_start":323842,"byte_end":323849,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<OrElse<St, Fut, F>>::get_ref","value":"pub fn get_ref(&Self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/or_else.rs","byte_start":323735,"byte_end":323808,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/or_else.rs","byte_start":323813,"byte_end":323830,"line_start":49,"line_end":49,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2958},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/or_else.rs","byte_start":324159,"byte_end":324166,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OrElse<St, Fut, F>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/or_else.rs","byte_start":323898,"byte_end":323965,"line_start":54,"line_end":54,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/or_else.rs","byte_start":323970,"byte_end":324001,"line_start":55,"line_end":55,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/or_else.rs","byte_start":324006,"byte_end":324009,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/or_else.rs","byte_start":324014,"byte_end":324087,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/or_else.rs","byte_start":324092,"byte_end":324147,"line_start":58,"line_end":58,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2959},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/or_else.rs","byte_start":324495,"byte_end":324506,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<OrElse<St, Fut, F>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/or_else.rs","byte_start":324227,"byte_end":324301,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/or_else.rs","byte_start":324306,"byte_end":324337,"line_start":64,"line_end":64,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/or_else.rs","byte_start":324342,"byte_end":324345,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/or_else.rs","byte_start":324350,"byte_end":324423,"line_start":66,"line_end":66,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/or_else.rs","byte_start":324428,"byte_end":324483,"line_start":67,"line_end":67,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2960},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/or_else.rs","byte_start":324815,"byte_end":324825,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<OrElse<St, Fut, F>>::into_inner","value":"pub fn into_inner(Self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/or_else.rs","byte_start":324580,"byte_end":324642,"line_start":72,"line_end":72,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/or_else.rs","byte_start":324647,"byte_end":324650,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/or_else.rs","byte_start":324655,"byte_end":324727,"line_start":74,"line_end":74,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/or_else.rs","byte_start":324732,"byte_end":324803,"line_start":75,"line_end":75,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5075},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_next.rs","byte_start":326986,"byte_end":326993,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":5078}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_next.rs","byte_start":326819,"byte_end":326889,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_next.rs","byte_start":326907,"byte_end":326974,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3013},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_for_each.rs","byte_start":328074,"byte_end":328084,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"TryForEach","qualname":"::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":3017},{"krate":0,"index":3018},{"krate":0,"index":3019}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_for_each.rs","byte_start":327916,"byte_end":327994,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_for_each.rs","byte_start":327995,"byte_end":328062,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3055},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter.rs","byte_start":330173,"byte_end":330182,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"TryFilter","qualname":"::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":3059},{"krate":0,"index":3060},{"krate":0,"index":3061},{"krate":0,"index":3062}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`try_filter`](super::TryStreamExt::try_filter)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter.rs","byte_start":330034,"byte_end":330100,"line_start":10,"line_end":10,"column_start":1,"column_end":67}},{"value":"/ method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter.rs","byte_start":330101,"byte_end":330112,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter.rs","byte_start":330113,"byte_end":330161,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3077},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter.rs","byte_start":331352,"byte_end":331359,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<TryFilter<St, Fut, F>>::get_ref","value":"pub fn get_ref(&Self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter.rs","byte_start":331245,"byte_end":331318,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter.rs","byte_start":331323,"byte_end":331340,"line_start":59,"line_end":59,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3078},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter.rs","byte_start":331669,"byte_end":331676,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<TryFilter<St, Fut, F>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter.rs","byte_start":331408,"byte_end":331475,"line_start":64,"line_end":64,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter.rs","byte_start":331480,"byte_end":331511,"line_start":65,"line_end":65,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter.rs","byte_start":331516,"byte_end":331519,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter.rs","byte_start":331524,"byte_end":331597,"line_start":67,"line_end":67,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter.rs","byte_start":331602,"byte_end":331657,"line_start":68,"line_end":68,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3079},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter.rs","byte_start":332005,"byte_end":332016,"line_start":78,"line_end":78,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<TryFilter<St, Fut, F>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter.rs","byte_start":331737,"byte_end":331811,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter.rs","byte_start":331816,"byte_end":331847,"line_start":74,"line_end":74,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter.rs","byte_start":331852,"byte_end":331855,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter.rs","byte_start":331860,"byte_end":331933,"line_start":76,"line_end":76,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter.rs","byte_start":331938,"byte_end":331993,"line_start":77,"line_end":77,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3080},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter.rs","byte_start":332325,"byte_end":332335,"line_start":86,"line_end":86,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TryFilter<St, Fut, F>>::into_inner","value":"pub fn into_inner(Self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter.rs","byte_start":332090,"byte_end":332152,"line_start":82,"line_end":82,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter.rs","byte_start":332157,"byte_end":332160,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter.rs","byte_start":332165,"byte_end":332237,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter.rs","byte_start":332242,"byte_end":332313,"line_start":85,"line_end":85,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":3109},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter_map.rs","byte_start":334804,"byte_end":334816,"line_start":13,"line_end":13,"column_start":12,"column_end":24},"name":"TryFilterMap","qualname":"::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":3113},{"krate":0,"index":3114},{"krate":0,"index":3115}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter_map.rs","byte_start":334657,"byte_end":334731,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter_map.rs","byte_start":334732,"byte_end":334743,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter_map.rs","byte_start":334744,"byte_end":334792,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3130},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter_map.rs","byte_start":335667,"byte_end":335674,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<TryFilterMap<St, Fut, F>>::get_ref","value":"pub fn get_ref(&Self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter_map.rs","byte_start":335560,"byte_end":335633,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter_map.rs","byte_start":335638,"byte_end":335655,"line_start":46,"line_end":46,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3131},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter_map.rs","byte_start":335984,"byte_end":335991,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<TryFilterMap<St, Fut, F>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter_map.rs","byte_start":335723,"byte_end":335790,"line_start":51,"line_end":51,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter_map.rs","byte_start":335795,"byte_end":335826,"line_start":52,"line_end":52,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter_map.rs","byte_start":335831,"byte_end":335834,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter_map.rs","byte_start":335839,"byte_end":335912,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter_map.rs","byte_start":335917,"byte_end":335972,"line_start":55,"line_end":55,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3132},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter_map.rs","byte_start":336320,"byte_end":336331,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<TryFilterMap<St, Fut, F>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter_map.rs","byte_start":336052,"byte_end":336126,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter_map.rs","byte_start":336131,"byte_end":336162,"line_start":61,"line_end":61,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter_map.rs","byte_start":336167,"byte_end":336170,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter_map.rs","byte_start":336175,"byte_end":336248,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter_map.rs","byte_start":336253,"byte_end":336308,"line_start":64,"line_end":64,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3133},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter_map.rs","byte_start":336640,"byte_end":336650,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TryFilterMap<St, Fut, F>>::into_inner","value":"pub fn into_inner(Self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter_map.rs","byte_start":336405,"byte_end":336467,"line_start":69,"line_end":69,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter_map.rs","byte_start":336472,"byte_end":336475,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter_map.rs","byte_start":336480,"byte_end":336552,"line_start":71,"line_end":71,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter_map.rs","byte_start":336557,"byte_end":336628,"line_start":72,"line_end":72,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5109},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_flatten.rs","byte_start":338936,"byte_end":338946,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"TryFlatten","qualname":"::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":5111},{"krate":0,"index":5112}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_flatten.rs","byte_start":338782,"byte_end":338858,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_flatten.rs","byte_start":338876,"byte_end":338924,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3166},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_flatten.rs","byte_start":339565,"byte_end":339572,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<TryFlatten<St>>::get_ref","value":"pub fn get_ref(&Self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_flatten.rs","byte_start":339458,"byte_end":339531,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_flatten.rs","byte_start":339536,"byte_end":339553,"line_start":45,"line_end":45,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3167},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_flatten.rs","byte_start":339882,"byte_end":339889,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<TryFlatten<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_flatten.rs","byte_start":339621,"byte_end":339688,"line_start":50,"line_end":50,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_flatten.rs","byte_start":339693,"byte_end":339724,"line_start":51,"line_end":51,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_flatten.rs","byte_start":339729,"byte_end":339732,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_flatten.rs","byte_start":339737,"byte_end":339810,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_flatten.rs","byte_start":339815,"byte_end":339870,"line_start":54,"line_end":54,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3168},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_flatten.rs","byte_start":340218,"byte_end":340229,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<TryFlatten<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_flatten.rs","byte_start":339950,"byte_end":340024,"line_start":59,"line_end":59,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_flatten.rs","byte_start":340029,"byte_end":340060,"line_start":60,"line_end":60,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_flatten.rs","byte_start":340065,"byte_end":340068,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_flatten.rs","byte_start":340073,"byte_end":340146,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_flatten.rs","byte_start":340151,"byte_end":340206,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3169},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_flatten.rs","byte_start":340538,"byte_end":340548,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TryFlatten<St>>::into_inner","value":"pub fn into_inner(Self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_flatten.rs","byte_start":340303,"byte_end":340365,"line_start":68,"line_end":68,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_flatten.rs","byte_start":340370,"byte_end":340373,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_flatten.rs","byte_start":340378,"byte_end":340450,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_flatten.rs","byte_start":340455,"byte_end":340526,"line_start":71,"line_end":71,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5122},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_collect.rs","byte_start":342442,"byte_end":342452,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"TryCollect","qualname":"::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":5125},{"krate":0,"index":5126}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_collect`](super::TryStreamExt::try_collect) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_collect.rs","byte_start":342269,"byte_end":342345,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_collect.rs","byte_start":342363,"byte_end":342430,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5136},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_concat.rs","byte_start":343995,"byte_end":344004,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"TryConcat","qualname":"::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":5138},{"krate":0,"index":5139}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_concat`](super::TryStreamExt::try_concat) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_concat.rs","byte_start":343824,"byte_end":343898,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_concat.rs","byte_start":343916,"byte_end":343983,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3245},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_fold.rs","byte_start":345638,"byte_end":345645,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryFold","qualname":"::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":3250},{"krate":0,"index":3251},{"krate":0,"index":3252},{"krate":0,"index":3253}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_fold`](super::TryStreamExt::try_fold) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_fold.rs","byte_start":345488,"byte_end":345558,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_fold.rs","byte_start":345559,"byte_end":345626,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3299},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_skip_while.rs","byte_start":349162,"byte_end":349174,"line_start":13,"line_end":13,"column_start":12,"column_end":24},"name":"TrySkipWhile","qualname":"::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":3303},{"krate":0,"index":3304},{"krate":0,"index":3305},{"krate":0,"index":3306},{"krate":0,"index":3307}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"/ Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_skip_while.rs","byte_start":349015,"byte_end":349089,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_skip_while.rs","byte_start":349090,"byte_end":349101,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_skip_while.rs","byte_start":349102,"byte_end":349150,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3326},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_skip_while.rs","byte_start":350680,"byte_end":350687,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<TrySkipWhile<St, Fut, F>>::get_ref","value":"pub fn get_ref(&Self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_skip_while.rs","byte_start":350573,"byte_end":350646,"line_start":65,"line_end":65,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_skip_while.rs","byte_start":350651,"byte_end":350668,"line_start":66,"line_end":66,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3327},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_skip_while.rs","byte_start":350997,"byte_end":351004,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<TrySkipWhile<St, Fut, F>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_skip_while.rs","byte_start":350736,"byte_end":350803,"line_start":71,"line_end":71,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_skip_while.rs","byte_start":350808,"byte_end":350839,"line_start":72,"line_end":72,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_skip_while.rs","byte_start":350844,"byte_end":350847,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_skip_while.rs","byte_start":350852,"byte_end":350925,"line_start":74,"line_end":74,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_skip_while.rs","byte_start":350930,"byte_end":350985,"line_start":75,"line_end":75,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3328},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_skip_while.rs","byte_start":351333,"byte_end":351344,"line_start":85,"line_end":85,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<TrySkipWhile<St, Fut, F>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_skip_while.rs","byte_start":351065,"byte_end":351139,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_skip_while.rs","byte_start":351144,"byte_end":351175,"line_start":81,"line_end":81,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_skip_while.rs","byte_start":351180,"byte_end":351183,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_skip_while.rs","byte_start":351188,"byte_end":351261,"line_start":83,"line_end":83,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_skip_while.rs","byte_start":351266,"byte_end":351321,"line_start":84,"line_end":84,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3329},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_skip_while.rs","byte_start":351653,"byte_end":351663,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TrySkipWhile<St, Fut, F>>::into_inner","value":"pub fn into_inner(Self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_skip_while.rs","byte_start":351418,"byte_end":351480,"line_start":89,"line_end":89,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_skip_while.rs","byte_start":351485,"byte_end":351488,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_skip_while.rs","byte_start":351493,"byte_end":351565,"line_start":91,"line_end":91,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_skip_while.rs","byte_start":351570,"byte_end":351641,"line_start":92,"line_end":92,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5257},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_buffer_unordered.rs","byte_start":7942484,"byte_end":7942502,"line_start":16,"line_end":16,"column_start":12,"column_end":30},"name":"TryBufferUnordered","qualname":"::try_stream::try_buffer_unordered::TryBufferUnordered","value":"TryBufferUnordered {  }","parent":null,"children":[{"krate":0,"index":5259},{"krate":0,"index":5260},{"krate":0,"index":5261}],"decl_id":null,"docs":" Stream for the\n [`try_buffer_unordered`](super::TryStreamExt::try_buffer_unordered) method.\n","sig":null,"attributes":[{"value":"/ Stream for the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_buffer_unordered.rs","byte_start":7942308,"byte_end":7942326,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"/ [`try_buffer_unordered`](super::TryStreamExt::try_buffer_unordered) method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_buffer_unordered.rs","byte_start":7942327,"byte_end":7942406,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_buffer_unordered.rs","byte_start":7942424,"byte_end":7942472,"line_start":15,"line_end":15,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5195},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_buffer_unordered.rs","byte_start":7943282,"byte_end":7943289,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<TryBufferUnordered<St>>::get_ref","value":"pub fn get_ref(&Self) -> &St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_buffer_unordered.rs","byte_start":7943175,"byte_end":7943248,"line_start":43,"line_end":43,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_buffer_unordered.rs","byte_start":7943253,"byte_end":7943270,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5196},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_buffer_unordered.rs","byte_start":7943618,"byte_end":7943625,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<TryBufferUnordered<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut St","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_buffer_unordered.rs","byte_start":7943357,"byte_end":7943424,"line_start":49,"line_end":49,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_buffer_unordered.rs","byte_start":7943429,"byte_end":7943460,"line_start":50,"line_end":50,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_buffer_unordered.rs","byte_start":7943465,"byte_end":7943468,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_buffer_unordered.rs","byte_start":7943473,"byte_end":7943546,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_buffer_unordered.rs","byte_start":7943551,"byte_end":7943606,"line_start":53,"line_end":53,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5197},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_buffer_unordered.rs","byte_start":7943969,"byte_end":7943980,"line_start":63,"line_end":63,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<TryBufferUnordered<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_buffer_unordered.rs","byte_start":7943701,"byte_end":7943775,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_buffer_unordered.rs","byte_start":7943780,"byte_end":7943811,"line_start":59,"line_end":59,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_buffer_unordered.rs","byte_start":7943816,"byte_end":7943819,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_buffer_unordered.rs","byte_start":7943824,"byte_end":7943897,"line_start":61,"line_end":61,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_buffer_unordered.rs","byte_start":7943902,"byte_end":7943957,"line_start":62,"line_end":62,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5198},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_buffer_unordered.rs","byte_start":7944317,"byte_end":7944327,"line_start":71,"line_end":71,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TryBufferUnordered<St>>::into_inner","value":"pub fn into_inner(Self) -> St","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_buffer_unordered.rs","byte_start":7944082,"byte_end":7944144,"line_start":67,"line_end":67,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_buffer_unordered.rs","byte_start":7944149,"byte_end":7944152,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_buffer_unordered.rs","byte_start":7944157,"byte_end":7944229,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_buffer_unordered.rs","byte_start":7944234,"byte_end":7944305,"line_start":70,"line_end":70,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5222},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_for_each_concurrent.rs","byte_start":7946391,"byte_end":7946411,"line_start":15,"line_end":15,"column_start":12,"column_end":32},"name":"TryForEachConcurrent","qualname":"::try_stream::try_for_each_concurrent::TryForEachConcurrent","value":"TryForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":5226},{"krate":0,"index":5227},{"krate":0,"index":5228},{"krate":0,"index":5229}],"decl_id":null,"docs":" Future for the\n [`try_for_each_concurrent`](super::TryStreamExt::try_for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_for_each_concurrent.rs","byte_start":7946203,"byte_end":7946221,"line_start":11,"line_end":11,"column_start":1,"column_end":19}},{"value":"/ [`try_for_each_concurrent`](super::TryStreamExt::try_for_each_concurrent)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_for_each_concurrent.rs","byte_start":7946222,"byte_end":7946299,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ method.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_for_each_concurrent.rs","byte_start":7946300,"byte_end":7946311,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_for_each_concurrent.rs","byte_start":7946312,"byte_end":7946379,"line_start":14,"line_end":14,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":3345},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":275208,"byte_end":275220,"line_start":88,"line_end":88,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":3346},{"krate":0,"index":3348},{"krate":0,"index":3351},{"krate":0,"index":3354},{"krate":0,"index":3357},{"krate":0,"index":3360},{"krate":0,"index":3362},{"krate":0,"index":3364},{"krate":0,"index":3365},{"krate":0,"index":3366},{"krate":0,"index":3369},{"krate":0,"index":3372},{"krate":0,"index":3376},{"krate":0,"index":3378},{"krate":0,"index":3381},{"krate":0,"index":3385},{"krate":0,"index":3386},{"krate":0,"index":3390},{"krate":0,"index":3391},{"krate":0,"index":3392}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":275146,"byte_end":275197,"line_start":87,"line_end":87,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3346},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":275762,"byte_end":275770,"line_start":106,"line_end":106,"column_start":8,"column_end":16},"name":"err_into","qualname":"::try_stream::TryStreamExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":3345},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":275238,"byte_end":275312,"line_start":89,"line_end":89,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":275317,"byte_end":275343,"line_start":90,"line_end":90,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":275348,"byte_end":275351,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":275356,"byte_end":275370,"line_start":92,"line_end":92,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":275375,"byte_end":275378,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":275383,"byte_end":275390,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":275395,"byte_end":275436,"line_start":95,"line_end":95,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":275441,"byte_end":275487,"line_start":96,"line_end":96,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":275492,"byte_end":275495,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":275500,"byte_end":275520,"line_start":98,"line_end":98,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":275525,"byte_end":275570,"line_start":99,"line_end":99,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":275575,"byte_end":275606,"line_start":100,"line_end":100,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":275611,"byte_end":275614,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":275619,"byte_end":275673,"line_start":102,"line_end":102,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":275678,"byte_end":275729,"line_start":103,"line_end":103,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":275734,"byte_end":275742,"line_start":104,"line_end":104,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":275747,"byte_end":275754,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3348},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":276424,"byte_end":276430,"line_start":131,"line_end":131,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::try_stream::TryStreamExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where Self: Sized,\nF: FnMut(Self::Ok) -> T","parent":{"krate":0,"index":3345},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":275904,"byte_end":275977,"line_start":114,"line_end":114,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":275982,"byte_end":276013,"line_start":115,"line_end":115,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":276018,"byte_end":276021,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":276026,"byte_end":276040,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":276045,"byte_end":276048,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":276053,"byte_end":276060,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":276065,"byte_end":276106,"line_start":120,"line_end":120,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":276111,"byte_end":276157,"line_start":121,"line_end":121,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":276162,"byte_end":276165,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":276170,"byte_end":276190,"line_start":123,"line_end":123,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":276195,"byte_end":276236,"line_start":124,"line_end":124,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":276241,"byte_end":276272,"line_start":125,"line_end":125,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":276277,"byte_end":276280,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":276285,"byte_end":276338,"line_start":127,"line_end":127,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":276343,"byte_end":276391,"line_start":128,"line_end":128,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":276396,"byte_end":276404,"line_start":129,"line_end":129,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":276409,"byte_end":276416,"line_start":130,"line_end":130,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3351},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":277095,"byte_end":277102,"line_start":156,"line_end":156,"column_start":8,"column_end":15},"name":"map_err","qualname":"::try_stream::TryStreamExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: FnMut(Self::Error) -> E","parent":{"krate":0,"index":3345},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":276576,"byte_end":276647,"line_start":139,"line_end":139,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":276652,"byte_end":276683,"line_start":140,"line_end":140,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":276688,"byte_end":276691,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":276696,"byte_end":276710,"line_start":142,"line_end":142,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":276715,"byte_end":276718,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":276723,"byte_end":276730,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":276735,"byte_end":276776,"line_start":145,"line_end":145,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":276781,"byte_end":276827,"line_start":146,"line_end":146,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":276832,"byte_end":276835,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":276840,"byte_end":276860,"line_start":148,"line_end":148,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":276865,"byte_end":276906,"line_start":149,"line_end":149,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":276911,"byte_end":276943,"line_start":150,"line_end":150,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":276948,"byte_end":276951,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":276956,"byte_end":277009,"line_start":152,"line_end":152,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":277014,"byte_end":277062,"line_start":153,"line_end":153,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":277067,"byte_end":277075,"line_start":154,"line_end":154,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":277080,"byte_end":277087,"line_start":155,"line_end":155,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3354},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":278666,"byte_end":278674,"line_start":202,"line_end":202,"column_start":8,"column_end":16},"name":"and_then","qualname":"::try_stream::TryStreamExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":3345},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":277253,"byte_end":277329,"line_start":164,"line_end":164,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":277334,"byte_end":277374,"line_start":165,"line_end":165,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":277379,"byte_end":277382,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":277387,"byte_end":277463,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":277468,"byte_end":277544,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":277549,"byte_end":277622,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":277627,"byte_end":277669,"line_start":170,"line_end":170,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":277674,"byte_end":277677,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":277682,"byte_end":277755,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":277760,"byte_end":277791,"line_start":173,"line_end":173,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":277796,"byte_end":277799,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":277804,"byte_end":277878,"line_start":175,"line_end":175,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":277883,"byte_end":277957,"line_start":176,"line_end":176,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":277962,"byte_end":277978,"line_start":177,"line_end":177,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":277983,"byte_end":277986,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":277991,"byte_end":278062,"line_start":179,"line_end":179,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":278067,"byte_end":278093,"line_start":180,"line_end":180,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":278098,"byte_end":278101,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":278106,"byte_end":278178,"line_start":182,"line_end":182,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":278183,"byte_end":278232,"line_start":183,"line_end":183,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":278237,"byte_end":278240,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":278245,"byte_end":278259,"line_start":185,"line_end":185,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":278264,"byte_end":278267,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":278272,"byte_end":278279,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":278284,"byte_end":278315,"line_start":188,"line_end":188,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":278320,"byte_end":278344,"line_start":189,"line_end":189,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":278349,"byte_end":278387,"line_start":190,"line_end":190,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":278392,"byte_end":278395,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":278400,"byte_end":278456,"line_start":192,"line_end":192,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":278461,"byte_end":278464,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":278469,"byte_end":278504,"line_start":194,"line_end":194,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":278509,"byte_end":278548,"line_start":195,"line_end":195,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":278553,"byte_end":278577,"line_start":196,"line_end":196,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":278582,"byte_end":278598,"line_start":197,"line_end":197,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":278603,"byte_end":278619,"line_start":198,"line_end":198,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":278624,"byte_end":278634,"line_start":199,"line_end":199,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":278639,"byte_end":278646,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":278651,"byte_end":278658,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3357},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":279785,"byte_end":279792,"line_start":227,"line_end":227,"column_start":8,"column_end":15},"name":"or_else","qualname":"::try_stream::TryStreamExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnMut(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":3345},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":278886,"byte_end":278951,"line_start":210,"line_end":210,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":278956,"byte_end":279005,"line_start":211,"line_end":211,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":279010,"byte_end":279013,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":279018,"byte_end":279097,"line_start":213,"line_end":213,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":279102,"byte_end":279176,"line_start":214,"line_end":214,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":279181,"byte_end":279257,"line_start":215,"line_end":215,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":279262,"byte_end":279307,"line_start":216,"line_end":216,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":279312,"byte_end":279315,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":279320,"byte_end":279395,"line_start":218,"line_end":218,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":279400,"byte_end":279440,"line_start":219,"line_end":219,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":279445,"byte_end":279448,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":279453,"byte_end":279562,"line_start":221,"line_end":221,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":279567,"byte_end":279641,"line_start":222,"line_end":222,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":279646,"byte_end":279662,"line_start":223,"line_end":223,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":279667,"byte_end":279670,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":279675,"byte_end":279746,"line_start":225,"line_end":225,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":279751,"byte_end":279777,"line_start":226,"line_end":226,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3360},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":280302,"byte_end":280312,"line_start":241,"line_end":241,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::try_stream::TryStreamExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnMut(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":3345},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":279999,"byte_end":280073,"line_start":235,"line_end":235,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":280078,"byte_end":280088,"line_start":236,"line_end":236,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":280093,"byte_end":280096,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":280101,"byte_end":280171,"line_start":238,"line_end":238,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":280176,"byte_end":280252,"line_start":239,"line_end":239,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":280257,"byte_end":280294,"line_start":240,"line_end":240,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3362},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":280752,"byte_end":280763,"line_start":253,"line_end":253,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::try_stream::TryStreamExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnMut(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":3345},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":280461,"byte_end":280540,"line_start":248,"line_end":248,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":280545,"byte_end":280548,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":280553,"byte_end":280623,"line_start":250,"line_end":250,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":280628,"byte_end":280702,"line_start":251,"line_end":251,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":280707,"byte_end":280744,"line_start":252,"line_end":252,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3364},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":281619,"byte_end":281630,"line_start":281,"line_end":281,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::try_stream::TryStreamExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":3345},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":280917,"byte_end":280970,"line_start":260,"line_end":260,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::Stream)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":280975,"byte_end":281011,"line_start":261,"line_end":261,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":281016,"byte_end":281019,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":281024,"byte_end":281073,"line_start":263,"line_end":263,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::Stream) trait because of limitations","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":281078,"byte_end":281143,"line_start":264,"line_end":264,"column_start":5,"column_end":70}},{"value":"/ of the compiler.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":281148,"byte_end":281168,"line_start":265,"line_end":265,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":281173,"byte_end":281176,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":281181,"byte_end":281195,"line_start":267,"line_end":267,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":281200,"byte_end":281203,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":281208,"byte_end":281215,"line_start":269,"line_end":269,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":281220,"byte_end":281279,"line_start":270,"line_end":270,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":281284,"byte_end":281287,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":281292,"byte_end":281311,"line_start":272,"line_end":272,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":281316,"byte_end":281334,"line_start":273,"line_end":273,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":281339,"byte_end":281411,"line_start":274,"line_end":274,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":281416,"byte_end":281446,"line_start":275,"line_end":275,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":281451,"byte_end":281458,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":281463,"byte_end":281537,"line_start":277,"line_end":277,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":281542,"byte_end":281545,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":281550,"byte_end":281599,"line_start":279,"line_end":279,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":281604,"byte_end":281611,"line_start":280,"line_end":280,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3365},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":282470,"byte_end":282478,"line_start":307,"line_end":307,"column_start":8,"column_end":16},"name":"try_next","qualname":"::try_stream::TryStreamExt::try_next","value":"pub fn try_next(&mut Self) -> TryNext<, Self> where Self: Unpin","parent":{"krate":0,"index":3345},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":281731,"byte_end":281805,"line_start":287,"line_end":287,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":281810,"byte_end":281884,"line_start":288,"line_end":288,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":281889,"byte_end":281901,"line_start":289,"line_end":289,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":281906,"byte_end":281909,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":281914,"byte_end":281981,"line_start":291,"line_end":291,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":281986,"byte_end":282058,"line_start":292,"line_end":292,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":282063,"byte_end":282102,"line_start":293,"line_end":293,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":282107,"byte_end":282110,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":282115,"byte_end":282129,"line_start":295,"line_end":295,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":282134,"byte_end":282137,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":282142,"byte_end":282149,"line_start":297,"line_end":297,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":282154,"byte_end":282195,"line_start":298,"line_end":298,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":282200,"byte_end":282246,"line_start":299,"line_end":299,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":282251,"byte_end":282254,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":282259,"byte_end":282316,"line_start":301,"line_end":301,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":282321,"byte_end":282324,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":282329,"byte_end":282383,"line_start":303,"line_end":303,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":282388,"byte_end":282437,"line_start":304,"line_end":304,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":282442,"byte_end":282450,"line_start":305,"line_end":305,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":282455,"byte_end":282462,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3366},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":283751,"byte_end":283763,"line_start":346,"line_end":346,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::try_stream::TryStreamExt::try_for_each","value":"pub fn try_for_each<Fut, F>(Self, F) -> TryForEach<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Ok = (), Error = ()>, Self: Sized","parent":{"krate":0,"index":3345},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":282582,"byte_end":282651,"line_start":313,"line_end":313,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":282656,"byte_end":282712,"line_start":314,"line_end":314,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":282717,"byte_end":282720,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":282725,"byte_end":282800,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":282805,"byte_end":282875,"line_start":317,"line_end":317,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":282880,"byte_end":282918,"line_start":318,"line_end":318,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":282923,"byte_end":282926,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::Future) where the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":282931,"byte_end":283001,"line_start":320,"line_end":320,"column_start":5,"column_end":75}},{"value":"/ [`Output`](futures_core::Future::Output) type is","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":283006,"byte_end":283058,"line_start":321,"line_end":321,"column_start":5,"column_end":57}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":283063,"byte_end":283120,"line_start":322,"line_end":322,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":283125,"byte_end":283192,"line_start":323,"line_end":323,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":283197,"byte_end":283227,"line_start":324,"line_end":324,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":283232,"byte_end":283235,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":283240,"byte_end":283254,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":283259,"byte_end":283262,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":283267,"byte_end":283274,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":283279,"byte_end":283320,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":283325,"byte_end":283349,"line_start":330,"line_end":330,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":283354,"byte_end":283400,"line_start":331,"line_end":331,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":283405,"byte_end":283408,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":283413,"byte_end":283434,"line_start":333,"line_end":333,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":283439,"byte_end":283442,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":283447,"byte_end":283452,"line_start":335,"line_end":335,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":283457,"byte_end":283518,"line_start":336,"line_end":336,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":283523,"byte_end":283545,"line_start":337,"line_end":337,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":283550,"byte_end":283614,"line_start":338,"line_end":338,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":283619,"byte_end":283630,"line_start":339,"line_end":339,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":283635,"byte_end":283674,"line_start":340,"line_end":340,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":283679,"byte_end":283684,"line_start":341,"line_end":341,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":283689,"byte_end":283692,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":283697,"byte_end":283718,"line_start":343,"line_end":343,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":283723,"byte_end":283731,"line_start":344,"line_end":344,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":283736,"byte_end":283743,"line_start":345,"line_end":345,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3369},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":284728,"byte_end":284742,"line_start":374,"line_end":374,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::try_stream::TryStreamExt::try_skip_while","value":"pub fn try_skip_while<Fut, F>(Self, F) -> TrySkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":3345},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":283987,"byte_end":284061,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":284066,"byte_end":284089,"line_start":355,"line_end":355,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":284094,"byte_end":284097,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ This function is similar to [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":284102,"byte_end":284197,"line_start":357,"line_end":357,"column_start":5,"column_end":100}},{"value":"/ but exits early if an error occurs.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":284202,"byte_end":284241,"line_start":358,"line_end":358,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":284246,"byte_end":284249,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":284254,"byte_end":284268,"line_start":360,"line_end":360,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":284273,"byte_end":284276,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":284281,"byte_end":284288,"line_start":362,"line_end":362,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":284293,"byte_end":284334,"line_start":363,"line_end":363,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":284339,"byte_end":284363,"line_start":364,"line_end":364,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":284368,"byte_end":284414,"line_start":365,"line_end":365,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":284419,"byte_end":284422,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":284427,"byte_end":284496,"line_start":367,"line_end":367,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":284501,"byte_end":284571,"line_start":368,"line_end":368,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":284576,"byte_end":284579,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":284584,"byte_end":284651,"line_start":370,"line_end":370,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":284656,"byte_end":284695,"line_start":371,"line_end":371,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":284700,"byte_end":284708,"line_start":372,"line_end":372,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":284713,"byte_end":284720,"line_start":373,"line_end":373,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3372},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":286703,"byte_end":286726,"line_start":428,"line_end":428,"column_start":8,"column_end":31},"name":"try_for_each_concurrent","qualname":"::try_stream::TryStreamExt::try_for_each_concurrent","value":"pub fn try_for_each_concurrent<Fut, F,\n                               impl Into<Option<usize>>: Into<Option<usize>>>(Self,\n                                                                              impl Into<Option<usize>>,\n                                                                              F)\n-> TryForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Ok) -> Fut,\nFut: Future<Output = Result<(), Self::Error>>, Self: Sized","parent":{"krate":0,"index":3345},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available, exiting as soon as an error occurs.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":284975,"byte_end":285057,"line_start":382,"line_end":382,"column_start":5,"column_end":87}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":285062,"byte_end":285136,"line_start":383,"line_end":383,"column_start":5,"column_end":79}},{"value":"/ available, exiting as soon as an error occurs.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":285141,"byte_end":285191,"line_start":384,"line_end":384,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":285196,"byte_end":285199,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ This is similar to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":285204,"byte_end":285226,"line_start":386,"line_end":386,"column_start":5,"column_end":27}},{"value":"/ [`StreamExt::for_each_concurrent`](super::StreamExt::for_each_concurrent),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":285231,"byte_end":285309,"line_start":387,"line_end":387,"column_start":5,"column_end":83}},{"value":"/ but will resolve to an error immediately if the underlying stream or the provided","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":285314,"byte_end":285399,"line_start":388,"line_end":388,"column_start":5,"column_end":90}},{"value":"/ closure return an error.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":285404,"byte_end":285432,"line_start":389,"line_end":389,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":285437,"byte_end":285440,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":285445,"byte_end":285520,"line_start":391,"line_end":391,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":285525,"byte_end":285582,"line_start":392,"line_end":392,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":285587,"byte_end":285590,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":285595,"byte_end":285609,"line_start":394,"line_end":394,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":285614,"byte_end":285617,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":285622,"byte_end":285629,"line_start":396,"line_end":396,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":285634,"byte_end":285675,"line_start":397,"line_end":397,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":285680,"byte_end":285714,"line_start":398,"line_end":398,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":285719,"byte_end":285776,"line_start":399,"line_end":399,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":285781,"byte_end":285784,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":285789,"byte_end":285829,"line_start":401,"line_end":401,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":285834,"byte_end":285874,"line_start":402,"line_end":402,"column_start":5,"column_end":45}},{"value":"/ let (_tx3, rx3) = oneshot::channel();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":285879,"byte_end":285920,"line_start":403,"line_end":403,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":285925,"byte_end":285928,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![rx1, rx2, rx3]);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":285933,"byte_end":285984,"line_start":405,"line_end":405,"column_start":5,"column_end":56}},{"value":"/ let fut = stream.map(Ok).try_for_each_concurrent(","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":285989,"byte_end":286042,"line_start":406,"line_end":406,"column_start":5,"column_end":58}},{"value":"/     /* limit */ 2,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":286047,"byte_end":286069,"line_start":407,"line_end":407,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":286074,"byte_end":286099,"line_start":408,"line_end":408,"column_start":5,"column_end":30}},{"value":"/         let res: Result<(), oneshot::Canceled> = rx.await;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":286104,"byte_end":286166,"line_start":409,"line_end":409,"column_start":5,"column_end":67}},{"value":"/         res","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":286171,"byte_end":286186,"line_start":410,"line_end":410,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":286191,"byte_end":286200,"line_start":411,"line_end":411,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":286205,"byte_end":286211,"line_start":412,"line_end":412,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":286216,"byte_end":286219,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":286224,"byte_end":286250,"line_start":414,"line_end":414,"column_start":5,"column_end":31}},{"value":"/ // Drop the second sender so that `rx2` resolves to `Canceled`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":286255,"byte_end":286322,"line_start":415,"line_end":415,"column_start":5,"column_end":72}},{"value":"/ drop(tx2);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":286327,"byte_end":286341,"line_start":416,"line_end":416,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":286346,"byte_end":286349,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ // The final result is an error because the second future","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":286354,"byte_end":286415,"line_start":418,"line_end":418,"column_start":5,"column_end":66}},{"value":"/ // resulted in an error.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":286420,"byte_end":286448,"line_start":419,"line_end":419,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Err(oneshot::Canceled), fut.await);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":286453,"byte_end":286503,"line_start":420,"line_end":420,"column_start":5,"column_end":55}},{"value":"/ # })","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":286508,"byte_end":286516,"line_start":421,"line_end":421,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":286521,"byte_end":286528,"line_start":422,"line_end":422,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":286670,"byte_end":286695,"line_start":427,"line_end":427,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3376},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":288099,"byte_end":288110,"line_start":470,"line_end":470,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::try_stream::TryStreamExt::try_collect","value":"pub fn try_collect<C: Default + Extend<Self::Ok>>(Self) -> TryCollect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":3345},"children":[],"decl_id":null,"docs":" Attempt to Collect all of the values of this stream into a vector,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to Collect all of the values of this stream into a vector,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":287052,"byte_end":287122,"line_start":440,"line_end":440,"column_start":5,"column_end":75}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":287127,"byte_end":287194,"line_start":441,"line_end":441,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":287199,"byte_end":287202,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":287207,"byte_end":287281,"line_start":443,"line_end":443,"column_start":5,"column_end":79}},{"value":"/ collect them into a `Vec<Self::Item>`. If an error happens then all","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":287286,"byte_end":287357,"line_start":444,"line_end":444,"column_start":5,"column_end":76}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":287362,"byte_end":287432,"line_start":445,"line_end":445,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":287437,"byte_end":287440,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":287445,"byte_end":287513,"line_start":447,"line_end":447,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":287518,"byte_end":287521,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":287526,"byte_end":287540,"line_start":449,"line_end":449,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":287545,"byte_end":287548,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":287553,"byte_end":287560,"line_start":451,"line_end":451,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":287565,"byte_end":287606,"line_start":452,"line_end":452,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":287611,"byte_end":287642,"line_start":453,"line_end":453,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":287647,"byte_end":287685,"line_start":454,"line_end":454,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":287690,"byte_end":287710,"line_start":455,"line_end":455,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":287715,"byte_end":287718,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":287723,"byte_end":287760,"line_start":457,"line_end":457,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":287765,"byte_end":287768,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":287773,"byte_end":287800,"line_start":459,"line_end":459,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":287805,"byte_end":287829,"line_start":460,"line_end":460,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":287834,"byte_end":287880,"line_start":461,"line_end":461,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":287885,"byte_end":287894,"line_start":462,"line_end":462,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":287899,"byte_end":287942,"line_start":463,"line_end":463,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":287947,"byte_end":287954,"line_start":464,"line_end":464,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":287959,"byte_end":287962,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":287967,"byte_end":288030,"line_start":466,"line_end":466,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":288035,"byte_end":288066,"line_start":467,"line_end":467,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":288071,"byte_end":288079,"line_start":468,"line_end":468,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":288084,"byte_end":288091,"line_start":469,"line_end":469,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3378},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":289532,"byte_end":289542,"line_start":506,"line_end":506,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::try_stream::TryStreamExt::try_filter","value":"pub fn try_filter<Fut, F>(Self, F) -> TryFilter<Self, Fut, F> where\nFut: Future<Output = bool>, F: FnMut(&Self::Ok) -> Fut, Self: Sized","parent":{"krate":0,"index":3345},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":288244,"byte_end":288317,"line_start":476,"line_end":476,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":288322,"byte_end":288356,"line_start":477,"line_end":477,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":288361,"byte_end":288364,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":288369,"byte_end":288444,"line_start":479,"line_end":479,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":288449,"byte_end":288524,"line_start":480,"line_end":480,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":288529,"byte_end":288602,"line_start":481,"line_end":481,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":288607,"byte_end":288678,"line_start":482,"line_end":482,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":288683,"byte_end":288733,"line_start":483,"line_end":483,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":288738,"byte_end":288741,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":288746,"byte_end":288817,"line_start":485,"line_end":485,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":288822,"byte_end":288825,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":288830,"byte_end":288906,"line_start":487,"line_end":487,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":288911,"byte_end":288981,"line_start":488,"line_end":488,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":288986,"byte_end":289011,"line_start":489,"line_end":489,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":289016,"byte_end":289019,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":289024,"byte_end":289038,"line_start":491,"line_end":491,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":289043,"byte_end":289050,"line_start":492,"line_end":492,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":289055,"byte_end":289096,"line_start":493,"line_end":493,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":289101,"byte_end":289125,"line_start":494,"line_end":494,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":289130,"byte_end":289187,"line_start":495,"line_end":495,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":289192,"byte_end":289195,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":289200,"byte_end":289280,"line_start":497,"line_end":497,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":289285,"byte_end":289328,"line_start":498,"line_end":498,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":289333,"byte_end":289366,"line_start":499,"line_end":499,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":289371,"byte_end":289378,"line_start":500,"line_end":500,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":289383,"byte_end":289386,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":289391,"byte_end":289439,"line_start":502,"line_end":502,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":289444,"byte_end":289499,"line_start":503,"line_end":503,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":289504,"byte_end":289512,"line_start":504,"line_end":504,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":289517,"byte_end":289524,"line_start":505,"line_end":505,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3381},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":291125,"byte_end":291139,"line_start":546,"line_end":546,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::try_stream::TryStreamExt::try_filter_map","value":"pub fn try_filter_map<Fut, F, T>(Self, F) -> TryFilterMap<Self, Fut, F> where\nFut: TryFuture<Ok = Option<T>, Error = Option<T>>, F: FnMut(Self::Ok) -> Fut,\nSelf: Sized","parent":{"krate":0,"index":3345},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":289749,"byte_end":289811,"line_start":514,"line_end":514,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":289816,"byte_end":289884,"line_start":515,"line_end":515,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":289889,"byte_end":289923,"line_start":516,"line_end":516,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":289928,"byte_end":289931,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":289936,"byte_end":290011,"line_start":518,"line_end":518,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":290016,"byte_end":290091,"line_start":519,"line_end":519,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":290096,"byte_end":290172,"line_start":520,"line_end":520,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":290177,"byte_end":290242,"line_start":521,"line_end":521,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":290247,"byte_end":290250,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":290255,"byte_end":290326,"line_start":523,"line_end":523,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":290331,"byte_end":290334,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":290339,"byte_end":290415,"line_start":525,"line_end":525,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":290420,"byte_end":290494,"line_start":526,"line_end":526,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":290499,"byte_end":290524,"line_start":527,"line_end":527,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":290529,"byte_end":290532,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":290537,"byte_end":290551,"line_start":529,"line_end":529,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":290556,"byte_end":290563,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":290568,"byte_end":290609,"line_start":531,"line_end":531,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":290614,"byte_end":290671,"line_start":532,"line_end":532,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":290676,"byte_end":290701,"line_start":533,"line_end":533,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":290706,"byte_end":290709,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":290714,"byte_end":290784,"line_start":535,"line_end":535,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":290789,"byte_end":290844,"line_start":536,"line_end":536,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":290849,"byte_end":290911,"line_start":537,"line_end":537,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":290916,"byte_end":290931,"line_start":538,"line_end":538,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":290936,"byte_end":290943,"line_start":539,"line_end":539,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":290948,"byte_end":290951,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":290956,"byte_end":290977,"line_start":541,"line_end":541,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":290982,"byte_end":291031,"line_start":542,"line_end":542,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":291036,"byte_end":291092,"line_start":543,"line_end":543,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":291097,"byte_end":291105,"line_start":544,"line_end":544,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":291110,"byte_end":291117,"line_start":545,"line_end":545,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3385},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":292794,"byte_end":292805,"line_start":592,"line_end":592,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::try_stream::TryStreamExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self> where Self::Ok: TryStream,\n<Self::Ok as TryStream>::Error: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":3345},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":291379,"byte_end":291444,"line_start":554,"line_end":554,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":291449,"byte_end":291452,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":291457,"byte_end":291530,"line_start":556,"line_end":556,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":291535,"byte_end":291608,"line_start":557,"line_end":557,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":291613,"byte_end":291686,"line_start":558,"line_end":558,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":291691,"byte_end":291761,"line_start":559,"line_end":559,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":291766,"byte_end":291769,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":291774,"byte_end":291788,"line_start":561,"line_end":561,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":291793,"byte_end":291796,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":291801,"byte_end":291808,"line_start":563,"line_end":563,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":291813,"byte_end":291854,"line_start":564,"line_end":564,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":291859,"byte_end":291890,"line_start":565,"line_end":565,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":291895,"byte_end":291946,"line_start":566,"line_end":566,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":291951,"byte_end":291971,"line_start":567,"line_end":567,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":291976,"byte_end":291979,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":291984,"byte_end":292023,"line_start":569,"line_end":569,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":292028,"byte_end":292067,"line_start":570,"line_end":570,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":292072,"byte_end":292111,"line_start":571,"line_end":571,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":292116,"byte_end":292119,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":292124,"byte_end":292151,"line_start":573,"line_end":573,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":292156,"byte_end":292199,"line_start":574,"line_end":574,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":292204,"byte_end":292211,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":292216,"byte_end":292243,"line_start":576,"line_end":576,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":292248,"byte_end":292291,"line_start":577,"line_end":577,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":292296,"byte_end":292340,"line_start":578,"line_end":578,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":292345,"byte_end":292352,"line_start":579,"line_end":579,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":292357,"byte_end":292384,"line_start":580,"line_end":580,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":292389,"byte_end":292434,"line_start":581,"line_end":581,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":292439,"byte_end":292484,"line_start":582,"line_end":582,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(4)).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":292489,"byte_end":292533,"line_start":583,"line_end":583,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":292538,"byte_end":292545,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":292550,"byte_end":292553,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":292558,"byte_end":292597,"line_start":586,"line_end":586,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":292602,"byte_end":292651,"line_start":587,"line_end":587,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":292656,"byte_end":292705,"line_start":588,"line_end":588,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":292710,"byte_end":292760,"line_start":589,"line_end":589,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":292765,"byte_end":292774,"line_start":590,"line_end":590,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":292779,"byte_end":292786,"line_start":591,"line_end":591,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3386},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":294285,"byte_end":294293,"line_start":628,"line_end":628,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::try_stream::TryStreamExt::try_fold","value":"pub fn try_fold<T, Fut, F>(Self, T, F) -> TryFold<Self, Fut, T, F> where\nF: FnMut(T, Self::Ok) -> Fut, Fut: TryFuture<Ok = T, Error = T>, Self: Sized","parent":{"krate":0,"index":3345},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":293006,"byte_end":293076,"line_start":600,"line_end":600,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":293081,"byte_end":293141,"line_start":601,"line_end":601,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":293146,"byte_end":293149,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":293154,"byte_end":293224,"line_start":603,"line_end":603,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":293229,"byte_end":293305,"line_start":604,"line_end":604,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":293310,"byte_end":293386,"line_start":605,"line_end":605,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":293391,"byte_end":293461,"line_start":606,"line_end":606,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":293466,"byte_end":293492,"line_start":607,"line_end":607,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":293497,"byte_end":293500,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](super::StreamExt::fold), but will","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":293505,"byte_end":293577,"line_start":609,"line_end":609,"column_start":5,"column_end":77}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":293582,"byte_end":293651,"line_start":610,"line_end":610,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":293656,"byte_end":293677,"line_start":611,"line_end":611,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":293682,"byte_end":293685,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":293690,"byte_end":293704,"line_start":613,"line_end":613,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":293709,"byte_end":293712,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":293717,"byte_end":293724,"line_start":615,"line_end":615,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":293729,"byte_end":293770,"line_start":616,"line_end":616,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":293775,"byte_end":293821,"line_start":617,"line_end":617,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":293826,"byte_end":293829,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":293834,"byte_end":293903,"line_start":619,"line_end":619,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":293908,"byte_end":293985,"line_start":620,"line_end":620,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":293990,"byte_end":294023,"line_start":621,"line_end":621,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":294028,"byte_end":294031,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":294036,"byte_end":294122,"line_start":623,"line_end":623,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":294127,"byte_end":294213,"line_start":624,"line_end":624,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":294218,"byte_end":294252,"line_start":625,"line_end":625,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":294257,"byte_end":294265,"line_start":626,"line_end":626,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":294270,"byte_end":294277,"line_start":627,"line_end":627,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3390},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":295775,"byte_end":295785,"line_start":670,"line_end":670,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::try_stream::TryStreamExt::try_concat","value":"pub fn try_concat(Self) -> TryConcat<Self> where Self: Sized,\nSelf::Ok: Extend<<<Self as TryStream>::Ok as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":3345},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":294537,"byte_end":294599,"line_start":636,"line_end":636,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":294604,"byte_end":294679,"line_start":637,"line_end":637,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":294684,"byte_end":294687,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":294692,"byte_end":294763,"line_start":639,"line_end":639,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":294768,"byte_end":294844,"line_start":640,"line_end":640,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":294849,"byte_end":294888,"line_start":641,"line_end":641,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":294893,"byte_end":294896,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":294901,"byte_end":294987,"line_start":643,"line_end":643,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":294992,"byte_end":294995,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](super::StreamExt::concat), but will","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":295000,"byte_end":295076,"line_start":645,"line_end":645,"column_start":5,"column_end":81}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":295081,"byte_end":295137,"line_start":646,"line_end":646,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":295142,"byte_end":295145,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":295150,"byte_end":295164,"line_start":648,"line_end":648,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":295169,"byte_end":295172,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":295177,"byte_end":295184,"line_start":650,"line_end":650,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":295189,"byte_end":295230,"line_start":651,"line_end":651,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":295235,"byte_end":295266,"line_start":652,"line_end":652,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":295271,"byte_end":295309,"line_start":653,"line_end":653,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":295314,"byte_end":295334,"line_start":654,"line_end":654,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":295339,"byte_end":295342,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":295347,"byte_end":295408,"line_start":656,"line_end":656,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":295413,"byte_end":295416,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":295421,"byte_end":295448,"line_start":658,"line_end":658,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":295453,"byte_end":295484,"line_start":659,"line_end":659,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":295489,"byte_end":295515,"line_start":660,"line_end":660,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":295520,"byte_end":295590,"line_start":661,"line_end":661,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":295595,"byte_end":295604,"line_start":662,"line_end":662,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":295609,"byte_end":295616,"line_start":663,"line_end":663,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":295621,"byte_end":295624,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":295629,"byte_end":295668,"line_start":665,"line_end":665,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":295673,"byte_end":295676,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":295681,"byte_end":295741,"line_start":667,"line_end":667,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":295746,"byte_end":295755,"line_start":668,"line_end":668,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":295760,"byte_end":295767,"line_start":669,"line_end":669,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3391},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":298556,"byte_end":298576,"line_start":740,"line_end":740,"column_start":8,"column_end":28},"name":"try_buffer_unordered","qualname":"::try_stream::TryStreamExt::try_buffer_unordered","value":"pub fn try_buffer_unordered(Self, usize) -> TryBufferUnordered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":3345},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently.","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":296002,"byte_end":296068,"line_start":678,"line_end":678,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":296073,"byte_end":296076,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":296081,"byte_end":296186,"line_start":680,"line_end":680,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":296191,"byte_end":296234,"line_start":681,"line_end":681,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":296239,"byte_end":296242,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":296247,"byte_end":296315,"line_start":683,"line_end":683,"column_start":5,"column_end":73}},{"value":"/ outputs in the order in which they complete. If the underlying stream","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":296320,"byte_end":296393,"line_start":684,"line_end":684,"column_start":5,"column_end":78}},{"value":"/ returns an error, it will be immediately propagated.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":296398,"byte_end":296454,"line_start":685,"line_end":685,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":296459,"byte_end":296462,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":296467,"byte_end":296542,"line_start":687,"line_end":687,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":296547,"byte_end":296620,"line_start":688,"line_end":688,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":296625,"byte_end":296690,"line_start":689,"line_end":689,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":296695,"byte_end":296698,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":296703,"byte_end":296778,"line_start":691,"line_end":691,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":296783,"byte_end":296840,"line_start":692,"line_end":692,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":296845,"byte_end":296848,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":296853,"byte_end":296867,"line_start":694,"line_end":694,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":296872,"byte_end":296875,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of completion:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":296880,"byte_end":296932,"line_start":696,"line_end":696,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":296937,"byte_end":296944,"line_start":697,"line_end":697,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":296949,"byte_end":296990,"line_start":698,"line_end":698,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":296995,"byte_end":297029,"line_start":699,"line_end":699,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":297034,"byte_end":297091,"line_start":700,"line_end":700,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":297096,"byte_end":297099,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":297104,"byte_end":297154,"line_start":702,"line_end":702,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":297159,"byte_end":297209,"line_start":703,"line_end":703,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":297214,"byte_end":297217,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":297222,"byte_end":297297,"line_start":705,"line_end":705,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":297302,"byte_end":297305,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":297310,"byte_end":297376,"line_start":707,"line_end":707,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":297381,"byte_end":297384,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":297389,"byte_end":297414,"line_start":709,"line_end":709,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":297419,"byte_end":297473,"line_start":710,"line_end":710,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":297478,"byte_end":297481,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":297486,"byte_end":297511,"line_start":712,"line_end":712,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":297516,"byte_end":297570,"line_start":713,"line_end":713,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":297575,"byte_end":297578,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":297583,"byte_end":297627,"line_start":715,"line_end":715,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":297632,"byte_end":297668,"line_start":716,"line_end":716,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":297673,"byte_end":297680,"line_start":717,"line_end":717,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":297685,"byte_end":297688,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":297693,"byte_end":297753,"line_start":719,"line_end":719,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":297758,"byte_end":297765,"line_start":720,"line_end":720,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":297770,"byte_end":297811,"line_start":721,"line_end":721,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":297816,"byte_end":297847,"line_start":722,"line_end":722,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":297852,"byte_end":297903,"line_start":723,"line_end":723,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":297908,"byte_end":297911,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":297916,"byte_end":297970,"line_start":725,"line_end":725,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":297975,"byte_end":298041,"line_start":726,"line_end":726,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":298046,"byte_end":298049,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":298054,"byte_end":298103,"line_start":728,"line_end":728,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":298108,"byte_end":298162,"line_start":729,"line_end":729,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":298167,"byte_end":298170,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":298175,"byte_end":298228,"line_start":731,"line_end":731,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":298233,"byte_end":298305,"line_start":732,"line_end":732,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":298310,"byte_end":298369,"line_start":733,"line_end":733,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":298374,"byte_end":298381,"line_start":734,"line_end":734,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":298523,"byte_end":298548,"line_start":739,"line_end":739,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3392},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":298953,"byte_end":298972,"line_start":751,"line_end":751,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::try_stream::TryStreamExt::try_poll_next_unpin","value":"pub fn try_poll_next_unpin(&mut Self, &mut Context)\n-> Poll<Option<Result<Self::Ok, Self::Error>>> where Self: Unpin","parent":{"krate":0,"index":3345},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":298845,"byte_end":298923,"line_start":749,"line_end":749,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":298928,"byte_end":298945,"line_start":750,"line_end":750,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":3394},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":5265},{"krate":0,"index":5270},{"krate":0,"index":5271},{"krate":0,"index":5293},{"krate":0,"index":5294},{"krate":0,"index":5314},{"krate":0,"index":5315},{"krate":0,"index":5316},{"krate":0,"index":5317},{"krate":0,"index":3395},{"krate":0,"index":3409},{"krate":0,"index":3410},{"krate":0,"index":3411},{"krate":0,"index":3438},{"krate":0,"index":3439},{"krate":0,"index":3440},{"krate":0,"index":3441},{"krate":0,"index":3442},{"krate":0,"index":3443},{"krate":0,"index":3444},{"krate":0,"index":3445},{"krate":0,"index":3446}],"decl_id":null,"docs":" Task notification\n","sig":null,"attributes":[{"value":"! Task notification","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/mod.rs","byte_start":353902,"byte_end":353923,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":5267},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7951529,"byte_end":7951536,"line_start":20,"line_end":20,"column_start":11,"column_end":18},"name":"ArcWake","qualname":"::task::arc_wake::ArcWake","value":"ArcWake: Send + Sync","parent":null,"children":[{"krate":0,"index":5268},{"krate":0,"index":5269}],"decl_id":null,"docs":" A way of waking up a specific task.","sig":null,"attributes":[{"value":"/ A way of waking up a specific task.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7950738,"byte_end":7950777,"line_start":3,"line_end":3,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7950778,"byte_end":7950781,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ By implementing this trait, types that are expected to be wrapped in an `Arc`","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7950782,"byte_end":7950863,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/ can be converted into [`Waker`] objects.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7950864,"byte_end":7950908,"line_start":6,"line_end":6,"column_start":1,"column_end":45}},{"value":"/ Those Wakers can be used to signal executors that a task it owns","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7950909,"byte_end":7950977,"line_start":7,"line_end":7,"column_start":1,"column_end":69}},{"value":"/ is ready to be `poll`ed again.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7950978,"byte_end":7951012,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7951013,"byte_end":7951016,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Currently, there are two ways to convert `ArcWake` into [`Waker`]:","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7951017,"byte_end":7951087,"line_start":10,"line_end":10,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7951088,"byte_end":7951091,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ * [`waker`](crate::task::waker()) converts `Arc<impl ArcWake>` into [`Waker`].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7951092,"byte_end":7951174,"line_start":12,"line_end":12,"column_start":1,"column_end":83}},{"value":"/ * [`waker_ref`](crate::task::waker_ref()) converts `&Arc<impl ArcWake>` into [`WakerRef`] that","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7951175,"byte_end":7951273,"line_start":13,"line_end":13,"column_start":1,"column_end":99}},{"value":"/   provides access to a [`&Waker`][`Waker`].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7951274,"byte_end":7951321,"line_start":14,"line_end":14,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7951322,"byte_end":7951325,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`Waker`]: std::task::Waker","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7951326,"byte_end":7951357,"line_start":16,"line_end":16,"column_start":1,"column_end":32}},{"value":"/ [`WakerRef`]: crate::task::WakerRef","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7951358,"byte_end":7951397,"line_start":17,"line_end":17,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":5268},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7951988,"byte_end":7951992,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"wake","qualname":"::task::arc_wake::ArcWake::wake","value":"pub fn wake(Arc<Self>)","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":" Indicates that the associated task is ready to make progress and should\n be `poll`ed.","sig":null,"attributes":[{"value":"/ Indicates that the associated task is ready to make progress and should","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7951556,"byte_end":7951631,"line_start":21,"line_end":21,"column_start":5,"column_end":80}},{"value":"/ be `poll`ed.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7951636,"byte_end":7951652,"line_start":22,"line_end":22,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7951657,"byte_end":7951660,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This function can be called from an arbitrary thread, including threads which","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7951665,"byte_end":7951746,"line_start":24,"line_end":24,"column_start":5,"column_end":86}},{"value":"/ did not create the `ArcWake` based [`Waker`].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7951751,"byte_end":7951800,"line_start":25,"line_end":25,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7951805,"byte_end":7951808,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ Executors generally maintain a queue of \"ready\" tasks; `wake` should place","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7951813,"byte_end":7951891,"line_start":27,"line_end":27,"column_start":5,"column_end":83}},{"value":"/ the associated task onto this queue.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7951896,"byte_end":7951936,"line_start":28,"line_end":28,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7951941,"byte_end":7951944,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ [`Waker`]: std::task::Waker","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7951949,"byte_end":7951980,"line_start":30,"line_end":30,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":5269},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7952620,"byte_end":7952631,"line_start":48,"line_end":48,"column_start":8,"column_end":19},"name":"wake_by_ref","qualname":"::task::arc_wake::ArcWake::wake_by_ref","value":"pub fn wake_by_ref(&Arc<Self>)","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":" Indicates that the associated task is ready to make progress and should\n be `poll`ed.","sig":null,"attributes":[{"value":"/ Indicates that the associated task is ready to make progress and should","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7952056,"byte_end":7952131,"line_start":35,"line_end":35,"column_start":5,"column_end":80}},{"value":"/ be `poll`ed.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7952136,"byte_end":7952152,"line_start":36,"line_end":36,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7952157,"byte_end":7952160,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ This function can be called from an arbitrary thread, including threads which","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7952165,"byte_end":7952246,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/ did not create the `ArcWake` based [`Waker`].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7952251,"byte_end":7952300,"line_start":39,"line_end":39,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7952305,"byte_end":7952308,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Executors generally maintain a queue of \"ready\" tasks; `wake_by_ref` should place","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7952313,"byte_end":7952398,"line_start":41,"line_end":41,"column_start":5,"column_end":90}},{"value":"/ the associated task onto this queue.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7952403,"byte_end":7952443,"line_start":42,"line_end":42,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7952448,"byte_end":7952451,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This function is similar to [`wake`](ArcWake::wake), but must not consume the provided data","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7952456,"byte_end":7952551,"line_start":44,"line_end":44,"column_start":5,"column_end":100}},{"value":"/ pointer.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7952556,"byte_end":7952568,"line_start":45,"line_end":45,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7952573,"byte_end":7952576,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ [`Waker`]: std::task::Waker","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7952581,"byte_end":7952612,"line_start":47,"line_end":47,"column_start":5,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":5281},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/waker.rs","byte_start":7953148,"byte_end":7953153,"line_start":19,"line_end":19,"column_start":8,"column_end":13},"name":"waker","qualname":"::task::waker::waker","value":"pub fn waker<W>(Arc<W>) -> Waker where W: ArcWake","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`Waker`] from an `Arc<impl ArcWake>`.","sig":null,"attributes":[{"value":"/ Creates a [`Waker`] from an `Arc<impl ArcWake>`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/waker.rs","byte_start":7952998,"byte_end":7953050,"line_start":15,"line_end":15,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/waker.rs","byte_start":7953051,"byte_end":7953054,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The returned [`Waker`] will call","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/waker.rs","byte_start":7953055,"byte_end":7953091,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ [`ArcWake.wake()`](ArcWake::wake) if awoken.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/waker.rs","byte_start":7953092,"byte_end":7953140,"line_start":18,"line_end":18,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":5318},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/waker_ref.rs","byte_start":7954891,"byte_end":7954899,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"WakerRef","qualname":"::task::waker_ref::WakerRef","value":"WakerRef {  }","parent":null,"children":[{"krate":0,"index":5320},{"krate":0,"index":5321}],"decl_id":null,"docs":" A [`Waker`] that is only valid for a given lifetime.","sig":null,"attributes":[{"value":"/ A [`Waker`] that is only valid for a given lifetime.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/waker_ref.rs","byte_start":7954686,"byte_end":7954742,"line_start":9,"line_end":9,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/waker_ref.rs","byte_start":7954743,"byte_end":7954746,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Note: this type implements [`Deref<Target = Waker>`](std::ops::Deref),","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/waker_ref.rs","byte_start":7954747,"byte_end":7954821,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ so it can be used to get a `&Waker`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/waker_ref.rs","byte_start":7954822,"byte_end":7954862,"line_start":12,"line_end":12,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":5307},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/waker_ref.rs","byte_start":7955072,"byte_end":7955075,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"new","qualname":"<WakerRef>::new","value":"pub fn new(&'a Waker) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`WakerRef`] from a [`Waker`] reference.\n","sig":null,"attributes":[{"value":"/ Create a new [`WakerRef`] from a [`Waker`] reference.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/waker_ref.rs","byte_start":7955003,"byte_end":7955060,"line_start":20,"line_end":20,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5308},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/waker_ref.rs","byte_start":7955727,"byte_end":7955738,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"name":"new_unowned","qualname":"<WakerRef>::new_unowned","value":"pub fn new_unowned(ManuallyDrop<Waker>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`WakerRef`] from a [`Waker`] that must not be dropped.","sig":null,"attributes":[{"value":"/ Create a new [`WakerRef`] from a [`Waker`] that must not be dropped.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/waker_ref.rs","byte_start":7955387,"byte_end":7955459,"line_start":31,"line_end":31,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/waker_ref.rs","byte_start":7955464,"byte_end":7955467,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ Note: this if for rare cases where the caller created a [`Waker`] in","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/waker_ref.rs","byte_start":7955472,"byte_end":7955544,"line_start":33,"line_end":33,"column_start":5,"column_end":77}},{"value":"/ an unsafe way (that will be valid only for a lifetime to be determined","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/waker_ref.rs","byte_start":7955549,"byte_end":7955623,"line_start":34,"line_end":34,"column_start":5,"column_end":79}},{"value":"/ by the caller), and the [`Waker`] doesn't need to or must not be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/waker_ref.rs","byte_start":7955628,"byte_end":7955696,"line_start":35,"line_end":35,"column_start":5,"column_end":73}},{"value":"/ destroyed.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/waker_ref.rs","byte_start":7955701,"byte_end":7955715,"line_start":36,"line_end":36,"column_start":5,"column_end":19}}]},{"kind":"Function","id":{"krate":0,"index":5312},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/waker_ref.rs","byte_start":7956173,"byte_end":7956182,"line_start":58,"line_end":58,"column_start":8,"column_end":17},"name":"waker_ref","qualname":"::task::waker_ref::waker_ref","value":"pub fn waker_ref<W>(&Arc<W>) -> WakerRef where W: ArcWake","parent":null,"children":[],"decl_id":null,"docs":" Creates a reference to a [`Waker`] from a reference to `Arc<impl ArcWake>`.","sig":null,"attributes":[{"value":"/ Creates a reference to a [`Waker`] from a reference to `Arc<impl ArcWake>`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/waker_ref.rs","byte_start":7955985,"byte_end":7956064,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/waker_ref.rs","byte_start":7956065,"byte_end":7956068,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The resulting [`Waker`] will call","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/waker_ref.rs","byte_start":7956069,"byte_end":7956106,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/ [`ArcWake.wake()`](ArcWake::wake) if awoken.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/waker_ref.rs","byte_start":7956107,"byte_end":7956155,"line_start":56,"line_end":56,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/waker_ref.rs","byte_start":7956156,"byte_end":7956165,"line_start":57,"line_end":57,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":3406},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/noop_waker.rs","byte_start":355338,"byte_end":355348,"line_start":30,"line_end":30,"column_start":8,"column_end":18},"name":"noop_waker","qualname":"::task::noop_waker::noop_waker","value":"pub fn noop_waker() -> Waker","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Waker`] which does\n nothing when `wake()` is called on it.","sig":null,"attributes":[{"value":"/ Create a new [`Waker`] which does","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/noop_waker.rs","byte_start":355118,"byte_end":355155,"line_start":19,"line_end":19,"column_start":1,"column_end":38}},{"value":"/ nothing when `wake()` is called on it.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/noop_waker.rs","byte_start":355156,"byte_end":355198,"line_start":20,"line_end":20,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/noop_waker.rs","byte_start":355199,"byte_end":355202,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/noop_waker.rs","byte_start":355203,"byte_end":355217,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/noop_waker.rs","byte_start":355218,"byte_end":355221,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/noop_waker.rs","byte_start":355222,"byte_end":355229,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use futures::task::noop_waker;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/noop_waker.rs","byte_start":355230,"byte_end":355264,"line_start":25,"line_end":25,"column_start":1,"column_end":35}},{"value":"/ let waker = noop_waker();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/noop_waker.rs","byte_start":355265,"byte_end":355294,"line_start":26,"line_end":26,"column_start":1,"column_end":30}},{"value":"/ waker.wake();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/noop_waker.rs","byte_start":355295,"byte_end":355312,"line_start":27,"line_end":27,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/noop_waker.rs","byte_start":355313,"byte_end":355320,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/noop_waker.rs","byte_start":355321,"byte_end":355330,"line_start":29,"line_end":29,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":3407},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/noop_waker.rs","byte_start":355700,"byte_end":355714,"line_start":48,"line_end":48,"column_start":8,"column_end":22},"name":"noop_waker_ref","qualname":"::task::noop_waker::noop_waker_ref","value":"pub fn noop_waker_ref() -> &'static Waker","parent":null,"children":[],"decl_id":null,"docs":" Get a static reference to a [`Waker`] which\n does nothing when `wake()` is called on it.","sig":null,"attributes":[{"value":"/ Get a static reference to a [`Waker`] which","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/noop_waker.rs","byte_start":355426,"byte_end":355473,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ does nothing when `wake()` is called on it.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/noop_waker.rs","byte_start":355474,"byte_end":355521,"line_start":37,"line_end":37,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/noop_waker.rs","byte_start":355522,"byte_end":355525,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/noop_waker.rs","byte_start":355526,"byte_end":355540,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/noop_waker.rs","byte_start":355541,"byte_end":355544,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/noop_waker.rs","byte_start":355545,"byte_end":355552,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use futures::task::noop_waker_ref;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/noop_waker.rs","byte_start":355553,"byte_end":355591,"line_start":42,"line_end":42,"column_start":1,"column_end":39}},{"value":"/ let waker = noop_waker_ref();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/noop_waker.rs","byte_start":355592,"byte_end":355625,"line_start":43,"line_end":43,"column_start":1,"column_end":34}},{"value":"/ waker.wake_by_ref();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/noop_waker.rs","byte_start":355626,"byte_end":355650,"line_start":44,"line_end":44,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/noop_waker.rs","byte_start":355651,"byte_end":355658,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/noop_waker.rs","byte_start":355659,"byte_end":355668,"line_start":46,"line_end":46,"column_start":1,"column_end":10}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/noop_waker.rs","byte_start":355669,"byte_end":355692,"line_start":47,"line_end":47,"column_start":1,"column_end":24}}]},{"kind":"Trait","id":{"krate":0,"index":3428},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":356478,"byte_end":356486,"line_start":19,"line_end":19,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[{"krate":0,"index":3429},{"krate":0,"index":3431}],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":356435,"byte_end":356467,"line_start":18,"line_end":18,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3429},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":357487,"byte_end":357492,"line_start":45,"line_end":45,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::SpawnExt::spawn","value":"pub fn spawn<Fut>(&mut Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + Send + 'static","parent":{"krate":0,"index":3428},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":356500,"byte_end":356565,"line_start":20,"line_end":20,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":356570,"byte_end":356585,"line_start":21,"line_end":21,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":356590,"byte_end":356593,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":356598,"byte_end":356668,"line_start":23,"line_end":23,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":356673,"byte_end":356692,"line_start":24,"line_end":24,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":356697,"byte_end":356700,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":356705,"byte_end":356774,"line_start":26,"line_end":26,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":356779,"byte_end":356852,"line_start":27,"line_end":27,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":356857,"byte_end":356896,"line_start":28,"line_end":28,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":356901,"byte_end":356904,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":356909,"byte_end":356975,"line_start":30,"line_end":30,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":356980,"byte_end":357046,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":357051,"byte_end":357122,"line_start":32,"line_end":32,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":357127,"byte_end":357183,"line_start":33,"line_end":33,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":357188,"byte_end":357191,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":357196,"byte_end":357203,"line_start":35,"line_end":35,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::ThreadPool;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":357208,"byte_end":357246,"line_start":36,"line_end":36,"column_start":5,"column_end":43}},{"value":"/ use futures::task::SpawnExt;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":357251,"byte_end":357283,"line_start":37,"line_end":37,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":357288,"byte_end":357291,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let mut executor = ThreadPool::new().unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":357296,"byte_end":357346,"line_start":39,"line_end":39,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":357351,"byte_end":357354,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":357359,"byte_end":357396,"line_start":41,"line_end":41,"column_start":5,"column_end":42}},{"value":"/ executor.spawn(future).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":357401,"byte_end":357437,"line_start":42,"line_end":42,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":357442,"byte_end":357449,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":357454,"byte_end":357479,"line_start":44,"line_end":44,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3431},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":358543,"byte_end":358560,"line_start":72,"line_end":72,"column_start":8,"column_end":25},"name":"spawn_with_handle","qualname":"::task::spawn::SpawnExt::spawn_with_handle","value":"pub fn spawn_with_handle<Fut>(&mut Self, Fut)\n-> Result<RemoteHandle<Fut::Output>, SpawnError> where Fut: Future + Send +\n'static, Fut::Output: Send","parent":{"krate":0,"index":3428},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future to completion and returns a\n future that resolves to the spawned future's output.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future to completion and returns a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":357683,"byte_end":357756,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ future that resolves to the spawned future's output.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":357761,"byte_end":357817,"line_start":53,"line_end":53,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":357822,"byte_end":357825,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`RemoteHandle`](crate::future::RemoteHandle), or, if","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":357830,"byte_end":357936,"line_start":55,"line_end":55,"column_start":5,"column_end":111}},{"value":"/ spawning fails, a [`SpawnError`]. [`RemoteHandle`](crate::future::RemoteHandle) is a future that","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":357941,"byte_end":358041,"line_start":56,"line_end":56,"column_start":5,"column_end":105}},{"value":"/ resolves to the output of the spawned future.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":358046,"byte_end":358095,"line_start":57,"line_end":57,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":358100,"byte_end":358103,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":358108,"byte_end":358115,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::ThreadPool;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":358120,"byte_end":358158,"line_start":60,"line_end":60,"column_start":5,"column_end":43}},{"value":"/ use futures::future;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":358163,"byte_end":358187,"line_start":61,"line_end":61,"column_start":5,"column_end":29}},{"value":"/ use futures::task::SpawnExt;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":358192,"byte_end":358224,"line_start":62,"line_end":62,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":358229,"byte_end":358232,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ let mut executor = ThreadPool::new().unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":358237,"byte_end":358287,"line_start":64,"line_end":64,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":358292,"byte_end":358295,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ let future = future::ready(1);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":358300,"byte_end":358334,"line_start":66,"line_end":66,"column_start":5,"column_end":39}},{"value":"/ let join_handle_fut = executor.spawn_with_handle(future).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":358339,"byte_end":358409,"line_start":67,"line_end":67,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(executor.run(join_handle_fut), 1);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":358414,"byte_end":358463,"line_start":68,"line_end":68,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":358468,"byte_end":358475,"line_start":69,"line_end":69,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"channel\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":358480,"byte_end":358507,"line_start":70,"line_end":70,"column_start":5,"column_end":32}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":358512,"byte_end":358535,"line_start":71,"line_end":71,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":3433},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":359159,"byte_end":359172,"line_start":96,"line_end":96,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[{"krate":0,"index":3434},{"krate":0,"index":3436}],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":359111,"byte_end":359148,"line_start":95,"line_end":95,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3434},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":360219,"byte_end":360230,"line_start":123,"line_end":123,"column_start":8,"column_end":19},"name":"spawn_local","qualname":"::task::spawn::LocalSpawnExt::spawn_local","value":"pub fn spawn_local<Fut>(&mut Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + 'static","parent":{"krate":0,"index":3433},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":359191,"byte_end":359256,"line_start":97,"line_end":97,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":359261,"byte_end":359276,"line_start":98,"line_end":98,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":359281,"byte_end":359284,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":359289,"byte_end":359359,"line_start":100,"line_end":100,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":359364,"byte_end":359383,"line_start":101,"line_end":101,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":359388,"byte_end":359391,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":359396,"byte_end":359465,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":359470,"byte_end":359543,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":359548,"byte_end":359587,"line_start":105,"line_end":105,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":359592,"byte_end":359595,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":359600,"byte_end":359666,"line_start":107,"line_end":107,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":359671,"byte_end":359737,"line_start":108,"line_end":108,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":359742,"byte_end":359813,"line_start":109,"line_end":109,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":359818,"byte_end":359874,"line_start":110,"line_end":110,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":359879,"byte_end":359882,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":359887,"byte_end":359894,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":359899,"byte_end":359936,"line_start":113,"line_end":113,"column_start":5,"column_end":42}},{"value":"/ use futures::task::LocalSpawnExt;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":359941,"byte_end":359978,"line_start":114,"line_end":114,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":359983,"byte_end":359986,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ let executor = LocalPool::new();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":359991,"byte_end":360027,"line_start":116,"line_end":116,"column_start":5,"column_end":41}},{"value":"/ let mut spawner = executor.spawner();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":360032,"byte_end":360073,"line_start":117,"line_end":117,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":360078,"byte_end":360081,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":360086,"byte_end":360123,"line_start":119,"line_end":119,"column_start":5,"column_end":42}},{"value":"/ spawner.spawn_local(future).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":360128,"byte_end":360169,"line_start":120,"line_end":120,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":360174,"byte_end":360181,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":360186,"byte_end":360211,"line_start":122,"line_end":122,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3436},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":361302,"byte_end":361325,"line_start":150,"line_end":150,"column_start":8,"column_end":31},"name":"spawn_local_with_handle","qualname":"::task::spawn::LocalSpawnExt::spawn_local_with_handle","value":"pub fn spawn_local_with_handle<Fut>(&mut Self, Fut)\n-> Result<RemoteHandle<Fut::Output>, SpawnError> where Fut: Future + 'static","parent":{"krate":0,"index":3433},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future to completion and returns a\n future that resolves to the spawned future's output.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future to completion and returns a","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":360425,"byte_end":360498,"line_start":130,"line_end":130,"column_start":5,"column_end":78}},{"value":"/ future that resolves to the spawned future's output.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":360503,"byte_end":360559,"line_start":131,"line_end":131,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":360564,"byte_end":360567,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`RemoteHandle`](crate::future::RemoteHandle), or, if","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":360572,"byte_end":360678,"line_start":133,"line_end":133,"column_start":5,"column_end":111}},{"value":"/ spawning fails, a [`SpawnError`]. [`RemoteHandle`](crate::future::RemoteHandle) is a future that","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":360683,"byte_end":360783,"line_start":134,"line_end":134,"column_start":5,"column_end":105}},{"value":"/ resolves to the output of the spawned future.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":360788,"byte_end":360837,"line_start":135,"line_end":135,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":360842,"byte_end":360845,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":360850,"byte_end":360857,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":360862,"byte_end":360899,"line_start":138,"line_end":138,"column_start":5,"column_end":42}},{"value":"/ use futures::task::LocalSpawnExt;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":360904,"byte_end":360941,"line_start":139,"line_end":139,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":360946,"byte_end":360949,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let mut executor = LocalPool::new();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":360954,"byte_end":360994,"line_start":141,"line_end":141,"column_start":5,"column_end":45}},{"value":"/ let mut spawner = executor.spawner();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":360999,"byte_end":361040,"line_start":142,"line_end":142,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":361045,"byte_end":361048,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":361053,"byte_end":361082,"line_start":144,"line_end":144,"column_start":5,"column_end":34}},{"value":"/ let join_handle_fut = spawner.spawn_local_with_handle(future).unwrap();","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":361087,"byte_end":361162,"line_start":145,"line_end":145,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(executor.run_until(join_handle_fut), 1);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":361167,"byte_end":361222,"line_start":146,"line_end":146,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":361227,"byte_end":361234,"line_start":147,"line_end":147,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"channel\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":361239,"byte_end":361266,"line_start":148,"line_end":148,"column_start":5,"column_end":32}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":361271,"byte_end":361294,"line_start":149,"line_end":149,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":3447},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/never.rs","parent":null,"children":[{"krate":0,"index":3448}],"decl_id":null,"docs":" Definition of the `Never` type,\n a stand-in for the `!` type until it becomes stable.\n","sig":null,"attributes":[{"value":"! Definition of the `Never` type,","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/never.rs","byte_start":361591,"byte_end":361626,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"! a stand-in for the `!` type until it becomes stable.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/never.rs","byte_start":361627,"byte_end":361683,"line_start":2,"line_end":2,"column_start":1,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":3448},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/never.rs","byte_start":362320,"byte_end":362325,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/never.rs","byte_start":361685,"byte_end":361720,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/never.rs","byte_start":361721,"byte_end":361724,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/never.rs","byte_start":361725,"byte_end":361800,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/never.rs","byte_start":361801,"byte_end":361838,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/never.rs","byte_start":361839,"byte_end":361842,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/never.rs","byte_start":361843,"byte_end":361907,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/never.rs","byte_start":361908,"byte_end":361911,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/never.rs","byte_start":361912,"byte_end":361983,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/never.rs","byte_start":361984,"byte_end":362035,"line_start":12,"line_end":12,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/never.rs","byte_start":362036,"byte_end":362128,"line_start":13,"line_end":13,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/never.rs","byte_start":362129,"byte_end":362132,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/never.rs","byte_start":362133,"byte_end":362204,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/never.rs","byte_start":362205,"byte_end":362310,"line_start":16,"line_end":16,"column_start":1,"column_end":106}}]},{"kind":"Mod","id":{"krate":0,"index":5329},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lock","qualname":"::lock","value":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mod.rs","parent":null,"children":[{"krate":0,"index":5330},{"krate":0,"index":5435},{"krate":0,"index":5436},{"krate":0,"index":5437},{"krate":0,"index":5438}],"decl_id":null,"docs":" Futures-powered synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","byte_start":3811,"byte_end":3836,"line_start":125,"line_end":125,"column_start":5,"column_end":30}},{"value":"! Futures-powered synchronization primitives.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mod.rs","byte_start":7956574,"byte_end":7956621,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mod.rs","byte_start":7956622,"byte_end":7956625,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mod.rs","byte_start":7956626,"byte_end":7956701,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"! library is activated, and it is activated by default.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mod.rs","byte_start":7956702,"byte_end":7956759,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":5351},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7957570,"byte_end":7957575,"line_start":12,"line_end":12,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::lock::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":5353},{"krate":0,"index":5354},{"krate":0,"index":5355}],"decl_id":null,"docs":" A futures-aware mutex.\n","sig":null,"attributes":[{"value":"/ A futures-aware mutex.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7957532,"byte_end":7957558,"line_start":11,"line_end":11,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":5378},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7958904,"byte_end":7958907,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Mutex<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new futures-aware mutex.\n","sig":null,"attributes":[{"value":"/ Creates a new futures-aware mutex.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7958854,"byte_end":7958892,"line_start":66,"line_end":66,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":5379},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7959339,"byte_end":7959349,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this mutex, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this mutex, returning the underlying data.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7959093,"byte_end":7959148,"line_start":75,"line_end":75,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7959153,"byte_end":7959156,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7959161,"byte_end":7959175,"line_start":77,"line_end":77,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7959180,"byte_end":7959183,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7959188,"byte_end":7959195,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7959200,"byte_end":7959229,"line_start":80,"line_end":80,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7959234,"byte_end":7959237,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(0);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7959242,"byte_end":7959272,"line_start":82,"line_end":82,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(mutex.into_inner(), 0);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7959277,"byte_end":7959315,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7959320,"byte_end":7959327,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5382},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7959563,"byte_end":7959571,"line_start":94,"line_end":94,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Option<MutexGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to acquire the lock immediately.","sig":null,"attributes":[{"value":"/ Attempt to acquire the lock immediately.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7959435,"byte_end":7959479,"line_start":91,"line_end":91,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7959484,"byte_end":7959487,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ If the lock is currently held, this will return `None`.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7959492,"byte_end":7959551,"line_start":93,"line_end":93,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":5383},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7959992,"byte_end":7959996,"line_start":107,"line_end":107,"column_start":12,"column_end":16},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub fn lock(&Self) -> MutexLockFuture<, T>","parent":null,"children":[],"decl_id":null,"docs":" Acquire the lock asynchronously.","sig":null,"attributes":[{"value":"/ Acquire the lock asynchronously.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7959827,"byte_end":7959863,"line_start":103,"line_end":103,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7959868,"byte_end":7959871,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ This method returns a future that will resolve once the lock has been","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7959876,"byte_end":7959949,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/ successfully acquired.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7959954,"byte_end":7959980,"line_start":106,"line_end":106,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":5384},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7960657,"byte_end":7960664,"line_start":130,"line_end":130,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7960147,"byte_end":7960202,"line_start":114,"line_end":114,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7960207,"byte_end":7960210,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7960215,"byte_end":7960290,"line_start":116,"line_end":116,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7960295,"byte_end":7960369,"line_start":117,"line_end":117,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7960374,"byte_end":7960377,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7960382,"byte_end":7960396,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7960401,"byte_end":7960404,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7960409,"byte_end":7960416,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7960421,"byte_end":7960462,"line_start":122,"line_end":122,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7960467,"byte_end":7960496,"line_start":123,"line_end":123,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7960501,"byte_end":7960504,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let mut mutex = Mutex::new(0);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7960509,"byte_end":7960543,"line_start":125,"line_end":125,"column_start":5,"column_end":39}},{"value":"/ *mutex.get_mut() = 10;","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7960548,"byte_end":7960574,"line_start":126,"line_end":126,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*mutex.lock().await, 10);","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7960579,"byte_end":7960619,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7960624,"byte_end":7960633,"line_start":128,"line_end":128,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7960638,"byte_end":7960645,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5387},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7961956,"byte_end":7961971,"line_start":163,"line_end":163,"column_start":12,"column_end":27},"name":"MutexLockFuture","qualname":"::lock::mutex::MutexLockFuture","value":"MutexLockFuture {  }","parent":null,"children":[{"krate":0,"index":5390},{"krate":0,"index":5391}],"decl_id":null,"docs":" A future which resolves when the target mutex has been successfully acquired.\n","sig":null,"attributes":[{"value":"/ A future which resolves when the target mutex has been successfully acquired.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7961863,"byte_end":7961944,"line_start":162,"line_end":162,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":5406},"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7964585,"byte_end":7964595,"line_start":242,"line_end":242,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::lock::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":5409}],"decl_id":null,"docs":" An RAII guard returned by the `lock` and `try_lock` methods.\n When this structure is dropped (falls out of scope), the lock will be\n unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `lock` and `try_lock` methods.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7964421,"byte_end":7964485,"line_start":239,"line_end":239,"column_start":1,"column_end":65}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7964486,"byte_end":7964559,"line_start":240,"line_end":240,"column_start":1,"column_end":74}},{"value":"/ unlocked.","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7964560,"byte_end":7964573,"line_start":241,"line_end":241,"column_start":1,"column_end":14}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/lazy.rs","byte_start":22553,"byte_end":22557,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/lazy.rs","byte_start":23130,"byte_end":23134,"line_start":40,"line_end":40,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/lazy.rs","byte_start":23266,"byte_end":23270,"line_start":46,"line_end":46,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/pending.rs","byte_start":23817,"byte_end":23824,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/pending.rs","byte_start":24375,"byte_end":24382,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/pending.rs","byte_start":24527,"byte_end":24534,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":25228,"byte_end":25237,"line_start":23,"line_end":23,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":25816,"byte_end":25825,"line_start":46,"line_end":46,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":27031,"byte_end":27040,"line_start":81,"line_end":81,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":27256,"byte_end":27265,"line_start":90,"line_end":90,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/option.rs","byte_start":28575,"byte_end":28587,"line_start":31,"line_end":31,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3484}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/option.rs","byte_start":28662,"byte_end":28674,"line_start":35,"line_end":35,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/option.rs","byte_start":29004,"byte_end":29016,"line_start":49,"line_end":49,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/option.rs","byte_start":29204,"byte_end":29216,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/poll_fn.rs","byte_start":29629,"byte_end":29635,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/poll_fn.rs","byte_start":30305,"byte_end":30311,"line_start":42,"line_end":42,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/poll_fn.rs","byte_start":30453,"byte_end":30459,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":30946,"byte_end":30951,"line_start":10,"line_end":10,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":30983,"byte_end":30988,"line_start":12,"line_end":12,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":31085,"byte_end":31090,"line_start":18,"line_end":18,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":37831,"byte_end":37840,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":38557,"byte_end":38566,"line_start":44,"line_end":44,"column_start":19,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":39229,"byte_end":39236,"line_start":68,"line_end":68,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":40902,"byte_end":40909,"line_start":124,"line_end":124,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":41805,"byte_end":41812,"line_start":155,"line_end":155,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":42282,"byte_end":42288,"line_start":13,"line_end":13,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":43651,"byte_end":43657,"line_start":53,"line_end":53,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":279},{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":44360,"byte_end":44366,"line_start":75,"line_end":75,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select_all.rs","byte_start":44903,"byte_end":44912,"line_start":16,"line_end":16,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select_all.rs","byte_start":45892,"byte_end":45901,"line_start":44,"line_end":44,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select_all.rs","byte_start":46607,"byte_end":46616,"line_start":65,"line_end":65,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/flatten.rs","byte_start":47171,"byte_end":47178,"line_start":17,"line_end":17,"column_start":11,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3688},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/flatten.rs","byte_start":47455,"byte_end":47462,"line_start":30,"line_end":30,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/flatten.rs","byte_start":47745,"byte_end":47752,"line_start":41,"line_end":41,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/flatten.rs","byte_start":47905,"byte_end":47912,"line_start":48,"line_end":48,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/flatten_stream.rs","byte_start":48572,"byte_end":48585,"line_start":14,"line_end":14,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3691},{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/flatten_stream.rs","byte_start":48814,"byte_end":48827,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/flatten_stream.rs","byte_start":49259,"byte_end":49264,"line_start":43,"line_end":43,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/flatten_stream.rs","byte_start":49963,"byte_end":49976,"line_start":57,"line_end":57,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/flatten_stream.rs","byte_start":50258,"byte_end":50271,"line_start":69,"line_end":69,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":51345,"byte_end":51349,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3713},{"krate":0,"index":386},{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":53232,"byte_end":53236,"line_start":72,"line_end":72,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":53350,"byte_end":53354,"line_start":78,"line_end":78,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/into_stream.rs","byte_start":54139,"byte_end":54149,"line_start":15,"line_end":15,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3722},{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/into_stream.rs","byte_start":54361,"byte_end":54371,"line_start":25,"line_end":25,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/into_stream.rs","byte_start":54696,"byte_end":54706,"line_start":39,"line_end":39,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/map.rs","byte_start":55175,"byte_end":55178,"line_start":14,"line_end":14,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3734},{"krate":0,"index":3737},{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/map.rs","byte_start":55418,"byte_end":55421,"line_start":24,"line_end":24,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/map.rs","byte_start":55466,"byte_end":55469,"line_start":26,"line_end":26,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/map.rs","byte_start":55629,"byte_end":55632,"line_start":33,"line_end":33,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":448},{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/then.rs","byte_start":56464,"byte_end":56468,"line_start":14,"line_end":14,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3749},{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/then.rs","byte_start":56793,"byte_end":56797,"line_start":28,"line_end":28,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/then.rs","byte_start":57007,"byte_end":57011,"line_start":36,"line_end":36,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/inspect.rs","byte_start":57747,"byte_end":57754,"line_start":14,"line_end":14,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3761},{"krate":0,"index":3764},{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/inspect.rs","byte_start":58017,"byte_end":58024,"line_start":26,"line_end":26,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/inspect.rs","byte_start":58066,"byte_end":58073,"line_start":28,"line_end":28,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/inspect.rs","byte_start":58242,"byte_end":58249,"line_start":35,"line_end":35,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/unit_error.rs","byte_start":58975,"byte_end":58984,"line_start":13,"line_end":13,"column_start":11,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3772},{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/unit_error.rs","byte_start":59146,"byte_end":59155,"line_start":21,"line_end":21,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/unit_error.rs","byte_start":59204,"byte_end":59213,"line_start":23,"line_end":23,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/unit_error.rs","byte_start":59316,"byte_end":59325,"line_start":27,"line_end":27,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/never_error.rs","byte_start":59916,"byte_end":59926,"line_start":14,"line_end":14,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3781},{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/never_error.rs","byte_start":60090,"byte_end":60100,"line_start":22,"line_end":22,"column_start":28,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/never_error.rs","byte_start":60149,"byte_end":60159,"line_start":24,"line_end":24,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/never_error.rs","byte_start":60262,"byte_end":60272,"line_start":28,"line_end":28,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":552},{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/either.rs","byte_start":60957,"byte_end":60963,"line_start":18,"line_end":18,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/either.rs","byte_start":61348,"byte_end":61354,"line_start":30,"line_end":30,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/either.rs","byte_start":61735,"byte_end":61741,"line_start":42,"line_end":42,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/either.rs","byte_start":61982,"byte_end":61988,"line_start":52,"line_end":52,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":582},{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/either.rs","byte_start":62417,"byte_end":62423,"line_start":69,"line_end":69,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/either.rs","byte_start":62699,"byte_end":62705,"line_start":82,"line_end":82,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":591},{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/either.rs","byte_start":63147,"byte_end":63153,"line_start":99,"line_end":99,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/chain.rs","byte_start":69934,"byte_end":69939,"line_start":13,"line_end":13,"column_start":48,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/chain.rs","byte_start":69985,"byte_end":69990,"line_start":15,"line_end":15,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/chain.rs","byte_start":70151,"byte_end":70156,"line_start":21,"line_end":21,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7884736,"byte_end":7884745,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7884765,"byte_end":7884774,"line_start":20,"line_end":20,"column_start":11,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5482},{"krate":0,"index":3836}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7886110,"byte_end":7886121,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3838}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7887997,"byte_end":7888004,"line_start":128,"line_end":128,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3842}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7888187,"byte_end":7888194,"line_start":135,"line_end":135,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7888220,"byte_end":7888229,"line_start":137,"line_end":137,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3846},{"krate":0,"index":3847}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7889195,"byte_end":7889206,"line_start":166,"line_end":166,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3849}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/catch_unwind.rs","byte_start":71767,"byte_end":71778,"line_start":15,"line_end":15,"column_start":11,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3900},{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/catch_unwind.rs","byte_start":71969,"byte_end":71980,"line_start":23,"line_end":23,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":638},{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/remote_handle.rs","byte_start":73010,"byte_end":73022,"line_start":31,"line_end":31,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/remote_handle.rs","byte_start":73336,"byte_end":73348,"line_start":41,"line_end":41,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":677},{"krate":0,"index":678}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/remote_handle.rs","byte_start":74180,"byte_end":74186,"line_start":64,"line_end":64,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/remote_handle.rs","byte_start":74389,"byte_end":74395,"line_start":72,"line_end":72,"column_start":37,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/remote_handle.rs","byte_start":74423,"byte_end":74429,"line_start":74,"line_end":74,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3910},{"krate":0,"index":3913}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/remote_handle.rs","byte_start":74589,"byte_end":74595,"line_start":79,"line_end":79,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":695},{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/shared.rs","byte_start":76709,"byte_end":76715,"line_start":31,"line_end":31,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/shared.rs","byte_start":76758,"byte_end":76764,"line_start":33,"line_end":33,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/shared.rs","byte_start":77022,"byte_end":77027,"line_start":42,"line_end":42,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/shared.rs","byte_start":77254,"byte_end":77259,"line_start":53,"line_end":53,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/shared.rs","byte_start":77355,"byte_end":77360,"line_start":59,"line_end":59,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/shared.rs","byte_start":77628,"byte_end":77634,"line_start":73,"line_end":73,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/shared.rs","byte_start":78100,"byte_end":78106,"line_start":90,"line_end":90,"column_start":11,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/shared.rs","byte_start":80647,"byte_end":80652,"line_start":161,"line_end":161,"column_start":11,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/shared.rs","byte_start":81044,"byte_end":81050,"line_start":176,"line_end":176,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/shared.rs","byte_start":81202,"byte_end":81208,"line_start":186,"line_end":186,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":775},{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/shared.rs","byte_start":82466,"byte_end":82471,"line_start":227,"line_end":227,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/shared.rs","byte_start":84516,"byte_end":84522,"line_start":293,"line_end":293,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/shared.rs","byte_start":84716,"byte_end":84722,"line_start":305,"line_end":305,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":789}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/shared.rs","byte_start":85150,"byte_end":85158,"line_start":322,"line_end":322,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":6208,"byte_end":6209,"line_start":110,"line_end":110,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":109640,"byte_end":109649,"line_start":24,"line_end":24,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":892},{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":110365,"byte_end":110374,"line_start":46,"line_end":46,"column_start":19,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":111112,"byte_end":111122,"line_start":72,"line_end":72,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":112882,"byte_end":112892,"line_start":134,"line_end":134,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":919},{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":114296,"byte_end":114306,"line_start":175,"line_end":175,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":114823,"byte_end":114832,"line_start":14,"line_end":14,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":116538,"byte_end":116547,"line_start":57,"line_end":57,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":948},{"krate":0,"index":949}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/select_ok.rs","byte_start":117904,"byte_end":117912,"line_start":16,"line_end":16,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/select_ok.rs","byte_start":118838,"byte_end":118846,"line_start":42,"line_end":42,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":971},{"krate":0,"index":972}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/select_ok.rs","byte_start":120290,"byte_end":120298,"line_start":79,"line_end":79,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":976}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/and_then.rs","byte_start":120850,"byte_end":120857,"line_start":14,"line_end":14,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4094},{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/and_then.rs","byte_start":121208,"byte_end":121215,"line_start":28,"line_end":28,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1003}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/and_then.rs","byte_start":121464,"byte_end":121471,"line_start":38,"line_end":38,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/err_into.rs","byte_start":122422,"byte_end":122429,"line_start":15,"line_end":15,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/err_into.rs","byte_start":122455,"byte_end":122462,"line_start":17,"line_end":17,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4106},{"krate":0,"index":1029}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/err_into.rs","byte_start":122683,"byte_end":122690,"line_start":28,"line_end":28,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/err_into.rs","byte_start":122867,"byte_end":122874,"line_start":35,"line_end":35,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1037},{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/inspect_ok.rs","byte_start":123606,"byte_end":123615,"line_start":14,"line_end":14,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/inspect_ok.rs","byte_start":123641,"byte_end":123650,"line_start":16,"line_end":16,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4118},{"krate":0,"index":4121},{"krate":0,"index":1059}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/inspect_ok.rs","byte_start":123907,"byte_end":123916,"line_start":29,"line_end":29,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1063}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/inspect_ok.rs","byte_start":124099,"byte_end":124108,"line_start":39,"line_end":39,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1067},{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/inspect_err.rs","byte_start":124945,"byte_end":124955,"line_start":14,"line_end":14,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/inspect_err.rs","byte_start":124981,"byte_end":124991,"line_start":16,"line_end":16,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4132},{"krate":0,"index":4135},{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/inspect_err.rs","byte_start":125251,"byte_end":125261,"line_start":29,"line_end":29,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/inspect_err.rs","byte_start":125447,"byte_end":125457,"line_start":39,"line_end":39,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1096},{"krate":0,"index":1097}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/into_future.rs","byte_start":126239,"byte_end":126249,"line_start":13,"line_end":13,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4143},{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/into_future.rs","byte_start":126451,"byte_end":126461,"line_start":22,"line_end":22,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1114}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/into_future.rs","byte_start":126572,"byte_end":126582,"line_start":26,"line_end":26,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1117},{"krate":0,"index":1118}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/map_err.rs","byte_start":127203,"byte_end":127209,"line_start":14,"line_end":14,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4155},{"krate":0,"index":4158},{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/map_err.rs","byte_start":127458,"byte_end":127464,"line_start":24,"line_end":24,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/map_err.rs","byte_start":127509,"byte_end":127515,"line_start":26,"line_end":26,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1143}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/map_err.rs","byte_start":127677,"byte_end":127683,"line_start":33,"line_end":33,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1148},{"krate":0,"index":1149}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/map_ok.rs","byte_start":128600,"byte_end":128605,"line_start":14,"line_end":14,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4169},{"krate":0,"index":4172},{"krate":0,"index":1167}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/map_ok.rs","byte_start":128851,"byte_end":128856,"line_start":24,"line_end":24,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/map_ok.rs","byte_start":128901,"byte_end":128906,"line_start":26,"line_end":26,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/map_ok.rs","byte_start":129077,"byte_end":129082,"line_start":35,"line_end":35,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1180},{"krate":0,"index":1181}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/or_else.rs","byte_start":130038,"byte_end":130044,"line_start":14,"line_end":14,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4184},{"krate":0,"index":1201}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/or_else.rs","byte_start":130393,"byte_end":130399,"line_start":28,"line_end":28,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1206}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/or_else.rs","byte_start":130645,"byte_end":130651,"line_start":38,"line_end":38,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1211},{"krate":0,"index":1212}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_flatten_stream.rs","byte_start":131717,"byte_end":131733,"line_start":20,"line_end":20,"column_start":22,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4187},{"krate":0,"index":1233}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_flatten_stream.rs","byte_start":132018,"byte_end":132034,"line_start":34,"line_end":34,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1236}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_flatten_stream.rs","byte_start":132310,"byte_end":132326,"line_start":46,"line_end":46,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1239}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_flatten_stream.rs","byte_start":132521,"byte_end":132537,"line_start":56,"line_end":56,"column_start":22,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1242},{"krate":0,"index":1243}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/unwrap_or_else.rs","byte_start":134004,"byte_end":134016,"line_start":15,"line_end":15,"column_start":14,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4199},{"krate":0,"index":4202},{"krate":0,"index":1260}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/unwrap_or_else.rs","byte_start":134283,"byte_end":134295,"line_start":25,"line_end":25,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/unwrap_or_else.rs","byte_start":134337,"byte_end":134349,"line_start":27,"line_end":27,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1267}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/unwrap_or_else.rs","byte_start":134526,"byte_end":134538,"line_start":36,"line_end":36,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1271},{"krate":0,"index":1272}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/flatten_stream_sink.rs","byte_start":135477,"byte_end":135494,"line_start":18,"line_end":18,"column_start":21,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/flatten_stream_sink.rs","byte_start":135584,"byte_end":135601,"line_start":25,"line_end":25,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1294}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/flatten_stream_sink.rs","byte_start":135862,"byte_end":135879,"line_start":37,"line_end":37,"column_start":11,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4204},{"krate":0,"index":1297}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/flatten_stream_sink.rs","byte_start":136314,"byte_end":136319,"line_start":60,"line_end":60,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1301}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/flatten_stream_sink.rs","byte_start":137052,"byte_end":137057,"line_start":75,"line_end":75,"column_start":11,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1304}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/flatten_stream_sink.rs","byte_start":137914,"byte_end":137931,"line_start":100,"line_end":100,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1307}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/flatten_stream_sink.rs","byte_start":138268,"byte_end":138285,"line_start":114,"line_end":114,"column_start":22,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1310},{"krate":0,"index":1311}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_chain.rs","byte_start":140922,"byte_end":140930,"line_start":13,"line_end":13,"column_start":48,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_chain.rs","byte_start":141106,"byte_end":141114,"line_start":22,"line_end":22,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1337}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":87321,"byte_end":87324,"line_start":78,"line_end":78,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/iter.rs","byte_start":183247,"byte_end":183251,"line_start":12,"line_end":12,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/iter.rs","byte_start":183857,"byte_end":183861,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1398}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/repeat.rs","byte_start":184995,"byte_end":185001,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/repeat.rs","byte_start":185028,"byte_end":185034,"line_start":34,"line_end":34,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1416},{"krate":0,"index":1417},{"krate":0,"index":1418}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/repeat.rs","byte_start":185341,"byte_end":185347,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1421}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chain.rs","byte_start":185867,"byte_end":185872,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4261},{"krate":0,"index":4264},{"krate":0,"index":1437}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chain.rs","byte_start":186215,"byte_end":186220,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1441}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chain.rs","byte_start":186425,"byte_end":186430,"line_start":39,"line_end":39,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1445},{"krate":0,"index":1446},{"krate":0,"index":1447}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/collect.rs","byte_start":187970,"byte_end":187977,"line_start":16,"line_end":16,"column_start":39,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/collect.rs","byte_start":188018,"byte_end":188025,"line_start":18,"line_end":18,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4276},{"krate":0,"index":4279},{"krate":0,"index":1470},{"krate":0,"index":1471}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/collect.rs","byte_start":188411,"byte_end":188418,"line_start":34,"line_end":34,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1475}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/collect.rs","byte_start":188594,"byte_end":188601,"line_start":43,"line_end":43,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1479},{"krate":0,"index":1480}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/concat.rs","byte_start":189486,"byte_end":189492,"line_start":15,"line_end":15,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/concat.rs","byte_start":189510,"byte_end":189516,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4288},{"krate":0,"index":4291},{"krate":0,"index":1500}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/concat.rs","byte_start":189871,"byte_end":189877,"line_start":33,"line_end":33,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1503},{"krate":0,"index":1504}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/concat.rs","byte_start":190674,"byte_end":190680,"line_start":61,"line_end":61,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1507}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/empty.rs","byte_start":191441,"byte_end":191446,"line_start":22,"line_end":22,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/empty.rs","byte_start":191478,"byte_end":191483,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1524}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/empty.rs","byte_start":191568,"byte_end":191573,"line_start":30,"line_end":30,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1527},{"krate":0,"index":1528},{"krate":0,"index":1529}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/enumerate.rs","byte_start":192256,"byte_end":192265,"line_start":16,"line_end":16,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/enumerate.rs","byte_start":192291,"byte_end":192300,"line_start":18,"line_end":18,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4306},{"krate":0,"index":4309},{"krate":0,"index":1548},{"krate":0,"index":1549},{"krate":0,"index":1550},{"krate":0,"index":1551},{"krate":0,"index":1552}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/enumerate.rs","byte_start":193693,"byte_end":193702,"line_start":62,"line_end":62,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1555}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/enumerate.rs","byte_start":193820,"byte_end":193829,"line_start":68,"line_end":68,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1558},{"krate":0,"index":1559},{"krate":0,"index":1560}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter.rs","byte_start":195145,"byte_end":195151,"line_start":21,"line_end":21,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter.rs","byte_start":195246,"byte_end":195252,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1591}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter.rs","byte_start":195644,"byte_end":195650,"line_start":42,"line_end":42,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4311},{"krate":0,"index":4314},{"krate":0,"index":4316},{"krate":0,"index":4319},{"krate":0,"index":1596},{"krate":0,"index":1597},{"krate":0,"index":1598},{"krate":0,"index":1599},{"krate":0,"index":1600}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter.rs","byte_start":197279,"byte_end":197285,"line_start":94,"line_end":94,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1605}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter.rs","byte_start":197553,"byte_end":197559,"line_start":104,"line_end":104,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1610},{"krate":0,"index":1611},{"krate":0,"index":1612}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter_map.rs","byte_start":199758,"byte_end":199767,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter_map.rs","byte_start":199853,"byte_end":199862,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1642}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter_map.rs","byte_start":200159,"byte_end":200168,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4321},{"krate":0,"index":4324},{"krate":0,"index":4326},{"krate":0,"index":1647},{"krate":0,"index":1648},{"krate":0,"index":1649},{"krate":0,"index":1650},{"krate":0,"index":1651}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter_map.rs","byte_start":201663,"byte_end":201672,"line_start":83,"line_end":83,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1657}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter_map.rs","byte_start":201943,"byte_end":201952,"line_start":93,"line_end":93,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1663},{"krate":0,"index":1664},{"krate":0,"index":1665}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/flatten.rs","byte_start":203907,"byte_end":203914,"line_start":19,"line_end":19,"column_start":20,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/flatten.rs","byte_start":203984,"byte_end":203991,"line_start":26,"line_end":26,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4336},{"krate":0,"index":4339}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/flatten.rs","byte_start":204108,"byte_end":204115,"line_start":34,"line_end":34,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1682},{"krate":0,"index":1683},{"krate":0,"index":1684},{"krate":0,"index":1685},{"krate":0,"index":1686}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/flatten.rs","byte_start":205416,"byte_end":205423,"line_start":76,"line_end":76,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1689}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/flatten.rs","byte_start":205605,"byte_end":205612,"line_start":86,"line_end":86,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1692},{"krate":0,"index":1693}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fold.rs","byte_start":207036,"byte_end":207040,"line_start":17,"line_end":17,"column_start":45,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fold.rs","byte_start":207095,"byte_end":207099,"line_start":19,"line_end":19,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1727}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fold.rs","byte_start":207455,"byte_end":207459,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4342},{"krate":0,"index":4345},{"krate":0,"index":4347},{"krate":0,"index":4349},{"krate":0,"index":1733}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fold.rs","byte_start":207934,"byte_end":207938,"line_start":54,"line_end":54,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1739}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fold.rs","byte_start":208185,"byte_end":208189,"line_start":64,"line_end":64,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1745},{"krate":0,"index":1746}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/for_each.rs","byte_start":209646,"byte_end":209653,"line_start":16,"line_end":16,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/for_each.rs","byte_start":209739,"byte_end":209746,"line_start":22,"line_end":22,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1778}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/for_each.rs","byte_start":210039,"byte_end":210046,"line_start":35,"line_end":35,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4352},{"krate":0,"index":4355},{"krate":0,"index":4357},{"krate":0,"index":1783}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/for_each.rs","byte_start":210442,"byte_end":210449,"line_start":53,"line_end":53,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1788}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/for_each.rs","byte_start":210700,"byte_end":210707,"line_start":63,"line_end":63,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1793},{"krate":0,"index":1794}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fuse.rs","byte_start":211873,"byte_end":211877,"line_start":16,"line_end":16,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fuse.rs","byte_start":211895,"byte_end":211899,"line_start":18,"line_end":18,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4367},{"krate":0,"index":4370},{"krate":0,"index":1811},{"krate":0,"index":1812},{"krate":0,"index":1813},{"krate":0,"index":1814},{"krate":0,"index":1815},{"krate":0,"index":1816}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fuse.rs","byte_start":213558,"byte_end":213562,"line_start":68,"line_end":68,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1819}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fuse.rs","byte_start":213660,"byte_end":213664,"line_start":74,"line_end":74,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1822},{"krate":0,"index":1823},{"krate":0,"index":1824}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":214893,"byte_end":214905,"line_start":15,"line_end":15,"column_start":36,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":214939,"byte_end":214951,"line_start":17,"line_end":17,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4378},{"krate":0,"index":1841},{"krate":0,"index":1842},{"krate":0,"index":1843},{"krate":0,"index":1844},{"krate":0,"index":1845}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":217484,"byte_end":217496,"line_start":77,"line_end":77,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1848}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":217616,"byte_end":217628,"line_start":83,"line_end":83,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1851},{"krate":0,"index":1852}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/inspect.rs","byte_start":218458,"byte_end":218465,"line_start":16,"line_end":16,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/inspect.rs","byte_start":218504,"byte_end":218511,"line_start":18,"line_end":18,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1877}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/inspect.rs","byte_start":218730,"byte_end":218737,"line_start":29,"line_end":29,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4381},{"krate":0,"index":4384},{"krate":0,"index":1881},{"krate":0,"index":1882},{"krate":0,"index":1883},{"krate":0,"index":1884},{"krate":0,"index":1885}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/inspect.rs","byte_start":220124,"byte_end":220131,"line_start":73,"line_end":73,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1889}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/inspect.rs","byte_start":220450,"byte_end":220457,"line_start":89,"line_end":89,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1896},{"krate":0,"index":1897},{"krate":0,"index":1900}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/map.rs","byte_start":221570,"byte_end":221573,"line_start":16,"line_end":16,"column_start":30,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/map.rs","byte_start":221612,"byte_end":221615,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1926}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/map.rs","byte_start":221833,"byte_end":221836,"line_start":29,"line_end":29,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4386},{"krate":0,"index":4389},{"krate":0,"index":1931},{"krate":0,"index":1932},{"krate":0,"index":1933},{"krate":0,"index":1934},{"krate":0,"index":1935}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/map.rs","byte_start":223222,"byte_end":223225,"line_start":73,"line_end":73,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1940}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/map.rs","byte_start":223406,"byte_end":223409,"line_start":82,"line_end":82,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1945},{"krate":0,"index":1946},{"krate":0,"index":1949}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/next.rs","byte_start":224533,"byte_end":224537,"line_start":14,"line_end":14,"column_start":45,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/next.rs","byte_start":224588,"byte_end":224592,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1968}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/next.rs","byte_start":224743,"byte_end":224747,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1971}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/next.rs","byte_start":224886,"byte_end":224890,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1974},{"krate":0,"index":1975}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_next_some.rs","byte_start":225539,"byte_end":225553,"line_start":15,"line_end":15,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1990}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_next_some.rs","byte_start":225714,"byte_end":225728,"line_start":21,"line_end":21,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":1993}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_next_some.rs","byte_start":225872,"byte_end":225886,"line_start":27,"line_end":27,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1996},{"krate":0,"index":1997}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/once.rs","byte_start":227176,"byte_end":227180,"line_start":31,"line_end":31,"column_start":28,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/once.rs","byte_start":227200,"byte_end":227204,"line_start":33,"line_end":33,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4413}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/once.rs","byte_start":227285,"byte_end":227289,"line_start":37,"line_end":37,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2017},{"krate":0,"index":2018},{"krate":0,"index":2019}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/once.rs","byte_start":227872,"byte_end":227876,"line_start":59,"line_end":59,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2022}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":228613,"byte_end":228621,"line_start":21,"line_end":21,"column_start":36,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":228647,"byte_end":228655,"line_start":23,"line_end":23,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4423},{"krate":0,"index":4426},{"krate":0,"index":2044},{"krate":0,"index":2045},{"krate":0,"index":2046},{"krate":0,"index":2047},{"krate":0,"index":2048},{"krate":0,"index":2049}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":230935,"byte_end":230943,"line_start":89,"line_end":89,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2052}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":231085,"byte_end":231093,"line_start":95,"line_end":95,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2055},{"krate":0,"index":2056},{"krate":0,"index":2057}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/pending.rs","byte_start":232528,"byte_end":232535,"line_start":20,"line_end":20,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/pending.rs","byte_start":232567,"byte_end":232574,"line_start":22,"line_end":22,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2074}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/pending.rs","byte_start":232659,"byte_end":232666,"line_start":28,"line_end":28,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2077},{"krate":0,"index":2078},{"krate":0,"index":2079}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/poll_fn.rs","byte_start":233191,"byte_end":233197,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/poll_fn.rs","byte_start":233228,"byte_end":233234,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2097}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/poll_fn.rs","byte_start":233976,"byte_end":233982,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2104},{"krate":0,"index":2105}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":234579,"byte_end":234585,"line_start":15,"line_end":15,"column_start":40,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":235330,"byte_end":235336,"line_start":38,"line_end":38,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2129},{"krate":0,"index":2130},{"krate":0,"index":2131},{"krate":0,"index":2132}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":236859,"byte_end":236865,"line_start":75,"line_end":75,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2136}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":237083,"byte_end":237089,"line_start":84,"line_end":84,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2140},{"krate":0,"index":2141}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip.rs","byte_start":238848,"byte_end":238852,"line_start":16,"line_end":16,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip.rs","byte_start":238878,"byte_end":238882,"line_start":18,"line_end":18,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4451},{"krate":0,"index":4454},{"krate":0,"index":2163},{"krate":0,"index":2164},{"krate":0,"index":2165},{"krate":0,"index":2166},{"krate":0,"index":2167}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip.rs","byte_start":240270,"byte_end":240274,"line_start":62,"line_end":62,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2170}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip.rs","byte_start":240392,"byte_end":240396,"line_start":68,"line_end":68,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2173},{"krate":0,"index":2174},{"krate":0,"index":2175}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip_while.rs","byte_start":242001,"byte_end":242010,"line_start":20,"line_end":20,"column_start":51,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip_while.rs","byte_start":242059,"byte_end":242068,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2207}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip_while.rs","byte_start":242520,"byte_end":242529,"line_start":38,"line_end":38,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4456},{"krate":0,"index":4459},{"krate":0,"index":4461},{"krate":0,"index":4464},{"krate":0,"index":4466},{"krate":0,"index":2212},{"krate":0,"index":2213},{"krate":0,"index":2214},{"krate":0,"index":2215},{"krate":0,"index":2216}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip_while.rs","byte_start":244253,"byte_end":244262,"line_start":92,"line_end":92,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2221}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip_while.rs","byte_start":244522,"byte_end":244531,"line_start":102,"line_end":102,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2226},{"krate":0,"index":2227},{"krate":0,"index":2228}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take.rs","byte_start":246824,"byte_end":246828,"line_start":17,"line_end":17,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take.rs","byte_start":246854,"byte_end":246858,"line_start":19,"line_end":19,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4475},{"krate":0,"index":4478},{"krate":0,"index":2246},{"krate":0,"index":2247},{"krate":0,"index":2248},{"krate":0,"index":2249},{"krate":0,"index":2250}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take.rs","byte_start":248228,"byte_end":248232,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2253},{"krate":0,"index":2254},{"krate":0,"index":2255}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take.rs","byte_start":249215,"byte_end":249219,"line_start":102,"line_end":102,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2258}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take_while.rs","byte_start":250167,"byte_end":250176,"line_start":20,"line_end":20,"column_start":51,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take_while.rs","byte_start":250225,"byte_end":250234,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2290}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take_while.rs","byte_start":250690,"byte_end":250699,"line_start":38,"line_end":38,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4480},{"krate":0,"index":4483},{"krate":0,"index":4485},{"krate":0,"index":4488},{"krate":0,"index":4490}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take_while.rs","byte_start":250935,"byte_end":250944,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2299},{"krate":0,"index":2300},{"krate":0,"index":2301},{"krate":0,"index":2302},{"krate":0,"index":2303}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take_while.rs","byte_start":252457,"byte_end":252466,"line_start":94,"line_end":94,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2308},{"krate":0,"index":2309},{"krate":0,"index":2310}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take_while.rs","byte_start":254037,"byte_end":254046,"line_start":146,"line_end":146,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2315}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/then.rs","byte_start":255028,"byte_end":255032,"line_start":18,"line_end":18,"column_start":42,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/then.rs","byte_start":255081,"byte_end":255085,"line_start":20,"line_end":20,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2345}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/then.rs","byte_start":255375,"byte_end":255379,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4492},{"krate":0,"index":4495},{"krate":0,"index":4498}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/then.rs","byte_start":255515,"byte_end":255519,"line_start":39,"line_end":39,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2354},{"krate":0,"index":2355},{"krate":0,"index":2356},{"krate":0,"index":2357},{"krate":0,"index":2358}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/then.rs","byte_start":256919,"byte_end":256923,"line_start":84,"line_end":84,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2363}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/then.rs","byte_start":257161,"byte_end":257165,"line_start":94,"line_end":94,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2368},{"krate":0,"index":2369},{"krate":0,"index":2370}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":260765,"byte_end":260771,"line_start":70,"line_end":70,"column_start":34,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":260818,"byte_end":260824,"line_start":72,"line_end":72,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2405}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":261105,"byte_end":261111,"line_start":85,"line_end":85,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4500},{"krate":0,"index":4502},{"krate":0,"index":4504}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":261272,"byte_end":261278,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2415}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":261504,"byte_end":261510,"line_start":100,"line_end":100,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2421},{"krate":0,"index":2422}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/zip.rs","byte_start":262860,"byte_end":262863,"line_start":19,"line_end":19,"column_start":26,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/zip.rs","byte_start":262993,"byte_end":262996,"line_start":27,"line_end":27,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4518},{"krate":0,"index":4521},{"krate":0,"index":4524},{"krate":0,"index":4526},{"krate":0,"index":2447},{"krate":0,"index":2448},{"krate":0,"index":2449},{"krate":0,"index":2450},{"krate":0,"index":2451}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/zip.rs","byte_start":264928,"byte_end":264931,"line_start":78,"line_end":78,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2455}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/zip.rs","byte_start":265122,"byte_end":265125,"line_start":86,"line_end":86,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2459},{"krate":0,"index":2460},{"krate":0,"index":2461}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chunks.rs","byte_start":267824,"byte_end":267830,"line_start":20,"line_end":20,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chunks.rs","byte_start":267856,"byte_end":267862,"line_start":22,"line_end":22,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4536},{"krate":0,"index":4538},{"krate":0,"index":2481},{"krate":0,"index":2482},{"krate":0,"index":2483},{"krate":0,"index":2484},{"krate":0,"index":2485},{"krate":0,"index":2486}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chunks.rs","byte_start":269593,"byte_end":269599,"line_start":74,"line_end":74,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2489},{"krate":0,"index":2490},{"krate":0,"index":2491}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chunks.rs","byte_start":271221,"byte_end":271227,"line_start":121,"line_end":121,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2494}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffer_unordered.rs","byte_start":7890331,"byte_end":7890346,"line_start":24,"line_end":24,"column_start":20,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffer_unordered.rs","byte_start":7890431,"byte_end":7890446,"line_start":30,"line_end":30,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4567}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffer_unordered.rs","byte_start":7890800,"byte_end":7890815,"line_start":44,"line_end":44,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5479},{"krate":0,"index":5477},{"krate":0,"index":4570},{"krate":0,"index":4571},{"krate":0,"index":4572},{"krate":0,"index":4573},{"krate":0,"index":4574}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffer_unordered.rs","byte_start":7892467,"byte_end":7892482,"line_start":97,"line_end":97,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4577},{"krate":0,"index":4578},{"krate":0,"index":4579}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffer_unordered.rs","byte_start":7893946,"byte_end":7893961,"line_start":143,"line_end":143,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4582}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffered.rs","byte_start":7894987,"byte_end":7894995,"line_start":23,"line_end":23,"column_start":20,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffered.rs","byte_start":7895080,"byte_end":7895088,"line_start":29,"line_end":29,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4608}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffered.rs","byte_start":7895435,"byte_end":7895443,"line_start":43,"line_end":43,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5474},{"krate":0,"index":5472},{"krate":0,"index":4611},{"krate":0,"index":4612},{"krate":0,"index":4613},{"krate":0,"index":4614},{"krate":0,"index":4615}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffered.rs","byte_start":7897017,"byte_end":7897025,"line_start":92,"line_end":92,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4618},{"krate":0,"index":4619},{"krate":0,"index":4620}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/for_each_concurrent.rs","byte_start":7899314,"byte_end":7899331,"line_start":20,"line_end":20,"column_start":28,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/for_each_concurrent.rs","byte_start":7899415,"byte_end":7899432,"line_start":25,"line_end":25,"column_start":33,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4655}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/for_each_concurrent.rs","byte_start":7899778,"byte_end":7899795,"line_start":39,"line_end":39,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5469},{"krate":0,"index":5467},{"krate":0,"index":5465},{"krate":0,"index":5463},{"krate":0,"index":4660}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/for_each_concurrent.rs","byte_start":7900440,"byte_end":7900457,"line_start":60,"line_end":60,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4665}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/for_each_concurrent.rs","byte_start":7900699,"byte_end":7900716,"line_start":70,"line_end":70,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4670},{"krate":0,"index":4671}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7903269,"byte_end":7903281,"line_start":19,"line_end":19,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4695}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7903386,"byte_end":7903398,"line_start":25,"line_end":25,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7903429,"byte_end":7903441,"line_start":27,"line_end":27,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4700}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7903564,"byte_end":7903576,"line_start":33,"line_end":33,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4703}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7903746,"byte_end":7903758,"line_start":40,"line_end":40,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5453}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7903815,"byte_end":7903827,"line_start":44,"line_end":44,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4708},{"krate":0,"index":4709}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7906438,"byte_end":7906452,"line_start":101,"line_end":101,"column_start":27,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7906478,"byte_end":7906492,"line_start":103,"line_end":103,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4721},{"krate":0,"index":4722},{"krate":0,"index":4723},{"krate":0,"index":4724}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7908116,"byte_end":7908130,"line_start":147,"line_end":147,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4727}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7908248,"byte_end":7908262,"line_start":153,"line_end":153,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4730},{"krate":0,"index":4731},{"krate":0,"index":4732}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7909446,"byte_end":7909460,"line_start":191,"line_end":191,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4735}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7909626,"byte_end":7909640,"line_start":197,"line_end":197,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4738}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/abort.rs","byte_start":7929380,"byte_end":7929391,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4779}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/iter.rs","byte_start":7930077,"byte_end":7930087,"line_start":18,"line_end":18,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4788},{"krate":0,"index":4789},{"krate":0,"index":4790}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/iter.rs","byte_start":7930645,"byte_end":7930655,"line_start":39,"line_end":39,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/iter.rs","byte_start":7930703,"byte_end":7930710,"line_start":41,"line_end":41,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4796},{"krate":0,"index":4797},{"krate":0,"index":4798}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/iter.rs","byte_start":7930974,"byte_end":7930981,"line_start":53,"line_end":53,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/task.rs","byte_start":7932162,"byte_end":7932166,"line_start":35,"line_end":35,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/task.rs","byte_start":7932201,"byte_end":7932205,"line_start":36,"line_end":36,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/task.rs","byte_start":7932237,"byte_end":7932241,"line_start":38,"line_end":38,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4833}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/task.rs","byte_start":7933318,"byte_end":7933322,"line_start":65,"line_end":65,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4836}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/task.rs","byte_start":7933531,"byte_end":7933535,"line_start":72,"line_end":72,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4840}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":7934985,"byte_end":7935000,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4872},{"krate":0,"index":4873},{"krate":0,"index":4874}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":7936850,"byte_end":7936865,"line_start":90,"line_end":90,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4877}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7912402,"byte_end":7912418,"line_start":68,"line_end":68,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7912459,"byte_end":7912475,"line_start":69,"line_end":69,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7912504,"byte_end":7912520,"line_start":70,"line_end":70,"column_start":21,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7912545,"byte_end":7912561,"line_start":72,"line_end":72,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4894}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7912762,"byte_end":7912778,"line_start":81,"line_end":81,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4896}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7914368,"byte_end":7914384,"line_start":113,"line_end":113,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4899}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7915493,"byte_end":7915509,"line_start":144,"line_end":144,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4902}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7915612,"byte_end":7915628,"line_start":150,"line_end":150,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4905},{"krate":0,"index":4906},{"krate":0,"index":4907},{"krate":0,"index":4908},{"krate":0,"index":4909},{"krate":0,"index":4910},{"krate":0,"index":4911},{"krate":0,"index":4912}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7921239,"byte_end":7921255,"line_start":291,"line_end":291,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4915},{"krate":0,"index":4916},{"krate":0,"index":4925}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7925425,"byte_end":7925429,"line_start":384,"line_end":384,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4924}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7927301,"byte_end":7927317,"line_start":437,"line_end":437,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4928}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7927464,"byte_end":7927480,"line_start":443,"line_end":443,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4931}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7928907,"byte_end":7928923,"line_start":472,"line_end":472,"column_start":41,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4934}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7929183,"byte_end":7929199,"line_start":482,"line_end":482,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4939}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7938672,"byte_end":7938681,"line_start":29,"line_end":29,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4961}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7938826,"byte_end":7938835,"line_start":35,"line_end":35,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4964},{"krate":0,"index":4965},{"krate":0,"index":4966},{"krate":0,"index":4967}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7939885,"byte_end":7939894,"line_start":67,"line_end":67,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4970}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7940007,"byte_end":7940016,"line_start":73,"line_end":73,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4973},{"krate":0,"index":4974}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7940823,"byte_end":7940832,"line_start":98,"line_end":98,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4977}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7941808,"byte_end":7941817,"line_start":129,"line_end":129,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4982}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/catch_unwind.rs","byte_start":272054,"byte_end":272065,"line_start":16,"line_end":16,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5013},{"krate":0,"index":5016},{"krate":0,"index":2514}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/catch_unwind.rs","byte_start":272306,"byte_end":272317,"line_start":25,"line_end":25,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2517},{"krate":0,"index":2518},{"krate":0,"index":2521}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/catch_unwind.rs","byte_start":273201,"byte_end":273212,"line_start":58,"line_end":58,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2524}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":147270,"byte_end":147271,"line_start":167,"line_end":167,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/and_then.rs","byte_start":301877,"byte_end":301884,"line_start":18,"line_end":18,"column_start":42,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/and_then.rs","byte_start":301933,"byte_end":301940,"line_start":20,"line_end":20,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2630}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/and_then.rs","byte_start":302233,"byte_end":302240,"line_start":33,"line_end":33,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5018},{"krate":0,"index":5021},{"krate":0,"index":5024}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/and_then.rs","byte_start":302376,"byte_end":302383,"line_start":39,"line_end":39,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2639},{"krate":0,"index":2640},{"krate":0,"index":2641},{"krate":0,"index":2642},{"krate":0,"index":2643}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/and_then.rs","byte_start":303767,"byte_end":303774,"line_start":81,"line_end":81,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2648},{"krate":0,"index":2649},{"krate":0,"index":2650}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/and_then.rs","byte_start":304954,"byte_end":304961,"line_start":118,"line_end":118,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2655}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/err_into.rs","byte_start":305904,"byte_end":305911,"line_start":17,"line_end":17,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/err_into.rs","byte_start":305935,"byte_end":305942,"line_start":19,"line_end":19,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5035},{"krate":0,"index":2674},{"krate":0,"index":2675},{"krate":0,"index":2676},{"krate":0,"index":2677},{"krate":0,"index":2678}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/err_into.rs","byte_start":307251,"byte_end":307258,"line_start":59,"line_end":59,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2682}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/err_into.rs","byte_start":307437,"byte_end":307444,"line_start":69,"line_end":69,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2686},{"krate":0,"index":2687},{"krate":0,"index":2690}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_ok.rs","byte_start":308550,"byte_end":308559,"line_start":17,"line_end":17,"column_start":30,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_ok.rs","byte_start":308598,"byte_end":308607,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2717}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_ok.rs","byte_start":308828,"byte_end":308837,"line_start":30,"line_end":30,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5038},{"krate":0,"index":5041}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_ok.rs","byte_start":308922,"byte_end":308931,"line_start":35,"line_end":35,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2724},{"krate":0,"index":2725},{"krate":0,"index":2726},{"krate":0,"index":2727},{"krate":0,"index":2728}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_ok.rs","byte_start":310239,"byte_end":310248,"line_start":77,"line_end":77,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2732}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_ok.rs","byte_start":310426,"byte_end":310435,"line_start":87,"line_end":87,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2736},{"krate":0,"index":2737},{"krate":0,"index":2741}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_err.rs","byte_start":311609,"byte_end":311619,"line_start":17,"line_end":17,"column_start":30,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_err.rs","byte_start":311658,"byte_end":311668,"line_start":19,"line_end":19,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2768}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_err.rs","byte_start":311890,"byte_end":311900,"line_start":30,"line_end":30,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5043},{"krate":0,"index":5046}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_err.rs","byte_start":311985,"byte_end":311995,"line_start":35,"line_end":35,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2775},{"krate":0,"index":2776},{"krate":0,"index":2777},{"krate":0,"index":2778},{"krate":0,"index":2779}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_err.rs","byte_start":313306,"byte_end":313316,"line_start":77,"line_end":77,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2783}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_err.rs","byte_start":313497,"byte_end":313507,"line_start":87,"line_end":87,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2787},{"krate":0,"index":2788},{"krate":0,"index":2792}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/into_stream.rs","byte_start":314611,"byte_end":314621,"line_start":15,"line_end":15,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5054},{"krate":0,"index":2806},{"krate":0,"index":2807},{"krate":0,"index":2808},{"krate":0,"index":2809},{"krate":0,"index":2810}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/into_stream.rs","byte_start":315944,"byte_end":315954,"line_start":56,"line_end":56,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2813}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/into_stream.rs","byte_start":316075,"byte_end":316085,"line_start":62,"line_end":62,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2816},{"krate":0,"index":2817},{"krate":0,"index":2818}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_ok.rs","byte_start":317040,"byte_end":317045,"line_start":16,"line_end":16,"column_start":30,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_ok.rs","byte_start":317084,"byte_end":317089,"line_start":18,"line_end":18,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2844}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_ok.rs","byte_start":317306,"byte_end":317311,"line_start":29,"line_end":29,"column_start":13,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5057},{"krate":0,"index":5060},{"krate":0,"index":2848},{"krate":0,"index":2849},{"krate":0,"index":2850},{"krate":0,"index":2851},{"krate":0,"index":2852}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_ok.rs","byte_start":318665,"byte_end":318670,"line_start":71,"line_end":71,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2857}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_ok.rs","byte_start":318855,"byte_end":318860,"line_start":81,"line_end":81,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2862},{"krate":0,"index":2863},{"krate":0,"index":2867}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_err.rs","byte_start":319980,"byte_end":319986,"line_start":16,"line_end":16,"column_start":30,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_err.rs","byte_start":320025,"byte_end":320031,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2893}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_err.rs","byte_start":320249,"byte_end":320255,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5062},{"krate":0,"index":5065},{"krate":0,"index":2897},{"krate":0,"index":2898},{"krate":0,"index":2899},{"krate":0,"index":2900},{"krate":0,"index":2901}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_err.rs","byte_start":321611,"byte_end":321617,"line_start":71,"line_end":71,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2906}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_err.rs","byte_start":321805,"byte_end":321811,"line_start":81,"line_end":81,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2911},{"krate":0,"index":2912},{"krate":0,"index":2916}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/or_else.rs","byte_start":323015,"byte_end":323021,"line_start":18,"line_end":18,"column_start":42,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/or_else.rs","byte_start":323070,"byte_end":323076,"line_start":20,"line_end":20,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2947}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/or_else.rs","byte_start":323368,"byte_end":323374,"line_start":33,"line_end":33,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5067},{"krate":0,"index":5070},{"krate":0,"index":5073}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/or_else.rs","byte_start":323510,"byte_end":323516,"line_start":39,"line_end":39,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2956},{"krate":0,"index":2957},{"krate":0,"index":2958},{"krate":0,"index":2959},{"krate":0,"index":2960}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/or_else.rs","byte_start":324897,"byte_end":324903,"line_start":81,"line_end":81,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2965},{"krate":0,"index":2966},{"krate":0,"index":2967}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/or_else.rs","byte_start":326148,"byte_end":326154,"line_start":119,"line_end":119,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2972}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_next.rs","byte_start":327082,"byte_end":327089,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_next.rs","byte_start":327143,"byte_end":327150,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2991}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_next.rs","byte_start":327316,"byte_end":327323,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":2994}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_next.rs","byte_start":327465,"byte_end":327472,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2997},{"krate":0,"index":2998}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_for_each.rs","byte_start":328194,"byte_end":328204,"line_start":16,"line_end":16,"column_start":42,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_for_each.rs","byte_start":328253,"byte_end":328263,"line_start":18,"line_end":18,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3028}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_for_each.rs","byte_start":328559,"byte_end":328569,"line_start":31,"line_end":31,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5083},{"krate":0,"index":5086},{"krate":0,"index":5088},{"krate":0,"index":3033}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_for_each.rs","byte_start":328985,"byte_end":328995,"line_start":49,"line_end":49,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3038},{"krate":0,"index":3039}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter.rs","byte_start":330341,"byte_end":330350,"line_start":22,"line_end":22,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter.rs","byte_start":330444,"byte_end":330453,"line_start":26,"line_end":26,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3071}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter.rs","byte_start":330849,"byte_end":330858,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5091},{"krate":0,"index":5094},{"krate":0,"index":5096},{"krate":0,"index":5099},{"krate":0,"index":3076},{"krate":0,"index":3077},{"krate":0,"index":3078},{"krate":0,"index":3079},{"krate":0,"index":3080}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter.rs","byte_start":332412,"byte_end":332421,"line_start":91,"line_end":91,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3085}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter.rs","byte_start":332690,"byte_end":332699,"line_start":101,"line_end":101,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3090},{"krate":0,"index":3091},{"krate":0,"index":3092}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter_map.rs","byte_start":334913,"byte_end":334925,"line_start":19,"line_end":19,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter_map.rs","byte_start":335007,"byte_end":335019,"line_start":23,"line_end":23,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3124}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter_map.rs","byte_start":335319,"byte_end":335331,"line_start":36,"line_end":36,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5101},{"krate":0,"index":5104},{"krate":0,"index":5106},{"krate":0,"index":3129},{"krate":0,"index":3130},{"krate":0,"index":3131},{"krate":0,"index":3132},{"krate":0,"index":3133}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter_map.rs","byte_start":336730,"byte_end":336742,"line_start":78,"line_end":78,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3139}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter_map.rs","byte_start":337032,"byte_end":337044,"line_start":88,"line_end":88,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3145},{"krate":0,"index":3146},{"krate":0,"index":3147}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_flatten.rs","byte_start":339042,"byte_end":339052,"line_start":19,"line_end":19,"column_start":20,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_flatten.rs","byte_start":339123,"byte_end":339133,"line_start":26,"line_end":26,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5116},{"krate":0,"index":5119}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_flatten.rs","byte_start":339251,"byte_end":339261,"line_start":34,"line_end":34,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3165},{"krate":0,"index":3166},{"krate":0,"index":3167},{"krate":0,"index":3168},{"krate":0,"index":3169}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_flatten.rs","byte_start":340617,"byte_end":340627,"line_start":77,"line_end":77,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3172}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_flatten.rs","byte_start":340873,"byte_end":340883,"line_start":88,"line_end":88,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3175},{"krate":0,"index":3176}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_collect.rs","byte_start":342527,"byte_end":342537,"line_start":16,"line_end":16,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5131},{"krate":0,"index":5134},{"krate":0,"index":3196},{"krate":0,"index":3197}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_collect.rs","byte_start":342912,"byte_end":342922,"line_start":32,"line_end":32,"column_start":42,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_collect.rs","byte_start":342962,"byte_end":342972,"line_start":34,"line_end":34,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3204}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_collect.rs","byte_start":343160,"byte_end":343170,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3208},{"krate":0,"index":3209}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_concat.rs","byte_start":344106,"byte_end":344115,"line_start":15,"line_end":15,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_concat.rs","byte_start":344133,"byte_end":344142,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5143},{"krate":0,"index":5146},{"krate":0,"index":3225}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_concat.rs","byte_start":344486,"byte_end":344495,"line_start":33,"line_end":33,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3228},{"krate":0,"index":3229}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_fold.rs","byte_start":345783,"byte_end":345790,"line_start":17,"line_end":17,"column_start":45,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_fold.rs","byte_start":345845,"byte_end":345852,"line_start":19,"line_end":19,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3264}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_fold.rs","byte_start":346211,"byte_end":346218,"line_start":34,"line_end":34,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5148},{"krate":0,"index":5151},{"krate":0,"index":5153},{"krate":0,"index":5155},{"krate":0,"index":3270}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_fold.rs","byte_start":346718,"byte_end":346725,"line_start":54,"line_end":54,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3276}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_fold.rs","byte_start":346991,"byte_end":346998,"line_start":64,"line_end":64,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3282},{"krate":0,"index":3283}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_skip_while.rs","byte_start":349380,"byte_end":349392,"line_start":21,"line_end":21,"column_start":54,"column_end":66},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_skip_while.rs","byte_start":349441,"byte_end":349453,"line_start":23,"line_end":23,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3316}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_skip_while.rs","byte_start":349909,"byte_end":349921,"line_start":39,"line_end":39,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5158}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_skip_while.rs","byte_start":350013,"byte_end":350025,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5161},{"krate":0,"index":5163},{"krate":0,"index":5166},{"krate":0,"index":5168},{"krate":0,"index":3325},{"krate":0,"index":3326},{"krate":0,"index":3327},{"krate":0,"index":3328},{"krate":0,"index":3329}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_skip_while.rs","byte_start":351735,"byte_end":351747,"line_start":98,"line_end":98,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3334},{"krate":0,"index":3335},{"krate":0,"index":3336}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_skip_while.rs","byte_start":353379,"byte_end":353391,"line_start":146,"line_end":146,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3341}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_buffer_unordered.rs","byte_start":7942666,"byte_end":7942684,"line_start":24,"line_end":24,"column_start":20,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_buffer_unordered.rs","byte_start":7942734,"byte_end":7942752,"line_start":28,"line_end":28,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5450},{"krate":0,"index":5448},{"krate":0,"index":5194},{"krate":0,"index":5195},{"krate":0,"index":5196},{"krate":0,"index":5197},{"krate":0,"index":5198}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_buffer_unordered.rs","byte_start":7944417,"byte_end":7944435,"line_start":76,"line_end":76,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5201},{"krate":0,"index":5202}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_for_each_concurrent.rs","byte_start":7946559,"byte_end":7946579,"line_start":22,"line_end":22,"column_start":28,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_for_each_concurrent.rs","byte_start":7946663,"byte_end":7946683,"line_start":27,"line_end":27,"column_start":33,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5238}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_for_each_concurrent.rs","byte_start":7947048,"byte_end":7947068,"line_start":41,"line_end":41,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5243}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_for_each_concurrent.rs","byte_start":7947319,"byte_end":7947339,"line_start":51,"line_end":51,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5445},{"krate":0,"index":5443},{"krate":0,"index":5441},{"krate":0,"index":5439},{"krate":0,"index":5248}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_for_each_concurrent.rs","byte_start":7948005,"byte_end":7948025,"line_start":72,"line_end":72,"column_start":29,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5253},{"krate":0,"index":5254}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":275140,"byte_end":275141,"line_start":85,"line_end":85,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/waker_ref.rs","byte_start":7954984,"byte_end":7954992,"line_start":19,"line_end":19,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5307},{"krate":0,"index":5308}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/waker_ref.rs","byte_start":7955883,"byte_end":7955891,"line_start":45,"line_end":45,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5310},{"krate":0,"index":5311}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":356350,"byte_end":356352,"line_start":15,"line_end":15,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":356407,"byte_end":356409,"line_start":16,"line_end":16,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7957710,"byte_end":7957715,"line_start":18,"line_end":18,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5358}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7958048,"byte_end":7958053,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5361}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7958146,"byte_end":7958151,"line_start":34,"line_end":34,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5364}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7958289,"byte_end":7958295,"line_start":45,"line_end":45,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5372},{"krate":0,"index":5373}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7958839,"byte_end":7958844,"line_start":65,"line_end":65,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5378},{"krate":0,"index":5379}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Inherent","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7959420,"byte_end":7959425,"line_start":90,"line_end":90,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5382},{"krate":0,"index":5383},{"krate":0,"index":5384},{"krate":0,"index":5385}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7962143,"byte_end":7962158,"line_start":169,"line_end":169,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5394}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7962668,"byte_end":7962683,"line_start":185,"line_end":185,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":5397}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7962800,"byte_end":7962815,"line_start":191,"line_end":191,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5401},{"krate":0,"index":5402}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7964044,"byte_end":7964059,"line_start":227,"line_end":227,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5405}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7964685,"byte_end":7964695,"line_start":246,"line_end":246,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5412}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7964938,"byte_end":7964948,"line_start":255,"line_end":255,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5415}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7965333,"byte_end":7965343,"line_start":267,"line_end":267,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5418},{"krate":0,"index":5419}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7965484,"byte_end":7965494,"line_start":274,"line_end":274,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5422}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7965780,"byte_end":7965785,"line_start":282,"line_end":282,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7965831,"byte_end":7965836,"line_start":283,"line_end":283,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7966003,"byte_end":7966018,"line_start":287,"line_end":287,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7966122,"byte_end":7966137,"line_start":289,"line_end":289,"column_start":33,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7966341,"byte_end":7966351,"line_start":293,"line_end":293,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7966401,"byte_end":7966411,"line_start":294,"line_end":294,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","byte_start":3072,"byte_end":3078,"line_start":92,"line_end":92,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":9}},{"kind":"Mod","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","byte_start":3138,"byte_end":3148,"line_start":95,"line_end":95,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":827}},{"kind":"Mod","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","byte_start":3215,"byte_end":3221,"line_start":98,"line_end":98,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1370}},{"kind":"Mod","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":146671,"byte_end":146688,"line_start":144,"line_end":144,"column_start":13,"column_end":30},"ref_id":{"krate":0,"index":4742}},{"kind":"Mod","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","byte_start":3281,"byte_end":3291,"line_start":101,"line_end":101,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":2592}},{"kind":"Mod","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","byte_start":3468,"byte_end":3472,"line_start":109,"line_end":109,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3394}},{"kind":"Mod","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","byte_start":3483,"byte_end":3488,"line_start":111,"line_end":111,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3447}},{"kind":"Mod","span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lib.rs","byte_start":3849,"byte_end":3853,"line_start":126,"line_end":126,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":5329}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/lazy.rs","byte_start":22553,"byte_end":22557,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":3450},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/lazy.rs","byte_start":23130,"byte_end":23134,"line_start":40,"line_end":40,"column_start":28,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":3450},"to":{"krate":15,"index":177}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/lazy.rs","byte_start":23266,"byte_end":23270,"line_start":46,"line_end":46,"column_start":23,"column_end":27},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":3450},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/pending.rs","byte_start":23817,"byte_end":23824,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":3456},"to":{"krate":15,"index":177}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/pending.rs","byte_start":24375,"byte_end":24382,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":3456},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/pending.rs","byte_start":24527,"byte_end":24534,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3456},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":25228,"byte_end":25237,"line_start":23,"line_end":23,"column_start":37,"column_end":46},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3462},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":25816,"byte_end":25825,"line_start":46,"line_end":46,"column_start":19,"column_end":28},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3462},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":27031,"byte_end":27040,"line_start":81,"line_end":81,"column_start":35,"column_end":44},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":3462},"to":{"krate":15,"index":177}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/maybe_done.rs","byte_start":27256,"byte_end":27265,"line_start":90,"line_end":90,"column_start":30,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":3462},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/option.rs","byte_start":28575,"byte_end":28587,"line_start":31,"line_end":31,"column_start":9,"column_end":21},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":3475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/option.rs","byte_start":28662,"byte_end":28674,"line_start":35,"line_end":35,"column_start":28,"column_end":40},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":3475},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/option.rs","byte_start":29004,"byte_end":29016,"line_start":49,"line_end":49,"column_start":38,"column_end":50},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":3475},"to":{"krate":15,"index":177}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/option.rs","byte_start":29204,"byte_end":29216,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":3475},"to":{"krate":2,"index":1840}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/poll_fn.rs","byte_start":29629,"byte_end":29635,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":127},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/poll_fn.rs","byte_start":30305,"byte_end":30311,"line_start":42,"line_end":42,"column_start":24,"column_end":30},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":127},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/poll_fn.rs","byte_start":30453,"byte_end":30459,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":127},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":30946,"byte_end":30951,"line_start":10,"line_end":10,"column_start":19,"column_end":24},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3487},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":30983,"byte_end":30988,"line_start":12,"line_end":12,"column_start":25,"column_end":30},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":3487},"to":{"krate":15,"index":177}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/ready.rs","byte_start":31085,"byte_end":31090,"line_start":18,"line_end":18,"column_start":20,"column_end":25},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3487},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":37831,"byte_end":37840,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":3663},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":38557,"byte_end":38566,"line_start":44,"line_end":44,"column_start":19,"column_end":28},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3663},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":39229,"byte_end":39236,"line_start":68,"line_end":68,"column_start":24,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":239},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":40902,"byte_end":40909,"line_start":124,"line_end":124,"column_start":20,"column_end":27},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":239},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/join_all.rs","byte_start":41805,"byte_end":41812,"line_start":155,"line_end":155,"column_start":37,"column_end":44},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":239},"to":{"krate":2,"index":4890}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":42282,"byte_end":42288,"line_start":13,"line_end":13,"column_start":36,"column_end":42},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":3674},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":43651,"byte_end":43657,"line_start":53,"line_end":53,"column_start":23,"column_end":29},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":3674},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select.rs","byte_start":44360,"byte_end":44366,"line_start":75,"line_end":75,"column_start":28,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":3674},"to":{"krate":15,"index":177}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select_all.rs","byte_start":44903,"byte_end":44912,"line_start":16,"line_end":16,"column_start":28,"column_end":37},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":3682},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select_all.rs","byte_start":45892,"byte_end":45901,"line_start":44,"line_end":44,"column_start":38,"column_end":47},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":3682},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/select_all.rs","byte_start":46607,"byte_end":46616,"line_start":65,"line_end":65,"column_start":49,"column_end":58},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":3682},"to":{"krate":2,"index":4890}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/flatten.rs","byte_start":47171,"byte_end":47178,"line_start":17,"line_end":17,"column_start":11,"column_end":18},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":325},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/flatten.rs","byte_start":47455,"byte_end":47462,"line_start":30,"line_end":30,"column_start":26,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":325},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/flatten.rs","byte_start":47745,"byte_end":47752,"line_start":41,"line_end":41,"column_start":27,"column_end":34},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":325},"to":{"krate":15,"index":177}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/flatten.rs","byte_start":47905,"byte_end":47912,"line_start":48,"line_end":48,"column_start":22,"column_end":29},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":325},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/flatten_stream.rs","byte_start":48572,"byte_end":48585,"line_start":14,"line_end":14,"column_start":19,"column_end":32},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":354},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/flatten_stream.rs","byte_start":48814,"byte_end":48827,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":354},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/flatten_stream.rs","byte_start":49259,"byte_end":49264,"line_start":43,"line_end":43,"column_start":15,"column_end":20},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":3694},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/flatten_stream.rs","byte_start":49963,"byte_end":49976,"line_start":57,"line_end":57,"column_start":27,"column_end":40},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":354},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/flatten_stream.rs","byte_start":50258,"byte_end":50271,"line_start":69,"line_end":69,"column_start":22,"column_end":35},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":354},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":51345,"byte_end":51349,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":3707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":53232,"byte_end":53236,"line_start":72,"line_end":72,"column_start":35,"column_end":39},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":3707},"to":{"krate":15,"index":177}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/fuse.rs","byte_start":53350,"byte_end":53354,"line_start":78,"line_end":78,"column_start":30,"column_end":34},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":3707},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/into_stream.rs","byte_start":54139,"byte_end":54149,"line_start":15,"line_end":15,"column_start":19,"column_end":29},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":3716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/into_stream.rs","byte_start":54361,"byte_end":54371,"line_start":25,"line_end":25,"column_start":30,"column_end":40},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":3716},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/into_stream.rs","byte_start":54696,"byte_end":54706,"line_start":39,"line_end":39,"column_start":35,"column_end":45},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":3716},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/map.rs","byte_start":55175,"byte_end":55178,"line_start":14,"line_end":14,"column_start":14,"column_end":17},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":3725},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/map.rs","byte_start":55418,"byte_end":55421,"line_start":24,"line_end":24,"column_start":31,"column_end":34},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":3725},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/map.rs","byte_start":55466,"byte_end":55469,"line_start":26,"line_end":26,"column_start":33,"column_end":36},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":3725},"to":{"krate":15,"index":177}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/map.rs","byte_start":55629,"byte_end":55632,"line_start":33,"line_end":33,"column_start":28,"column_end":31},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":3725},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/then.rs","byte_start":56464,"byte_end":56468,"line_start":14,"line_end":14,"column_start":21,"column_end":25},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":3739},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/then.rs","byte_start":56793,"byte_end":56797,"line_start":28,"line_end":28,"column_start":37,"column_end":41},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":3739},"to":{"krate":15,"index":177}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/then.rs","byte_start":57007,"byte_end":57011,"line_start":36,"line_end":36,"column_start":32,"column_end":36},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":3739},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/inspect.rs","byte_start":57747,"byte_end":57754,"line_start":14,"line_end":14,"column_start":44,"column_end":51},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":3752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/inspect.rs","byte_start":58017,"byte_end":58024,"line_start":26,"line_end":26,"column_start":40,"column_end":47},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":3752},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/inspect.rs","byte_start":58066,"byte_end":58073,"line_start":28,"line_end":28,"column_start":30,"column_end":37},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":3752},"to":{"krate":15,"index":177}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/inspect.rs","byte_start":58242,"byte_end":58249,"line_start":35,"line_end":35,"column_start":25,"column_end":32},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":3752},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/unit_error.rs","byte_start":58975,"byte_end":58984,"line_start":13,"line_end":13,"column_start":11,"column_end":20},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":3766},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/unit_error.rs","byte_start":59146,"byte_end":59155,"line_start":21,"line_end":21,"column_start":28,"column_end":37},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":3766},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/unit_error.rs","byte_start":59204,"byte_end":59213,"line_start":23,"line_end":23,"column_start":40,"column_end":49},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":3766},"to":{"krate":15,"index":177}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/unit_error.rs","byte_start":59316,"byte_end":59325,"line_start":27,"line_end":27,"column_start":25,"column_end":34},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":3766},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/never_error.rs","byte_start":59916,"byte_end":59926,"line_start":14,"line_end":14,"column_start":11,"column_end":21},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":3775},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/never_error.rs","byte_start":60090,"byte_end":60100,"line_start":22,"line_end":22,"column_start":28,"column_end":38},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":3775},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/never_error.rs","byte_start":60149,"byte_end":60159,"line_start":24,"line_end":24,"column_start":40,"column_end":50},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":3775},"to":{"krate":15,"index":177}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/never_error.rs","byte_start":60262,"byte_end":60272,"line_start":28,"line_end":28,"column_start":25,"column_end":35},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":3775},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/either.rs","byte_start":60957,"byte_end":60963,"line_start":18,"line_end":18,"column_start":15,"column_end":21},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":3784},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/either.rs","byte_start":61348,"byte_end":61354,"line_start":30,"line_end":30,"column_start":15,"column_end":21},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":3784},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/either.rs","byte_start":61735,"byte_end":61741,"line_start":42,"line_end":42,"column_start":9,"column_end":15},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":3784},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/either.rs","byte_start":61982,"byte_end":61988,"line_start":52,"line_end":52,"column_start":23,"column_end":29},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":3784},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/either.rs","byte_start":62417,"byte_end":62423,"line_start":69,"line_end":69,"column_start":28,"column_end":34},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":3784},"to":{"krate":15,"index":177}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/either.rs","byte_start":62699,"byte_end":62705,"line_start":82,"line_end":82,"column_start":23,"column_end":29},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":3784},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/either.rs","byte_start":63147,"byte_end":63153,"line_start":99,"line_end":99,"column_start":28,"column_end":34},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":3784},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/chain.rs","byte_start":69934,"byte_end":69939,"line_start":13,"line_end":13,"column_start":48,"column_end":53},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":3801},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/chain.rs","byte_start":69985,"byte_end":69990,"line_start":15,"line_end":15,"column_start":24,"column_end":29},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":3801},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/chain.rs","byte_start":70151,"byte_end":70156,"line_start":21,"line_end":21,"column_start":24,"column_end":29},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":3801},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7884736,"byte_end":7884745,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":3856},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7884765,"byte_end":7884774,"line_start":20,"line_end":20,"column_start":11,"column_end":20},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":3856},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7886110,"byte_end":7886121,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":3870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7887997,"byte_end":7888004,"line_start":128,"line_end":128,"column_start":23,"column_end":30},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":3881},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7888187,"byte_end":7888194,"line_start":135,"line_end":135,"column_start":28,"column_end":35},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":3881},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7888220,"byte_end":7888229,"line_start":137,"line_end":137,"column_start":22,"column_end":31},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":3856},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/abortable.rs","byte_start":7889195,"byte_end":7889206,"line_start":166,"line_end":166,"column_start":6,"column_end":17},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":3870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/catch_unwind.rs","byte_start":71767,"byte_end":71778,"line_start":15,"line_end":15,"column_start":11,"column_end":22},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":3894},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/catch_unwind.rs","byte_start":71969,"byte_end":71980,"line_start":23,"line_end":23,"column_start":22,"column_end":33},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":3894},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/remote_handle.rs","byte_start":73010,"byte_end":73022,"line_start":31,"line_end":31,"column_start":9,"column_end":21},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":3903},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/remote_handle.rs","byte_start":73336,"byte_end":73348,"line_start":41,"line_end":41,"column_start":36,"column_end":48},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":3903},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/remote_handle.rs","byte_start":74180,"byte_end":74186,"line_start":64,"line_end":64,"column_start":47,"column_end":53},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":681},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/remote_handle.rs","byte_start":74389,"byte_end":74395,"line_start":72,"line_end":72,"column_start":37,"column_end":43},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":681},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/remote_handle.rs","byte_start":74423,"byte_end":74429,"line_start":74,"line_end":74,"column_start":19,"column_end":25},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":681},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/remote_handle.rs","byte_start":74589,"byte_end":74595,"line_start":79,"line_end":79,"column_start":30,"column_end":36},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":681},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/shared.rs","byte_start":76709,"byte_end":76715,"line_start":31,"line_end":31,"column_start":29,"column_end":35},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":722},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/shared.rs","byte_start":76758,"byte_end":76764,"line_start":33,"line_end":33,"column_start":34,"column_end":40},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":722},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/shared.rs","byte_start":77022,"byte_end":77027,"line_start":42,"line_end":42,"column_start":34,"column_end":39},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":726},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/shared.rs","byte_start":77254,"byte_end":77259,"line_start":53,"line_end":53,"column_start":27,"column_end":32},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":726},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/shared.rs","byte_start":77355,"byte_end":77360,"line_start":59,"line_end":59,"column_start":27,"column_end":32},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":726},"to":{"krate":2,"index":1934}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/shared.rs","byte_start":77628,"byte_end":77634,"line_start":73,"line_end":73,"column_start":19,"column_end":25},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/shared.rs","byte_start":78100,"byte_end":78106,"line_start":90,"line_end":90,"column_start":11,"column_end":17},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/shared.rs","byte_start":80647,"byte_end":80652,"line_start":161,"line_end":161,"column_start":11,"column_end":16},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/shared.rs","byte_start":81044,"byte_end":81050,"line_start":176,"line_end":176,"column_start":27,"column_end":33},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":722},"to":{"krate":15,"index":177}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/shared.rs","byte_start":81202,"byte_end":81208,"line_start":186,"line_end":186,"column_start":22,"column_end":28},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":722},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/shared.rs","byte_start":82466,"byte_end":82471,"line_start":227,"line_end":227,"column_start":23,"column_end":28},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":777},"to":{"krate":2,"index":2117}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/shared.rs","byte_start":84516,"byte_end":84522,"line_start":293,"line_end":293,"column_start":21,"column_end":27},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":722},"to":{"krate":2,"index":1620}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/shared.rs","byte_start":84716,"byte_end":84722,"line_start":305,"line_end":305,"column_start":20,"column_end":26},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":722},"to":{"krate":2,"index":2117}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/shared.rs","byte_start":85150,"byte_end":85158,"line_start":322,"line_end":322,"column_start":18,"column_end":26},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":730},"to":{"krate":0,"index":5267}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":6208,"byte_end":6209,"line_start":110,"line_end":110,"column_start":31,"column_end":32},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":794},"to":{"krate":0,"index":795}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/future/mod.rs","byte_start":6340,"byte_end":6346,"line_start":114,"line_end":114,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":8319},"to":{"krate":0,"index":795}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":109640,"byte_end":109649,"line_start":24,"line_end":24,"column_start":9,"column_end":18},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":4059},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":110365,"byte_end":110374,"line_start":46,"line_end":46,"column_start":19,"column_end":28},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":4059},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":111112,"byte_end":111122,"line_start":72,"line_end":72,"column_start":24,"column_end":34},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":909},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":112882,"byte_end":112892,"line_start":134,"line_end":134,"column_start":20,"column_end":30},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":909},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_join_all.rs","byte_start":114296,"byte_end":114306,"line_start":175,"line_end":175,"column_start":40,"column_end":50},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":909},"to":{"krate":2,"index":4890}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":114823,"byte_end":114832,"line_start":14,"line_end":14,"column_start":36,"column_end":45},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":4070},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_select.rs","byte_start":116538,"byte_end":116547,"line_start":57,"line_end":57,"column_start":37,"column_end":46},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":4070},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/select_ok.rs","byte_start":117904,"byte_end":117912,"line_start":16,"line_end":16,"column_start":28,"column_end":36},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":4078},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/select_ok.rs","byte_start":118838,"byte_end":118846,"line_start":42,"line_end":42,"column_start":41,"column_end":49},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":4078},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/select_ok.rs","byte_start":120290,"byte_end":120298,"line_start":79,"line_end":79,"column_start":52,"column_end":60},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":4078},"to":{"krate":2,"index":4890}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/and_then.rs","byte_start":120850,"byte_end":120857,"line_start":14,"line_end":14,"column_start":21,"column_end":28},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":4084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/and_then.rs","byte_start":121208,"byte_end":121215,"line_start":28,"line_end":28,"column_start":37,"column_end":44},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":4084},"to":{"krate":15,"index":177}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/and_then.rs","byte_start":121464,"byte_end":121471,"line_start":38,"line_end":38,"column_start":32,"column_end":39},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":4084},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/err_into.rs","byte_start":122422,"byte_end":122429,"line_start":15,"line_end":15,"column_start":31,"column_end":38},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":4097},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/err_into.rs","byte_start":122455,"byte_end":122462,"line_start":17,"line_end":17,"column_start":14,"column_end":21},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":4097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/err_into.rs","byte_start":122683,"byte_end":122690,"line_start":28,"line_end":28,"column_start":30,"column_end":37},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":4097},"to":{"krate":15,"index":177}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/err_into.rs","byte_start":122867,"byte_end":122874,"line_start":35,"line_end":35,"column_start":25,"column_end":32},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":4097},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/inspect_ok.rs","byte_start":123606,"byte_end":123615,"line_start":14,"line_end":14,"column_start":31,"column_end":40},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":4109},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/inspect_ok.rs","byte_start":123641,"byte_end":123650,"line_start":16,"line_end":16,"column_start":14,"column_end":23},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":4109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/inspect_ok.rs","byte_start":123907,"byte_end":123916,"line_start":29,"line_end":29,"column_start":30,"column_end":39},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":4109},"to":{"krate":15,"index":177}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/inspect_ok.rs","byte_start":124099,"byte_end":124108,"line_start":39,"line_end":39,"column_start":25,"column_end":34},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":4109},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/inspect_err.rs","byte_start":124945,"byte_end":124955,"line_start":14,"line_end":14,"column_start":31,"column_end":41},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":4123},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/inspect_err.rs","byte_start":124981,"byte_end":124991,"line_start":16,"line_end":16,"column_start":14,"column_end":24},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":4123},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/inspect_err.rs","byte_start":125251,"byte_end":125261,"line_start":29,"line_end":29,"column_start":30,"column_end":40},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":4123},"to":{"krate":15,"index":177}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/inspect_err.rs","byte_start":125447,"byte_end":125457,"line_start":39,"line_end":39,"column_start":25,"column_end":35},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":4123},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/into_future.rs","byte_start":126239,"byte_end":126249,"line_start":13,"line_end":13,"column_start":11,"column_end":21},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":4137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/into_future.rs","byte_start":126451,"byte_end":126461,"line_start":22,"line_end":22,"column_start":52,"column_end":62},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":4137},"to":{"krate":15,"index":177}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/into_future.rs","byte_start":126572,"byte_end":126582,"line_start":26,"line_end":26,"column_start":33,"column_end":43},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":4137},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/map_err.rs","byte_start":127203,"byte_end":127209,"line_start":14,"line_end":14,"column_start":14,"column_end":20},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":4146},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/map_err.rs","byte_start":127458,"byte_end":127464,"line_start":24,"line_end":24,"column_start":31,"column_end":37},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":4146},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/map_err.rs","byte_start":127509,"byte_end":127515,"line_start":26,"line_end":26,"column_start":33,"column_end":39},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":4146},"to":{"krate":15,"index":177}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/map_err.rs","byte_start":127677,"byte_end":127683,"line_start":33,"line_end":33,"column_start":28,"column_end":34},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":4146},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/map_ok.rs","byte_start":128600,"byte_end":128605,"line_start":14,"line_end":14,"column_start":14,"column_end":19},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":4160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/map_ok.rs","byte_start":128851,"byte_end":128856,"line_start":24,"line_end":24,"column_start":31,"column_end":36},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":4160},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/map_ok.rs","byte_start":128901,"byte_end":128906,"line_start":26,"line_end":26,"column_start":33,"column_end":38},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":4160},"to":{"krate":15,"index":177}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/map_ok.rs","byte_start":129077,"byte_end":129082,"line_start":35,"line_end":35,"column_start":28,"column_end":33},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":4160},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/or_else.rs","byte_start":130038,"byte_end":130044,"line_start":14,"line_end":14,"column_start":21,"column_end":27},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":4174},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/or_else.rs","byte_start":130393,"byte_end":130399,"line_start":28,"line_end":28,"column_start":37,"column_end":43},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":4174},"to":{"krate":15,"index":177}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/or_else.rs","byte_start":130645,"byte_end":130651,"line_start":38,"line_end":38,"column_start":32,"column_end":38},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":4174},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_flatten_stream.rs","byte_start":131717,"byte_end":131733,"line_start":20,"line_end":20,"column_start":22,"column_end":38},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_flatten_stream.rs","byte_start":132018,"byte_end":132034,"line_start":34,"line_end":34,"column_start":26,"column_end":42},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1228},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_flatten_stream.rs","byte_start":132310,"byte_end":132326,"line_start":46,"line_end":46,"column_start":27,"column_end":43},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1228},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_flatten_stream.rs","byte_start":132521,"byte_end":132537,"line_start":56,"line_end":56,"column_start":22,"column_end":38},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1228},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/unwrap_or_else.rs","byte_start":134004,"byte_end":134016,"line_start":15,"line_end":15,"column_start":14,"column_end":26},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":4190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/unwrap_or_else.rs","byte_start":134283,"byte_end":134295,"line_start":25,"line_end":25,"column_start":31,"column_end":43},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":4190},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/unwrap_or_else.rs","byte_start":134337,"byte_end":134349,"line_start":27,"line_end":27,"column_start":30,"column_end":42},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":4190},"to":{"krate":15,"index":177}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/unwrap_or_else.rs","byte_start":134526,"byte_end":134538,"line_start":36,"line_end":36,"column_start":25,"column_end":37},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":4190},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/flatten_stream_sink.rs","byte_start":135477,"byte_end":135494,"line_start":18,"line_end":18,"column_start":21,"column_end":38},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1287},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/flatten_stream_sink.rs","byte_start":135584,"byte_end":135601,"line_start":25,"line_end":25,"column_start":26,"column_end":43},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1287},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/flatten_stream_sink.rs","byte_start":135862,"byte_end":135879,"line_start":37,"line_end":37,"column_start":11,"column_end":28},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/flatten_stream_sink.rs","byte_start":136314,"byte_end":136319,"line_start":60,"line_end":60,"column_start":14,"column_end":19},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":4207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/flatten_stream_sink.rs","byte_start":137052,"byte_end":137057,"line_start":75,"line_end":75,"column_start":11,"column_end":16},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":4207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/flatten_stream_sink.rs","byte_start":137914,"byte_end":137931,"line_start":100,"line_end":100,"column_start":27,"column_end":44},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1287},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/flatten_stream_sink.rs","byte_start":138268,"byte_end":138285,"line_start":114,"line_end":114,"column_start":22,"column_end":39},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1287},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_chain.rs","byte_start":140922,"byte_end":140930,"line_start":13,"line_end":13,"column_start":48,"column_end":56},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":4222},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/try_chain.rs","byte_start":141106,"byte_end":141114,"line_start":22,"line_end":22,"column_start":24,"column_end":32},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":4222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":87321,"byte_end":87324,"line_start":78,"line_end":78,"column_start":48,"column_end":51},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1344},"to":{"krate":0,"index":1345}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_future/mod.rs","byte_start":87407,"byte_end":87416,"line_start":81,"line_end":81,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":15,"index":192},"to":{"krate":0,"index":1345}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/iter.rs","byte_start":183247,"byte_end":183251,"line_start":12,"line_end":12,"column_start":19,"column_end":23},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":4240},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/iter.rs","byte_start":183857,"byte_end":183861,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":4240},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/repeat.rs","byte_start":184995,"byte_end":185001,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":4246},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/repeat.rs","byte_start":185028,"byte_end":185034,"line_start":34,"line_end":34,"column_start":20,"column_end":26},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":4246},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/repeat.rs","byte_start":185341,"byte_end":185347,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":4246},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chain.rs","byte_start":185867,"byte_end":185872,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":4252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chain.rs","byte_start":186215,"byte_end":186220,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":4252},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chain.rs","byte_start":186425,"byte_end":186430,"line_start":39,"line_end":39,"column_start":27,"column_end":32},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":4252},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/collect.rs","byte_start":187970,"byte_end":187977,"line_start":16,"line_end":16,"column_start":39,"column_end":46},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":4267},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/collect.rs","byte_start":188018,"byte_end":188025,"line_start":18,"line_end":18,"column_start":30,"column_end":37},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":4267},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/collect.rs","byte_start":188411,"byte_end":188418,"line_start":34,"line_end":34,"column_start":29,"column_end":36},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":4267},"to":{"krate":15,"index":177}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/collect.rs","byte_start":188594,"byte_end":188601,"line_start":43,"line_end":43,"column_start":24,"column_end":31},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":4267},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/concat.rs","byte_start":189486,"byte_end":189492,"line_start":15,"line_end":15,"column_start":36,"column_end":42},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":4281},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/concat.rs","byte_start":189510,"byte_end":189516,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":4281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/concat.rs","byte_start":189871,"byte_end":189877,"line_start":33,"line_end":33,"column_start":21,"column_end":27},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":4281},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/concat.rs","byte_start":190674,"byte_end":190680,"line_start":61,"line_end":61,"column_start":26,"column_end":32},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":4281},"to":{"krate":15,"index":177}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/empty.rs","byte_start":191441,"byte_end":191446,"line_start":22,"line_end":22,"column_start":19,"column_end":24},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":4293},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/empty.rs","byte_start":191478,"byte_end":191483,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":4293},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/empty.rs","byte_start":191568,"byte_end":191573,"line_start":30,"line_end":30,"column_start":20,"column_end":25},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":4293},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/enumerate.rs","byte_start":192256,"byte_end":192265,"line_start":16,"line_end":16,"column_start":36,"column_end":45},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":4299},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/enumerate.rs","byte_start":192291,"byte_end":192300,"line_start":18,"line_end":18,"column_start":18,"column_end":27},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":4299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/enumerate.rs","byte_start":193693,"byte_end":193702,"line_start":62,"line_end":62,"column_start":48,"column_end":57},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":4299},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/enumerate.rs","byte_start":193820,"byte_end":193829,"line_start":68,"line_end":68,"column_start":29,"column_end":38},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":4299},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter.rs","byte_start":195145,"byte_end":195151,"line_start":21,"line_end":21,"column_start":28,"column_end":34},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":1575},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter.rs","byte_start":195246,"byte_end":195252,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":1575},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter.rs","byte_start":195644,"byte_end":195650,"line_start":42,"line_end":42,"column_start":18,"column_end":24},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":1575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter.rs","byte_start":197279,"byte_end":197285,"line_start":94,"line_end":94,"column_start":34,"column_end":40},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":1575},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter.rs","byte_start":197553,"byte_end":197559,"line_start":104,"line_end":104,"column_start":29,"column_end":35},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":1575},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter_map.rs","byte_start":199758,"byte_end":199767,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":1627},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter_map.rs","byte_start":199853,"byte_end":199862,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":1627},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter_map.rs","byte_start":200159,"byte_end":200168,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":1627},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter_map.rs","byte_start":201663,"byte_end":201672,"line_start":83,"line_end":83,"column_start":37,"column_end":46},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":1627},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/filter_map.rs","byte_start":201943,"byte_end":201952,"line_start":93,"line_end":93,"column_start":32,"column_end":41},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":1627},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/flatten.rs","byte_start":203907,"byte_end":203914,"line_start":19,"line_end":19,"column_start":20,"column_end":27},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":4329},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/flatten.rs","byte_start":203984,"byte_end":203991,"line_start":26,"line_end":26,"column_start":10,"column_end":17},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":4329},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/flatten.rs","byte_start":204108,"byte_end":204115,"line_start":34,"line_end":34,"column_start":10,"column_end":17},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":4329},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/flatten.rs","byte_start":205416,"byte_end":205423,"line_start":76,"line_end":76,"column_start":26,"column_end":33},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":4329},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/flatten.rs","byte_start":205605,"byte_end":205612,"line_start":86,"line_end":86,"column_start":21,"column_end":28},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":4329},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fold.rs","byte_start":207036,"byte_end":207040,"line_start":17,"line_end":17,"column_start":45,"column_end":49},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":1708},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fold.rs","byte_start":207095,"byte_end":207099,"line_start":19,"line_end":19,"column_start":36,"column_end":40},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":1708},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fold.rs","byte_start":207455,"byte_end":207459,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":1708},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fold.rs","byte_start":207934,"byte_end":207938,"line_start":54,"line_end":54,"column_start":37,"column_end":41},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":1708},"to":{"krate":15,"index":177}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fold.rs","byte_start":208185,"byte_end":208189,"line_start":64,"line_end":64,"column_start":32,"column_end":36},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":1708},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/for_each.rs","byte_start":209646,"byte_end":209653,"line_start":16,"line_end":16,"column_start":28,"column_end":35},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":1763},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/for_each.rs","byte_start":209739,"byte_end":209746,"line_start":22,"line_end":22,"column_start":33,"column_end":40},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":1763},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/for_each.rs","byte_start":210039,"byte_end":210046,"line_start":35,"line_end":35,"column_start":18,"column_end":25},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":1763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/for_each.rs","byte_start":210442,"byte_end":210449,"line_start":53,"line_end":53,"column_start":34,"column_end":41},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":1763},"to":{"krate":15,"index":177}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/for_each.rs","byte_start":210700,"byte_end":210707,"line_start":63,"line_end":63,"column_start":29,"column_end":36},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":1763},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fuse.rs","byte_start":211873,"byte_end":211877,"line_start":16,"line_end":16,"column_start":27,"column_end":31},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":4360},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fuse.rs","byte_start":211895,"byte_end":211899,"line_start":18,"line_end":18,"column_start":10,"column_end":14},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":4360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fuse.rs","byte_start":213558,"byte_end":213562,"line_start":68,"line_end":68,"column_start":33,"column_end":37},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":4360},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/fuse.rs","byte_start":213660,"byte_end":213664,"line_start":74,"line_end":74,"column_start":28,"column_end":32},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":4360},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":214893,"byte_end":214905,"line_start":15,"line_end":15,"column_start":36,"column_end":48},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":4372},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":214939,"byte_end":214951,"line_start":17,"line_end":17,"column_start":26,"column_end":38},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":4372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":217484,"byte_end":217496,"line_start":77,"line_end":77,"column_start":42,"column_end":54},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":4372},"to":{"krate":15,"index":177}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/into_future.rs","byte_start":217616,"byte_end":217628,"line_start":83,"line_end":83,"column_start":37,"column_end":49},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":4372},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/inspect.rs","byte_start":218458,"byte_end":218465,"line_start":16,"line_end":16,"column_start":30,"column_end":37},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":1866},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/inspect.rs","byte_start":218504,"byte_end":218511,"line_start":18,"line_end":18,"column_start":28,"column_end":35},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":1866},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/inspect.rs","byte_start":218730,"byte_end":218737,"line_start":29,"line_end":29,"column_start":13,"column_end":20},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":1866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/inspect.rs","byte_start":220124,"byte_end":220131,"line_start":73,"line_end":73,"column_start":29,"column_end":36},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":1866},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/inspect.rs","byte_start":220450,"byte_end":220457,"line_start":89,"line_end":89,"column_start":24,"column_end":31},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":1866},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/map.rs","byte_start":221570,"byte_end":221573,"line_start":16,"line_end":16,"column_start":30,"column_end":33},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":1915},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/map.rs","byte_start":221612,"byte_end":221615,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":1915},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/map.rs","byte_start":221833,"byte_end":221836,"line_start":29,"line_end":29,"column_start":16,"column_end":19},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":1915},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/map.rs","byte_start":223222,"byte_end":223225,"line_start":73,"line_end":73,"column_start":32,"column_end":35},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":1915},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/map.rs","byte_start":223406,"byte_end":223409,"line_start":82,"line_end":82,"column_start":27,"column_end":30},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":1915},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/next.rs","byte_start":224533,"byte_end":224537,"line_start":14,"line_end":14,"column_start":45,"column_end":49},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":4391},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/next.rs","byte_start":224588,"byte_end":224592,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":4391},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/next.rs","byte_start":224743,"byte_end":224747,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":4391},"to":{"krate":15,"index":177}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/next.rs","byte_start":224886,"byte_end":224890,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":4391},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_next_some.rs","byte_start":225539,"byte_end":225553,"line_start":15,"line_end":15,"column_start":22,"column_end":36},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":4399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_next_some.rs","byte_start":225714,"byte_end":225728,"line_start":21,"line_end":21,"column_start":56,"column_end":70},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":4399},"to":{"krate":15,"index":177}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_next_some.rs","byte_start":225872,"byte_end":225886,"line_start":27,"line_end":27,"column_start":51,"column_end":65},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":4399},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/once.rs","byte_start":227176,"byte_end":227180,"line_start":31,"line_end":31,"column_start":28,"column_end":32},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":4407},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/once.rs","byte_start":227200,"byte_end":227204,"line_start":33,"line_end":33,"column_start":11,"column_end":15},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":4407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/once.rs","byte_start":227285,"byte_end":227289,"line_start":37,"line_end":37,"column_start":30,"column_end":34},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":4407},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/once.rs","byte_start":227872,"byte_end":227876,"line_start":59,"line_end":59,"column_start":35,"column_end":39},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":4407},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":228613,"byte_end":228621,"line_start":21,"line_end":21,"column_start":36,"column_end":44},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":4416},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":228647,"byte_end":228655,"line_start":23,"line_end":23,"column_start":18,"column_end":26},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":4416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":230935,"byte_end":230943,"line_start":89,"line_end":89,"column_start":34,"column_end":42},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":4416},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/peek.rs","byte_start":231085,"byte_end":231093,"line_start":95,"line_end":95,"column_start":28,"column_end":36},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":4416},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/pending.rs","byte_start":232528,"byte_end":232535,"line_start":20,"line_end":20,"column_start":19,"column_end":26},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":4428},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/pending.rs","byte_start":232567,"byte_end":232574,"line_start":22,"line_end":22,"column_start":25,"column_end":32},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":4428},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/pending.rs","byte_start":232659,"byte_end":232666,"line_start":28,"line_end":28,"column_start":20,"column_end":27},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":4428},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/poll_fn.rs","byte_start":233191,"byte_end":233197,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":2090},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/poll_fn.rs","byte_start":233228,"byte_end":233234,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":2090},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/poll_fn.rs","byte_start":233976,"byte_end":233982,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":2090},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":234579,"byte_end":234585,"line_start":15,"line_end":15,"column_start":40,"column_end":46},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":4434},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":235330,"byte_end":235336,"line_start":38,"line_end":38,"column_start":16,"column_end":22},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":4434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":236859,"byte_end":236865,"line_start":75,"line_end":75,"column_start":32,"column_end":38},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":4434},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select.rs","byte_start":237083,"byte_end":237089,"line_start":84,"line_end":84,"column_start":27,"column_end":33},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":4434},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip.rs","byte_start":238848,"byte_end":238852,"line_start":16,"line_end":16,"column_start":27,"column_end":31},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":4444},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip.rs","byte_start":238878,"byte_end":238882,"line_start":18,"line_end":18,"column_start":18,"column_end":22},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":4444},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip.rs","byte_start":240270,"byte_end":240274,"line_start":62,"line_end":62,"column_start":39,"column_end":43},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":4444},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip.rs","byte_start":240392,"byte_end":240396,"line_start":68,"line_end":68,"column_start":29,"column_end":33},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":4444},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip_while.rs","byte_start":242001,"byte_end":242010,"line_start":20,"line_end":20,"column_start":51,"column_end":60},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":2190},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip_while.rs","byte_start":242059,"byte_end":242068,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":2190},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip_while.rs","byte_start":242520,"byte_end":242529,"line_start":38,"line_end":38,"column_start":18,"column_end":27},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":2190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip_while.rs","byte_start":244253,"byte_end":244262,"line_start":92,"line_end":92,"column_start":34,"column_end":43},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":2190},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/skip_while.rs","byte_start":244522,"byte_end":244531,"line_start":102,"line_end":102,"column_start":29,"column_end":38},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":2190},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take.rs","byte_start":246824,"byte_end":246828,"line_start":17,"line_end":17,"column_start":27,"column_end":31},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":4468},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take.rs","byte_start":246854,"byte_end":246858,"line_start":19,"line_end":19,"column_start":18,"column_end":22},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":4468},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take.rs","byte_start":248228,"byte_end":248232,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":4468},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take.rs","byte_start":249215,"byte_end":249219,"line_start":102,"line_end":102,"column_start":26,"column_end":30},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":4468},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take_while.rs","byte_start":250167,"byte_end":250176,"line_start":20,"line_end":20,"column_start":51,"column_end":60},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":2273},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take_while.rs","byte_start":250225,"byte_end":250234,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":2273},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take_while.rs","byte_start":250690,"byte_end":250699,"line_start":38,"line_end":38,"column_start":26,"column_end":35},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":2273},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take_while.rs","byte_start":250935,"byte_end":250944,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":2273},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take_while.rs","byte_start":252457,"byte_end":252466,"line_start":94,"line_end":94,"column_start":29,"column_end":38},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":2273},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/take_while.rs","byte_start":254037,"byte_end":254046,"line_start":146,"line_end":146,"column_start":34,"column_end":43},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":2273},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/then.rs","byte_start":255028,"byte_end":255032,"line_start":18,"line_end":18,"column_start":42,"column_end":46},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":2330},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/then.rs","byte_start":255081,"byte_end":255085,"line_start":20,"line_end":20,"column_start":33,"column_end":37},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":2330},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/then.rs","byte_start":255375,"byte_end":255379,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":2330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/then.rs","byte_start":255515,"byte_end":255519,"line_start":39,"line_end":39,"column_start":18,"column_end":22},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":2330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/then.rs","byte_start":256919,"byte_end":256923,"line_start":84,"line_end":84,"column_start":34,"column_end":38},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":2330},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/then.rs","byte_start":257161,"byte_end":257165,"line_start":94,"line_end":94,"column_start":29,"column_end":33},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":2330},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":260765,"byte_end":260771,"line_start":70,"line_end":70,"column_start":34,"column_end":40},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":2390},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":260818,"byte_end":260824,"line_start":72,"line_end":72,"column_start":32,"column_end":38},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":2390},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":261105,"byte_end":261111,"line_start":85,"line_end":85,"column_start":17,"column_end":23},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":2390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":261272,"byte_end":261278,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":2390},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/unfold.rs","byte_start":261504,"byte_end":261510,"line_start":100,"line_end":100,"column_start":34,"column_end":40},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":2390},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/zip.rs","byte_start":262860,"byte_end":262863,"line_start":19,"line_end":19,"column_start":26,"column_end":29},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":4507},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/zip.rs","byte_start":262993,"byte_end":262996,"line_start":27,"line_end":27,"column_start":32,"column_end":35},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":4507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/zip.rs","byte_start":264928,"byte_end":264931,"line_start":78,"line_end":78,"column_start":32,"column_end":35},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":4507},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/zip.rs","byte_start":265122,"byte_end":265125,"line_start":86,"line_end":86,"column_start":27,"column_end":30},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":4507},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chunks.rs","byte_start":267824,"byte_end":267830,"line_start":20,"line_end":20,"column_start":36,"column_end":42},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":4528},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chunks.rs","byte_start":267856,"byte_end":267862,"line_start":22,"line_end":22,"column_start":18,"column_end":24},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":4528},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chunks.rs","byte_start":269593,"byte_end":269599,"line_start":74,"line_end":74,"column_start":29,"column_end":35},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":4528},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/chunks.rs","byte_start":271221,"byte_end":271227,"line_start":121,"line_end":121,"column_start":39,"column_end":45},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":4528},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffer_unordered.rs","byte_start":7890331,"byte_end":7890346,"line_start":24,"line_end":24,"column_start":20,"column_end":35},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":4558},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffer_unordered.rs","byte_start":7890431,"byte_end":7890446,"line_start":30,"line_end":30,"column_start":25,"column_end":40},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":4558},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffer_unordered.rs","byte_start":7890800,"byte_end":7890815,"line_start":44,"line_end":44,"column_start":10,"column_end":25},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":4558},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffer_unordered.rs","byte_start":7892467,"byte_end":7892482,"line_start":97,"line_end":97,"column_start":21,"column_end":36},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":4558},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffer_unordered.rs","byte_start":7893946,"byte_end":7893961,"line_start":143,"line_end":143,"column_start":26,"column_end":41},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":4558},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffered.rs","byte_start":7894987,"byte_end":7894995,"line_start":23,"line_end":23,"column_start":20,"column_end":28},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":4599},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffered.rs","byte_start":7895080,"byte_end":7895088,"line_start":29,"line_end":29,"column_start":25,"column_end":33},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":4599},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffered.rs","byte_start":7895435,"byte_end":7895443,"line_start":43,"line_end":43,"column_start":10,"column_end":18},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":4599},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/buffered.rs","byte_start":7897017,"byte_end":7897025,"line_start":92,"line_end":92,"column_start":21,"column_end":29},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":4599},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/for_each_concurrent.rs","byte_start":7899314,"byte_end":7899331,"line_start":20,"line_end":20,"column_start":28,"column_end":45},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":4639},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/for_each_concurrent.rs","byte_start":7899415,"byte_end":7899432,"line_start":25,"line_end":25,"column_start":33,"column_end":50},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":4639},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/for_each_concurrent.rs","byte_start":7899778,"byte_end":7899795,"line_start":39,"line_end":39,"column_start":18,"column_end":35},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":4639},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/for_each_concurrent.rs","byte_start":7900440,"byte_end":7900457,"line_start":60,"line_end":60,"column_start":34,"column_end":51},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":4639},"to":{"krate":15,"index":177}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/for_each_concurrent.rs","byte_start":7900699,"byte_end":7900716,"line_start":70,"line_end":70,"column_start":29,"column_end":46},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":4639},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7903269,"byte_end":7903281,"line_start":19,"line_end":19,"column_start":23,"column_end":35},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":5456},"to":{"krate":2,"index":1648}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7903386,"byte_end":7903398,"line_start":25,"line_end":25,"column_start":16,"column_end":28},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":5456},"to":{"krate":2,"index":1653}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7903429,"byte_end":7903441,"line_start":27,"line_end":27,"column_start":24,"column_end":36},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":5456},"to":{"krate":2,"index":1685}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7903564,"byte_end":7903576,"line_start":33,"line_end":33,"column_start":17,"column_end":29},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":5456},"to":{"krate":2,"index":1674}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7903746,"byte_end":7903758,"line_start":40,"line_end":40,"column_start":9,"column_end":21},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":5456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7903815,"byte_end":7903827,"line_start":44,"line_end":44,"column_start":20,"column_end":32},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":5456},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7906438,"byte_end":7906452,"line_start":101,"line_end":101,"column_start":27,"column_end":41},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":4711},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7906478,"byte_end":7906492,"line_start":103,"line_end":103,"column_start":19,"column_end":33},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":4711},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7908116,"byte_end":7908130,"line_start":147,"line_end":147,"column_start":31,"column_end":45},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":4711},"to":{"krate":2,"index":1910}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7908248,"byte_end":7908262,"line_start":153,"line_end":153,"column_start":30,"column_end":44},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":4711},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7909446,"byte_end":7909460,"line_start":191,"line_end":191,"column_start":29,"column_end":43},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":4711},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_ordered.rs","byte_start":7909626,"byte_end":7909640,"line_start":197,"line_end":197,"column_start":41,"column_end":55},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":4711},"to":{"krate":2,"index":4890}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/abort.rs","byte_start":7929380,"byte_end":7929391,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":4776},"to":{"krate":2,"index":2117}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/iter.rs","byte_start":7930077,"byte_end":7930087,"line_start":18,"line_end":18,"column_start":28,"column_end":38},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":4987},"to":{"krate":2,"index":4984}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/iter.rs","byte_start":7930645,"byte_end":7930655,"line_start":39,"line_end":39,"column_start":33,"column_end":43},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":4987},"to":{"krate":2,"index":4939}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/iter.rs","byte_start":7930703,"byte_end":7930710,"line_start":41,"line_end":41,"column_start":35,"column_end":42},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":4997},"to":{"krate":2,"index":4984}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/iter.rs","byte_start":7930974,"byte_end":7930981,"line_start":53,"line_end":53,"column_start":40,"column_end":47},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":4997},"to":{"krate":2,"index":4939}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/task.rs","byte_start":7932162,"byte_end":7932166,"line_start":35,"line_end":35,"column_start":27,"column_end":31},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":4819},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/task.rs","byte_start":7932201,"byte_end":7932205,"line_start":36,"line_end":36,"column_start":27,"column_end":31},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":4819},"to":{"krate":2,"index":1934}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/task.rs","byte_start":7932237,"byte_end":7932241,"line_start":38,"line_end":38,"column_start":23,"column_end":27},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":4819},"to":{"krate":0,"index":5267}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/task.rs","byte_start":7933318,"byte_end":7933322,"line_start":65,"line_end":65,"column_start":11,"column_end":15},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":4819},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/task.rs","byte_start":7933531,"byte_end":7933535,"line_start":72,"line_end":72,"column_start":20,"column_end":24},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":4819},"to":{"krate":2,"index":2117}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":7934985,"byte_end":7935000,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":4864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":7936850,"byte_end":7936865,"line_start":90,"line_end":90,"column_start":20,"column_end":35},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":4864},"to":{"krate":2,"index":2117}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7912402,"byte_end":7912418,"line_start":68,"line_end":68,"column_start":33,"column_end":49},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":4882},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7912459,"byte_end":7912475,"line_start":69,"line_end":69,"column_start":33,"column_end":49},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":4882},"to":{"krate":2,"index":1934}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7912504,"byte_end":7912520,"line_start":70,"line_end":70,"column_start":21,"column_end":37},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":4882},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7912545,"byte_end":7912561,"line_start":72,"line_end":72,"column_start":16,"column_end":32},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":4882},"to":{"krate":15,"index":302}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7912762,"byte_end":7912778,"line_start":81,"line_end":81,"column_start":21,"column_end":37},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":4882},"to":{"krate":15,"index":305}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7914368,"byte_end":7914384,"line_start":113,"line_end":113,"column_start":19,"column_end":35},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":4882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7915493,"byte_end":7915509,"line_start":144,"line_end":144,"column_start":31,"column_end":47},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":4882},"to":{"krate":2,"index":1910}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7915612,"byte_end":7915628,"line_start":150,"line_end":150,"column_start":11,"column_end":27},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":4882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7921239,"byte_end":7921255,"line_start":291,"line_end":291,"column_start":30,"column_end":46},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":4882},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7925425,"byte_end":7925429,"line_start":384,"line_end":384,"column_start":32,"column_end":36},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":4917},"to":{"krate":2,"index":2117}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7927301,"byte_end":7927317,"line_start":437,"line_end":437,"column_start":21,"column_end":37},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":4882},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7927464,"byte_end":7927480,"line_start":443,"line_end":443,"column_start":20,"column_end":36},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":4882},"to":{"krate":2,"index":2117}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7928907,"byte_end":7928923,"line_start":472,"line_end":472,"column_start":41,"column_end":57},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":4882},"to":{"krate":2,"index":4890}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/futures_unordered/mod.rs","byte_start":7929183,"byte_end":7929199,"line_start":482,"line_end":482,"column_start":35,"column_end":51},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":4882},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7938672,"byte_end":7938681,"line_start":29,"line_end":29,"column_start":27,"column_end":36},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":4956},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7938826,"byte_end":7938835,"line_start":35,"line_end":35,"column_start":26,"column_end":35},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":4956},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7939885,"byte_end":7939894,"line_start":67,"line_end":67,"column_start":38,"column_end":47},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":4956},"to":{"krate":2,"index":1910}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7940007,"byte_end":7940016,"line_start":73,"line_end":73,"column_start":37,"column_end":46},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":4956},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7940823,"byte_end":7940832,"line_start":98,"line_end":98,"column_start":42,"column_end":51},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":4956},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/select_all.rs","byte_start":7941808,"byte_end":7941817,"line_start":129,"line_end":129,"column_start":47,"column_end":56},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":4956},"to":{"krate":2,"index":4890}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/catch_unwind.rs","byte_start":272054,"byte_end":272065,"line_start":16,"line_end":16,"column_start":31,"column_end":42},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":5006},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/catch_unwind.rs","byte_start":272306,"byte_end":272317,"line_start":25,"line_end":25,"column_start":42,"column_end":53},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":5006},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/catch_unwind.rs","byte_start":273201,"byte_end":273212,"line_start":58,"line_end":58,"column_start":52,"column_end":63},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":5006},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":147270,"byte_end":147271,"line_start":167,"line_end":167,"column_start":31,"column_end":32},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":2527},"to":{"krate":0,"index":2528}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/stream/mod.rs","byte_start":147414,"byte_end":147420,"line_start":171,"line_end":171,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":15,"index":228},"to":{"krate":0,"index":2528}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/and_then.rs","byte_start":301877,"byte_end":301884,"line_start":18,"line_end":18,"column_start":42,"column_end":49},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":2615},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/and_then.rs","byte_start":301933,"byte_end":301940,"line_start":20,"line_end":20,"column_start":33,"column_end":40},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":2615},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/and_then.rs","byte_start":302233,"byte_end":302240,"line_start":33,"line_end":33,"column_start":18,"column_end":25},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":2615},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/and_then.rs","byte_start":302376,"byte_end":302383,"line_start":39,"line_end":39,"column_start":18,"column_end":25},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":2615},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/and_then.rs","byte_start":303767,"byte_end":303774,"line_start":81,"line_end":81,"column_start":29,"column_end":36},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":2615},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/and_then.rs","byte_start":304954,"byte_end":304961,"line_start":118,"line_end":118,"column_start":34,"column_end":41},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":2615},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/err_into.rs","byte_start":305904,"byte_end":305911,"line_start":17,"line_end":17,"column_start":30,"column_end":37},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":5026},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/err_into.rs","byte_start":305935,"byte_end":305942,"line_start":19,"line_end":19,"column_start":13,"column_end":20},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":5026},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/err_into.rs","byte_start":307251,"byte_end":307258,"line_start":59,"line_end":59,"column_start":29,"column_end":36},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":5026},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/err_into.rs","byte_start":307437,"byte_end":307444,"line_start":69,"line_end":69,"column_start":24,"column_end":31},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":5026},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_ok.rs","byte_start":308550,"byte_end":308559,"line_start":17,"line_end":17,"column_start":30,"column_end":39},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":2706},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_ok.rs","byte_start":308598,"byte_end":308607,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":2706},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_ok.rs","byte_start":308828,"byte_end":308837,"line_start":30,"line_end":30,"column_start":13,"column_end":22},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":2706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_ok.rs","byte_start":308922,"byte_end":308931,"line_start":35,"line_end":35,"column_start":13,"column_end":22},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":2706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_ok.rs","byte_start":310239,"byte_end":310248,"line_start":77,"line_end":77,"column_start":29,"column_end":38},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":2706},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_ok.rs","byte_start":310426,"byte_end":310435,"line_start":87,"line_end":87,"column_start":24,"column_end":33},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":2706},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_err.rs","byte_start":311609,"byte_end":311619,"line_start":17,"line_end":17,"column_start":30,"column_end":40},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":2757},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_err.rs","byte_start":311658,"byte_end":311668,"line_start":19,"line_end":19,"column_start":28,"column_end":38},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":2757},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_err.rs","byte_start":311890,"byte_end":311900,"line_start":30,"line_end":30,"column_start":13,"column_end":23},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":2757},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_err.rs","byte_start":311985,"byte_end":311995,"line_start":35,"line_end":35,"column_start":13,"column_end":23},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":2757},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_err.rs","byte_start":313306,"byte_end":313316,"line_start":77,"line_end":77,"column_start":29,"column_end":39},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":2757},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/inspect_err.rs","byte_start":313497,"byte_end":313507,"line_start":87,"line_end":87,"column_start":24,"column_end":34},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":2757},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/into_stream.rs","byte_start":314611,"byte_end":314621,"line_start":15,"line_end":15,"column_start":10,"column_end":20},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":5048},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/into_stream.rs","byte_start":315944,"byte_end":315954,"line_start":56,"line_end":56,"column_start":51,"column_end":61},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":5048},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/into_stream.rs","byte_start":316075,"byte_end":316085,"line_start":62,"line_end":62,"column_start":32,"column_end":42},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":5048},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_ok.rs","byte_start":317040,"byte_end":317045,"line_start":16,"line_end":16,"column_start":30,"column_end":35},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":2833},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_ok.rs","byte_start":317084,"byte_end":317089,"line_start":18,"line_end":18,"column_start":28,"column_end":33},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":2833},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_ok.rs","byte_start":317306,"byte_end":317311,"line_start":29,"line_end":29,"column_start":13,"column_end":18},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":2833},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_ok.rs","byte_start":318665,"byte_end":318670,"line_start":71,"line_end":71,"column_start":32,"column_end":37},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":2833},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_ok.rs","byte_start":318855,"byte_end":318860,"line_start":81,"line_end":81,"column_start":27,"column_end":32},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":2833},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_err.rs","byte_start":319980,"byte_end":319986,"line_start":16,"line_end":16,"column_start":30,"column_end":36},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":2882},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_err.rs","byte_start":320025,"byte_end":320031,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":2882},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_err.rs","byte_start":320249,"byte_end":320255,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":2882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_err.rs","byte_start":321611,"byte_end":321617,"line_start":71,"line_end":71,"column_start":32,"column_end":38},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":2882},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/map_err.rs","byte_start":321805,"byte_end":321811,"line_start":81,"line_end":81,"column_start":27,"column_end":33},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":2882},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/or_else.rs","byte_start":323015,"byte_end":323021,"line_start":18,"line_end":18,"column_start":42,"column_end":48},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":2932},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/or_else.rs","byte_start":323070,"byte_end":323076,"line_start":20,"line_end":20,"column_start":33,"column_end":39},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":2932},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/or_else.rs","byte_start":323368,"byte_end":323374,"line_start":33,"line_end":33,"column_start":18,"column_end":24},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":2932},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/or_else.rs","byte_start":323510,"byte_end":323516,"line_start":39,"line_end":39,"column_start":18,"column_end":24},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":2932},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/or_else.rs","byte_start":324897,"byte_end":324903,"line_start":81,"line_end":81,"column_start":29,"column_end":35},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":2932},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/or_else.rs","byte_start":326148,"byte_end":326154,"line_start":119,"line_end":119,"column_start":34,"column_end":40},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":2932},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_next.rs","byte_start":327082,"byte_end":327089,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":5075},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_next.rs","byte_start":327143,"byte_end":327150,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":5075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_next.rs","byte_start":327316,"byte_end":327323,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":5075},"to":{"krate":15,"index":177}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_next.rs","byte_start":327465,"byte_end":327472,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":5075},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_for_each.rs","byte_start":328194,"byte_end":328204,"line_start":16,"line_end":16,"column_start":42,"column_end":52},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":3013},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_for_each.rs","byte_start":328253,"byte_end":328263,"line_start":18,"line_end":18,"column_start":33,"column_end":43},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":3013},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_for_each.rs","byte_start":328559,"byte_end":328569,"line_start":31,"line_end":31,"column_start":18,"column_end":28},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":3013},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_for_each.rs","byte_start":328985,"byte_end":328995,"line_start":49,"line_end":49,"column_start":29,"column_end":39},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":3013},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter.rs","byte_start":330341,"byte_end":330350,"line_start":22,"line_end":22,"column_start":28,"column_end":37},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":3055},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter.rs","byte_start":330444,"byte_end":330453,"line_start":26,"line_end":26,"column_start":33,"column_end":42},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":3055},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter.rs","byte_start":330849,"byte_end":330858,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":3055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter.rs","byte_start":332412,"byte_end":332421,"line_start":91,"line_end":91,"column_start":34,"column_end":43},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":3055},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter.rs","byte_start":332690,"byte_end":332699,"line_start":101,"line_end":101,"column_start":29,"column_end":38},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":3055},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter_map.rs","byte_start":334913,"byte_end":334925,"line_start":19,"line_end":19,"column_start":28,"column_end":40},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":3109},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter_map.rs","byte_start":335007,"byte_end":335019,"line_start":23,"line_end":23,"column_start":33,"column_end":45},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":3109},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter_map.rs","byte_start":335319,"byte_end":335331,"line_start":36,"line_end":36,"column_start":18,"column_end":30},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":3109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter_map.rs","byte_start":336730,"byte_end":336742,"line_start":78,"line_end":78,"column_start":37,"column_end":49},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":3109},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_filter_map.rs","byte_start":337032,"byte_end":337044,"line_start":88,"line_end":88,"column_start":32,"column_end":44},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":3109},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_flatten.rs","byte_start":339042,"byte_end":339052,"line_start":19,"line_end":19,"column_start":20,"column_end":30},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":5109},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_flatten.rs","byte_start":339123,"byte_end":339133,"line_start":26,"line_end":26,"column_start":10,"column_end":20},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":5109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_flatten.rs","byte_start":339251,"byte_end":339261,"line_start":34,"line_end":34,"column_start":10,"column_end":20},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":5109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_flatten.rs","byte_start":340617,"byte_end":340627,"line_start":77,"line_end":77,"column_start":26,"column_end":36},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":5109},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_flatten.rs","byte_start":340873,"byte_end":340883,"line_start":88,"line_end":88,"column_start":21,"column_end":31},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":5109},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_collect.rs","byte_start":342527,"byte_end":342537,"line_start":16,"line_end":16,"column_start":33,"column_end":43},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":5122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_collect.rs","byte_start":342912,"byte_end":342922,"line_start":32,"line_end":32,"column_start":42,"column_end":52},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":5122},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_collect.rs","byte_start":342962,"byte_end":342972,"line_start":34,"line_end":34,"column_start":29,"column_end":39},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":5122},"to":{"krate":15,"index":177}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_collect.rs","byte_start":343160,"byte_end":343170,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":5122},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_concat.rs","byte_start":344106,"byte_end":344115,"line_start":15,"line_end":15,"column_start":39,"column_end":48},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":5136},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_concat.rs","byte_start":344133,"byte_end":344142,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":5136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_concat.rs","byte_start":344486,"byte_end":344495,"line_start":33,"line_end":33,"column_start":21,"column_end":30},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":5136},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_fold.rs","byte_start":345783,"byte_end":345790,"line_start":17,"line_end":17,"column_start":45,"column_end":52},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":3245},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_fold.rs","byte_start":345845,"byte_end":345852,"line_start":19,"line_end":19,"column_start":36,"column_end":43},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":3245},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_fold.rs","byte_start":346211,"byte_end":346218,"line_start":34,"line_end":34,"column_start":21,"column_end":28},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":3245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_fold.rs","byte_start":346718,"byte_end":346725,"line_start":54,"line_end":54,"column_start":37,"column_end":44},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":3245},"to":{"krate":15,"index":177}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_fold.rs","byte_start":346991,"byte_end":346998,"line_start":64,"line_end":64,"column_start":32,"column_end":39},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":3245},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_skip_while.rs","byte_start":349380,"byte_end":349392,"line_start":21,"line_end":21,"column_start":54,"column_end":66},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":3299},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_skip_while.rs","byte_start":349441,"byte_end":349453,"line_start":23,"line_end":23,"column_start":33,"column_end":45},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":3299},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_skip_while.rs","byte_start":349909,"byte_end":349921,"line_start":39,"line_end":39,"column_start":18,"column_end":30},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":3299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_skip_while.rs","byte_start":350013,"byte_end":350025,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":3299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_skip_while.rs","byte_start":351735,"byte_end":351747,"line_start":98,"line_end":98,"column_start":29,"column_end":41},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":3299},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_skip_while.rs","byte_start":353379,"byte_end":353391,"line_start":146,"line_end":146,"column_start":34,"column_end":46},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":3299},"to":{"krate":15,"index":242}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_buffer_unordered.rs","byte_start":7942666,"byte_end":7942684,"line_start":24,"line_end":24,"column_start":20,"column_end":38},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":5257},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_buffer_unordered.rs","byte_start":7942734,"byte_end":7942752,"line_start":28,"line_end":28,"column_start":10,"column_end":28},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":5257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_buffer_unordered.rs","byte_start":7944417,"byte_end":7944435,"line_start":76,"line_end":76,"column_start":21,"column_end":39},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":5257},"to":{"krate":15,"index":228}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_for_each_concurrent.rs","byte_start":7946559,"byte_end":7946579,"line_start":22,"line_end":22,"column_start":28,"column_end":48},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":5222},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_for_each_concurrent.rs","byte_start":7946663,"byte_end":7946683,"line_start":27,"line_end":27,"column_start":33,"column_end":53},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":5222},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_for_each_concurrent.rs","byte_start":7947048,"byte_end":7947068,"line_start":41,"line_end":41,"column_start":34,"column_end":54},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":5222},"to":{"krate":15,"index":177}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_for_each_concurrent.rs","byte_start":7947319,"byte_end":7947339,"line_start":51,"line_end":51,"column_start":18,"column_end":38},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":5222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/try_for_each_concurrent.rs","byte_start":7948005,"byte_end":7948025,"line_start":72,"line_end":72,"column_start":29,"column_end":49},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":5222},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":275140,"byte_end":275141,"line_start":85,"line_end":85,"column_start":46,"column_end":47},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":3344},"to":{"krate":0,"index":3345}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/try_stream/mod.rs","byte_start":275222,"byte_end":275231,"line_start":88,"line_end":88,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":15,"index":257},"to":{"krate":0,"index":3345}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7951538,"byte_end":7951542,"line_start":20,"line_end":20,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":1922},"to":{"krate":0,"index":5267}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/arc_wake.rs","byte_start":7951545,"byte_end":7951549,"line_start":20,"line_end":20,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1934},"to":{"krate":0,"index":5267}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/waker_ref.rs","byte_start":7954984,"byte_end":7954992,"line_start":19,"line_end":19,"column_start":10,"column_end":18},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":5318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/waker_ref.rs","byte_start":7955883,"byte_end":7955891,"line_start":45,"line_end":45,"column_start":16,"column_end":24},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":5318},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":356350,"byte_end":356352,"line_start":15,"line_end":15,"column_start":31,"column_end":33},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":3425},"to":{"krate":0,"index":3428}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":356407,"byte_end":356409,"line_start":16,"line_end":16,"column_start":36,"column_end":38},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":3427},"to":{"krate":0,"index":3433}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":356488,"byte_end":356493,"line_start":19,"line_end":19,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":15,"index":302},"to":{"krate":0,"index":3428}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/task/spawn.rs","byte_start":359174,"byte_end":359184,"line_start":96,"line_end":96,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":15,"index":305},"to":{"krate":0,"index":3433}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7957710,"byte_end":7957715,"line_start":18,"line_end":18,"column_start":32,"column_end":37},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":5351},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7958048,"byte_end":7958053,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":5351},"to":{"krate":2,"index":1840}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7958146,"byte_end":7958151,"line_start":34,"line_end":34,"column_start":30,"column_end":35},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":5351},"to":{"krate":2,"index":1910}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7958289,"byte_end":7958295,"line_start":45,"line_end":45,"column_start":6,"column_end":12},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":5365},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7958839,"byte_end":7958844,"line_start":65,"line_end":65,"column_start":9,"column_end":14},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":5351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7959420,"byte_end":7959425,"line_start":90,"line_end":90,"column_start":17,"column_end":22},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":5351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7962143,"byte_end":7962158,"line_start":169,"line_end":169,"column_start":32,"column_end":47},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":5387},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7962668,"byte_end":7962683,"line_start":185,"line_end":185,"column_start":33,"column_end":48},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":5387},"to":{"krate":15,"index":177}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7962800,"byte_end":7962815,"line_start":191,"line_end":191,"column_start":32,"column_end":47},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":5387},"to":{"krate":2,"index":8319}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7964044,"byte_end":7964059,"line_start":227,"line_end":227,"column_start":26,"column_end":41},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":5387},"to":{"krate":2,"index":2117}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7964685,"byte_end":7964695,"line_start":246,"line_end":246,"column_start":45,"column_end":55},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":5406},"to":{"krate":2,"index":6198}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7964938,"byte_end":7964948,"line_start":255,"line_end":255,"column_start":26,"column_end":36},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":5406},"to":{"krate":2,"index":2117}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7965333,"byte_end":7965343,"line_start":267,"line_end":267,"column_start":27,"column_end":37},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":5406},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7965484,"byte_end":7965494,"line_start":274,"line_end":274,"column_start":30,"column_end":40},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":5406},"to":{"krate":2,"index":2106}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7965780,"byte_end":7965785,"line_start":282,"line_end":282,"column_start":40,"column_end":45},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":5351},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7965831,"byte_end":7965836,"line_start":283,"line_end":283,"column_start":40,"column_end":45},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":5351},"to":{"krate":2,"index":1934}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7966003,"byte_end":7966018,"line_start":287,"line_end":287,"column_start":40,"column_end":55},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":5387},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7966122,"byte_end":7966137,"line_start":289,"line_end":289,"column_start":33,"column_end":48},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":5387},"to":{"krate":2,"index":1934}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7966341,"byte_end":7966351,"line_start":293,"line_end":293,"column_start":40,"column_end":50},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":5406},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/alansky/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-preview-0.3.0-alpha.19/src/lock/mutex.rs","byte_start":7966401,"byte_end":7966411,"line_start":294,"line_end":294,"column_start":40,"column_end":50},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":5406},"to":{"krate":2,"index":1934}}]}